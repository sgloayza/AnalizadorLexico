Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    FLECHA
    FUNCIONARR
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expresionSet PUNTOYCOMA
Rule 56    final -> expresionSet PUNTOYCOMA final
Rule 57    final -> expresionMap PUNTOYCOMA
Rule 58    final -> expresionMap PUNTOYCOMA final
Rule 59    final -> <empty>
Rule 60    expresionMap -> MAP VARIABLE
Rule 61    expresionMap -> MAP VARIABLE IGUAL LIZQ LDER
Rule 62    expresionMap -> LIZQ LDER
Rule 63    expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER
Rule 64    expresionMap -> LIZQ expMap LDER
Rule 65    expMap -> claveValor DOSPUNTOS claveValor
Rule 66    expMap -> claveValor DOSPUNTOS claveValor COMA expMap
Rule 67    claveValor -> VARIABLE
Rule 68    claveValor -> STRING
Rule 69    claveValor -> ENTERO
Rule 70    claveValor -> DOUBLE
Rule 71    claveValor -> BOOL
Rule 72    claveValor -> CIZQ expListDynamic CDER
Rule 73    claveValor -> CIZQ expListSet CDER
Rule 74    claveValor -> expresionNewList
Rule 75    claveValor -> SETFROM PIZQ CIZQ CDER PDER
Rule 76    claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 77    claveValor -> LIZQ LDER
Rule 78    claveValor -> LIZQ expMap LDER
Rule 79    expresionSet -> SET VARIABLE
Rule 80    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 81    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 82    expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 83    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 84    expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 85    expresionNewList -> NEWLIST PIZQ PDER
Rule 86    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 87    expresionNewList -> CIZQ CDER
Rule 88    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 89    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 90    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 91    expresionLista -> CIZQ expListString CDER
Rule 92    expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 93    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 94    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 95    expresionLista -> CIZQ expListInt CDER
Rule 96    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 97    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 98    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 99    expresionLista -> CIZQ expListNum CDER
Rule 100   expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 101   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 102   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 103   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 104   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 105   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 106   expresionLista -> CIZQ expListBool CDER
Rule 107   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 108   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 109   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 110   expresionLista -> CIZQ expListDynamic CDER
Rule 111   expresionLista -> LIST MENOR SET MAYOR VARIABLE
Rule 112   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
Rule 113   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
Rule 114   expresionLista -> CIZQ expListSet CDER
Rule 115   expresionLista -> LIST MENOR MAP MAYOR VARIABLE
Rule 116   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
Rule 117   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
Rule 118   expresionLista -> CIZQ expListMap CDER
Rule 119   expresionLista -> VARIABLE CIZQ ENTERO CDER
Rule 120   expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 121   expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
Rule 122   expListString -> STRING
Rule 123   expListString -> STRING COMA expListString
Rule 124   expListString -> VARIABLE
Rule 125   expListString -> VARIABLE COMA expListString
Rule 126   expListInt -> ENTERO
Rule 127   expListInt -> ENTERO COMA expListInt
Rule 128   expListInt -> VARIABLE
Rule 129   expListInt -> VARIABLE COMA expListInt
Rule 130   expListNum -> ENTERO
Rule 131   expListNum -> DOUBLE
Rule 132   expListNum -> ENTERO COMA expListNum
Rule 133   expListNum -> DOUBLE COMA expListNum
Rule 134   expListNum -> VARIABLE
Rule 135   expListNum -> VARIABLE COMA expListNum
Rule 136   expListBool -> BOOL
Rule 137   expListBool -> BOOL COMA expListBool
Rule 138   expListBool -> VARIABLE
Rule 139   expListBool -> VARIABLE COMA expListBool
Rule 140   expListDynamic -> STRING
Rule 141   expListDynamic -> ENTERO
Rule 142   expListDynamic -> DOUBLE
Rule 143   expListDynamic -> BOOL
Rule 144   expListDynamic -> STRING COMA expListDynamic
Rule 145   expListDynamic -> ENTERO COMA expListDynamic
Rule 146   expListDynamic -> DOUBLE COMA expListDynamic
Rule 147   expListDynamic -> BOOL COMA expListDynamic
Rule 148   expListDynamic -> VARIABLE
Rule 149   expListDynamic -> VARIABLE COMA expListDynamic
Rule 150   expListSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 151   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 152   expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet
Rule 153   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
Rule 154   expListSet -> VARIABLE
Rule 155   expListSet -> VARIABLE COMA expListSet
Rule 156   expListMap -> LIZQ LDER
Rule 157   expListMap -> LIZQ expMap LDER
Rule 158   expListMap -> LIZQ LDER COMA expListMap
Rule 159   expListMap -> LIZQ expMap LDER COMA expListMap
Rule 160   expListMap -> VARIABLE
Rule 161   expListMap -> VARIABLE COMA expListMap
Rule 162   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 163   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 164   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 165   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 166   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 167   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 168   asignacion -> VAR VARIABLE IGUAL expresion
Rule 169   asignacion -> asignacionSimple
Rule 170   asignacionSimple -> VARIABLE IGUAL expresion
Rule 171   imprimir -> PRINT PIZQ expresion PDER
Rule 172   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 173   funcionStdin -> FUNCIONSTDIN
Rule 174   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 175   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 176   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 177   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 178   sentenciaElse -> ELSE final
Rule 179   sentenciaElse -> ELSE LIZQ final LDER
Rule 180   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 181   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 182   valor -> ENTERO
Rule 183   valor -> VARIABLE
Rule 184   valor -> DOUBLE
Rule 185   valor -> STRING
Rule 186   expresion -> valor operadorMat expresion
Rule 187   expresion -> valor
Rule 188   expresion -> expresionString
Rule 189   expresion -> expresionInt
Rule 190   expresion -> expresionDouble
Rule 191   expresion -> expresionBool
Rule 192   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 193   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 194   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 195   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 196   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 197   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 198   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 199   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 200   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 201   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 202   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 203   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 204   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 205   expresionBoolFor -> valorBool
Rule 206   expresionBoolFor -> negacionBool
Rule 207   expresionBoolFor -> comparacionBool
Rule 208   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 209   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 210   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 211   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 212   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 213   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 214   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 215   valorBool -> BOOL
Rule 216   valorBool -> VARIABLE
Rule 217   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 218   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 219   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 220   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 221   expresionBool -> valorBool
Rule 222   expresionBool -> negacionBool
Rule 223   expresionBool -> comparacionBool
Rule 224   expresionBool -> valor IS objeto
Rule 225   expresionBool -> valor ISNEGADO objeto
Rule 226   negacionBool -> NOT PIZQ expresionBool PDER
Rule 227   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 228   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 229   valorString -> STRING
Rule 230   valorString -> VARIABLE
Rule 231   valorString -> FUNCIONSTDIN
Rule 232   valorString -> expresionIndexString
Rule 233   valorString -> sentenciaSubstring
Rule 234   valorString -> STRING CIZQ ENTERO CDER
Rule 235   expresionString -> valorString SUMA expresionString
Rule 236   expresionString -> valorString
Rule 237   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 238   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 239   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 240   valorInt -> ENTERO
Rule 241   valorInt -> VARIABLE
Rule 242   expresionInt -> valorInt operadorMat expresionInt
Rule 243   expresionInt -> valorInt
Rule 244   valorDouble -> DOUBLE
Rule 245   valorDouble -> valorInt
Rule 246   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 247   expresionDouble -> valorDouble
Rule 248   operadorMat -> SUMA
Rule 249   operadorMat -> RESTA
Rule 250   operadorMat -> MULTI
Rule 251   operadorMat -> DIV
Rule 252   operadorMat -> DIVENTERO
Rule 253   operadorMat -> MOD
Rule 254   comparadorMat -> DIGUAL
Rule 255   comparadorMat -> NOIGUAL
Rule 256   comparadorMat -> MAYOR
Rule 257   comparadorMat -> MENOR
Rule 258   comparadorMat -> MAYIGUAL
Rule 259   comparadorMat -> MENIGUAL
Rule 260   operadorLogico -> AND
Rule 261   operadorLogico -> OR
Rule 262   objeto -> STRINGR
Rule 263   objeto -> INT
Rule 264   objeto -> DOUBLER
Rule 265   objeto -> NUM
Rule 266   objeto -> VAR
Rule 267   objeto -> DYNAMIC
Rule 268   objeto -> LIST
Rule 269   objeto -> BOOL
Rule 270   objeto -> MAP
Rule 271   objeto -> SET

Terminals, with rules where they appear

AND                  : 260
AS                   : 
BOOL                 : 71 136 137 143 147 215 269
BOOLR                : 103 104 105 166
BREAK                : 
CASE                 : 
CDER                 : 72 73 75 76 80 81 82 83 87 89 91 93 95 97 99 101 104 106 108 110 112 114 116 118 119 150 151 152 153 234 237
CIZQ                 : 72 73 75 76 80 81 82 83 87 89 91 93 95 97 99 101 104 106 108 110 112 114 116 118 119 150 151 152 153 234 237
COMA                 : 66 121 123 125 127 129 132 133 135 137 139 144 145 146 147 149 152 153 155 158 159 161 239
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 254
DIV                  : 251
DIVENTERO            : 252
DO                   : 214
DOSPUNTOS            : 65 66
DOUBLE               : 70 131 133 142 146 184 244
DOUBLER              : 96 97 98 163 193 264
DRESTA               : 49 50 210 211
DSUMA                : 47 48 208 209
DYNAMIC              : 107 108 109 167 195 196 267
ELSE                 : 178 179
ELSEIF               : 180 181
ENTERO               : 69 84 86 119 120 121 121 126 127 130 132 141 145 182 234 237 238 239 239 240
FLECHA               : 
FOR                  : 208 209 210 211
FUNCIONARR           : 
FUNCIONRANGE         : 121
FUNCIONSTDIN         : 173 231
FUNCIONSTDOUT        : 174 175
FUNCIONSUBSTRING     : 238 239
FUNCIONTAKE          : 84 120
IF                   : 176 177
IGUAL                : 61 63 81 83 89 90 93 94 97 98 101 102 104 105 108 109 112 113 116 117 162 163 164 165 166 167 168 170 192 193 194 195 196 197 198 199 200
INT                  : 92 93 94 162 192 263
IS                   : 224
ISNEGADO             : 225
LDER                 : 61 62 63 64 77 78 156 157 158 159 177 179 181 208 210 212 214
LIST                 : 88 89 90 92 93 94 96 97 98 100 101 102 103 104 105 107 108 109 111 112 113 115 116 117 268
LIZQ                 : 61 62 63 64 77 78 156 157 158 159 177 179 181 208 210 212 214
MAP                  : 60 61 63 115 116 117 270
MAYIGUAL             : 258
MAYOR                : 88 89 90 92 93 94 96 97 98 100 101 102 103 104 105 107 108 109 111 112 113 115 116 117 256
MENIGUAL             : 259
MENOR                : 88 89 90 92 93 94 96 97 98 100 101 102 103 104 105 107 108 109 111 112 113 115 116 117 257
MOD                  : 253
MULTI                : 250
NEWLIST              : 85 86
NOIGUAL              : 255
NOT                  : 226
NUM                  : 100 101 102 164 194 265
OR                   : 261
PDER                 : 75 76 80 81 82 83 84 85 86 120 121 150 151 152 153 171 172 174 175 176 177 180 181 208 209 210 211 212 213 214 226 238 239
PIZQ                 : 75 76 80 81 82 83 84 85 86 120 121 150 151 152 153 171 172 174 175 176 177 180 181 208 209 210 211 212 213 214 226 238 239
PRINT                : 171 172
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 55 56 57 58 208 208 209 209 210 210 211 211
RESTA                : 249
RETURN               : 
SET                  : 79 81 83 111 112 113 271
SETFROM              : 75 76 80 81 82 83 150 151 152 153
STRING               : 68 122 123 140 144 185 229 234
STRINGR              : 88 89 90 165 262
SUMA                 : 235 248
SWITCH               : 
VAR                  : 168 197 198 266
VARIABLE             : 47 48 49 50 60 61 63 67 79 81 83 84 88 89 90 92 93 94 96 97 98 100 101 102 103 104 105 107 108 109 111 112 113 115 116 117 119 120 121 124 125 128 129 134 135 138 139 148 149 154 155 160 161 162 163 164 165 166 167 168 170 183 192 193 194 195 196 197 198 199 200 202 203 203 204 208 209 210 211 216 218 219 219 220 230 238 239 241
WHILE                : 212 213 214
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 208 209 210 211
asignacionSimple     : 169 172 175
claveValor           : 65 65 66 66
comparacionBool      : 35 36 207 223 228
comparadorMat        : 201 202 203 204 217 218 219 220
expListBool          : 104 106 137 139
expListDynamic       : 72 76 82 83 108 110 144 145 146 147 149 151 153
expListInt           : 93 95 127 129
expListMap           : 116 118 158 159 161
expListNum           : 97 99 101 132 133 135
expListSet           : 73 112 114 152 153 155
expListString        : 89 91 123 125
expMap               : 63 64 66 78 157 159
expresion            : 167 168 170 171 174 186
expresionBool        : 9 10 166 176 177 180 181 191 212 213 214 226 227 227 228
expresionBoolFor     : 11 12 208 209 210 211
expresionDouble      : 5 6 163 164 190 193 194 196 198 200 201 202 217 218 246
expresionIndexString : 232
expresionInt         : 3 4 162 189 192 195 197 199 242
expresionLista       : 51 52
expresionMap         : 57 58
expresionNewList     : 53 54 74 90 94 98 102 105 109 113 117
expresionSet         : 55 56
expresionString      : 7 8 165 188 235
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 56 58 176 177 178 179 180 181 208 209 210 211 212 213 214 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 206 222
objeto               : 224 225
operadorLogico       : 227 228
operadorMat          : 186 242 246
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 233
sentenciaWhile       : 13 14 15 16
valor                : 186 187 224 225
valorBool            : 205 221
valorDouble          : 201 204 217 220 246 247
valorInt             : 242 243 245
valorString          : 235 236 237

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    $end            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 60


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 61


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 62


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 64
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 68


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 13 (final -> sentenciaWhile .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for NUM resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for STRINGR resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for BOOLR resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for VAR resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for DO resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for IF resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for NOT resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for LIST resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for CIZQ resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for SET resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for SETFROM resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for MAP resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for LIZQ resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for ENTERO resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for BOOL resolved using rule 13 (final -> sentenciaWhile .)
  ! reduce/reduce conflict for LDER resolved using rule 13 (final -> sentenciaWhile .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 70
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! MAP             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 69
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 71


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 21 (final -> sentenciaIf .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for NUM resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for STRINGR resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for BOOLR resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for VAR resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for WHILE resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for DO resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for IF resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for PRINT resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for NOT resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for FOR resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for LIST resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for CIZQ resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for SET resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for SETFROM resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for MAP resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for LIZQ resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for ENTERO resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for STRING resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for BOOL resolved using rule 21 (final -> sentenciaIf .)
  ! reduce/reduce conflict for LDER resolved using rule 21 (final -> sentenciaIf .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 72
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! MAP             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 73
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 25 (final -> sentenciaElse .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for NUM resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for STRINGR resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for BOOLR resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for VAR resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for WHILE resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for DO resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for IF resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for PRINT resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for NOT resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for FOR resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for LIST resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for CIZQ resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for SET resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for SETFROM resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for MAP resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for LIZQ resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for ENTERO resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for STRING resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for BOOL resolved using rule 25 (final -> sentenciaElse .)
  ! reduce/reduce conflict for LDER resolved using rule 25 (final -> sentenciaElse .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 74
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SET             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SETFROM         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! MAP             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 75
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 76


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 77


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 78


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (222) expresionBool -> negacionBool .
    (206) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 79
    AND             reduce using rule 222 (expresionBool -> negacionBool .)
    OR              reduce using rule 222 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 222 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 206 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (223) expresionBool -> comparacionBool .
    (207) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 80
    AND             reduce using rule 223 (expresionBool -> comparacionBool .)
    OR              reduce using rule 223 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 223 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 207 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 40 (final -> sentenciaElseIf .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for NUM resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for STRINGR resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for BOOLR resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for VAR resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for DO resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for IF resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for NOT resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for LIST resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for CIZQ resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for SET resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for SETFROM resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for MAP resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for LIZQ resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for ENTERO resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for STRING resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (final -> sentenciaElseIf .)
  ! reduce/reduce conflict for LDER resolved using rule 40 (final -> sentenciaElseIf .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 81
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SET             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SETFROM         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! MAP             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 82
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 44 (final -> sentenciaFor .)
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for NUM resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for STRINGR resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for BOOLR resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for VAR resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for WHILE resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for DO resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for IF resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for PRINT resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for NOT resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for FOR resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for LIST resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for CIZQ resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for SET resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for SETFROM resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for MAP resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for LIZQ resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for ENTERO resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for STRING resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for BOOL resolved using rule 44 (final -> sentenciaFor .)
  ! reduce/reduce conflict for LDER resolved using rule 44 (final -> sentenciaFor .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 83
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! MAP             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 84
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (233) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 85
    SUMA            reduce using rule 233 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 233 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 233 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (218) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (219) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (202) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (203) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (238) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (119) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (120) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (84) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (170) asignacionSimple -> VARIABLE . IGUAL expresion
    (241) valorInt -> VARIABLE .
    (230) valorString -> VARIABLE .
    (216) valorBool -> VARIABLE .
    (183) valor -> VARIABLE .
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 230 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 230 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 216 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 86
    DRESTA          shift and go to state 87
    FUNCIONSUBSTRING shift and go to state 89
    CIZQ            shift and go to state 90
    FUNCIONTAKE     shift and go to state 91
    FUNCIONRANGE    shift and go to state 92
    IGUAL           shift and go to state 93
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 230 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 216 (valorBool -> VARIABLE .)
    AND             reduce using rule 216 (valorBool -> VARIABLE .)
    OR              reduce using rule 216 (valorBool -> VARIABLE .)
    IS              reduce using rule 183 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 183 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

  ! SUMA            [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 230 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 230 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 88

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 100


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 101


state 23

    (55) final -> expresionSet . PUNTOYCOMA
    (56) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 102


state 24

    (57) final -> expresionMap . PUNTOYCOMA
    (58) final -> expresionMap . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 103


state 25

    (162) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 104


state 26

    (163) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 105


state 27

    (164) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 106


state 28

    (165) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 107


state 29

    (166) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 108


state 30

    (167) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 109


state 31

    (168) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 110


state 32

    (169) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 169 (asignacion -> asignacionSimple .)


state 33

    (242) expresionInt -> valorInt . operadorMat expresionInt
    (243) expresionInt -> valorInt .
    (245) valorDouble -> valorInt .
    (248) operadorMat -> . SUMA
    (249) operadorMat -> . RESTA
    (250) operadorMat -> . MULTI
    (251) operadorMat -> . DIV
    (252) operadorMat -> . DIVENTERO
    (253) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 243 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 243 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 243 (expresionInt -> valorInt .)
    PDER            reduce using rule 243 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 245 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 245 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 245 (valorDouble -> valorInt .)
    MENOR           reduce using rule 245 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 245 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 245 (valorDouble -> valorInt .)
    SUMA            shift and go to state 112
    RESTA           shift and go to state 113
    MULTI           shift and go to state 114
    DIV             shift and go to state 115
    DIVENTERO       shift and go to state 116
    MOD             shift and go to state 117

  ! SUMA            [ reduce using rule 245 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 245 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 245 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 245 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 245 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 245 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 245 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 245 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 111

state 34

    (246) expresionDouble -> valorDouble . operadorMat expresionDouble
    (247) expresionDouble -> valorDouble .
    (217) expresionBool -> valorDouble . comparadorMat expresionDouble
    (220) expresionBool -> valorDouble . comparadorMat VARIABLE
    (201) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (204) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (248) operadorMat -> . SUMA
    (249) operadorMat -> . RESTA
    (250) operadorMat -> . MULTI
    (251) operadorMat -> . DIV
    (252) operadorMat -> . DIVENTERO
    (253) operadorMat -> . MOD
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 247 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 112
    RESTA           shift and go to state 113
    MULTI           shift and go to state 114
    DIV             shift and go to state 115
    DIVENTERO       shift and go to state 116
    MOD             shift and go to state 117
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

    operadorMat                    shift and go to state 118
    comparadorMat                  shift and go to state 119

state 35

    (235) expresionString -> valorString . SUMA expresionString
    (236) expresionString -> valorString .
    (237) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 120
    PUNTOYCOMA      reduce using rule 236 (expresionString -> valorString .)
    PDER            reduce using rule 236 (expresionString -> valorString .)
    CIZQ            shift and go to state 121


state 36

    (221) expresionBool -> valorBool .
    (205) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 205 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 221 (expresionBool -> valorBool .)
    OR              reduce using rule 221 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 205 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 221 (expresionBool -> valorBool .) ]


state 37

    (224) expresionBool -> valor . IS objeto
    (225) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 122
    ISNEGADO        shift and go to state 123


state 38

    (212) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 124


state 39

    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 126
    VARIABLE        shift and go to state 129
    STRING          shift and go to state 130
    ENTERO          shift and go to state 131
    DOUBLE          shift and go to state 132
    BOOL            shift and go to state 133
    CIZQ            shift and go to state 134
    SETFROM         shift and go to state 136
    LIZQ            shift and go to state 125
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 127
    claveValor                     shift and go to state 128
    expresionNewList               shift and go to state 135

state 40

    (214) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 137


state 41

    (176) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (177) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 138


state 42

    (178) sentenciaElse -> ELSE . final
    (179) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LIZQ            shift and go to state 140
    VARIABLE        shift and go to state 20
    $end            reduce using rule 59 (final -> .)
    PUNTOYCOMA      reduce using rule 59 (final -> .)
    LDER            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]

    final                          shift and go to state 139
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 43

    (171) imprimir -> PRINT . PIZQ expresion PDER
    (172) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 141


state 44

    (173) funcionStdin -> FUNCIONSTDIN .
    (231) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 173 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 173 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 231 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 231 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 231 (valorString -> FUNCIONSTDIN .) ]


state 45

    (174) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (175) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 142


state 46

    (226) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 143


state 47

    (180) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 144


state 48

    (208) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 145


state 49

    (240) valorInt -> ENTERO .
    (182) valor -> ENTERO .

    SUMA            reduce using rule 240 (valorInt -> ENTERO .)
    RESTA           reduce using rule 240 (valorInt -> ENTERO .)
    MULTI           reduce using rule 240 (valorInt -> ENTERO .)
    DIV             reduce using rule 240 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 240 (valorInt -> ENTERO .)
    MOD             reduce using rule 240 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 240 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 240 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 240 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 240 (valorInt -> ENTERO .)
    MENOR           reduce using rule 240 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 240 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 240 (valorInt -> ENTERO .)
    IS              reduce using rule 182 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 182 (valor -> ENTERO .)


state 50

    (88) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (93) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> LIST . MENOR SET MAYOR VARIABLE
    (112) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 146


state 51

    (91) expresionLista -> CIZQ . expListString CDER
    (95) expresionLista -> CIZQ . expListInt CDER
    (99) expresionLista -> CIZQ . expListNum CDER
    (106) expresionLista -> CIZQ . expListBool CDER
    (110) expresionLista -> CIZQ . expListDynamic CDER
    (114) expresionLista -> CIZQ . expListSet CDER
    (118) expresionLista -> CIZQ . expListMap CDER
    (87) expresionNewList -> CIZQ . CDER
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet
    (156) expListMap -> . LIZQ LDER
    (157) expListMap -> . LIZQ expMap LDER
    (158) expListMap -> . LIZQ LDER COMA expListMap
    (159) expListMap -> . LIZQ expMap LDER COMA expListMap
    (160) expListMap -> . VARIABLE
    (161) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 148
    STRING          shift and go to state 155
    VARIABLE        shift and go to state 156
    ENTERO          shift and go to state 157
    DOUBLE          shift and go to state 158
    BOOL            shift and go to state 159
    SETFROM         shift and go to state 160
    LIZQ            shift and go to state 161

    expListString                  shift and go to state 147
    expListInt                     shift and go to state 149
    expListNum                     shift and go to state 150
    expListBool                    shift and go to state 151
    expListDynamic                 shift and go to state 152
    expListSet                     shift and go to state 153
    expListMap                     shift and go to state 154

state 52

    (79) expresionSet -> SET . VARIABLE
    (81) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 162


state 53

    (60) expresionMap -> MAP . VARIABLE
    (61) expresionMap -> MAP . VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> MAP . VARIABLE IGUAL LIZQ expMap LDER

    VARIABLE        shift and go to state 163


state 54

    (85) expresionNewList -> NEWLIST . PIZQ PDER
    (86) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 164


state 55

    (80) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (82) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 165


state 56

    (244) valorDouble -> DOUBLE .
    (184) valor -> DOUBLE .

    SUMA            reduce using rule 244 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 244 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 244 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 244 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 244 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 244 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 244 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 244 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 244 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 244 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 244 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 244 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 244 (valorDouble -> DOUBLE .)
    IS              reduce using rule 184 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 184 (valor -> DOUBLE .)


state 57

    (229) valorString -> STRING .
    (234) valorString -> STRING . CIZQ ENTERO CDER
    (185) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 229 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 229 (valorString -> STRING .)
    CIZQ            shift and go to state 166
    IS              reduce using rule 185 (valor -> STRING .)
    ISNEGADO        reduce using rule 185 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 229 (valorString -> STRING .) ]


state 58

    (232) valorString -> expresionIndexString .

    SUMA            reduce using rule 232 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 232 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 232 (valorString -> expresionIndexString .)
    PDER            reduce using rule 232 (valorString -> expresionIndexString .)


state 59

    (215) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 215 (valorBool -> BOOL .)
    AND             reduce using rule 215 (valorBool -> BOOL .)
    OR              reduce using rule 215 (valorBool -> BOOL .)
    PDER            reduce using rule 215 (valorBool -> BOOL .)


state 60

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 1 (final -> asignacion PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 167
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 61

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 3 (final -> expresionInt PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 168
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 62

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 5 (final -> expresionDouble PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 169
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 63

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 7 (final -> expresionString PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 170
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 64

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 9 (final -> expresionBool PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 171
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 65

    (227) comparacionBool -> expresionBool operadorLogico . expresionBool
    (228) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 175
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 179
    STRING          shift and go to state 180

    expresionBool                  shift and go to state 172
    comparacionBool                shift and go to state 173
    valorDouble                    shift and go to state 174
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    valor                          shift and go to state 37
    valorInt                       shift and go to state 178

state 66

    (260) operadorLogico -> AND .

    VARIABLE        reduce using rule 260 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 260 (operadorLogico -> AND .)
    BOOL            reduce using rule 260 (operadorLogico -> AND .)
    NOT             reduce using rule 260 (operadorLogico -> AND .)
    ENTERO          reduce using rule 260 (operadorLogico -> AND .)
    STRING          reduce using rule 260 (operadorLogico -> AND .)


state 67

    (261) operadorLogico -> OR .

    VARIABLE        reduce using rule 261 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 261 (operadorLogico -> OR .)
    BOOL            reduce using rule 261 (operadorLogico -> OR .)
    NOT             reduce using rule 261 (operadorLogico -> OR .)
    ENTERO          reduce using rule 261 (operadorLogico -> OR .)
    STRING          reduce using rule 261 (operadorLogico -> OR .)


state 68

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 181
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 69

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    MAP             reduce using rule 14 (final -> sentenciaWhile final .)
    LIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 70

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 182
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 71

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 183
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 72

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 184
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 73

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    MAP             reduce using rule 22 (final -> sentenciaIf final .)
    LIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 74

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 185
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 75

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    SET             reduce using rule 26 (final -> sentenciaElse final .)
    SETFROM         reduce using rule 26 (final -> sentenciaElse final .)
    MAP             reduce using rule 26 (final -> sentenciaElse final .)
    LIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 76

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 27 (final -> imprimir PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 186
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 77

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 29 (final -> funcionStdin PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 187
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 78

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 31 (final -> funcionStdout PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 188
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 79

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 33 (final -> negacionBool PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 189
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 80

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 36 (final -> comparacionBool PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 190
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 81

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 191
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 82

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    SET             reduce using rule 38 (final -> sentenciaElseIf final .)
    SETFROM         reduce using rule 38 (final -> sentenciaElseIf final .)
    MAP             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 83

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 192
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 84

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    SET             reduce using rule 43 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 43 (final -> sentenciaFor final .)
    MAP             reduce using rule 43 (final -> sentenciaFor final .)
    LIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 85

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 193
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 86

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 194


state 87

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 195


state 88

    (218) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (219) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (202) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (203) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 196
    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200

    expresionDouble                shift and go to state 197
    valorDouble                    shift and go to state 198
    valorInt                       shift and go to state 178

state 89

    (238) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 201


state 90

    (119) expresionLista -> VARIABLE CIZQ . ENTERO CDER

    ENTERO          shift and go to state 202


state 91

    (120) expresionLista -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER
    (84) expresionSet -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER

    PIZQ            shift and go to state 203


state 92

    (121) expresionLista -> VARIABLE FUNCIONRANGE . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 204


state 93

    (170) asignacionSimple -> VARIABLE IGUAL . expresion
    (186) expresion -> . valor operadorMat expresion
    (187) expresion -> . valor
    (188) expresion -> . expresionString
    (189) expresion -> . expresionInt
    (190) expresion -> . expresionDouble
    (191) expresion -> . expresionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 179
    VARIABLE        shift and go to state 205
    DOUBLE          shift and go to state 212
    STRING          shift and go to state 213
    FUNCIONSTDIN    shift and go to state 216
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 206
    valor                          shift and go to state 207
    expresionString                shift and go to state 208
    expresionInt                   shift and go to state 209
    expresionDouble                shift and go to state 210
    expresionBool                  shift and go to state 211
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 214
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 94

    (254) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 254 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 254 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 254 (comparadorMat -> DIGUAL .)


state 95

    (255) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 255 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 255 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 255 (comparadorMat -> NOIGUAL .)


state 96

    (256) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 256 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 256 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 256 (comparadorMat -> MAYOR .)


state 97

    (257) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 257 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 257 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 257 (comparadorMat -> MENOR .)


state 98

    (258) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 258 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 258 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 258 (comparadorMat -> MAYIGUAL .)


state 99

    (259) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 259 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 259 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 259 (comparadorMat -> MENIGUAL .)


state 100

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 51 (final -> expresionLista PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 218
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 101

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 53 (final -> expresionNewList PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 219
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 102

    (55) final -> expresionSet PUNTOYCOMA .
    (56) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 55 (final -> expresionSet PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionSet                   shift and go to state 23
    final                          shift and go to state 220
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 103

    (57) final -> expresionMap PUNTOYCOMA .
    (58) final -> expresionMap PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 57 (final -> expresionMap PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    LDER            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionMap                   shift and go to state 24
    final                          shift and go to state 221
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 104

    (162) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 222


state 105

    (163) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 223


state 106

    (164) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 224


state 107

    (165) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 225


state 108

    (166) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 226


state 109

    (167) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 227


state 110

    (168) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 228


state 111

    (242) expresionInt -> valorInt operadorMat . expresionInt
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    valorInt                       shift and go to state 229
    expresionInt                   shift and go to state 230

state 112

    (248) operadorMat -> SUMA .

    ENTERO          reduce using rule 248 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 248 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 248 (operadorMat -> SUMA .)
    STRING          reduce using rule 248 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 248 (operadorMat -> SUMA .)
    BOOL            reduce using rule 248 (operadorMat -> SUMA .)
    NOT             reduce using rule 248 (operadorMat -> SUMA .)


state 113

    (249) operadorMat -> RESTA .

    ENTERO          reduce using rule 249 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 249 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 249 (operadorMat -> RESTA .)
    STRING          reduce using rule 249 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 249 (operadorMat -> RESTA .)
    BOOL            reduce using rule 249 (operadorMat -> RESTA .)
    NOT             reduce using rule 249 (operadorMat -> RESTA .)


state 114

    (250) operadorMat -> MULTI .

    ENTERO          reduce using rule 250 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 250 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 250 (operadorMat -> MULTI .)
    STRING          reduce using rule 250 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 250 (operadorMat -> MULTI .)
    BOOL            reduce using rule 250 (operadorMat -> MULTI .)
    NOT             reduce using rule 250 (operadorMat -> MULTI .)


state 115

    (251) operadorMat -> DIV .

    ENTERO          reduce using rule 251 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 251 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 251 (operadorMat -> DIV .)
    STRING          reduce using rule 251 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 251 (operadorMat -> DIV .)
    BOOL            reduce using rule 251 (operadorMat -> DIV .)
    NOT             reduce using rule 251 (operadorMat -> DIV .)


state 116

    (252) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 252 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 252 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 252 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 252 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 252 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 252 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 252 (operadorMat -> DIVENTERO .)


state 117

    (253) operadorMat -> MOD .

    ENTERO          reduce using rule 253 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 253 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 253 (operadorMat -> MOD .)
    STRING          reduce using rule 253 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 253 (operadorMat -> MOD .)
    BOOL            reduce using rule 253 (operadorMat -> MOD .)
    NOT             reduce using rule 253 (operadorMat -> MOD .)


state 118

    (246) expresionDouble -> valorDouble operadorMat . expresionDouble
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    valorDouble                    shift and go to state 198
    expresionDouble                shift and go to state 232
    valorInt                       shift and go to state 178

state 119

    (217) expresionBool -> valorDouble comparadorMat . expresionDouble
    (220) expresionBool -> valorDouble comparadorMat . VARIABLE
    (201) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (204) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 234
    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200

    valorDouble                    shift and go to state 198
    expresionDouble                shift and go to state 233
    valorInt                       shift and go to state 178

state 120

    (235) expresionString -> valorString SUMA . expresionString
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 236
    VARIABLE        shift and go to state 237
    FUNCIONSTDIN    shift and go to state 216

    valorString                    shift and go to state 35
    expresionString                shift and go to state 235
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 121

    (237) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 238


state 122

    (224) expresionBool -> valor IS . objeto
    (262) objeto -> . STRINGR
    (263) objeto -> . INT
    (264) objeto -> . DOUBLER
    (265) objeto -> . NUM
    (266) objeto -> . VAR
    (267) objeto -> . DYNAMIC
    (268) objeto -> . LIST
    (269) objeto -> . BOOL
    (270) objeto -> . MAP
    (271) objeto -> . SET

    STRINGR         shift and go to state 240
    INT             shift and go to state 241
    DOUBLER         shift and go to state 242
    NUM             shift and go to state 243
    VAR             shift and go to state 244
    DYNAMIC         shift and go to state 245
    LIST            shift and go to state 246
    BOOL            shift and go to state 247
    MAP             shift and go to state 248
    SET             shift and go to state 249

    objeto                         shift and go to state 239

state 123

    (225) expresionBool -> valor ISNEGADO . objeto
    (262) objeto -> . STRINGR
    (263) objeto -> . INT
    (264) objeto -> . DOUBLER
    (265) objeto -> . NUM
    (266) objeto -> . VAR
    (267) objeto -> . DYNAMIC
    (268) objeto -> . LIST
    (269) objeto -> . BOOL
    (270) objeto -> . MAP
    (271) objeto -> . SET

    STRINGR         shift and go to state 240
    INT             shift and go to state 241
    DOUBLER         shift and go to state 242
    NUM             shift and go to state 243
    VAR             shift and go to state 244
    DYNAMIC         shift and go to state 245
    LIST            shift and go to state 246
    BOOL            shift and go to state 247
    MAP             shift and go to state 248
    SET             shift and go to state 249

    objeto                         shift and go to state 250

state 124

    (212) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 175
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 179
    STRING          shift and go to state 180

    expresionBool                  shift and go to state 251
    valorDouble                    shift and go to state 174
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    valor                          shift and go to state 37
    valorInt                       shift and go to state 178

state 125

    (77) claveValor -> LIZQ . LDER
    (78) claveValor -> LIZQ . expMap LDER
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 252
    VARIABLE        shift and go to state 129
    STRING          shift and go to state 130
    ENTERO          shift and go to state 131
    DOUBLE          shift and go to state 132
    BOOL            shift and go to state 133
    CIZQ            shift and go to state 134
    SETFROM         shift and go to state 136
    LIZQ            shift and go to state 125
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 253
    claveValor                     shift and go to state 128
    expresionNewList               shift and go to state 135

state 126

    (62) expresionMap -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 62 (expresionMap -> LIZQ LDER .)


state 127

    (64) expresionMap -> LIZQ expMap . LDER

    LDER            shift and go to state 254


state 128

    (65) expMap -> claveValor . DOSPUNTOS claveValor
    (66) expMap -> claveValor . DOSPUNTOS claveValor COMA expMap

    DOSPUNTOS       shift and go to state 255


state 129

    (67) claveValor -> VARIABLE .

    DOSPUNTOS       reduce using rule 67 (claveValor -> VARIABLE .)
    COMA            reduce using rule 67 (claveValor -> VARIABLE .)
    LDER            reduce using rule 67 (claveValor -> VARIABLE .)


state 130

    (68) claveValor -> STRING .

    DOSPUNTOS       reduce using rule 68 (claveValor -> STRING .)
    COMA            reduce using rule 68 (claveValor -> STRING .)
    LDER            reduce using rule 68 (claveValor -> STRING .)


state 131

    (69) claveValor -> ENTERO .

    DOSPUNTOS       reduce using rule 69 (claveValor -> ENTERO .)
    COMA            reduce using rule 69 (claveValor -> ENTERO .)
    LDER            reduce using rule 69 (claveValor -> ENTERO .)


state 132

    (70) claveValor -> DOUBLE .

    DOSPUNTOS       reduce using rule 70 (claveValor -> DOUBLE .)
    COMA            reduce using rule 70 (claveValor -> DOUBLE .)
    LDER            reduce using rule 70 (claveValor -> DOUBLE .)


state 133

    (71) claveValor -> BOOL .

    DOSPUNTOS       reduce using rule 71 (claveValor -> BOOL .)
    COMA            reduce using rule 71 (claveValor -> BOOL .)
    LDER            reduce using rule 71 (claveValor -> BOOL .)


state 134

    (72) claveValor -> CIZQ . expListDynamic CDER
    (73) claveValor -> CIZQ . expListSet CDER
    (87) expresionNewList -> CIZQ . CDER
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 148
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 262
    SETFROM         shift and go to state 160

    expListDynamic                 shift and go to state 256
    expListSet                     shift and go to state 257

state 135

    (74) claveValor -> expresionNewList .

    DOSPUNTOS       reduce using rule 74 (claveValor -> expresionNewList .)
    COMA            reduce using rule 74 (claveValor -> expresionNewList .)
    LDER            reduce using rule 74 (claveValor -> expresionNewList .)


state 136

    (75) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (76) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 263


state 137

    (214) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    LDER            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    final                          shift and go to state 264
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 138

    (176) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (177) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 175
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 179
    STRING          shift and go to state 180

    expresionBool                  shift and go to state 265
    valorDouble                    shift and go to state 174
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    valor                          shift and go to state 37
    valorInt                       shift and go to state 178

state 139

    (178) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 178 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 178 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 178 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 178 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 178 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 178 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 178 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 178 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 178 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 178 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 178 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 178 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 178 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 178 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 178 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 178 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 178 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 178 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 178 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 178 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 178 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 178 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 178 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 178 (sentenciaElse -> ELSE final .)
    MAP             reduce using rule 178 (sentenciaElse -> ELSE final .)
    LIZQ            reduce using rule 178 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 178 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 178 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 178 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 178 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 178 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 178 (sentenciaElse -> ELSE final .)


state 140

    (179) sentenciaElse -> ELSE LIZQ . final LDER
    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 126
    VARIABLE        shift and go to state 268
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 271
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 272
    MAP             shift and go to state 53
    LIZQ            shift and go to state 266
    STRING          shift and go to state 273
    ENTERO          shift and go to state 270
    DOUBLE          shift and go to state 274
    BOOL            shift and go to state 275

  ! LDER            [ reduce using rule 59 (final -> .) ]

    final                          shift and go to state 267
    expMap                         shift and go to state 127
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 269
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 128
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 141

    (171) imprimir -> PRINT PIZQ . expresion PDER
    (172) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (186) expresion -> . valor operadorMat expresion
    (187) expresion -> . valor
    (188) expresion -> . expresionString
    (189) expresion -> . expresionInt
    (190) expresion -> . expresionDouble
    (191) expresion -> . expresionBool
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 278
    ENTERO          shift and go to state 179
    DOUBLE          shift and go to state 212
    STRING          shift and go to state 213
    FUNCIONSTDIN    shift and go to state 216
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 276
    asignacionSimple               shift and go to state 277
    valor                          shift and go to state 207
    expresionString                shift and go to state 208
    expresionInt                   shift and go to state 209
    expresionDouble                shift and go to state 210
    expresionBool                  shift and go to state 211
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 214
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 142

    (174) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (175) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (186) expresion -> . valor operadorMat expresion
    (187) expresion -> . valor
    (188) expresion -> . expresionString
    (189) expresion -> . expresionInt
    (190) expresion -> . expresionDouble
    (191) expresion -> . expresionBool
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 278
    ENTERO          shift and go to state 179
    DOUBLE          shift and go to state 212
    STRING          shift and go to state 213
    FUNCIONSTDIN    shift and go to state 216
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 279
    asignacionSimple               shift and go to state 280
    valor                          shift and go to state 207
    expresionString                shift and go to state 208
    expresionInt                   shift and go to state 209
    expresionDouble                shift and go to state 210
    expresionBool                  shift and go to state 211
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 214
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 143

    (226) negacionBool -> NOT PIZQ . expresionBool PDER
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 175
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 179
    STRING          shift and go to state 180

    expresionBool                  shift and go to state 281
    valorDouble                    shift and go to state 174
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    valor                          shift and go to state 37
    valorInt                       shift and go to state 178

state 144

    (180) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (181) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 175
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 179
    STRING          shift and go to state 180

    expresionBool                  shift and go to state 282
    valorDouble                    shift and go to state 174
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    valor                          shift and go to state 37
    valorInt                       shift and go to state 178

state 145

    (208) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (192) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (193) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (194) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (195) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (196) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (197) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (198) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (199) asignacionFor -> . VARIABLE IGUAL expresionInt
    (200) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 285
    DOUBLER         shift and go to state 286
    NUM             shift and go to state 287
    DYNAMIC         shift and go to state 288
    VAR             shift and go to state 289
    VARIABLE        shift and go to state 284

    asignacionFor                  shift and go to state 283

state 146

    (88) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (89) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (93) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (97) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (101) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (104) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> LIST MENOR . SET MAYOR VARIABLE
    (112) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE
    (116) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 290
    INT             shift and go to state 291
    DOUBLER         shift and go to state 292
    NUM             shift and go to state 293
    BOOLR           shift and go to state 294
    DYNAMIC         shift and go to state 295
    SET             shift and go to state 296
    MAP             shift and go to state 297


state 147

    (91) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 298


state 148

    (87) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 87 (expresionNewList -> CIZQ CDER .)
    DOSPUNTOS       reduce using rule 87 (expresionNewList -> CIZQ CDER .)
    COMA            reduce using rule 87 (expresionNewList -> CIZQ CDER .)
    LDER            reduce using rule 87 (expresionNewList -> CIZQ CDER .)


state 149

    (95) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 299


state 150

    (99) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 300


state 151

    (106) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 301


state 152

    (110) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 302


state 153

    (114) expresionLista -> CIZQ expListSet . CDER

    CDER            shift and go to state 303


state 154

    (118) expresionLista -> CIZQ expListMap . CDER

    CDER            shift and go to state 304


state 155

    (122) expListString -> STRING .
    (123) expListString -> STRING . COMA expListString
    (140) expListDynamic -> STRING .
    (144) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 122 (expListString -> STRING .)
    CDER            reduce using rule 122 (expListString -> STRING .)
    COMA            shift and go to state 305

  ! CDER            [ reduce using rule 140 (expListDynamic -> STRING .) ]


state 156

    (124) expListString -> VARIABLE .
    (125) expListString -> VARIABLE . COMA expListString
    (128) expListInt -> VARIABLE .
    (129) expListInt -> VARIABLE . COMA expListInt
    (134) expListNum -> VARIABLE .
    (135) expListNum -> VARIABLE . COMA expListNum
    (138) expListBool -> VARIABLE .
    (139) expListBool -> VARIABLE . COMA expListBool
    (148) expListDynamic -> VARIABLE .
    (149) expListDynamic -> VARIABLE . COMA expListDynamic
    (154) expListSet -> VARIABLE .
    (155) expListSet -> VARIABLE . COMA expListSet
    (160) expListMap -> VARIABLE .
    (161) expListMap -> VARIABLE . COMA expListMap

  ! reduce/reduce conflict for CDER resolved using rule 124 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 124 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 124 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 124 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 124 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 124 (expListString -> VARIABLE .)
    CDER            reduce using rule 124 (expListString -> VARIABLE .)
    COMA            shift and go to state 306

  ! CDER            [ reduce using rule 128 (expListInt -> VARIABLE .) ]
  ! CDER            [ reduce using rule 134 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 138 (expListBool -> VARIABLE .) ]
  ! CDER            [ reduce using rule 148 (expListDynamic -> VARIABLE .) ]
  ! CDER            [ reduce using rule 154 (expListSet -> VARIABLE .) ]
  ! CDER            [ reduce using rule 160 (expListMap -> VARIABLE .) ]


state 157

    (126) expListInt -> ENTERO .
    (127) expListInt -> ENTERO . COMA expListInt
    (130) expListNum -> ENTERO .
    (132) expListNum -> ENTERO . COMA expListNum
    (141) expListDynamic -> ENTERO .
    (145) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 126 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 126 (expListInt -> ENTERO .)
    CDER            reduce using rule 126 (expListInt -> ENTERO .)
    COMA            shift and go to state 307

  ! CDER            [ reduce using rule 130 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 141 (expListDynamic -> ENTERO .) ]


state 158

    (131) expListNum -> DOUBLE .
    (133) expListNum -> DOUBLE . COMA expListNum
    (142) expListDynamic -> DOUBLE .
    (146) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 131 (expListNum -> DOUBLE .)
    CDER            reduce using rule 131 (expListNum -> DOUBLE .)
    COMA            shift and go to state 308

  ! CDER            [ reduce using rule 142 (expListDynamic -> DOUBLE .) ]


state 159

    (136) expListBool -> BOOL .
    (137) expListBool -> BOOL . COMA expListBool
    (143) expListDynamic -> BOOL .
    (147) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 136 (expListBool -> BOOL .)
    CDER            reduce using rule 136 (expListBool -> BOOL .)
    COMA            shift and go to state 309

  ! CDER            [ reduce using rule 143 (expListDynamic -> BOOL .) ]


state 160

    (150) expListSet -> SETFROM . PIZQ CIZQ CDER PDER
    (151) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> SETFROM . PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER COMA expListSet

    PIZQ            shift and go to state 310


state 161

    (156) expListMap -> LIZQ . LDER
    (157) expListMap -> LIZQ . expMap LDER
    (158) expListMap -> LIZQ . LDER COMA expListMap
    (159) expListMap -> LIZQ . expMap LDER COMA expListMap
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 311
    VARIABLE        shift and go to state 129
    STRING          shift and go to state 130
    ENTERO          shift and go to state 131
    DOUBLE          shift and go to state 132
    BOOL            shift and go to state 133
    CIZQ            shift and go to state 134
    SETFROM         shift and go to state 136
    LIZQ            shift and go to state 125
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 312
    claveValor                     shift and go to state 128
    expresionNewList               shift and go to state 135

state 162

    (79) expresionSet -> SET VARIABLE .
    (81) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 79 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 313


state 163

    (60) expresionMap -> MAP VARIABLE .
    (61) expresionMap -> MAP VARIABLE . IGUAL LIZQ LDER
    (63) expresionMap -> MAP VARIABLE . IGUAL LIZQ expMap LDER

    PUNTOYCOMA      reduce using rule 60 (expresionMap -> MAP VARIABLE .)
    IGUAL           shift and go to state 314


state 164

    (85) expresionNewList -> NEWLIST PIZQ . PDER
    (86) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 315
    ENTERO          shift and go to state 316


state 165

    (80) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (82) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 317


state 166

    (234) valorString -> STRING CIZQ . ENTERO CDER

    ENTERO          shift and go to state 318


state 167

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    MAP             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 168

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    MAP             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 169

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    MAP             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 170

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    MAP             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 171

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    MAP             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 172

    (227) comparacionBool -> expresionBool operadorLogico expresionBool .
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 227 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 227 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 66
    OR              shift and go to state 67

  ! AND             [ reduce using rule 227 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 227 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 65

state 173

    (228) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (223) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 223 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 223 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 223 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 223 (expresionBool -> comparacionBool .)
    AND             reduce using rule 223 (expresionBool -> comparacionBool .)
    OR              reduce using rule 223 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 223 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 223 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 228 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 228 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 228 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 228 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 174

    (217) expresionBool -> valorDouble . comparadorMat expresionDouble
    (220) expresionBool -> valorDouble . comparadorMat VARIABLE
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

    comparadorMat                  shift and go to state 319

state 175

    (218) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (219) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (216) valorBool -> VARIABLE .
    (183) valor -> VARIABLE .
    (241) valorInt -> VARIABLE .
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 216 (valorBool -> VARIABLE .)
    OR              reduce using rule 216 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 216 (valorBool -> VARIABLE .)
    PDER            reduce using rule 216 (valorBool -> VARIABLE .)
    IS              reduce using rule 183 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 183 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

  ! DIGUAL          [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 320

state 176

    (221) expresionBool -> valorBool .

    AND             reduce using rule 221 (expresionBool -> valorBool .)
    OR              reduce using rule 221 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 221 (expresionBool -> valorBool .)
    PDER            reduce using rule 221 (expresionBool -> valorBool .)


state 177

    (222) expresionBool -> negacionBool .

    AND             reduce using rule 222 (expresionBool -> negacionBool .)
    OR              reduce using rule 222 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 222 (expresionBool -> negacionBool .)
    PDER            reduce using rule 222 (expresionBool -> negacionBool .)


state 178

    (245) valorDouble -> valorInt .

    DIGUAL          reduce using rule 245 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 245 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 245 (valorDouble -> valorInt .)
    MENOR           reduce using rule 245 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 245 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 245 (valorDouble -> valorInt .)
    SUMA            reduce using rule 245 (valorDouble -> valorInt .)
    RESTA           reduce using rule 245 (valorDouble -> valorInt .)
    MULTI           reduce using rule 245 (valorDouble -> valorInt .)
    DIV             reduce using rule 245 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 245 (valorDouble -> valorInt .)
    MOD             reduce using rule 245 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 245 (valorDouble -> valorInt .)
    AND             reduce using rule 245 (valorDouble -> valorInt .)
    OR              reduce using rule 245 (valorDouble -> valorInt .)
    PDER            reduce using rule 245 (valorDouble -> valorInt .)


state 179

    (182) valor -> ENTERO .
    (240) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 182 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 182 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 182 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 182 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 182 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 182 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 182 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 182 (valor -> ENTERO .)
    IS              reduce using rule 182 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 182 (valor -> ENTERO .)
    SUMA            reduce using rule 182 (valor -> ENTERO .)
    RESTA           reduce using rule 182 (valor -> ENTERO .)
    MULTI           reduce using rule 182 (valor -> ENTERO .)
    DIV             reduce using rule 182 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 182 (valor -> ENTERO .)
    MOD             reduce using rule 182 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 182 (valor -> ENTERO .)
    PDER            reduce using rule 182 (valor -> ENTERO .)
    DIGUAL          reduce using rule 240 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 240 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 240 (valorInt -> ENTERO .)
    MENOR           reduce using rule 240 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 240 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 240 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 240 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 240 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 240 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 240 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 240 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 240 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 240 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 240 (valorInt -> ENTERO .) ]


state 180

    (185) valor -> STRING .

    IS              reduce using rule 185 (valor -> STRING .)
    ISNEGADO        reduce using rule 185 (valor -> STRING .)


state 181

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    MAP             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 182

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    MAP             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 183

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    MAP             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 184

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    MAP             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 185

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    MAP             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 186

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    MAP             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 187

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    MAP             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 188

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    MAP             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 189

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 190

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 191

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    MAP             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 192

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    MAP             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 193

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    MAP             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 194

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    final                          shift and go to state 321
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 195

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for NUM resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for STRINGR resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOLR resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for VAR resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for DO resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for NOT resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for LIST resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for CIZQ resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for NEWLIST resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for SET resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for SETFROM resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for MAP resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for LIZQ resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! reduce/reduce conflict for LDER resolved using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! $end            [ reduce using rule 59 (final -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 59 (final -> .) ]
  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]
  ! LDER            [ reduce using rule 59 (final -> .) ]

    final                          shift and go to state 322
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 196

    (219) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (203) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (241) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 203 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 203 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 203 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 241 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 241 (valorInt -> VARIABLE .) ]


state 197

    (218) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (202) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 202 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 202 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 198

    (246) expresionDouble -> valorDouble . operadorMat expresionDouble
    (247) expresionDouble -> valorDouble .
    (248) operadorMat -> . SUMA
    (249) operadorMat -> . RESTA
    (250) operadorMat -> . MULTI
    (251) operadorMat -> . DIV
    (252) operadorMat -> . DIVENTERO
    (253) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 247 (expresionDouble -> valorDouble .)
    AND             reduce using rule 247 (expresionDouble -> valorDouble .)
    OR              reduce using rule 247 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 247 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 112
    RESTA           shift and go to state 113
    MULTI           shift and go to state 114
    DIV             shift and go to state 115
    DIVENTERO       shift and go to state 116
    MOD             shift and go to state 117

    operadorMat                    shift and go to state 118

state 199

    (244) valorDouble -> DOUBLE .

    SUMA            reduce using rule 244 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 244 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 244 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 244 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 244 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 244 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 244 (valorDouble -> DOUBLE .)
    AND             reduce using rule 244 (valorDouble -> DOUBLE .)
    OR              reduce using rule 244 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 244 (valorDouble -> DOUBLE .)


state 200

    (240) valorInt -> ENTERO .

    SUMA            reduce using rule 240 (valorInt -> ENTERO .)
    RESTA           reduce using rule 240 (valorInt -> ENTERO .)
    MULTI           reduce using rule 240 (valorInt -> ENTERO .)
    DIV             reduce using rule 240 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 240 (valorInt -> ENTERO .)
    MOD             reduce using rule 240 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 240 (valorInt -> ENTERO .)
    AND             reduce using rule 240 (valorInt -> ENTERO .)
    OR              reduce using rule 240 (valorInt -> ENTERO .)
    PDER            reduce using rule 240 (valorInt -> ENTERO .)


state 201

    (238) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 323


state 202

    (119) expresionLista -> VARIABLE CIZQ ENTERO . CDER

    CDER            shift and go to state 324


state 203

    (120) expresionLista -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER
    (84) expresionSet -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER

    ENTERO          shift and go to state 325


state 204

    (121) expresionLista -> VARIABLE FUNCIONRANGE PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 326


state 205

    (183) valor -> VARIABLE .
    (218) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (219) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (230) valorString -> VARIABLE .
    (241) valorInt -> VARIABLE .
    (216) valorBool -> VARIABLE .
    (238) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 183 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 183 (valor -> VARIABLE .)
    SUMA            reduce using rule 183 (valor -> VARIABLE .)
    RESTA           reduce using rule 183 (valor -> VARIABLE .)
    MULTI           reduce using rule 183 (valor -> VARIABLE .)
    DIV             reduce using rule 183 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 183 (valor -> VARIABLE .)
    MOD             reduce using rule 183 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 183 (valor -> VARIABLE .)
    PDER            reduce using rule 183 (valor -> VARIABLE .)
    CIZQ            reduce using rule 230 (valorString -> VARIABLE .)
    AND             reduce using rule 216 (valorBool -> VARIABLE .)
    OR              reduce using rule 216 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 89
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

  ! SUMA            [ reduce using rule 230 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 230 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 230 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 216 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 216 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 320

state 206

    (170) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 170 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 170 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 207

    (186) expresion -> valor . operadorMat expresion
    (187) expresion -> valor .
    (224) expresionBool -> valor . IS objeto
    (225) expresionBool -> valor . ISNEGADO objeto
    (248) operadorMat -> . SUMA
    (249) operadorMat -> . RESTA
    (250) operadorMat -> . MULTI
    (251) operadorMat -> . DIV
    (252) operadorMat -> . DIVENTERO
    (253) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 187 (expresion -> valor .)
    PDER            reduce using rule 187 (expresion -> valor .)
    IS              shift and go to state 122
    ISNEGADO        shift and go to state 123
    SUMA            shift and go to state 112
    RESTA           shift and go to state 113
    MULTI           shift and go to state 114
    DIV             shift and go to state 115
    DIVENTERO       shift and go to state 116
    MOD             shift and go to state 117

    operadorMat                    shift and go to state 327

state 208

    (188) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 188 (expresion -> expresionString .)
    PDER            reduce using rule 188 (expresion -> expresionString .)


state 209

    (189) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 189 (expresion -> expresionInt .)
    PDER            reduce using rule 189 (expresion -> expresionInt .)


state 210

    (190) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 190 (expresion -> expresionDouble .)
    PDER            reduce using rule 190 (expresion -> expresionDouble .)


state 211

    (191) expresion -> expresionBool .
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 191 (expresion -> expresionBool .)
    PDER            reduce using rule 191 (expresion -> expresionBool .)
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 212

    (184) valor -> DOUBLE .
    (244) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 184 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 184 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 184 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 184 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 184 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 184 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 184 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (valor -> DOUBLE .)
    IS              reduce using rule 184 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 184 (valor -> DOUBLE .)
    SUMA            reduce using rule 184 (valor -> DOUBLE .)
    RESTA           reduce using rule 184 (valor -> DOUBLE .)
    MULTI           reduce using rule 184 (valor -> DOUBLE .)
    DIV             reduce using rule 184 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 184 (valor -> DOUBLE .)
    MOD             reduce using rule 184 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 184 (valor -> DOUBLE .)
    PDER            reduce using rule 184 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 244 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 244 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 244 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 244 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 244 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 244 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 244 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 244 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 244 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 244 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 244 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 244 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 244 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 244 (valorDouble -> DOUBLE .) ]


state 213

    (185) valor -> STRING .
    (229) valorString -> STRING .
    (234) valorString -> STRING . CIZQ ENTERO CDER

  ! reduce/reduce conflict for SUMA resolved using rule 185 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 185 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 185 (valor -> STRING .)
  ! shift/reduce conflict for CIZQ resolved as shift
    IS              reduce using rule 185 (valor -> STRING .)
    ISNEGADO        reduce using rule 185 (valor -> STRING .)
    SUMA            reduce using rule 185 (valor -> STRING .)
    RESTA           reduce using rule 185 (valor -> STRING .)
    MULTI           reduce using rule 185 (valor -> STRING .)
    DIV             reduce using rule 185 (valor -> STRING .)
    DIVENTERO       reduce using rule 185 (valor -> STRING .)
    MOD             reduce using rule 185 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 185 (valor -> STRING .)
    PDER            reduce using rule 185 (valor -> STRING .)
    CIZQ            shift and go to state 166

  ! SUMA            [ reduce using rule 229 (valorString -> STRING .) ]
  ! CIZQ            [ reduce using rule 229 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 229 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 229 (valorString -> STRING .) ]


state 214

    (246) expresionDouble -> valorDouble . operadorMat expresionDouble
    (247) expresionDouble -> valorDouble .
    (217) expresionBool -> valorDouble . comparadorMat expresionDouble
    (220) expresionBool -> valorDouble . comparadorMat VARIABLE
    (248) operadorMat -> . SUMA
    (249) operadorMat -> . RESTA
    (250) operadorMat -> . MULTI
    (251) operadorMat -> . DIV
    (252) operadorMat -> . DIVENTERO
    (253) operadorMat -> . MOD
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 247 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 247 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 112
    RESTA           shift and go to state 113
    MULTI           shift and go to state 114
    DIV             shift and go to state 115
    DIVENTERO       shift and go to state 116
    MOD             shift and go to state 117
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

    operadorMat                    shift and go to state 118
    comparadorMat                  shift and go to state 319

state 215

    (223) expresionBool -> comparacionBool .

    AND             reduce using rule 223 (expresionBool -> comparacionBool .)
    OR              reduce using rule 223 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 223 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 223 (expresionBool -> comparacionBool .)


state 216

    (231) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 231 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 231 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 231 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 231 (valorString -> FUNCIONSTDIN .)


state 217

    (233) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 233 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 233 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 233 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 233 (valorString -> sentenciaSubstring .)


state 218

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    MAP             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 219

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    MAP             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 220

    (56) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    MAP             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)


state 221

    (58) final -> expresionMap PUNTOYCOMA final .

    $end            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VARIABLE        reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    INT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLER         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NUM             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRINGR         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOLR           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VAR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    WHILE           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DO              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    IF              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSE            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PRINT           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NOT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSEIF          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FOR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIST            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    CIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NEWLIST         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SET             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SETFROM         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    MAP             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ENTERO          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLE          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRING          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOL            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LDER            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)


state 222

    (162) asignacion -> INT VARIABLE IGUAL . expresionInt
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    expresionInt                   shift and go to state 328
    valorInt                       shift and go to state 229

state 223

    (163) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    expresionDouble                shift and go to state 329
    valorDouble                    shift and go to state 198
    valorInt                       shift and go to state 178

state 224

    (164) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    expresionDouble                shift and go to state 330
    valorDouble                    shift and go to state 198
    valorInt                       shift and go to state 178

state 225

    (165) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 236
    VARIABLE        shift and go to state 237
    FUNCIONSTDIN    shift and go to state 216

    expresionString                shift and go to state 331
    valorString                    shift and go to state 35
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 226

    (166) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 175
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 179
    STRING          shift and go to state 180

    expresionBool                  shift and go to state 332
    valorDouble                    shift and go to state 174
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    valor                          shift and go to state 37
    valorInt                       shift and go to state 178

state 227

    (167) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (186) expresion -> . valor operadorMat expresion
    (187) expresion -> . valor
    (188) expresion -> . expresionString
    (189) expresion -> . expresionInt
    (190) expresion -> . expresionDouble
    (191) expresion -> . expresionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 179
    VARIABLE        shift and go to state 205
    DOUBLE          shift and go to state 212
    STRING          shift and go to state 213
    FUNCIONSTDIN    shift and go to state 216
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 333
    valor                          shift and go to state 207
    expresionString                shift and go to state 208
    expresionInt                   shift and go to state 209
    expresionDouble                shift and go to state 210
    expresionBool                  shift and go to state 211
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 214
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 228

    (168) asignacion -> VAR VARIABLE IGUAL . expresion
    (186) expresion -> . valor operadorMat expresion
    (187) expresion -> . valor
    (188) expresion -> . expresionString
    (189) expresion -> . expresionInt
    (190) expresion -> . expresionDouble
    (191) expresion -> . expresionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 179
    VARIABLE        shift and go to state 205
    DOUBLE          shift and go to state 212
    STRING          shift and go to state 213
    FUNCIONSTDIN    shift and go to state 216
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 334
    valor                          shift and go to state 207
    expresionString                shift and go to state 208
    expresionInt                   shift and go to state 209
    expresionDouble                shift and go to state 210
    expresionBool                  shift and go to state 211
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 214
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 229

    (242) expresionInt -> valorInt . operadorMat expresionInt
    (243) expresionInt -> valorInt .
    (248) operadorMat -> . SUMA
    (249) operadorMat -> . RESTA
    (250) operadorMat -> . MULTI
    (251) operadorMat -> . DIV
    (252) operadorMat -> . DIVENTERO
    (253) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 243 (expresionInt -> valorInt .)
    PDER            reduce using rule 243 (expresionInt -> valorInt .)
    SUMA            shift and go to state 112
    RESTA           shift and go to state 113
    MULTI           shift and go to state 114
    DIV             shift and go to state 115
    DIVENTERO       shift and go to state 116
    MOD             shift and go to state 117

    operadorMat                    shift and go to state 111

state 230

    (242) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 242 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 242 (expresionInt -> valorInt operadorMat expresionInt .)


state 231

    (241) valorInt -> VARIABLE .

    SUMA            reduce using rule 241 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 241 (valorInt -> VARIABLE .)
    PDER            reduce using rule 241 (valorInt -> VARIABLE .)
    AND             reduce using rule 241 (valorInt -> VARIABLE .)
    OR              reduce using rule 241 (valorInt -> VARIABLE .)


state 232

    (246) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 246 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 246 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 246 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 246 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 233

    (217) expresionBool -> valorDouble comparadorMat expresionDouble .
    (201) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 201 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 201 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 234

    (220) expresionBool -> valorDouble comparadorMat VARIABLE .
    (204) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (241) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 204 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 204 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 204 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 241 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 241 (valorInt -> VARIABLE .) ]


state 235

    (235) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 235 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 235 (expresionString -> valorString SUMA expresionString .)


state 236

    (229) valorString -> STRING .
    (234) valorString -> STRING . CIZQ ENTERO CDER

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 229 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 229 (valorString -> STRING .)
    PDER            reduce using rule 229 (valorString -> STRING .)
    CIZQ            shift and go to state 166

  ! CIZQ            [ reduce using rule 229 (valorString -> STRING .) ]


state 237

    (230) valorString -> VARIABLE .
    (238) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 230 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 230 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 230 (valorString -> VARIABLE .)
    PDER            reduce using rule 230 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 89


state 238

    (237) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 335


state 239

    (224) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 224 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 224 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 224 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 224 (expresionBool -> valor IS objeto .)


state 240

    (262) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 262 (objeto -> STRINGR .)
    AND             reduce using rule 262 (objeto -> STRINGR .)
    OR              reduce using rule 262 (objeto -> STRINGR .)
    PDER            reduce using rule 262 (objeto -> STRINGR .)


state 241

    (263) objeto -> INT .

    PUNTOYCOMA      reduce using rule 263 (objeto -> INT .)
    AND             reduce using rule 263 (objeto -> INT .)
    OR              reduce using rule 263 (objeto -> INT .)
    PDER            reduce using rule 263 (objeto -> INT .)


state 242

    (264) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 264 (objeto -> DOUBLER .)
    AND             reduce using rule 264 (objeto -> DOUBLER .)
    OR              reduce using rule 264 (objeto -> DOUBLER .)
    PDER            reduce using rule 264 (objeto -> DOUBLER .)


state 243

    (265) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 265 (objeto -> NUM .)
    AND             reduce using rule 265 (objeto -> NUM .)
    OR              reduce using rule 265 (objeto -> NUM .)
    PDER            reduce using rule 265 (objeto -> NUM .)


state 244

    (266) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 266 (objeto -> VAR .)
    AND             reduce using rule 266 (objeto -> VAR .)
    OR              reduce using rule 266 (objeto -> VAR .)
    PDER            reduce using rule 266 (objeto -> VAR .)


state 245

    (267) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 267 (objeto -> DYNAMIC .)
    AND             reduce using rule 267 (objeto -> DYNAMIC .)
    OR              reduce using rule 267 (objeto -> DYNAMIC .)
    PDER            reduce using rule 267 (objeto -> DYNAMIC .)


state 246

    (268) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 268 (objeto -> LIST .)
    AND             reduce using rule 268 (objeto -> LIST .)
    OR              reduce using rule 268 (objeto -> LIST .)
    PDER            reduce using rule 268 (objeto -> LIST .)


state 247

    (269) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 269 (objeto -> BOOL .)
    AND             reduce using rule 269 (objeto -> BOOL .)
    OR              reduce using rule 269 (objeto -> BOOL .)
    PDER            reduce using rule 269 (objeto -> BOOL .)


state 248

    (270) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 270 (objeto -> MAP .)
    AND             reduce using rule 270 (objeto -> MAP .)
    OR              reduce using rule 270 (objeto -> MAP .)
    PDER            reduce using rule 270 (objeto -> MAP .)


state 249

    (271) objeto -> SET .

    PUNTOYCOMA      reduce using rule 271 (objeto -> SET .)
    AND             reduce using rule 271 (objeto -> SET .)
    OR              reduce using rule 271 (objeto -> SET .)
    PDER            reduce using rule 271 (objeto -> SET .)


state 250

    (225) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 225 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 225 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 225 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 225 (expresionBool -> valor ISNEGADO objeto .)


state 251

    (212) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (213) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PDER            shift and go to state 336
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 252

    (77) claveValor -> LIZQ LDER .

    DOSPUNTOS       reduce using rule 77 (claveValor -> LIZQ LDER .)
    COMA            reduce using rule 77 (claveValor -> LIZQ LDER .)
    LDER            reduce using rule 77 (claveValor -> LIZQ LDER .)


state 253

    (78) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 337


state 254

    (64) expresionMap -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 64 (expresionMap -> LIZQ expMap LDER .)


state 255

    (65) expMap -> claveValor DOSPUNTOS . claveValor
    (66) expMap -> claveValor DOSPUNTOS . claveValor COMA expMap
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 129
    STRING          shift and go to state 130
    ENTERO          shift and go to state 131
    DOUBLE          shift and go to state 132
    BOOL            shift and go to state 133
    CIZQ            shift and go to state 134
    SETFROM         shift and go to state 136
    LIZQ            shift and go to state 125
    NEWLIST         shift and go to state 54

    claveValor                     shift and go to state 338
    expresionNewList               shift and go to state 135

state 256

    (72) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 339


state 257

    (73) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 340


state 258

    (140) expListDynamic -> STRING .
    (144) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 140 (expListDynamic -> STRING .)
    COMA            shift and go to state 341


state 259

    (141) expListDynamic -> ENTERO .
    (145) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 141 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 342


state 260

    (142) expListDynamic -> DOUBLE .
    (146) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 142 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 343


state 261

    (143) expListDynamic -> BOOL .
    (147) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 143 (expListDynamic -> BOOL .)
    COMA            shift and go to state 344


state 262

    (148) expListDynamic -> VARIABLE .
    (149) expListDynamic -> VARIABLE . COMA expListDynamic
    (154) expListSet -> VARIABLE .
    (155) expListSet -> VARIABLE . COMA expListSet

  ! reduce/reduce conflict for CDER resolved using rule 148 (expListDynamic -> VARIABLE .)
    CDER            reduce using rule 148 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 345

  ! CDER            [ reduce using rule 154 (expListSet -> VARIABLE .) ]


state 263

    (75) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (76) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 346


state 264

    (214) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 347


state 265

    (176) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (177) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PDER            shift and go to state 348
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 266

    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (77) claveValor -> LIZQ . LDER
    (78) claveValor -> LIZQ . expMap LDER
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 349
    VARIABLE        shift and go to state 129
    STRING          shift and go to state 130
    ENTERO          shift and go to state 131
    DOUBLE          shift and go to state 132
    BOOL            shift and go to state 133
    CIZQ            shift and go to state 134
    SETFROM         shift and go to state 136
    LIZQ            shift and go to state 125
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 350
    claveValor                     shift and go to state 128
    expresionNewList               shift and go to state 135

state 267

    (179) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 351


state 268

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (218) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (219) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (202) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (203) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (238) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (119) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (120) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (84) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (67) claveValor -> VARIABLE .
    (170) asignacionSimple -> VARIABLE . IGUAL expresion
    (241) valorInt -> VARIABLE .
    (230) valorString -> VARIABLE .
    (216) valorBool -> VARIABLE .
    (183) valor -> VARIABLE .
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 230 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 230 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 216 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 86
    DRESTA          shift and go to state 87
    FUNCIONSUBSTRING shift and go to state 89
    CIZQ            shift and go to state 90
    FUNCIONTAKE     shift and go to state 91
    FUNCIONRANGE    shift and go to state 92
    DOSPUNTOS       reduce using rule 67 (claveValor -> VARIABLE .)
    IGUAL           shift and go to state 93
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 230 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 216 (valorBool -> VARIABLE .)
    AND             reduce using rule 216 (valorBool -> VARIABLE .)
    OR              reduce using rule 216 (valorBool -> VARIABLE .)
    IS              reduce using rule 183 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 183 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

  ! SUMA            [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 230 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 230 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 88

state 269

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final
    (74) claveValor -> expresionNewList .

    PUNTOYCOMA      shift and go to state 101
    DOSPUNTOS       reduce using rule 74 (claveValor -> expresionNewList .)


state 270

    (69) claveValor -> ENTERO .
    (240) valorInt -> ENTERO .
    (182) valor -> ENTERO .

    DOSPUNTOS       reduce using rule 69 (claveValor -> ENTERO .)
    SUMA            reduce using rule 240 (valorInt -> ENTERO .)
    RESTA           reduce using rule 240 (valorInt -> ENTERO .)
    MULTI           reduce using rule 240 (valorInt -> ENTERO .)
    DIV             reduce using rule 240 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 240 (valorInt -> ENTERO .)
    MOD             reduce using rule 240 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 240 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 240 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 240 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 240 (valorInt -> ENTERO .)
    MENOR           reduce using rule 240 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 240 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 240 (valorInt -> ENTERO .)
    IS              reduce using rule 182 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 182 (valor -> ENTERO .)


state 271

    (91) expresionLista -> CIZQ . expListString CDER
    (95) expresionLista -> CIZQ . expListInt CDER
    (99) expresionLista -> CIZQ . expListNum CDER
    (106) expresionLista -> CIZQ . expListBool CDER
    (110) expresionLista -> CIZQ . expListDynamic CDER
    (114) expresionLista -> CIZQ . expListSet CDER
    (118) expresionLista -> CIZQ . expListMap CDER
    (87) expresionNewList -> CIZQ . CDER
    (72) claveValor -> CIZQ . expListDynamic CDER
    (73) claveValor -> CIZQ . expListSet CDER
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet
    (156) expListMap -> . LIZQ LDER
    (157) expListMap -> . LIZQ expMap LDER
    (158) expListMap -> . LIZQ LDER COMA expListMap
    (159) expListMap -> . LIZQ expMap LDER COMA expListMap
    (160) expListMap -> . VARIABLE
    (161) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 148
    STRING          shift and go to state 155
    VARIABLE        shift and go to state 156
    ENTERO          shift and go to state 157
    DOUBLE          shift and go to state 158
    BOOL            shift and go to state 159
    SETFROM         shift and go to state 160
    LIZQ            shift and go to state 161

    expListString                  shift and go to state 147
    expListInt                     shift and go to state 149
    expListNum                     shift and go to state 150
    expListBool                    shift and go to state 151
    expListDynamic                 shift and go to state 352
    expListSet                     shift and go to state 353
    expListMap                     shift and go to state 154

state 272

    (80) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (82) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (76) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 354


state 273

    (68) claveValor -> STRING .
    (229) valorString -> STRING .
    (234) valorString -> STRING . CIZQ ENTERO CDER
    (185) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    DOSPUNTOS       reduce using rule 68 (claveValor -> STRING .)
    SUMA            reduce using rule 229 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 229 (valorString -> STRING .)
    CIZQ            shift and go to state 166
    IS              reduce using rule 185 (valor -> STRING .)
    ISNEGADO        reduce using rule 185 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 229 (valorString -> STRING .) ]


state 274

    (70) claveValor -> DOUBLE .
    (244) valorDouble -> DOUBLE .
    (184) valor -> DOUBLE .

    DOSPUNTOS       reduce using rule 70 (claveValor -> DOUBLE .)
    SUMA            reduce using rule 244 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 244 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 244 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 244 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 244 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 244 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 244 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 244 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 244 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 244 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 244 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 244 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 244 (valorDouble -> DOUBLE .)
    IS              reduce using rule 184 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 184 (valor -> DOUBLE .)


state 275

    (71) claveValor -> BOOL .
    (215) valorBool -> BOOL .

    DOSPUNTOS       reduce using rule 71 (claveValor -> BOOL .)
    PUNTOYCOMA      reduce using rule 215 (valorBool -> BOOL .)
    AND             reduce using rule 215 (valorBool -> BOOL .)
    OR              reduce using rule 215 (valorBool -> BOOL .)


state 276

    (171) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 355


state 277

    (172) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 356


state 278

    (170) asignacionSimple -> VARIABLE . IGUAL expresion
    (183) valor -> VARIABLE .
    (218) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (219) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (230) valorString -> VARIABLE .
    (241) valorInt -> VARIABLE .
    (216) valorBool -> VARIABLE .
    (238) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 93
    IS              reduce using rule 183 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 183 (valor -> VARIABLE .)
    SUMA            reduce using rule 183 (valor -> VARIABLE .)
    RESTA           reduce using rule 183 (valor -> VARIABLE .)
    MULTI           reduce using rule 183 (valor -> VARIABLE .)
    DIV             reduce using rule 183 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 183 (valor -> VARIABLE .)
    MOD             reduce using rule 183 (valor -> VARIABLE .)
    PDER            reduce using rule 183 (valor -> VARIABLE .)
    CIZQ            reduce using rule 230 (valorString -> VARIABLE .)
    AND             reduce using rule 216 (valorBool -> VARIABLE .)
    OR              reduce using rule 216 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 89
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

  ! SUMA            [ reduce using rule 230 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 230 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 216 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 320

state 279

    (174) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 357


state 280

    (175) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 358


state 281

    (226) negacionBool -> NOT PIZQ expresionBool . PDER
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PDER            shift and go to state 359
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 282

    (180) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PDER            shift and go to state 360
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 283

    (208) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 361


state 284

    (199) asignacionFor -> VARIABLE . IGUAL expresionInt
    (200) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 362


state 285

    (192) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 363


state 286

    (193) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 364


state 287

    (194) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 365


state 288

    (195) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (196) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 366


state 289

    (197) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (198) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 367


state 290

    (88) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (89) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 368


state 291

    (92) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (93) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 369


state 292

    (96) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (97) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 370


state 293

    (100) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (101) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 371


state 294

    (103) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (104) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 372


state 295

    (107) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (108) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 373


state 296

    (111) expresionLista -> LIST MENOR SET . MAYOR VARIABLE
    (112) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 374


state 297

    (115) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE
    (116) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 375


state 298

    (91) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 91 (expresionLista -> CIZQ expListString CDER .)


state 299

    (95) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 95 (expresionLista -> CIZQ expListInt CDER .)


state 300

    (99) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 99 (expresionLista -> CIZQ expListNum CDER .)


state 301

    (106) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 106 (expresionLista -> CIZQ expListBool CDER .)


state 302

    (110) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 110 (expresionLista -> CIZQ expListDynamic CDER .)


state 303

    (114) expresionLista -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 114 (expresionLista -> CIZQ expListSet CDER .)


state 304

    (118) expresionLista -> CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 118 (expresionLista -> CIZQ expListMap CDER .)


state 305

    (123) expListString -> STRING COMA . expListString
    (144) expListDynamic -> STRING COMA . expListDynamic
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 155
    VARIABLE        shift and go to state 378
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261

    expListString                  shift and go to state 376
    expListDynamic                 shift and go to state 377

state 306

    (125) expListString -> VARIABLE COMA . expListString
    (129) expListInt -> VARIABLE COMA . expListInt
    (135) expListNum -> VARIABLE COMA . expListNum
    (139) expListBool -> VARIABLE COMA . expListBool
    (149) expListDynamic -> VARIABLE COMA . expListDynamic
    (155) expListSet -> VARIABLE COMA . expListSet
    (161) expListMap -> VARIABLE COMA . expListMap
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet
    (156) expListMap -> . LIZQ LDER
    (157) expListMap -> . LIZQ expMap LDER
    (158) expListMap -> . LIZQ LDER COMA expListMap
    (159) expListMap -> . LIZQ expMap LDER COMA expListMap
    (160) expListMap -> . VARIABLE
    (161) expListMap -> . VARIABLE COMA expListMap

    STRING          shift and go to state 155
    VARIABLE        shift and go to state 156
    ENTERO          shift and go to state 157
    DOUBLE          shift and go to state 158
    BOOL            shift and go to state 159
    SETFROM         shift and go to state 160
    LIZQ            shift and go to state 161

    expListString                  shift and go to state 379
    expListInt                     shift and go to state 380
    expListNum                     shift and go to state 381
    expListBool                    shift and go to state 382
    expListDynamic                 shift and go to state 383
    expListSet                     shift and go to state 384
    expListMap                     shift and go to state 385

state 307

    (127) expListInt -> ENTERO COMA . expListInt
    (132) expListNum -> ENTERO COMA . expListNum
    (145) expListDynamic -> ENTERO COMA . expListDynamic
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 157
    VARIABLE        shift and go to state 389
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 258
    BOOL            shift and go to state 261

    expListInt                     shift and go to state 386
    expListNum                     shift and go to state 387
    expListDynamic                 shift and go to state 388

state 308

    (133) expListNum -> DOUBLE COMA . expListNum
    (146) expListDynamic -> DOUBLE COMA . expListDynamic
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 392
    DOUBLE          shift and go to state 158
    VARIABLE        shift and go to state 393
    STRING          shift and go to state 258
    BOOL            shift and go to state 261

    expListNum                     shift and go to state 390
    expListDynamic                 shift and go to state 391

state 309

    (137) expListBool -> BOOL COMA . expListBool
    (147) expListDynamic -> BOOL COMA . expListDynamic
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 159
    VARIABLE        shift and go to state 396
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260

    expListBool                    shift and go to state 394
    expListDynamic                 shift and go to state 395

state 310

    (150) expListSet -> SETFROM PIZQ . CIZQ CDER PDER
    (151) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (152) expListSet -> SETFROM PIZQ . CIZQ CDER PDER COMA expListSet
    (153) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER COMA expListSet

    CIZQ            shift and go to state 397


state 311

    (156) expListMap -> LIZQ LDER .
    (158) expListMap -> LIZQ LDER . COMA expListMap

    CDER            reduce using rule 156 (expListMap -> LIZQ LDER .)
    COMA            shift and go to state 398


state 312

    (157) expListMap -> LIZQ expMap . LDER
    (159) expListMap -> LIZQ expMap . LDER COMA expListMap

    LDER            shift and go to state 399


state 313

    (81) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 400


state 314

    (61) expresionMap -> MAP VARIABLE IGUAL . LIZQ LDER
    (63) expresionMap -> MAP VARIABLE IGUAL . LIZQ expMap LDER

    LIZQ            shift and go to state 401


state 315

    (85) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 85 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOSPUNTOS       reduce using rule 85 (expresionNewList -> NEWLIST PIZQ PDER .)
    COMA            reduce using rule 85 (expresionNewList -> NEWLIST PIZQ PDER .)
    LDER            reduce using rule 85 (expresionNewList -> NEWLIST PIZQ PDER .)


state 316

    (86) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 402


state 317

    (80) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (82) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 403
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 404

state 318

    (234) valorString -> STRING CIZQ ENTERO . CDER

    CDER            shift and go to state 406


state 319

    (217) expresionBool -> valorDouble comparadorMat . expresionDouble
    (220) expresionBool -> valorDouble comparadorMat . VARIABLE
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 408
    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200

    valorDouble                    shift and go to state 198
    expresionDouble                shift and go to state 407
    valorInt                       shift and go to state 178

state 320

    (218) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (219) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 409
    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200

    expresionDouble                shift and go to state 410
    valorDouble                    shift and go to state 198
    valorInt                       shift and go to state 178

state 321

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    MAP             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 322

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    MAP             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 323

    (238) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 411
    COMA            shift and go to state 412


state 324

    (119) expresionLista -> VARIABLE CIZQ ENTERO CDER .

    PUNTOYCOMA      reduce using rule 119 (expresionLista -> VARIABLE CIZQ ENTERO CDER .)


state 325

    (120) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER
    (84) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER

    PDER            shift and go to state 413


state 326

    (121) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO . COMA ENTERO PDER

    COMA            shift and go to state 414


state 327

    (186) expresion -> valor operadorMat . expresion
    (186) expresion -> . valor operadorMat expresion
    (187) expresion -> . valor
    (188) expresion -> . expresionString
    (189) expresion -> . expresionInt
    (190) expresion -> . expresionDouble
    (191) expresion -> . expresionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 179
    VARIABLE        shift and go to state 205
    DOUBLE          shift and go to state 212
    STRING          shift and go to state 213
    FUNCIONSTDIN    shift and go to state 216
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    valor                          shift and go to state 207
    expresion                      shift and go to state 415
    expresionString                shift and go to state 208
    expresionInt                   shift and go to state 209
    expresionDouble                shift and go to state 210
    expresionBool                  shift and go to state 211
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 214
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 217

state 328

    (162) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 162 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 329

    (163) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 163 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 330

    (164) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 164 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 331

    (165) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 165 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 332

    (166) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 166 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 333

    (167) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 167 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 334

    (168) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 168 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 335

    (237) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 237 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 237 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 237 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 237 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 336

    (212) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (213) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LIZQ            shift and go to state 416
    VARIABLE        shift and go to state 20
    $end            reduce using rule 59 (final -> .)
    PUNTOYCOMA      reduce using rule 59 (final -> .)
    LDER            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 417
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 337

    (78) claveValor -> LIZQ expMap LDER .

    DOSPUNTOS       reduce using rule 78 (claveValor -> LIZQ expMap LDER .)
    COMA            reduce using rule 78 (claveValor -> LIZQ expMap LDER .)
    LDER            reduce using rule 78 (claveValor -> LIZQ expMap LDER .)


state 338

    (65) expMap -> claveValor DOSPUNTOS claveValor .
    (66) expMap -> claveValor DOSPUNTOS claveValor . COMA expMap

    LDER            reduce using rule 65 (expMap -> claveValor DOSPUNTOS claveValor .)
    COMA            shift and go to state 418


state 339

    (72) claveValor -> CIZQ expListDynamic CDER .

    DOSPUNTOS       reduce using rule 72 (claveValor -> CIZQ expListDynamic CDER .)
    COMA            reduce using rule 72 (claveValor -> CIZQ expListDynamic CDER .)
    LDER            reduce using rule 72 (claveValor -> CIZQ expListDynamic CDER .)


state 340

    (73) claveValor -> CIZQ expListSet CDER .

    DOSPUNTOS       reduce using rule 73 (claveValor -> CIZQ expListSet CDER .)
    COMA            reduce using rule 73 (claveValor -> CIZQ expListSet CDER .)
    LDER            reduce using rule 73 (claveValor -> CIZQ expListSet CDER .)


state 341

    (144) expListDynamic -> STRING COMA . expListDynamic
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 377

state 342

    (145) expListDynamic -> ENTERO COMA . expListDynamic
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 388

state 343

    (146) expListDynamic -> DOUBLE COMA . expListDynamic
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 391

state 344

    (147) expListDynamic -> BOOL COMA . expListDynamic
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 395

state 345

    (149) expListDynamic -> VARIABLE COMA . expListDynamic
    (155) expListSet -> VARIABLE COMA . expListSet
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet

    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 262
    SETFROM         shift and go to state 160

    expListDynamic                 shift and go to state 383
    expListSet                     shift and go to state 384

state 346

    (75) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (76) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 419
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 420

state 347

    (214) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 421


state 348

    (176) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (177) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LIZQ            shift and go to state 423
    VARIABLE        shift and go to state 20
    $end            reduce using rule 59 (final -> .)
    PUNTOYCOMA      reduce using rule 59 (final -> .)
    LDER            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 422
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 349

    (62) expresionMap -> LIZQ LDER .
    (77) claveValor -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 62 (expresionMap -> LIZQ LDER .)
    DOSPUNTOS       reduce using rule 77 (claveValor -> LIZQ LDER .)


state 350

    (64) expresionMap -> LIZQ expMap . LDER
    (78) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 424


state 351

    (179) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    MAP             reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIZQ            reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 179 (sentenciaElse -> ELSE LIZQ final LDER .)


state 352

    (110) expresionLista -> CIZQ expListDynamic . CDER
    (72) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 425


state 353

    (114) expresionLista -> CIZQ expListSet . CDER
    (73) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 426


state 354

    (80) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (82) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (75) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (76) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 427


state 355

    (171) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 171 (imprimir -> PRINT PIZQ expresion PDER .)


state 356

    (172) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 172 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 357

    (174) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 174 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 358

    (175) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 175 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 359

    (226) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 226 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 226 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 226 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 226 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 360

    (180) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LIZQ            shift and go to state 429
    VARIABLE        shift and go to state 20
    $end            reduce using rule 59 (final -> .)
    PUNTOYCOMA      reduce using rule 59 (final -> .)
    LDER            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 428
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 361

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING

    VARIABLE        shift and go to state 431
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 49
    STRING          shift and go to state 180

    expresionBoolFor               shift and go to state 430
    valorDouble                    shift and go to state 432
    valorBool                      shift and go to state 433
    negacionBool                   shift and go to state 434
    comparacionBool                shift and go to state 435
    valorInt                       shift and go to state 178
    expresionBool                  shift and go to state 436
    valor                          shift and go to state 37

state 362

    (199) asignacionFor -> VARIABLE IGUAL . expresionInt
    (200) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt

    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231
    DOUBLE          shift and go to state 199

    expresionInt                   shift and go to state 437
    expresionDouble                shift and go to state 438
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 198

state 363

    (192) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 439


state 364

    (193) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 440


state 365

    (194) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 441


state 366

    (195) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (196) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 442


state 367

    (197) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (198) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 443


state 368

    (88) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (89) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 444


state 369

    (92) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (93) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 445


state 370

    (96) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (97) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 446


state 371

    (100) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (101) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 447


state 372

    (103) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (104) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 448


state 373

    (107) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 449


state 374

    (111) expresionLista -> LIST MENOR SET MAYOR . VARIABLE
    (112) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 450


state 375

    (115) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE
    (116) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 451


state 376

    (123) expListString -> STRING COMA expListString .

    CDER            reduce using rule 123 (expListString -> STRING COMA expListString .)


state 377

    (144) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 144 (expListDynamic -> STRING COMA expListDynamic .)


state 378

    (124) expListString -> VARIABLE .
    (125) expListString -> VARIABLE . COMA expListString
    (148) expListDynamic -> VARIABLE .
    (149) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 124 (expListString -> VARIABLE .)
    CDER            reduce using rule 124 (expListString -> VARIABLE .)
    COMA            shift and go to state 452

  ! CDER            [ reduce using rule 148 (expListDynamic -> VARIABLE .) ]


state 379

    (125) expListString -> VARIABLE COMA expListString .

    CDER            reduce using rule 125 (expListString -> VARIABLE COMA expListString .)


state 380

    (129) expListInt -> VARIABLE COMA expListInt .

    CDER            reduce using rule 129 (expListInt -> VARIABLE COMA expListInt .)


state 381

    (135) expListNum -> VARIABLE COMA expListNum .

    CDER            reduce using rule 135 (expListNum -> VARIABLE COMA expListNum .)


state 382

    (139) expListBool -> VARIABLE COMA expListBool .

    CDER            reduce using rule 139 (expListBool -> VARIABLE COMA expListBool .)


state 383

    (149) expListDynamic -> VARIABLE COMA expListDynamic .

    CDER            reduce using rule 149 (expListDynamic -> VARIABLE COMA expListDynamic .)


state 384

    (155) expListSet -> VARIABLE COMA expListSet .

    CDER            reduce using rule 155 (expListSet -> VARIABLE COMA expListSet .)


state 385

    (161) expListMap -> VARIABLE COMA expListMap .

    CDER            reduce using rule 161 (expListMap -> VARIABLE COMA expListMap .)


state 386

    (127) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 127 (expListInt -> ENTERO COMA expListInt .)


state 387

    (132) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 132 (expListNum -> ENTERO COMA expListNum .)


state 388

    (145) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 145 (expListDynamic -> ENTERO COMA expListDynamic .)


state 389

    (128) expListInt -> VARIABLE .
    (129) expListInt -> VARIABLE . COMA expListInt
    (134) expListNum -> VARIABLE .
    (135) expListNum -> VARIABLE . COMA expListNum
    (148) expListDynamic -> VARIABLE .
    (149) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 128 (expListInt -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 128 (expListInt -> VARIABLE .)
    CDER            reduce using rule 128 (expListInt -> VARIABLE .)
    COMA            shift and go to state 453

  ! CDER            [ reduce using rule 134 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 148 (expListDynamic -> VARIABLE .) ]


state 390

    (133) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 133 (expListNum -> DOUBLE COMA expListNum .)


state 391

    (146) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 146 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 392

    (130) expListNum -> ENTERO .
    (132) expListNum -> ENTERO . COMA expListNum
    (141) expListDynamic -> ENTERO .
    (145) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 130 (expListNum -> ENTERO .)
    CDER            reduce using rule 130 (expListNum -> ENTERO .)
    COMA            shift and go to state 454

  ! CDER            [ reduce using rule 141 (expListDynamic -> ENTERO .) ]


state 393

    (134) expListNum -> VARIABLE .
    (135) expListNum -> VARIABLE . COMA expListNum
    (148) expListDynamic -> VARIABLE .
    (149) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 134 (expListNum -> VARIABLE .)
    CDER            reduce using rule 134 (expListNum -> VARIABLE .)
    COMA            shift and go to state 455

  ! CDER            [ reduce using rule 148 (expListDynamic -> VARIABLE .) ]


state 394

    (137) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 137 (expListBool -> BOOL COMA expListBool .)


state 395

    (147) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 147 (expListDynamic -> BOOL COMA expListDynamic .)


state 396

    (138) expListBool -> VARIABLE .
    (139) expListBool -> VARIABLE . COMA expListBool
    (148) expListDynamic -> VARIABLE .
    (149) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 138 (expListBool -> VARIABLE .)
    CDER            reduce using rule 138 (expListBool -> VARIABLE .)
    COMA            shift and go to state 456

  ! CDER            [ reduce using rule 148 (expListDynamic -> VARIABLE .) ]


state 397

    (150) expListSet -> SETFROM PIZQ CIZQ . CDER PDER
    (151) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (152) expListSet -> SETFROM PIZQ CIZQ . CDER PDER COMA expListSet
    (153) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER COMA expListSet
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 457
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 458

state 398

    (158) expListMap -> LIZQ LDER COMA . expListMap
    (156) expListMap -> . LIZQ LDER
    (157) expListMap -> . LIZQ expMap LDER
    (158) expListMap -> . LIZQ LDER COMA expListMap
    (159) expListMap -> . LIZQ expMap LDER COMA expListMap
    (160) expListMap -> . VARIABLE
    (161) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 161
    VARIABLE        shift and go to state 460

    expListMap                     shift and go to state 459

state 399

    (157) expListMap -> LIZQ expMap LDER .
    (159) expListMap -> LIZQ expMap LDER . COMA expListMap

    CDER            reduce using rule 157 (expListMap -> LIZQ expMap LDER .)
    COMA            shift and go to state 461


state 400

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (83) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 462


state 401

    (61) expresionMap -> MAP VARIABLE IGUAL LIZQ . LDER
    (63) expresionMap -> MAP VARIABLE IGUAL LIZQ . expMap LDER
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 463
    VARIABLE        shift and go to state 129
    STRING          shift and go to state 130
    ENTERO          shift and go to state 131
    DOUBLE          shift and go to state 132
    BOOL            shift and go to state 133
    CIZQ            shift and go to state 134
    SETFROM         shift and go to state 136
    LIZQ            shift and go to state 125
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 464
    claveValor                     shift and go to state 128
    expresionNewList               shift and go to state 135

state 402

    (86) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 86 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOSPUNTOS       reduce using rule 86 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    COMA            reduce using rule 86 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LDER            reduce using rule 86 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 403

    (80) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 465


state 404

    (82) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 466


state 405

    (148) expListDynamic -> VARIABLE .
    (149) expListDynamic -> VARIABLE . COMA expListDynamic

    CDER            reduce using rule 148 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 467


state 406

    (234) valorString -> STRING CIZQ ENTERO CDER .

    SUMA            reduce using rule 234 (valorString -> STRING CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 234 (valorString -> STRING CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 234 (valorString -> STRING CIZQ ENTERO CDER .)
    PDER            reduce using rule 234 (valorString -> STRING CIZQ ENTERO CDER .)


state 407

    (217) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 408

    (220) expresionBool -> valorDouble comparadorMat VARIABLE .
    (241) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 241 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 241 (valorInt -> VARIABLE .) ]


state 409

    (219) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (241) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 241 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 241 (valorInt -> VARIABLE .) ]


state 410

    (218) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 411

    (238) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 238 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 238 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 238 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 238 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 412

    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 468


state 413

    (120) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .
    (84) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 84 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)
    PUNTOYCOMA      reduce using rule 84 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)

  ! PUNTOYCOMA      [ reduce using rule 120 (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .) ]


state 414

    (121) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 469


state 415

    (186) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 186 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 186 (expresion -> valor operadorMat expresion .)


state 416

    (212) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 126
    VARIABLE        shift and go to state 268
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 271
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 272
    MAP             shift and go to state 53
    LIZQ            shift and go to state 266
    STRING          shift and go to state 273
    ENTERO          shift and go to state 270
    DOUBLE          shift and go to state 274
    BOOL            shift and go to state 275

  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 470
    expMap                         shift and go to state 127
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 269
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 128
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 417

    (213) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    MAP             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 418

    (66) expMap -> claveValor DOSPUNTOS claveValor COMA . expMap
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 129
    STRING          shift and go to state 130
    ENTERO          shift and go to state 131
    DOUBLE          shift and go to state 132
    BOOL            shift and go to state 133
    CIZQ            shift and go to state 134
    SETFROM         shift and go to state 136
    LIZQ            shift and go to state 125
    NEWLIST         shift and go to state 54

    claveValor                     shift and go to state 128
    expMap                         shift and go to state 471
    expresionNewList               shift and go to state 135

state 419

    (75) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 472


state 420

    (76) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 473


state 421

    (214) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 474


state 422

    (176) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 176 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 423

    (177) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 126
    VARIABLE        shift and go to state 268
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 271
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 272
    MAP             shift and go to state 53
    LIZQ            shift and go to state 266
    STRING          shift and go to state 273
    ENTERO          shift and go to state 270
    DOUBLE          shift and go to state 274
    BOOL            shift and go to state 275

  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 475
    expMap                         shift and go to state 127
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 269
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 128
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 424

    (64) expresionMap -> LIZQ expMap LDER .
    (78) claveValor -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 64 (expresionMap -> LIZQ expMap LDER .)
    DOSPUNTOS       reduce using rule 78 (claveValor -> LIZQ expMap LDER .)


state 425

    (110) expresionLista -> CIZQ expListDynamic CDER .
    (72) claveValor -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 110 (expresionLista -> CIZQ expListDynamic CDER .)
    DOSPUNTOS       reduce using rule 72 (claveValor -> CIZQ expListDynamic CDER .)


state 426

    (114) expresionLista -> CIZQ expListSet CDER .
    (73) claveValor -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 114 (expresionLista -> CIZQ expListSet CDER .)
    DOSPUNTOS       reduce using rule 73 (claveValor -> CIZQ expListSet CDER .)


state 427

    (80) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (82) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (75) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (76) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 476
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 477

state 428

    (180) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 180 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 429

    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 126
    VARIABLE        shift and go to state 268
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 271
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 272
    MAP             shift and go to state 53
    LIZQ            shift and go to state 266
    STRING          shift and go to state 273
    ENTERO          shift and go to state 270
    DOUBLE          shift and go to state 274
    BOOL            shift and go to state 275

  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 478
    expMap                         shift and go to state 127
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 269
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 128
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 430

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 479


state 431

    (202) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (203) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (216) valorBool -> VARIABLE .
    (241) valorInt -> VARIABLE .
    (218) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (219) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (183) valor -> VARIABLE .
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 216 (valorBool -> VARIABLE .)
    AND             reduce using rule 216 (valorBool -> VARIABLE .)
    OR              reduce using rule 216 (valorBool -> VARIABLE .)
    IS              reduce using rule 183 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 183 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

  ! DIGUAL          [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 241 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 480

state 432

    (201) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (204) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (217) expresionBool -> valorDouble . comparadorMat expresionDouble
    (220) expresionBool -> valorDouble . comparadorMat VARIABLE
    (254) comparadorMat -> . DIGUAL
    (255) comparadorMat -> . NOIGUAL
    (256) comparadorMat -> . MAYOR
    (257) comparadorMat -> . MENOR
    (258) comparadorMat -> . MAYIGUAL
    (259) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 94
    NOIGUAL         shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYIGUAL        shift and go to state 98
    MENIGUAL        shift and go to state 99

    comparadorMat                  shift and go to state 481

state 433

    (205) expresionBoolFor -> valorBool .
    (221) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 205 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 221 (expresionBool -> valorBool .)
    OR              reduce using rule 221 (expresionBool -> valorBool .)


state 434

    (206) expresionBoolFor -> negacionBool .
    (222) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 206 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 222 (expresionBool -> negacionBool .)
    OR              reduce using rule 222 (expresionBool -> negacionBool .)


state 435

    (207) expresionBoolFor -> comparacionBool .
    (223) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 207 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 223 (expresionBool -> comparacionBool .)
    OR              reduce using rule 223 (expresionBool -> comparacionBool .)


state 436

    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 437

    (199) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 199 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 438

    (200) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 200 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 439

    (192) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    expresionInt                   shift and go to state 482
    valorInt                       shift and go to state 229

state 440

    (193) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    expresionDouble                shift and go to state 483
    valorDouble                    shift and go to state 198
    valorInt                       shift and go to state 178

state 441

    (194) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231

    expresionDouble                shift and go to state 484
    valorDouble                    shift and go to state 198
    valorInt                       shift and go to state 178

state 442

    (195) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (196) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt

    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231
    DOUBLE          shift and go to state 199

    expresionInt                   shift and go to state 485
    expresionDouble                shift and go to state 486
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 198

state 443

    (197) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (198) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt

    ENTERO          shift and go to state 200
    VARIABLE        shift and go to state 231
    DOUBLE          shift and go to state 199

    expresionInt                   shift and go to state 487
    expresionDouble                shift and go to state 488
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 198

state 444

    (88) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (89) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 88 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 489


state 445

    (92) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (93) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 92 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 490


state 446

    (96) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (97) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 96 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 491


state 447

    (100) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (101) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 100 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 492


state 448

    (103) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (104) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 103 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 493


state 449

    (107) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 107 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 494


state 450

    (111) expresionLista -> LIST MENOR SET MAYOR VARIABLE .
    (112) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL CIZQ expListSet CDER
    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> LIST MENOR SET MAYOR VARIABLE .)
    IGUAL           shift and go to state 495


state 451

    (115) expresionLista -> LIST MENOR MAP MAYOR VARIABLE .
    (116) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL CIZQ expListMap CDER
    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 115 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE .)
    IGUAL           shift and go to state 496


state 452

    (125) expListString -> VARIABLE COMA . expListString
    (149) expListDynamic -> VARIABLE COMA . expListDynamic
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 155
    VARIABLE        shift and go to state 378
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261

    expListString                  shift and go to state 379
    expListDynamic                 shift and go to state 383

state 453

    (129) expListInt -> VARIABLE COMA . expListInt
    (135) expListNum -> VARIABLE COMA . expListNum
    (149) expListDynamic -> VARIABLE COMA . expListDynamic
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 157
    VARIABLE        shift and go to state 389
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 258
    BOOL            shift and go to state 261

    expListInt                     shift and go to state 380
    expListNum                     shift and go to state 381
    expListDynamic                 shift and go to state 383

state 454

    (132) expListNum -> ENTERO COMA . expListNum
    (145) expListDynamic -> ENTERO COMA . expListDynamic
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 392
    DOUBLE          shift and go to state 158
    VARIABLE        shift and go to state 393
    STRING          shift and go to state 258
    BOOL            shift and go to state 261

    expListNum                     shift and go to state 387
    expListDynamic                 shift and go to state 388

state 455

    (135) expListNum -> VARIABLE COMA . expListNum
    (149) expListDynamic -> VARIABLE COMA . expListDynamic
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 392
    DOUBLE          shift and go to state 158
    VARIABLE        shift and go to state 393
    STRING          shift and go to state 258
    BOOL            shift and go to state 261

    expListNum                     shift and go to state 381
    expListDynamic                 shift and go to state 383

state 456

    (139) expListBool -> VARIABLE COMA . expListBool
    (149) expListDynamic -> VARIABLE COMA . expListDynamic
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 159
    VARIABLE        shift and go to state 396
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260

    expListBool                    shift and go to state 382
    expListDynamic                 shift and go to state 383

state 457

    (150) expListSet -> SETFROM PIZQ CIZQ CDER . PDER
    (152) expListSet -> SETFROM PIZQ CIZQ CDER . PDER COMA expListSet

    PDER            shift and go to state 497


state 458

    (151) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (153) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER COMA expListSet

    CDER            shift and go to state 498


state 459

    (158) expListMap -> LIZQ LDER COMA expListMap .

    CDER            reduce using rule 158 (expListMap -> LIZQ LDER COMA expListMap .)


state 460

    (160) expListMap -> VARIABLE .
    (161) expListMap -> VARIABLE . COMA expListMap

    CDER            reduce using rule 160 (expListMap -> VARIABLE .)
    COMA            shift and go to state 499


state 461

    (159) expListMap -> LIZQ expMap LDER COMA . expListMap
    (156) expListMap -> . LIZQ LDER
    (157) expListMap -> . LIZQ expMap LDER
    (158) expListMap -> . LIZQ LDER COMA expListMap
    (159) expListMap -> . LIZQ expMap LDER COMA expListMap
    (160) expListMap -> . VARIABLE
    (161) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 161
    VARIABLE        shift and go to state 460

    expListMap                     shift and go to state 500

state 462

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (83) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 501


state 463

    (61) expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .

    PUNTOYCOMA      reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)


state 464

    (63) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap . LDER

    LDER            shift and go to state 502


state 465

    (80) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 80 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 466

    (82) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 503


state 467

    (149) expListDynamic -> VARIABLE COMA . expListDynamic
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 383

state 468

    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 504


state 469

    (121) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 505


state 470

    (212) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 506


state 471

    (66) expMap -> claveValor DOSPUNTOS claveValor COMA expMap .

    LDER            reduce using rule 66 (expMap -> claveValor DOSPUNTOS claveValor COMA expMap .)


state 472

    (75) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    DOSPUNTOS       reduce using rule 75 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            reduce using rule 75 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    LDER            reduce using rule 75 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 473

    (76) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 507


state 474

    (214) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 175
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 179
    STRING          shift and go to state 180

    expresionBool                  shift and go to state 508
    valorDouble                    shift and go to state 174
    valorBool                      shift and go to state 176
    negacionBool                   shift and go to state 177
    comparacionBool                shift and go to state 215
    valor                          shift and go to state 37
    valorInt                       shift and go to state 178

state 475

    (177) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 509


state 476

    (80) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER
    (75) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 510


state 477

    (82) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (76) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 511


state 478

    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 512


state 479

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 513


state 480

    (202) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (203) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (218) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (219) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 514
    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200

    expresionDouble                shift and go to state 515
    valorDouble                    shift and go to state 198
    valorInt                       shift and go to state 178

state 481

    (201) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (204) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (217) expresionBool -> valorDouble comparadorMat . expresionDouble
    (220) expresionBool -> valorDouble comparadorMat . VARIABLE
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 517
    DOUBLE          shift and go to state 199
    ENTERO          shift and go to state 200

    valorDouble                    shift and go to state 198
    expresionDouble                shift and go to state 516
    valorInt                       shift and go to state 178

state 482

    (192) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 192 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 483

    (193) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 193 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 484

    (194) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 194 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 485

    (195) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 195 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 486

    (196) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 196 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 487

    (197) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 197 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 488

    (198) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 198 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 489

    (89) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 518
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 519

state 490

    (93) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 520
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 521

state 491

    (97) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 522
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 523

state 492

    (101) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 524
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 525

state 493

    (104) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 526
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 527

state 494

    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 528
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 529

state 495

    (112) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . CIZQ expListSet CDER
    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 530
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 531

state 496

    (116) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . CIZQ expListMap CDER
    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . expresionNewList
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 532
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 533

state 497

    (150) expListSet -> SETFROM PIZQ CIZQ CDER PDER .
    (152) expListSet -> SETFROM PIZQ CIZQ CDER PDER . COMA expListSet

    CDER            reduce using rule 150 (expListSet -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            shift and go to state 534


state 498

    (151) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (153) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER COMA expListSet

    PDER            shift and go to state 535


state 499

    (161) expListMap -> VARIABLE COMA . expListMap
    (156) expListMap -> . LIZQ LDER
    (157) expListMap -> . LIZQ expMap LDER
    (158) expListMap -> . LIZQ LDER COMA expListMap
    (159) expListMap -> . LIZQ expMap LDER COMA expListMap
    (160) expListMap -> . VARIABLE
    (161) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 161
    VARIABLE        shift and go to state 460

    expListMap                     shift and go to state 385

state 500

    (159) expListMap -> LIZQ expMap LDER COMA expListMap .

    CDER            reduce using rule 159 (expListMap -> LIZQ expMap LDER COMA expListMap .)


state 501

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (83) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 536
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 537

state 502

    (63) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 63 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)


state 503

    (82) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 82 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 504

    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 505

    (121) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 121 (expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .)


state 506

    (212) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 212 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 507

    (76) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    DOSPUNTOS       reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    LDER            reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 508

    (214) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (227) comparacionBool -> expresionBool . operadorLogico expresionBool
    (228) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (260) operadorLogico -> . AND
    (261) operadorLogico -> . OR

    PDER            shift and go to state 538
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 509

    (177) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 510

    (80) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .
    (75) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 80 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)
    DOSPUNTOS       reduce using rule 75 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 511

    (82) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (76) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 539


state 512

    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 513

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 540
    DRESTA          shift and go to state 541


state 514

    (203) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (219) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (241) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 203 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 203 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 219 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 241 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 241 (valorInt -> VARIABLE .) ]


state 515

    (202) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (218) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 202 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 218 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 516

    (201) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (217) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 201 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 217 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 517

    (204) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (220) expresionBool -> valorDouble comparadorMat VARIABLE .
    (241) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 204 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 204 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 220 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 241 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 241 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 241 (valorInt -> VARIABLE .)
    DIV             reduce using rule 241 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 241 (valorInt -> VARIABLE .)
    MOD             reduce using rule 241 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 241 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 241 (valorInt -> VARIABLE .) ]


state 518

    (89) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (87) expresionNewList -> CIZQ . CDER
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString

    CDER            shift and go to state 148
    STRING          shift and go to state 544
    VARIABLE        shift and go to state 542

    expListString                  shift and go to state 543

state 519

    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 90 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 520

    (93) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (87) expresionNewList -> CIZQ . CDER
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt

    CDER            shift and go to state 148
    ENTERO          shift and go to state 547
    VARIABLE        shift and go to state 545

    expListInt                     shift and go to state 546

state 521

    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 94 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 522

    (97) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (87) expresionNewList -> CIZQ . CDER
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 148
    ENTERO          shift and go to state 550
    DOUBLE          shift and go to state 551
    VARIABLE        shift and go to state 548

    expListNum                     shift and go to state 549

state 523

    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 98 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 524

    (101) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (87) expresionNewList -> CIZQ . CDER
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 148
    ENTERO          shift and go to state 550
    DOUBLE          shift and go to state 551
    VARIABLE        shift and go to state 548

    expListNum                     shift and go to state 552

state 525

    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 102 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 526

    (104) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (87) expresionNewList -> CIZQ . CDER
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool

    CDER            shift and go to state 148
    BOOL            shift and go to state 555
    VARIABLE        shift and go to state 553

    expListBool                    shift and go to state 554

state 527

    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 105 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 528

    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (87) expresionNewList -> CIZQ . CDER
    (140) expListDynamic -> . STRING
    (141) expListDynamic -> . ENTERO
    (142) expListDynamic -> . DOUBLE
    (143) expListDynamic -> . BOOL
    (144) expListDynamic -> . STRING COMA expListDynamic
    (145) expListDynamic -> . ENTERO COMA expListDynamic
    (146) expListDynamic -> . DOUBLE COMA expListDynamic
    (147) expListDynamic -> . BOOL COMA expListDynamic
    (148) expListDynamic -> . VARIABLE
    (149) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 148
    STRING          shift and go to state 258
    ENTERO          shift and go to state 259
    DOUBLE          shift and go to state 260
    BOOL            shift and go to state 261
    VARIABLE        shift and go to state 405

    expListDynamic                 shift and go to state 556

state 529

    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 109 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 530

    (112) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ . expListSet CDER
    (87) expresionNewList -> CIZQ . CDER
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 148
    SETFROM         shift and go to state 160
    VARIABLE        shift and go to state 557

    expListSet                     shift and go to state 558

state 531

    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 113 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .)


state 532

    (116) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ . expListMap CDER
    (87) expresionNewList -> CIZQ . CDER
    (156) expListMap -> . LIZQ LDER
    (157) expListMap -> . LIZQ expMap LDER
    (158) expListMap -> . LIZQ LDER COMA expListMap
    (159) expListMap -> . LIZQ expMap LDER COMA expListMap
    (160) expListMap -> . VARIABLE
    (161) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 148
    LIZQ            shift and go to state 161
    VARIABLE        shift and go to state 460

    expListMap                     shift and go to state 559

state 533

    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 117 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .)


state 534

    (152) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA . expListSet
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 160
    VARIABLE        shift and go to state 557

    expListSet                     shift and go to state 560

state 535

    (151) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (153) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER . COMA expListSet

    CDER            reduce using rule 151 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            shift and go to state 561


state 536

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 562


state 537

    (83) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 563


state 538

    (214) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 214 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 539

    (82) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (76) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 82 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    DOSPUNTOS       reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 540

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 564


state 541

    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 565


state 542

    (124) expListString -> VARIABLE .
    (125) expListString -> VARIABLE . COMA expListString

    CDER            reduce using rule 124 (expListString -> VARIABLE .)
    COMA            shift and go to state 566


state 543

    (89) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 567


state 544

    (122) expListString -> STRING .
    (123) expListString -> STRING . COMA expListString

    CDER            reduce using rule 122 (expListString -> STRING .)
    COMA            shift and go to state 568


state 545

    (128) expListInt -> VARIABLE .
    (129) expListInt -> VARIABLE . COMA expListInt

    CDER            reduce using rule 128 (expListInt -> VARIABLE .)
    COMA            shift and go to state 569


state 546

    (93) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 570


state 547

    (126) expListInt -> ENTERO .
    (127) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 126 (expListInt -> ENTERO .)
    COMA            shift and go to state 571


state 548

    (134) expListNum -> VARIABLE .
    (135) expListNum -> VARIABLE . COMA expListNum

    CDER            reduce using rule 134 (expListNum -> VARIABLE .)
    COMA            shift and go to state 572


state 549

    (97) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 573


state 550

    (130) expListNum -> ENTERO .
    (132) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 130 (expListNum -> ENTERO .)
    COMA            shift and go to state 574


state 551

    (131) expListNum -> DOUBLE .
    (133) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 131 (expListNum -> DOUBLE .)
    COMA            shift and go to state 575


state 552

    (101) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 576


state 553

    (138) expListBool -> VARIABLE .
    (139) expListBool -> VARIABLE . COMA expListBool

    CDER            reduce using rule 138 (expListBool -> VARIABLE .)
    COMA            shift and go to state 577


state 554

    (104) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 578


state 555

    (136) expListBool -> BOOL .
    (137) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 136 (expListBool -> BOOL .)
    COMA            shift and go to state 579


state 556

    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 580


state 557

    (154) expListSet -> VARIABLE .
    (155) expListSet -> VARIABLE . COMA expListSet

    CDER            reduce using rule 154 (expListSet -> VARIABLE .)
    COMA            shift and go to state 581


state 558

    (112) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet . CDER

    CDER            shift and go to state 582


state 559

    (116) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap . CDER

    CDER            shift and go to state 583


state 560

    (152) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .

    CDER            reduce using rule 152 (expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .)


state 561

    (153) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA . expListSet
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 160
    VARIABLE        shift and go to state 557

    expListSet                     shift and go to state 584

state 562

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 81 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 563

    (83) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 585


state 564

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LIZQ            shift and go to state 586
    VARIABLE        shift and go to state 20
    $end            reduce using rule 59 (final -> .)
    PUNTOYCOMA      reduce using rule 59 (final -> .)
    LDER            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 587
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 565

    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LIZQ            shift and go to state 588
    VARIABLE        shift and go to state 20
    $end            reduce using rule 59 (final -> .)
    PUNTOYCOMA      reduce using rule 59 (final -> .)
    LDER            reduce using rule 59 (final -> .)
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 59 (final -> .) ]
  ! INT             [ reduce using rule 59 (final -> .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> .) ]
  ! NUM             [ reduce using rule 59 (final -> .) ]
  ! STRINGR         [ reduce using rule 59 (final -> .) ]
  ! BOOLR           [ reduce using rule 59 (final -> .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> .) ]
  ! VAR             [ reduce using rule 59 (final -> .) ]
  ! WHILE           [ reduce using rule 59 (final -> .) ]
  ! DO              [ reduce using rule 59 (final -> .) ]
  ! IF              [ reduce using rule 59 (final -> .) ]
  ! ELSE            [ reduce using rule 59 (final -> .) ]
  ! PRINT           [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> .) ]
  ! NOT             [ reduce using rule 59 (final -> .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> .) ]
  ! FOR             [ reduce using rule 59 (final -> .) ]
  ! LIST            [ reduce using rule 59 (final -> .) ]
  ! CIZQ            [ reduce using rule 59 (final -> .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> .) ]
  ! SET             [ reduce using rule 59 (final -> .) ]
  ! SETFROM         [ reduce using rule 59 (final -> .) ]
  ! MAP             [ reduce using rule 59 (final -> .) ]
  ! LIZQ            [ reduce using rule 59 (final -> .) ]
  ! ENTERO          [ reduce using rule 59 (final -> .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> .) ]
  ! STRING          [ reduce using rule 59 (final -> .) ]
  ! BOOL            [ reduce using rule 59 (final -> .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 589
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 566

    (125) expListString -> VARIABLE COMA . expListString
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 544
    VARIABLE        shift and go to state 542

    expListString                  shift and go to state 379

state 567

    (89) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 89 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 568

    (123) expListString -> STRING COMA . expListString
    (122) expListString -> . STRING
    (123) expListString -> . STRING COMA expListString
    (124) expListString -> . VARIABLE
    (125) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 544
    VARIABLE        shift and go to state 542

    expListString                  shift and go to state 376

state 569

    (129) expListInt -> VARIABLE COMA . expListInt
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 547
    VARIABLE        shift and go to state 545

    expListInt                     shift and go to state 380

state 570

    (93) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 93 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 571

    (127) expListInt -> ENTERO COMA . expListInt
    (126) expListInt -> . ENTERO
    (127) expListInt -> . ENTERO COMA expListInt
    (128) expListInt -> . VARIABLE
    (129) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 547
    VARIABLE        shift and go to state 545

    expListInt                     shift and go to state 386

state 572

    (135) expListNum -> VARIABLE COMA . expListNum
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 550
    DOUBLE          shift and go to state 551
    VARIABLE        shift and go to state 548

    expListNum                     shift and go to state 381

state 573

    (97) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 97 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 574

    (132) expListNum -> ENTERO COMA . expListNum
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 550
    DOUBLE          shift and go to state 551
    VARIABLE        shift and go to state 548

    expListNum                     shift and go to state 387

state 575

    (133) expListNum -> DOUBLE COMA . expListNum
    (130) expListNum -> . ENTERO
    (131) expListNum -> . DOUBLE
    (132) expListNum -> . ENTERO COMA expListNum
    (133) expListNum -> . DOUBLE COMA expListNum
    (134) expListNum -> . VARIABLE
    (135) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 550
    DOUBLE          shift and go to state 551
    VARIABLE        shift and go to state 548

    expListNum                     shift and go to state 390

state 576

    (101) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 101 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 577

    (139) expListBool -> VARIABLE COMA . expListBool
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 555
    VARIABLE        shift and go to state 553

    expListBool                    shift and go to state 382

state 578

    (104) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 104 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 579

    (137) expListBool -> BOOL COMA . expListBool
    (136) expListBool -> . BOOL
    (137) expListBool -> . BOOL COMA expListBool
    (138) expListBool -> . VARIABLE
    (139) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 555
    VARIABLE        shift and go to state 553

    expListBool                    shift and go to state 394

state 580

    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 108 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 581

    (155) expListSet -> VARIABLE COMA . expListSet
    (150) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (151) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (153) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (154) expListSet -> . VARIABLE
    (155) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 160
    VARIABLE        shift and go to state 557

    expListSet                     shift and go to state 384

state 582

    (112) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 112 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .)


state 583

    (116) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 116 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .)


state 584

    (153) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .

    CDER            reduce using rule 153 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .)


state 585

    (83) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 83 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 586

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 126
    VARIABLE        shift and go to state 268
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 271
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 272
    MAP             shift and go to state 53
    LIZQ            shift and go to state 266
    STRING          shift and go to state 273
    ENTERO          shift and go to state 270
    DOUBLE          shift and go to state 274
    BOOL            shift and go to state 275

  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 590
    expMap                         shift and go to state 127
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 269
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 128
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 587

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    MAP             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIZQ            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 588

    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (62) expresionMap -> LIZQ . LDER
    (64) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> .
    (65) expMap -> . claveValor DOSPUNTOS claveValor
    (66) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (162) asignacion -> . INT VARIABLE IGUAL expresionInt
    (163) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (164) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (165) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (166) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (167) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (168) asignacion -> . VAR VARIABLE IGUAL expresion
    (169) asignacion -> . asignacionSimple
    (242) expresionInt -> . valorInt operadorMat expresionInt
    (243) expresionInt -> . valorInt
    (246) expresionDouble -> . valorDouble operadorMat expresionDouble
    (247) expresionDouble -> . valorDouble
    (235) expresionString -> . valorString SUMA expresionString
    (236) expresionString -> . valorString
    (217) expresionBool -> . valorDouble comparadorMat expresionDouble
    (218) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (220) expresionBool -> . valorDouble comparadorMat VARIABLE
    (221) expresionBool -> . valorBool
    (222) expresionBool -> . negacionBool
    (223) expresionBool -> . comparacionBool
    (224) expresionBool -> . valor IS objeto
    (225) expresionBool -> . valor ISNEGADO objeto
    (201) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (202) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (204) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorBool
    (206) expresionBoolFor -> . negacionBool
    (207) expresionBoolFor -> . comparacionBool
    (212) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (214) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (176) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (178) sentenciaElse -> . ELSE final
    (179) sentenciaElse -> . ELSE LIZQ final LDER
    (171) imprimir -> . PRINT PIZQ expresion PDER
    (172) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (173) funcionStdin -> . FUNCIONSTDIN
    (174) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (226) negacionBool -> . NOT PIZQ expresionBool PDER
    (227) comparacionBool -> . expresionBool operadorLogico expresionBool
    (228) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (208) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (238) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListString CDER
    (92) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (95) expresionLista -> . CIZQ expListInt CDER
    (96) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (99) expresionLista -> . CIZQ expListNum CDER
    (100) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListBool CDER
    (107) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListDynamic CDER
    (111) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . CIZQ expListSet CDER
    (115) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> . CIZQ expListMap CDER
    (119) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (120) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (121) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionNewList -> . NEWLIST PIZQ PDER
    (86) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (87) expresionNewList -> . CIZQ CDER
    (79) expresionSet -> . SET VARIABLE
    (80) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (60) expresionMap -> . MAP VARIABLE
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (62) expresionMap -> . LIZQ LDER
    (63) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (64) expresionMap -> . LIZQ expMap LDER
    (67) claveValor -> . VARIABLE
    (68) claveValor -> . STRING
    (69) claveValor -> . ENTERO
    (70) claveValor -> . DOUBLE
    (71) claveValor -> . BOOL
    (72) claveValor -> . CIZQ expListDynamic CDER
    (73) claveValor -> . CIZQ expListSet CDER
    (74) claveValor -> . expresionNewList
    (75) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (76) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (77) claveValor -> . LIZQ LDER
    (78) claveValor -> . LIZQ expMap LDER
    (170) asignacionSimple -> . VARIABLE IGUAL expresion
    (240) valorInt -> . ENTERO
    (241) valorInt -> . VARIABLE
    (244) valorDouble -> . DOUBLE
    (245) valorDouble -> . valorInt
    (229) valorString -> . STRING
    (230) valorString -> . VARIABLE
    (231) valorString -> . FUNCIONSTDIN
    (232) valorString -> . expresionIndexString
    (233) valorString -> . sentenciaSubstring
    (234) valorString -> . STRING CIZQ ENTERO CDER
    (215) valorBool -> . BOOL
    (216) valorBool -> . VARIABLE
    (182) valor -> . ENTERO
    (183) valor -> . VARIABLE
    (184) valor -> . DOUBLE
    (185) valor -> . STRING
    (237) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for LDER resolved as shift
    LDER            shift and go to state 126
    VARIABLE        shift and go to state 268
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 271
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 272
    MAP             shift and go to state 53
    LIZQ            shift and go to state 266
    STRING          shift and go to state 273
    ENTERO          shift and go to state 270
    DOUBLE          shift and go to state 274
    BOOL            shift and go to state 275

  ! LDER            [ reduce using rule 59 (final -> .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 591
    expMap                         shift and go to state 127
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 269
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 128
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 589

    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    MAP             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIZQ            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 590

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 592


state 591

    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 593


state 592

    (208) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    MAP             reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 208 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 593

    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    MAP             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for MAP in state 8 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for MAP in state 10 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for SET in state 11 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 11 resolved as shift
WARNING: shift/reduce conflict for MAP in state 11 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for SET in state 17 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 17 resolved as shift
WARNING: shift/reduce conflict for MAP in state 17 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for SET in state 18 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 18 resolved as shift
WARNING: shift/reduce conflict for MAP in state 18 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 20 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 33 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 33 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 33 resolved as shift
WARNING: shift/reduce conflict for DIV in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 33 resolved as shift
WARNING: shift/reduce conflict for MOD in state 33 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 42 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 42 resolved as shift
WARNING: shift/reduce conflict for INT in state 42 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 42 resolved as shift
WARNING: shift/reduce conflict for NUM in state 42 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 42 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 42 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 42 resolved as shift
WARNING: shift/reduce conflict for VAR in state 42 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 42 resolved as shift
WARNING: shift/reduce conflict for DO in state 42 resolved as shift
WARNING: shift/reduce conflict for IF in state 42 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 42 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 42 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 42 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 42 resolved as shift
WARNING: shift/reduce conflict for NOT in state 42 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 42 resolved as shift
WARNING: shift/reduce conflict for FOR in state 42 resolved as shift
WARNING: shift/reduce conflict for LIST in state 42 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 42 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 42 resolved as shift
WARNING: shift/reduce conflict for SET in state 42 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 42 resolved as shift
WARNING: shift/reduce conflict for MAP in state 42 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 42 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 42 resolved as shift
WARNING: shift/reduce conflict for STRING in state 42 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 42 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 60 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 60 resolved as shift
WARNING: shift/reduce conflict for INT in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 60 resolved as shift
WARNING: shift/reduce conflict for NUM in state 60 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 60 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for DO in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 60 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 60 resolved as shift
WARNING: shift/reduce conflict for NOT in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for LIST in state 60 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 60 resolved as shift
WARNING: shift/reduce conflict for SET in state 60 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 60 resolved as shift
WARNING: shift/reduce conflict for MAP in state 60 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 60 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for INT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 61 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for DO in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for LIST in state 61 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 61 resolved as shift
WARNING: shift/reduce conflict for SET in state 61 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 61 resolved as shift
WARNING: shift/reduce conflict for MAP in state 61 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 61 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for INT in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 62 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for DO in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 62 resolved as shift
WARNING: shift/reduce conflict for FOR in state 62 resolved as shift
WARNING: shift/reduce conflict for LIST in state 62 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 62 resolved as shift
WARNING: shift/reduce conflict for SET in state 62 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 62 resolved as shift
WARNING: shift/reduce conflict for MAP in state 62 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for SET in state 63 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 63 resolved as shift
WARNING: shift/reduce conflict for MAP in state 63 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 64 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 64 resolved as shift
WARNING: shift/reduce conflict for INT in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 64 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 64 resolved as shift
WARNING: shift/reduce conflict for VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for DO in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 64 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 64 resolved as shift
WARNING: shift/reduce conflict for FOR in state 64 resolved as shift
WARNING: shift/reduce conflict for LIST in state 64 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 64 resolved as shift
WARNING: shift/reduce conflict for SET in state 64 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 64 resolved as shift
WARNING: shift/reduce conflict for MAP in state 64 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 64 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 68 resolved as shift
WARNING: shift/reduce conflict for NUM in state 68 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 68 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 68 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 68 resolved as shift
WARNING: shift/reduce conflict for FOR in state 68 resolved as shift
WARNING: shift/reduce conflict for LIST in state 68 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 68 resolved as shift
WARNING: shift/reduce conflict for SET in state 68 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 68 resolved as shift
WARNING: shift/reduce conflict for MAP in state 68 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 68 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for INT in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 70 resolved as shift
WARNING: shift/reduce conflict for NUM in state 70 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 70 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 70 resolved as shift
WARNING: shift/reduce conflict for VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 70 resolved as shift
WARNING: shift/reduce conflict for FOR in state 70 resolved as shift
WARNING: shift/reduce conflict for LIST in state 70 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 70 resolved as shift
WARNING: shift/reduce conflict for SET in state 70 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 70 resolved as shift
WARNING: shift/reduce conflict for MAP in state 70 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 70 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for SET in state 71 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 71 resolved as shift
WARNING: shift/reduce conflict for MAP in state 71 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 72 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 72 resolved as shift
WARNING: shift/reduce conflict for DO in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 72 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 72 resolved as shift
WARNING: shift/reduce conflict for FOR in state 72 resolved as shift
WARNING: shift/reduce conflict for LIST in state 72 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 72 resolved as shift
WARNING: shift/reduce conflict for SET in state 72 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 72 resolved as shift
WARNING: shift/reduce conflict for MAP in state 72 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for MAP in state 74 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for SET in state 76 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 76 resolved as shift
WARNING: shift/reduce conflict for MAP in state 76 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for INT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 77 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for DO in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 77 resolved as shift
WARNING: shift/reduce conflict for NOT in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 77 resolved as shift
WARNING: shift/reduce conflict for FOR in state 77 resolved as shift
WARNING: shift/reduce conflict for LIST in state 77 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 77 resolved as shift
WARNING: shift/reduce conflict for SET in state 77 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 77 resolved as shift
WARNING: shift/reduce conflict for MAP in state 77 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for SET in state 78 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 78 resolved as shift
WARNING: shift/reduce conflict for MAP in state 78 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 79 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 79 resolved as shift
WARNING: shift/reduce conflict for INT in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 79 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 79 resolved as shift
WARNING: shift/reduce conflict for VAR in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 79 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 79 resolved as shift
WARNING: shift/reduce conflict for NOT in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 79 resolved as shift
WARNING: shift/reduce conflict for FOR in state 79 resolved as shift
WARNING: shift/reduce conflict for LIST in state 79 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 79 resolved as shift
WARNING: shift/reduce conflict for SET in state 79 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 79 resolved as shift
WARNING: shift/reduce conflict for MAP in state 79 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 79 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for MAP in state 80 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 81 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 81 resolved as shift
WARNING: shift/reduce conflict for INT in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 81 resolved as shift
WARNING: shift/reduce conflict for NUM in state 81 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 81 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 81 resolved as shift
WARNING: shift/reduce conflict for DO in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 81 resolved as shift
WARNING: shift/reduce conflict for NOT in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 81 resolved as shift
WARNING: shift/reduce conflict for FOR in state 81 resolved as shift
WARNING: shift/reduce conflict for LIST in state 81 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 81 resolved as shift
WARNING: shift/reduce conflict for SET in state 81 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 81 resolved as shift
WARNING: shift/reduce conflict for MAP in state 81 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 81 resolved as shift
WARNING: shift/reduce conflict for STRING in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 81 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 83 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 83 resolved as shift
WARNING: shift/reduce conflict for INT in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 83 resolved as shift
WARNING: shift/reduce conflict for NUM in state 83 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 83 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for DO in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 83 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 83 resolved as shift
WARNING: shift/reduce conflict for FOR in state 83 resolved as shift
WARNING: shift/reduce conflict for LIST in state 83 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 83 resolved as shift
WARNING: shift/reduce conflict for SET in state 83 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 83 resolved as shift
WARNING: shift/reduce conflict for MAP in state 83 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 85 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 85 resolved as shift
WARNING: shift/reduce conflict for INT in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 85 resolved as shift
WARNING: shift/reduce conflict for NUM in state 85 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 85 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 85 resolved as shift
WARNING: shift/reduce conflict for VAR in state 85 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 85 resolved as shift
WARNING: shift/reduce conflict for DO in state 85 resolved as shift
WARNING: shift/reduce conflict for IF in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 85 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 85 resolved as shift
WARNING: shift/reduce conflict for NOT in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 85 resolved as shift
WARNING: shift/reduce conflict for FOR in state 85 resolved as shift
WARNING: shift/reduce conflict for LIST in state 85 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 85 resolved as shift
WARNING: shift/reduce conflict for SET in state 85 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 85 resolved as shift
WARNING: shift/reduce conflict for MAP in state 85 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 85 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 100 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 100 resolved as shift
WARNING: shift/reduce conflict for INT in state 100 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 100 resolved as shift
WARNING: shift/reduce conflict for NUM in state 100 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 100 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 100 resolved as shift
WARNING: shift/reduce conflict for VAR in state 100 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 100 resolved as shift
WARNING: shift/reduce conflict for DO in state 100 resolved as shift
WARNING: shift/reduce conflict for IF in state 100 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 100 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 100 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 100 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 100 resolved as shift
WARNING: shift/reduce conflict for NOT in state 100 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 100 resolved as shift
WARNING: shift/reduce conflict for FOR in state 100 resolved as shift
WARNING: shift/reduce conflict for LIST in state 100 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 100 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 100 resolved as shift
WARNING: shift/reduce conflict for SET in state 100 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 100 resolved as shift
WARNING: shift/reduce conflict for MAP in state 100 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 100 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 100 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 100 resolved as shift
WARNING: shift/reduce conflict for STRING in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 100 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 101 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 101 resolved as shift
WARNING: shift/reduce conflict for INT in state 101 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 101 resolved as shift
WARNING: shift/reduce conflict for NUM in state 101 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 101 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 101 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 101 resolved as shift
WARNING: shift/reduce conflict for VAR in state 101 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 101 resolved as shift
WARNING: shift/reduce conflict for DO in state 101 resolved as shift
WARNING: shift/reduce conflict for IF in state 101 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 101 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 101 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 101 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 101 resolved as shift
WARNING: shift/reduce conflict for NOT in state 101 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 101 resolved as shift
WARNING: shift/reduce conflict for FOR in state 101 resolved as shift
WARNING: shift/reduce conflict for LIST in state 101 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 101 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 101 resolved as shift
WARNING: shift/reduce conflict for SET in state 101 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 101 resolved as shift
WARNING: shift/reduce conflict for MAP in state 101 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 101 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 101 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 101 resolved as shift
WARNING: shift/reduce conflict for STRING in state 101 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 101 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 102 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 102 resolved as shift
WARNING: shift/reduce conflict for INT in state 102 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 102 resolved as shift
WARNING: shift/reduce conflict for NUM in state 102 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 102 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 102 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 102 resolved as shift
WARNING: shift/reduce conflict for VAR in state 102 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 102 resolved as shift
WARNING: shift/reduce conflict for DO in state 102 resolved as shift
WARNING: shift/reduce conflict for IF in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 102 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 102 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 102 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 102 resolved as shift
WARNING: shift/reduce conflict for NOT in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 102 resolved as shift
WARNING: shift/reduce conflict for FOR in state 102 resolved as shift
WARNING: shift/reduce conflict for LIST in state 102 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 102 resolved as shift
WARNING: shift/reduce conflict for SET in state 102 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 102 resolved as shift
WARNING: shift/reduce conflict for MAP in state 102 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 102 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 102 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 102 resolved as shift
WARNING: shift/reduce conflict for STRING in state 102 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 102 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 103 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 103 resolved as shift
WARNING: shift/reduce conflict for INT in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 103 resolved as shift
WARNING: shift/reduce conflict for NUM in state 103 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 103 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 103 resolved as shift
WARNING: shift/reduce conflict for VAR in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for DO in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 103 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 103 resolved as shift
WARNING: shift/reduce conflict for NOT in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for LIST in state 103 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 103 resolved as shift
WARNING: shift/reduce conflict for SET in state 103 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 103 resolved as shift
WARNING: shift/reduce conflict for MAP in state 103 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 103 resolved as shift
WARNING: shift/reduce conflict for STRING in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 103 resolved as shift
WARNING: shift/reduce conflict for LDER in state 140 resolved as shift
WARNING: shift/reduce conflict for AND in state 172 resolved as shift
WARNING: shift/reduce conflict for OR in state 172 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 175 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 175 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 194 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 194 resolved as shift
WARNING: shift/reduce conflict for INT in state 194 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 194 resolved as shift
WARNING: shift/reduce conflict for NUM in state 194 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 194 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 194 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 194 resolved as shift
WARNING: shift/reduce conflict for VAR in state 194 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 194 resolved as shift
WARNING: shift/reduce conflict for DO in state 194 resolved as shift
WARNING: shift/reduce conflict for IF in state 194 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 194 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 194 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 194 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 194 resolved as shift
WARNING: shift/reduce conflict for NOT in state 194 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 194 resolved as shift
WARNING: shift/reduce conflict for FOR in state 194 resolved as shift
WARNING: shift/reduce conflict for LIST in state 194 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 194 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 194 resolved as shift
WARNING: shift/reduce conflict for SET in state 194 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 194 resolved as shift
WARNING: shift/reduce conflict for MAP in state 194 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 194 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 194 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 194 resolved as shift
WARNING: shift/reduce conflict for STRING in state 194 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 194 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 195 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 195 resolved as shift
WARNING: shift/reduce conflict for INT in state 195 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 195 resolved as shift
WARNING: shift/reduce conflict for NUM in state 195 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 195 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 195 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 195 resolved as shift
WARNING: shift/reduce conflict for VAR in state 195 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 195 resolved as shift
WARNING: shift/reduce conflict for DO in state 195 resolved as shift
WARNING: shift/reduce conflict for IF in state 195 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 195 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 195 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 195 resolved as shift
WARNING: shift/reduce conflict for NOT in state 195 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 195 resolved as shift
WARNING: shift/reduce conflict for FOR in state 195 resolved as shift
WARNING: shift/reduce conflict for LIST in state 195 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 195 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 195 resolved as shift
WARNING: shift/reduce conflict for SET in state 195 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 195 resolved as shift
WARNING: shift/reduce conflict for MAP in state 195 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 195 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 195 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 195 resolved as shift
WARNING: shift/reduce conflict for STRING in state 195 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 195 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 205 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 205 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 205 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 205 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 205 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 205 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 213 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 236 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 268 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 268 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 268 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 268 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 268 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 268 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 268 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 273 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 278 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 278 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 336 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 336 resolved as shift
WARNING: shift/reduce conflict for INT in state 336 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 336 resolved as shift
WARNING: shift/reduce conflict for NUM in state 336 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 336 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 336 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 336 resolved as shift
WARNING: shift/reduce conflict for VAR in state 336 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 336 resolved as shift
WARNING: shift/reduce conflict for DO in state 336 resolved as shift
WARNING: shift/reduce conflict for IF in state 336 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 336 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 336 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 336 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 336 resolved as shift
WARNING: shift/reduce conflict for NOT in state 336 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 336 resolved as shift
WARNING: shift/reduce conflict for FOR in state 336 resolved as shift
WARNING: shift/reduce conflict for LIST in state 336 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 336 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 336 resolved as shift
WARNING: shift/reduce conflict for SET in state 336 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 336 resolved as shift
WARNING: shift/reduce conflict for MAP in state 336 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 336 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 336 resolved as shift
WARNING: shift/reduce conflict for STRING in state 336 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 336 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 348 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 348 resolved as shift
WARNING: shift/reduce conflict for INT in state 348 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 348 resolved as shift
WARNING: shift/reduce conflict for NUM in state 348 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 348 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 348 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 348 resolved as shift
WARNING: shift/reduce conflict for VAR in state 348 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 348 resolved as shift
WARNING: shift/reduce conflict for DO in state 348 resolved as shift
WARNING: shift/reduce conflict for IF in state 348 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 348 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 348 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 348 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 348 resolved as shift
WARNING: shift/reduce conflict for NOT in state 348 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 348 resolved as shift
WARNING: shift/reduce conflict for FOR in state 348 resolved as shift
WARNING: shift/reduce conflict for LIST in state 348 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 348 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 348 resolved as shift
WARNING: shift/reduce conflict for SET in state 348 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 348 resolved as shift
WARNING: shift/reduce conflict for MAP in state 348 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 348 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 348 resolved as shift
WARNING: shift/reduce conflict for STRING in state 348 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 348 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 360 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 360 resolved as shift
WARNING: shift/reduce conflict for INT in state 360 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 360 resolved as shift
WARNING: shift/reduce conflict for NUM in state 360 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 360 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 360 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 360 resolved as shift
WARNING: shift/reduce conflict for VAR in state 360 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 360 resolved as shift
WARNING: shift/reduce conflict for DO in state 360 resolved as shift
WARNING: shift/reduce conflict for IF in state 360 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 360 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 360 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 360 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 360 resolved as shift
WARNING: shift/reduce conflict for NOT in state 360 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 360 resolved as shift
WARNING: shift/reduce conflict for FOR in state 360 resolved as shift
WARNING: shift/reduce conflict for LIST in state 360 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 360 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 360 resolved as shift
WARNING: shift/reduce conflict for SET in state 360 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 360 resolved as shift
WARNING: shift/reduce conflict for MAP in state 360 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 360 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 360 resolved as shift
WARNING: shift/reduce conflict for STRING in state 360 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 360 resolved as shift
WARNING: shift/reduce conflict for LDER in state 416 resolved as shift
WARNING: shift/reduce conflict for LDER in state 423 resolved as shift
WARNING: shift/reduce conflict for LDER in state 429 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 431 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 431 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 431 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 431 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 431 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 431 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 564 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 564 resolved as shift
WARNING: shift/reduce conflict for INT in state 564 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 564 resolved as shift
WARNING: shift/reduce conflict for NUM in state 564 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 564 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 564 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 564 resolved as shift
WARNING: shift/reduce conflict for VAR in state 564 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 564 resolved as shift
WARNING: shift/reduce conflict for DO in state 564 resolved as shift
WARNING: shift/reduce conflict for IF in state 564 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 564 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 564 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 564 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 564 resolved as shift
WARNING: shift/reduce conflict for NOT in state 564 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 564 resolved as shift
WARNING: shift/reduce conflict for FOR in state 564 resolved as shift
WARNING: shift/reduce conflict for LIST in state 564 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 564 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 564 resolved as shift
WARNING: shift/reduce conflict for SET in state 564 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 564 resolved as shift
WARNING: shift/reduce conflict for MAP in state 564 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 564 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 564 resolved as shift
WARNING: shift/reduce conflict for STRING in state 564 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 564 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 565 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 565 resolved as shift
WARNING: shift/reduce conflict for INT in state 565 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 565 resolved as shift
WARNING: shift/reduce conflict for NUM in state 565 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 565 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 565 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 565 resolved as shift
WARNING: shift/reduce conflict for VAR in state 565 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 565 resolved as shift
WARNING: shift/reduce conflict for DO in state 565 resolved as shift
WARNING: shift/reduce conflict for IF in state 565 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 565 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 565 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 565 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 565 resolved as shift
WARNING: shift/reduce conflict for NOT in state 565 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 565 resolved as shift
WARNING: shift/reduce conflict for FOR in state 565 resolved as shift
WARNING: shift/reduce conflict for LIST in state 565 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 565 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 565 resolved as shift
WARNING: shift/reduce conflict for SET in state 565 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 565 resolved as shift
WARNING: shift/reduce conflict for MAP in state 565 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 565 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 565 resolved as shift
WARNING: shift/reduce conflict for STRING in state 565 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 565 resolved as shift
WARNING: shift/reduce conflict for LDER in state 586 resolved as shift
WARNING: shift/reduce conflict for LDER in state 588 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (final -> sentenciaWhile)
WARNING: rejected rule (final -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 10 resolved using rule (final -> sentenciaIf)
WARNING: rejected rule (final -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (final -> sentenciaElse)
WARNING: rejected rule (final -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 17 resolved using rule (final -> sentenciaElseIf)
WARNING: rejected rule (final -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 18 resolved using rule (final -> sentenciaFor)
WARNING: rejected rule (final -> <empty>) in state 18
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 33 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 33
WARNING: reduce/reduce conflict in state 36 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 36
WARNING: reduce/reduce conflict in state 44 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 44
WARNING: reduce/reduce conflict in state 60 resolved using rule (final -> asignacion PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (final -> expresionInt PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 62 resolved using rule (final -> expresionDouble PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 62
WARNING: reduce/reduce conflict in state 63 resolved using rule (final -> expresionString PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 64 resolved using rule (final -> expresionBool PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 68 resolved using rule (final -> expresionBoolFor PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 70 resolved using rule (final -> sentenciaWhile PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 71 resolved using rule (final -> sentenciaDoWhile PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 71
WARNING: reduce/reduce conflict in state 72 resolved using rule (final -> sentenciaIf PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 72
WARNING: reduce/reduce conflict in state 74 resolved using rule (final -> sentenciaElse PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 74
WARNING: reduce/reduce conflict in state 76 resolved using rule (final -> imprimir PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (final -> funcionStdin PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (final -> funcionStdout PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (final -> negacionBool PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 79
WARNING: reduce/reduce conflict in state 80 resolved using rule (final -> comparacionBool PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 81 resolved using rule (final -> sentenciaElseIf PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 81
WARNING: reduce/reduce conflict in state 83 resolved using rule (final -> sentenciaFor PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 83
WARNING: reduce/reduce conflict in state 85 resolved using rule (final -> sentenciaSubstring PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 85
WARNING: reduce/reduce conflict in state 100 resolved using rule (final -> expresionLista PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 100
WARNING: reduce/reduce conflict in state 101 resolved using rule (final -> expresionNewList PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 101
WARNING: reduce/reduce conflict in state 102 resolved using rule (final -> expresionSet PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (final -> expresionMap PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 155 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 155
WARNING: reduce/reduce conflict in state 156 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListInt -> VARIABLE) in state 156
WARNING: reduce/reduce conflict in state 156 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 156
WARNING: reduce/reduce conflict in state 156 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListBool -> VARIABLE) in state 156
WARNING: reduce/reduce conflict in state 156 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 156
WARNING: reduce/reduce conflict in state 156 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 156
WARNING: reduce/reduce conflict in state 156 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListMap -> VARIABLE) in state 156
WARNING: reduce/reduce conflict in state 157 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 157
WARNING: reduce/reduce conflict in state 157 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 157
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 159
WARNING: reduce/reduce conflict in state 173 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 173
WARNING: reduce/reduce conflict in state 179 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 179
WARNING: reduce/reduce conflict in state 194 resolved using rule (final -> VARIABLE DSUMA PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 194
WARNING: reduce/reduce conflict in state 195 resolved using rule (final -> VARIABLE DRESTA PUNTOYCOMA)
WARNING: rejected rule (final -> <empty>) in state 195
WARNING: reduce/reduce conflict in state 196 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 196
WARNING: reduce/reduce conflict in state 197 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 197
WARNING: reduce/reduce conflict in state 205 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 205
WARNING: reduce/reduce conflict in state 205 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 205
WARNING: reduce/reduce conflict in state 205 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 205
WARNING: reduce/reduce conflict in state 212 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 212
WARNING: reduce/reduce conflict in state 213 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 213
WARNING: reduce/reduce conflict in state 233 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 233
WARNING: reduce/reduce conflict in state 234 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 234
WARNING: reduce/reduce conflict in state 262 resolved using rule (expListDynamic -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 262
WARNING: reduce/reduce conflict in state 268 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 268
WARNING: reduce/reduce conflict in state 268 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 268
WARNING: reduce/reduce conflict in state 278 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 278
WARNING: reduce/reduce conflict in state 378 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 378
WARNING: reduce/reduce conflict in state 389 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 389
WARNING: reduce/reduce conflict in state 389 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 389
WARNING: reduce/reduce conflict in state 392 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 392
WARNING: reduce/reduce conflict in state 393 resolved using rule (expListNum -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 393
WARNING: reduce/reduce conflict in state 396 resolved using rule (expListBool -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 396
WARNING: reduce/reduce conflict in state 408 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 408
WARNING: reduce/reduce conflict in state 409 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 409
WARNING: reduce/reduce conflict in state 413 resolved using rule (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER)
WARNING: rejected rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) in state 413
WARNING: reduce/reduce conflict in state 514 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 514
WARNING: reduce/reduce conflict in state 514 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 514
WARNING: reduce/reduce conflict in state 517 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 517
WARNING: reduce/reduce conflict in state 517 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 517
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
WARNING: Rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) is never reduced
