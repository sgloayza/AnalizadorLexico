Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    ELSEIF
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDIN
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    IS
    ISNEGADO
    LIST
    MAP
    RETURN
    SET
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> negacionBool PUNTOYCOMA
Rule 30    final -> negacionBool PUNTOYCOMA final
Rule 31    algoritmo -> asignacion PUNTOYCOMA
Rule 32    algoritmo -> expresionInt PUNTOYCOMA
Rule 33    algoritmo -> expresionDouble PUNTOYCOMA
Rule 34    algoritmo -> expresionString PUNTOYCOMA
Rule 35    algoritmo -> expresionBool PUNTOYCOMA
Rule 36    algoritmo -> expresion
Rule 37    algoritmo -> sentenciaWhile
Rule 38    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 39    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 40    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 41    algoritmo -> sentenciaIf
Rule 42    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 43    algoritmo -> sentenciaElse
Rule 44    algoritmo -> imprimir PUNTOYCOMA
Rule 45    algoritmo -> negacionBool PUNTOYCOMA
Rule 46    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 47    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 48    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 49    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 50    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 51    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 52    asignacion -> VAR VARIABLE IGUAL expresion
Rule 53    asignacion -> asignacionSimple
Rule 54    asignacionSimple -> VARIABLE IGUAL expresion
Rule 55    imprimir -> PRINT PIZQ expresion PDER
Rule 56    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 57    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 58    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 59    sentenciaElse -> ELSE algoritmo
Rule 60    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 61    valor -> ENTERO
Rule 62    valor -> VARIABLE
Rule 63    valor -> DOUBLE
Rule 64    valor -> STRING
Rule 65    expresion -> valor operadorMat expresion
Rule 66    expresion -> valor
Rule 67    expresion -> expresionString
Rule 68    expresion -> expresionInt
Rule 69    expresion -> expresionDouble
Rule 70    expresion -> expresionBool
Rule 71    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 72    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 73    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 74    valorBool -> BOOL
Rule 75    valorBool -> VARIABLE
Rule 76    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 77    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 78    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 79    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 80    expresionBool -> valorBool
Rule 81    negacionBool -> NOT PIZQ expresionBool PDER
Rule 82    valorString -> STRING
Rule 83    valorString -> VARIABLE
Rule 84    expresionString -> valorString operadorMat expresionString
Rule 85    expresionString -> valorString
Rule 86    valorInt -> ENTERO
Rule 87    valorInt -> VARIABLE
Rule 88    expresionInt -> valorInt operadorMat expresionInt
Rule 89    expresionInt -> valorInt
Rule 90    valorDouble -> DOUBLE
Rule 91    valorDouble -> valorInt
Rule 92    expresionDouble -> valorDouble operadorMat expresionDouble
Rule 93    expresionDouble -> valorDouble
Rule 94    operadorMat -> SUMA
Rule 95    operadorMat -> RESTA
Rule 96    operadorMat -> MULTI
Rule 97    operadorMat -> DIV
Rule 98    operadorMat -> DIVENTERO
Rule 99    operadorMat -> MOD
Rule 100   comparadorMat -> DIGUAL
Rule 101   comparadorMat -> NOIGUAL
Rule 102   comparadorMat -> MAYOR
Rule 103   comparadorMat -> MENOR
Rule 104   comparadorMat -> MAYIGUAL
Rule 105   comparadorMat -> MENIGUAL
Rule 106   operadorLogico -> AND
Rule 107   operadorLogico -> OR

Terminals, with rules where they appear

AND                  : 106
AS                   : 
BOOL                 : 74
BOOLR                : 50
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 100
DIV                  : 97
DIVENTERO            : 98
DO                   : 73
DOSPUNTOS            : 
DOUBLE               : 63 90
DOUBLER              : 47
DRESTA               : 
DSUMA                : 
DYNAMIC              : 51
ELSE                 : 59 60
ELSEIF               : 
ENTERO               : 61 86
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 57 58
IGUAL                : 46 47 48 49 50 51 52 54
INT                  : 46
IS                   : 
ISNEGADO             : 
LDER                 : 58 60 71 73
LIST                 : 
LIZQ                 : 58 60 71 73
MAP                  : 
MAYIGUAL             : 104
MAYOR                : 102
MENIGUAL             : 105
MENOR                : 103
MOD                  : 99
MULTI                : 96
NOIGUAL              : 101
NOT                  : 81
NUM                  : 48
OR                   : 107
PDER                 : 55 56 57 58 71 72 73 81
PIZQ                 : 55 56 57 58 71 72 73 81
PRINT                : 55 56
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 38 39 40 42 44 45
RESTA                : 95
RETURN               : 
SET                  : 
STRING               : 64 82
STRINGR              : 49
SUMA                 : 94
SWITCH               : 
VAR                  : 52
VARIABLE             : 46 47 48 49 50 51 52 54 62 75 77 78 78 79 83 87
WHILE                : 71 72 73
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 57 58 59 60 71 72 73
asignacion           : 3 4 31
asignacionSimple     : 53 56
comparadorMat        : 76 77 78 79
expresion            : 36 51 52 54 55 65
expresionBool        : 11 12 35 50 57 58 70 71 72 73 81
expresionDouble      : 7 8 33 47 48 69 76 77 92
expresionInt         : 5 6 32 46 68 88
expresionString      : 9 10 34 49 67 84
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 0
imprimir             : 27 28 44
negacionBool         : 29 30 45
operadorLogico       : 
operadorMat          : 65 84 88 92
sentenciaDoWhile     : 17 18 39
sentenciaElse        : 23 24 25 26 42 43
sentenciaIf          : 19 20 21 22 40 41
sentenciaWhile       : 13 14 15 16 37 38
valor                : 65 66
valorBool            : 80
valorDouble          : 76 79 92 93
valorInt             : 88 89 91
valorString          : 84 85

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 39


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (31) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 40


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (32) algoritmo -> expresionInt . PUNTOYCOMA
    (68) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 41

  ! PUNTOYCOMA      [ reduce using rule 68 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (33) algoritmo -> expresionDouble . PUNTOYCOMA
    (69) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 42

  ! PUNTOYCOMA      [ reduce using rule 69 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (34) algoritmo -> expresionString . PUNTOYCOMA
    (67) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 43

  ! PUNTOYCOMA      [ reduce using rule 67 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (35) algoritmo -> expresionBool . PUNTOYCOMA
    (70) expresion -> expresionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 44

  ! PUNTOYCOMA      [ reduce using rule 70 (expresion -> expresionBool .) ]


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (37) algoritmo -> sentenciaWhile .
    (38) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 46
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

  ! PUNTOYCOMA      [ reduce using rule 37 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 45
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (39) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 47


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (40) algoritmo -> sentenciaIf . PUNTOYCOMA
    (41) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 48
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

  ! PUNTOYCOMA      [ reduce using rule 41 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 49
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (42) algoritmo -> sentenciaElse . PUNTOYCOMA
    (43) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 50
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

  ! PUNTOYCOMA      [ reduce using rule 43 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 51
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final
    (44) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 52


state 13

    (29) final -> negacionBool . PUNTOYCOMA
    (30) final -> negacionBool . PUNTOYCOMA final
    (45) algoritmo -> negacionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 53


state 14

    (36) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 36 (algoritmo -> expresion .)
    INT             reduce using rule 36 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 36 (algoritmo -> expresion .)
    NUM             reduce using rule 36 (algoritmo -> expresion .)
    STRINGR         reduce using rule 36 (algoritmo -> expresion .)
    BOOLR           reduce using rule 36 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 36 (algoritmo -> expresion .)
    VAR             reduce using rule 36 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 36 (algoritmo -> expresion .)
    WHILE           reduce using rule 36 (algoritmo -> expresion .)
    DO              reduce using rule 36 (algoritmo -> expresion .)
    IF              reduce using rule 36 (algoritmo -> expresion .)
    ELSE            reduce using rule 36 (algoritmo -> expresion .)
    PRINT           reduce using rule 36 (algoritmo -> expresion .)
    NOT             reduce using rule 36 (algoritmo -> expresion .)
    ENTERO          reduce using rule 36 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 36 (algoritmo -> expresion .)
    STRING          reduce using rule 36 (algoritmo -> expresion .)
    BOOL            reduce using rule 36 (algoritmo -> expresion .)
    $end            reduce using rule 36 (algoritmo -> expresion .)
    LDER            reduce using rule 36 (algoritmo -> expresion .)


state 15

    (46) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 54


state 16

    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (54) asignacionSimple -> VARIABLE . IGUAL expresion
    (87) valorInt -> VARIABLE .
    (83) valorString -> VARIABLE .
    (75) valorBool -> VARIABLE .
    (62) valor -> VARIABLE .
    (100) comparadorMat -> . DIGUAL
    (101) comparadorMat -> . NOIGUAL
    (102) comparadorMat -> . MAYOR
    (103) comparadorMat -> . MENOR
    (104) comparadorMat -> . MAYIGUAL
    (105) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 83 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 75 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 62 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 56
    SUMA            reduce using rule 62 (valor -> VARIABLE .)
    RESTA           reduce using rule 62 (valor -> VARIABLE .)
    MULTI           reduce using rule 62 (valor -> VARIABLE .)
    DIV             reduce using rule 62 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 62 (valor -> VARIABLE .)
    MOD             reduce using rule 62 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 62 (valor -> VARIABLE .)
    INT             reduce using rule 62 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 62 (valor -> VARIABLE .)
    NUM             reduce using rule 62 (valor -> VARIABLE .)
    STRINGR         reduce using rule 62 (valor -> VARIABLE .)
    BOOLR           reduce using rule 62 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 62 (valor -> VARIABLE .)
    VAR             reduce using rule 62 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 62 (valor -> VARIABLE .)
    WHILE           reduce using rule 62 (valor -> VARIABLE .)
    DO              reduce using rule 62 (valor -> VARIABLE .)
    IF              reduce using rule 62 (valor -> VARIABLE .)
    ELSE            reduce using rule 62 (valor -> VARIABLE .)
    PRINT           reduce using rule 62 (valor -> VARIABLE .)
    NOT             reduce using rule 62 (valor -> VARIABLE .)
    ENTERO          reduce using rule 62 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 62 (valor -> VARIABLE .)
    STRING          reduce using rule 62 (valor -> VARIABLE .)
    BOOL            reduce using rule 62 (valor -> VARIABLE .)
    $end            reduce using rule 62 (valor -> VARIABLE .)
    LDER            reduce using rule 62 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 57
    NOIGUAL         shift and go to state 58
    MAYOR           shift and go to state 59
    MENOR           shift and go to state 60
    MAYIGUAL        shift and go to state 61
    MENIGUAL        shift and go to state 62

  ! SUMA            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 75 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 55

state 17

    (47) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 63


state 18

    (48) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 64


state 19

    (49) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 65


state 20

    (50) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 66


state 21

    (51) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 67


state 22

    (52) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 68


state 23

    (53) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 53 (asignacion -> asignacionSimple .)


state 24

    (88) expresionInt -> valorInt . operadorMat expresionInt
    (89) expresionInt -> valorInt .
    (91) valorDouble -> valorInt .
    (94) operadorMat -> . SUMA
    (95) operadorMat -> . RESTA
    (96) operadorMat -> . MULTI
    (97) operadorMat -> . DIV
    (98) operadorMat -> . DIVENTERO
    (99) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PRINT resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NOT resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 89 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 89 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 89 (expresionInt -> valorInt .)
    INT             reduce using rule 89 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 89 (expresionInt -> valorInt .)
    NUM             reduce using rule 89 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 89 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 89 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 89 (expresionInt -> valorInt .)
    VAR             reduce using rule 89 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 89 (expresionInt -> valorInt .)
    WHILE           reduce using rule 89 (expresionInt -> valorInt .)
    DO              reduce using rule 89 (expresionInt -> valorInt .)
    IF              reduce using rule 89 (expresionInt -> valorInt .)
    ELSE            reduce using rule 89 (expresionInt -> valorInt .)
    PRINT           reduce using rule 89 (expresionInt -> valorInt .)
    NOT             reduce using rule 89 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 89 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 89 (expresionInt -> valorInt .)
    STRING          reduce using rule 89 (expresionInt -> valorInt .)
    BOOL            reduce using rule 89 (expresionInt -> valorInt .)
    $end            reduce using rule 89 (expresionInt -> valorInt .)
    LDER            reduce using rule 89 (expresionInt -> valorInt .)
    PDER            reduce using rule 89 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 91 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 91 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 91 (valorDouble -> valorInt .)
    MENOR           reduce using rule 91 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 91 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 91 (valorDouble -> valorInt .)
    SUMA            shift and go to state 70
    RESTA           shift and go to state 71
    MULTI           shift and go to state 72
    DIV             shift and go to state 73
    DIVENTERO       shift and go to state 74
    MOD             shift and go to state 75

  ! SUMA            [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! PRINT           [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! NOT             [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 91 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 91 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 69

state 25

    (92) expresionDouble -> valorDouble . operadorMat expresionDouble
    (93) expresionDouble -> valorDouble .
    (76) expresionBool -> valorDouble . comparadorMat expresionDouble
    (79) expresionBool -> valorDouble . comparadorMat VARIABLE
    (94) operadorMat -> . SUMA
    (95) operadorMat -> . RESTA
    (96) operadorMat -> . MULTI
    (97) operadorMat -> . DIV
    (98) operadorMat -> . DIVENTERO
    (99) operadorMat -> . MOD
    (100) comparadorMat -> . DIGUAL
    (101) comparadorMat -> . NOIGUAL
    (102) comparadorMat -> . MAYOR
    (103) comparadorMat -> . MENOR
    (104) comparadorMat -> . MAYIGUAL
    (105) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 93 (expresionDouble -> valorDouble .)
    INT             reduce using rule 93 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 93 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 93 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 93 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 93 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 93 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 93 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 93 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 93 (expresionDouble -> valorDouble .)
    DO              reduce using rule 93 (expresionDouble -> valorDouble .)
    IF              reduce using rule 93 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 93 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 93 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 93 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 93 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 93 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 93 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 93 (expresionDouble -> valorDouble .)
    $end            reduce using rule 93 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 93 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 93 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 70
    RESTA           shift and go to state 71
    MULTI           shift and go to state 72
    DIV             shift and go to state 73
    DIVENTERO       shift and go to state 74
    MOD             shift and go to state 75
    DIGUAL          shift and go to state 57
    NOIGUAL         shift and go to state 58
    MAYOR           shift and go to state 59
    MENOR           shift and go to state 60
    MAYIGUAL        shift and go to state 61
    MENIGUAL        shift and go to state 62

    operadorMat                    shift and go to state 76
    comparadorMat                  shift and go to state 77

state 26

    (84) expresionString -> valorString . operadorMat expresionString
    (85) expresionString -> valorString .
    (94) operadorMat -> . SUMA
    (95) operadorMat -> . RESTA
    (96) operadorMat -> . MULTI
    (97) operadorMat -> . DIV
    (98) operadorMat -> . DIVENTERO
    (99) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 85 (expresionString -> valorString .)
    INT             reduce using rule 85 (expresionString -> valorString .)
    DOUBLER         reduce using rule 85 (expresionString -> valorString .)
    NUM             reduce using rule 85 (expresionString -> valorString .)
    STRINGR         reduce using rule 85 (expresionString -> valorString .)
    BOOLR           reduce using rule 85 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 85 (expresionString -> valorString .)
    VAR             reduce using rule 85 (expresionString -> valorString .)
    VARIABLE        reduce using rule 85 (expresionString -> valorString .)
    WHILE           reduce using rule 85 (expresionString -> valorString .)
    DO              reduce using rule 85 (expresionString -> valorString .)
    IF              reduce using rule 85 (expresionString -> valorString .)
    ELSE            reduce using rule 85 (expresionString -> valorString .)
    PRINT           reduce using rule 85 (expresionString -> valorString .)
    NOT             reduce using rule 85 (expresionString -> valorString .)
    ENTERO          reduce using rule 85 (expresionString -> valorString .)
    DOUBLE          reduce using rule 85 (expresionString -> valorString .)
    STRING          reduce using rule 85 (expresionString -> valorString .)
    BOOL            reduce using rule 85 (expresionString -> valorString .)
    $end            reduce using rule 85 (expresionString -> valorString .)
    LDER            reduce using rule 85 (expresionString -> valorString .)
    PDER            reduce using rule 85 (expresionString -> valorString .)
    SUMA            shift and go to state 70
    RESTA           shift and go to state 71
    MULTI           shift and go to state 72
    DIV             shift and go to state 73
    DIVENTERO       shift and go to state 74
    MOD             shift and go to state 75

    operadorMat                    shift and go to state 78

state 27

    (80) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 80 (expresionBool -> valorBool .)
    INT             reduce using rule 80 (expresionBool -> valorBool .)
    DOUBLER         reduce using rule 80 (expresionBool -> valorBool .)
    NUM             reduce using rule 80 (expresionBool -> valorBool .)
    STRINGR         reduce using rule 80 (expresionBool -> valorBool .)
    BOOLR           reduce using rule 80 (expresionBool -> valorBool .)
    DYNAMIC         reduce using rule 80 (expresionBool -> valorBool .)
    VAR             reduce using rule 80 (expresionBool -> valorBool .)
    VARIABLE        reduce using rule 80 (expresionBool -> valorBool .)
    WHILE           reduce using rule 80 (expresionBool -> valorBool .)
    DO              reduce using rule 80 (expresionBool -> valorBool .)
    IF              reduce using rule 80 (expresionBool -> valorBool .)
    ELSE            reduce using rule 80 (expresionBool -> valorBool .)
    PRINT           reduce using rule 80 (expresionBool -> valorBool .)
    NOT             reduce using rule 80 (expresionBool -> valorBool .)
    ENTERO          reduce using rule 80 (expresionBool -> valorBool .)
    DOUBLE          reduce using rule 80 (expresionBool -> valorBool .)
    STRING          reduce using rule 80 (expresionBool -> valorBool .)
    BOOL            reduce using rule 80 (expresionBool -> valorBool .)
    $end            reduce using rule 80 (expresionBool -> valorBool .)
    LDER            reduce using rule 80 (expresionBool -> valorBool .)
    PDER            reduce using rule 80 (expresionBool -> valorBool .)


state 28

    (71) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 79


state 29

    (73) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 80


state 30

    (57) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 81


state 31

    (59) sentenciaElse -> ELSE . algoritmo
    (60) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    LIZQ            shift and go to state 83
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    algoritmo                      shift and go to state 82
    asignacion                     shift and go to state 84
    expresionInt                   shift and go to state 85
    expresionDouble                shift and go to state 86
    expresionString                shift and go to state 87
    expresionBool                  shift and go to state 88
    expresion                      shift and go to state 14
    sentenciaWhile                 shift and go to state 89
    sentenciaDoWhile               shift and go to state 90
    sentenciaIf                    shift and go to state 91
    sentenciaElse                  shift and go to state 92
    imprimir                       shift and go to state 93
    negacionBool                   shift and go to state 94
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 32

    (55) imprimir -> PRINT . PIZQ expresion PDER
    (56) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 95


state 33

    (81) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 96


state 34

    (65) expresion -> valor . operadorMat expresion
    (66) expresion -> valor .
    (94) operadorMat -> . SUMA
    (95) operadorMat -> . RESTA
    (96) operadorMat -> . MULTI
    (97) operadorMat -> . DIV
    (98) operadorMat -> . DIVENTERO
    (99) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 66 (expresion -> valor .)
    INT             reduce using rule 66 (expresion -> valor .)
    DOUBLER         reduce using rule 66 (expresion -> valor .)
    NUM             reduce using rule 66 (expresion -> valor .)
    STRINGR         reduce using rule 66 (expresion -> valor .)
    BOOLR           reduce using rule 66 (expresion -> valor .)
    DYNAMIC         reduce using rule 66 (expresion -> valor .)
    VAR             reduce using rule 66 (expresion -> valor .)
    VARIABLE        reduce using rule 66 (expresion -> valor .)
    WHILE           reduce using rule 66 (expresion -> valor .)
    DO              reduce using rule 66 (expresion -> valor .)
    IF              reduce using rule 66 (expresion -> valor .)
    ELSE            reduce using rule 66 (expresion -> valor .)
    PRINT           reduce using rule 66 (expresion -> valor .)
    NOT             reduce using rule 66 (expresion -> valor .)
    ENTERO          reduce using rule 66 (expresion -> valor .)
    DOUBLE          reduce using rule 66 (expresion -> valor .)
    STRING          reduce using rule 66 (expresion -> valor .)
    BOOL            reduce using rule 66 (expresion -> valor .)
    $end            reduce using rule 66 (expresion -> valor .)
    LDER            reduce using rule 66 (expresion -> valor .)
    PDER            reduce using rule 66 (expresion -> valor .)
    SUMA            shift and go to state 70
    RESTA           shift and go to state 71
    MULTI           shift and go to state 72
    DIV             shift and go to state 73
    DIVENTERO       shift and go to state 74
    MOD             shift and go to state 75

    operadorMat                    shift and go to state 97

state 35

    (86) valorInt -> ENTERO .
    (61) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 61 (valor -> ENTERO .)
    DIGUAL          reduce using rule 86 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 86 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 86 (valorInt -> ENTERO .)
    MENOR           reduce using rule 86 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 86 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 86 (valorInt -> ENTERO .)
    SUMA            reduce using rule 61 (valor -> ENTERO .)
    RESTA           reduce using rule 61 (valor -> ENTERO .)
    MULTI           reduce using rule 61 (valor -> ENTERO .)
    DIV             reduce using rule 61 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 61 (valor -> ENTERO .)
    MOD             reduce using rule 61 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 61 (valor -> ENTERO .)
    INT             reduce using rule 61 (valor -> ENTERO .)
    DOUBLER         reduce using rule 61 (valor -> ENTERO .)
    NUM             reduce using rule 61 (valor -> ENTERO .)
    STRINGR         reduce using rule 61 (valor -> ENTERO .)
    BOOLR           reduce using rule 61 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 61 (valor -> ENTERO .)
    VAR             reduce using rule 61 (valor -> ENTERO .)
    VARIABLE        reduce using rule 61 (valor -> ENTERO .)
    WHILE           reduce using rule 61 (valor -> ENTERO .)
    DO              reduce using rule 61 (valor -> ENTERO .)
    IF              reduce using rule 61 (valor -> ENTERO .)
    ELSE            reduce using rule 61 (valor -> ENTERO .)
    PRINT           reduce using rule 61 (valor -> ENTERO .)
    NOT             reduce using rule 61 (valor -> ENTERO .)
    ENTERO          reduce using rule 61 (valor -> ENTERO .)
    DOUBLE          reduce using rule 61 (valor -> ENTERO .)
    STRING          reduce using rule 61 (valor -> ENTERO .)
    BOOL            reduce using rule 61 (valor -> ENTERO .)
    $end            reduce using rule 61 (valor -> ENTERO .)
    LDER            reduce using rule 61 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 86 (valorInt -> ENTERO .) ]


state 36

    (90) valorDouble -> DOUBLE .
    (63) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 63 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 90 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 90 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 90 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 90 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 90 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 90 (valorDouble -> DOUBLE .)
    SUMA            reduce using rule 63 (valor -> DOUBLE .)
    RESTA           reduce using rule 63 (valor -> DOUBLE .)
    MULTI           reduce using rule 63 (valor -> DOUBLE .)
    DIV             reduce using rule 63 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 63 (valor -> DOUBLE .)
    MOD             reduce using rule 63 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 63 (valor -> DOUBLE .)
    INT             reduce using rule 63 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 63 (valor -> DOUBLE .)
    NUM             reduce using rule 63 (valor -> DOUBLE .)
    STRINGR         reduce using rule 63 (valor -> DOUBLE .)
    BOOLR           reduce using rule 63 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 63 (valor -> DOUBLE .)
    VAR             reduce using rule 63 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 63 (valor -> DOUBLE .)
    WHILE           reduce using rule 63 (valor -> DOUBLE .)
    DO              reduce using rule 63 (valor -> DOUBLE .)
    IF              reduce using rule 63 (valor -> DOUBLE .)
    ELSE            reduce using rule 63 (valor -> DOUBLE .)
    PRINT           reduce using rule 63 (valor -> DOUBLE .)
    NOT             reduce using rule 63 (valor -> DOUBLE .)
    ENTERO          reduce using rule 63 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 63 (valor -> DOUBLE .)
    STRING          reduce using rule 63 (valor -> DOUBLE .)
    BOOL            reduce using rule 63 (valor -> DOUBLE .)
    $end            reduce using rule 63 (valor -> DOUBLE .)
    LDER            reduce using rule 63 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]


state 37

    (82) valorString -> STRING .
    (64) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 64 (valor -> STRING .)
    SUMA            reduce using rule 64 (valor -> STRING .)
    RESTA           reduce using rule 64 (valor -> STRING .)
    MULTI           reduce using rule 64 (valor -> STRING .)
    DIV             reduce using rule 64 (valor -> STRING .)
    DIVENTERO       reduce using rule 64 (valor -> STRING .)
    MOD             reduce using rule 64 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 64 (valor -> STRING .)
    INT             reduce using rule 64 (valor -> STRING .)
    DOUBLER         reduce using rule 64 (valor -> STRING .)
    NUM             reduce using rule 64 (valor -> STRING .)
    STRINGR         reduce using rule 64 (valor -> STRING .)
    BOOLR           reduce using rule 64 (valor -> STRING .)
    DYNAMIC         reduce using rule 64 (valor -> STRING .)
    VAR             reduce using rule 64 (valor -> STRING .)
    VARIABLE        reduce using rule 64 (valor -> STRING .)
    WHILE           reduce using rule 64 (valor -> STRING .)
    DO              reduce using rule 64 (valor -> STRING .)
    IF              reduce using rule 64 (valor -> STRING .)
    ELSE            reduce using rule 64 (valor -> STRING .)
    PRINT           reduce using rule 64 (valor -> STRING .)
    NOT             reduce using rule 64 (valor -> STRING .)
    ENTERO          reduce using rule 64 (valor -> STRING .)
    DOUBLE          reduce using rule 64 (valor -> STRING .)
    STRING          reduce using rule 64 (valor -> STRING .)
    BOOL            reduce using rule 64 (valor -> STRING .)
    $end            reduce using rule 64 (valor -> STRING .)
    LDER            reduce using rule 64 (valor -> STRING .)

  ! SUMA            [ reduce using rule 82 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 82 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 82 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 82 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 82 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 82 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 82 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 82 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 82 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 82 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 82 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 82 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 82 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 82 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 82 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 82 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 82 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 82 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 82 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 82 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 82 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 82 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 82 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 82 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 82 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 82 (valorString -> STRING .) ]


state 38

    (74) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 74 (valorBool -> BOOL .)
    INT             reduce using rule 74 (valorBool -> BOOL .)
    DOUBLER         reduce using rule 74 (valorBool -> BOOL .)
    NUM             reduce using rule 74 (valorBool -> BOOL .)
    STRINGR         reduce using rule 74 (valorBool -> BOOL .)
    BOOLR           reduce using rule 74 (valorBool -> BOOL .)
    DYNAMIC         reduce using rule 74 (valorBool -> BOOL .)
    VAR             reduce using rule 74 (valorBool -> BOOL .)
    VARIABLE        reduce using rule 74 (valorBool -> BOOL .)
    WHILE           reduce using rule 74 (valorBool -> BOOL .)
    DO              reduce using rule 74 (valorBool -> BOOL .)
    IF              reduce using rule 74 (valorBool -> BOOL .)
    ELSE            reduce using rule 74 (valorBool -> BOOL .)
    PRINT           reduce using rule 74 (valorBool -> BOOL .)
    NOT             reduce using rule 74 (valorBool -> BOOL .)
    ENTERO          reduce using rule 74 (valorBool -> BOOL .)
    DOUBLE          reduce using rule 74 (valorBool -> BOOL .)
    STRING          reduce using rule 74 (valorBool -> BOOL .)
    BOOL            reduce using rule 74 (valorBool -> BOOL .)
    $end            reduce using rule 74 (valorBool -> BOOL .)
    LDER            reduce using rule 74 (valorBool -> BOOL .)
    PDER            reduce using rule 74 (valorBool -> BOOL .)


state 39

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    algoritmo                      shift and go to state 2
    final                          shift and go to state 98
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 40

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (31) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    asignacion                     shift and go to state 3
    final                          shift and go to state 99
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 41

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (32) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionInt                   shift and go to state 4
    final                          shift and go to state 100
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 42

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (33) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionDouble                shift and go to state 5
    final                          shift and go to state 101
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 43

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (34) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionString                shift and go to state 6
    final                          shift and go to state 102
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 44

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (35) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionBool                  shift and go to state 7
    final                          shift and go to state 103
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 45

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 46

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (38) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 104
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 47

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (39) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 105
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 48

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (40) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 106
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 49

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 50

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (42) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 107
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 51

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 52

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (44) algoritmo -> imprimir PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    imprimir                       shift and go to state 12
    final                          shift and go to state 108
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 53

    (29) final -> negacionBool PUNTOYCOMA .
    (30) final -> negacionBool PUNTOYCOMA . final
    (45) algoritmo -> negacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    $end            reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    negacionBool                   shift and go to state 13
    final                          shift and go to state 109
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 14
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 54

    (46) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 110


state 55

    (77) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (78) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 111
    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116

    expresionDouble                shift and go to state 112
    valorDouble                    shift and go to state 113
    valorInt                       shift and go to state 115

state 56

    (54) asignacionSimple -> VARIABLE IGUAL . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE

    ENTERO          shift and go to state 123
    VARIABLE        shift and go to state 117
    DOUBLE          shift and go to state 124
    STRING          shift and go to state 125
    BOOL            shift and go to state 38

    expresion                      shift and go to state 118
    valor                          shift and go to state 34
    expresionString                shift and go to state 119
    expresionInt                   shift and go to state 120
    expresionDouble                shift and go to state 121
    expresionBool                  shift and go to state 122
    valorString                    shift and go to state 26
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorBool                      shift and go to state 27

state 57

    (100) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 100 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 100 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 100 (comparadorMat -> DIGUAL .)


state 58

    (101) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 101 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 101 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 101 (comparadorMat -> NOIGUAL .)


state 59

    (102) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 102 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 102 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 102 (comparadorMat -> MAYOR .)


state 60

    (103) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 103 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 103 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 103 (comparadorMat -> MENOR .)


state 61

    (104) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 104 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 104 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 104 (comparadorMat -> MAYIGUAL .)


state 62

    (105) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 105 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 105 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 105 (comparadorMat -> MENIGUAL .)


state 63

    (47) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 126


state 64

    (48) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 127


state 65

    (49) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 128


state 66

    (50) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 129


state 67

    (51) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 130


state 68

    (52) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 131


state 69

    (88) expresionInt -> valorInt operadorMat . expresionInt
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 134

    valorInt                       shift and go to state 132
    expresionInt                   shift and go to state 133

state 70

    (94) operadorMat -> SUMA .

    ENTERO          reduce using rule 94 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 94 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 94 (operadorMat -> SUMA .)
    STRING          reduce using rule 94 (operadorMat -> SUMA .)
    BOOL            reduce using rule 94 (operadorMat -> SUMA .)


state 71

    (95) operadorMat -> RESTA .

    ENTERO          reduce using rule 95 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 95 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 95 (operadorMat -> RESTA .)
    STRING          reduce using rule 95 (operadorMat -> RESTA .)
    BOOL            reduce using rule 95 (operadorMat -> RESTA .)


state 72

    (96) operadorMat -> MULTI .

    ENTERO          reduce using rule 96 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 96 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 96 (operadorMat -> MULTI .)
    STRING          reduce using rule 96 (operadorMat -> MULTI .)
    BOOL            reduce using rule 96 (operadorMat -> MULTI .)


state 73

    (97) operadorMat -> DIV .

    ENTERO          reduce using rule 97 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 97 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 97 (operadorMat -> DIV .)
    STRING          reduce using rule 97 (operadorMat -> DIV .)
    BOOL            reduce using rule 97 (operadorMat -> DIV .)


state 74

    (98) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 98 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 98 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 98 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 98 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 98 (operadorMat -> DIVENTERO .)


state 75

    (99) operadorMat -> MOD .

    ENTERO          reduce using rule 99 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 99 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 99 (operadorMat -> MOD .)
    STRING          reduce using rule 99 (operadorMat -> MOD .)
    BOOL            reduce using rule 99 (operadorMat -> MOD .)


state 76

    (92) expresionDouble -> valorDouble operadorMat . expresionDouble
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 134

    valorDouble                    shift and go to state 113
    expresionDouble                shift and go to state 135
    valorInt                       shift and go to state 115

state 77

    (76) expresionBool -> valorDouble comparadorMat . expresionDouble
    (79) expresionBool -> valorDouble comparadorMat . VARIABLE
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 137
    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116

    valorDouble                    shift and go to state 113
    expresionDouble                shift and go to state 136
    valorInt                       shift and go to state 115

state 78

    (84) expresionString -> valorString operadorMat . expresionString
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE

    STRING          shift and go to state 139
    VARIABLE        shift and go to state 140

    valorString                    shift and go to state 26
    expresionString                shift and go to state 138

state 79

    (71) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 143
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 38
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 141
    valorDouble                    shift and go to state 142
    valorBool                      shift and go to state 27
    valorInt                       shift and go to state 115

state 80

    (73) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    algoritmo                      shift and go to state 144
    expresionBool                  shift and go to state 88
    asignacion                     shift and go to state 84
    expresionInt                   shift and go to state 85
    expresionDouble                shift and go to state 86
    expresionString                shift and go to state 87
    expresion                      shift and go to state 14
    sentenciaWhile                 shift and go to state 89
    sentenciaDoWhile               shift and go to state 90
    sentenciaIf                    shift and go to state 91
    sentenciaElse                  shift and go to state 92
    imprimir                       shift and go to state 93
    negacionBool                   shift and go to state 94
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 81

    (57) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (58) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 143
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 38
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 145
    valorDouble                    shift and go to state 142
    valorBool                      shift and go to state 27
    valorInt                       shift and go to state 115

state 82

    (59) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    PRINT           reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    NOT             reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 59 (sentenciaElse -> ELSE algoritmo .)


state 83

    (60) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    algoritmo                      shift and go to state 146
    asignacion                     shift and go to state 84
    expresionInt                   shift and go to state 85
    expresionDouble                shift and go to state 86
    expresionString                shift and go to state 87
    expresionBool                  shift and go to state 88
    expresion                      shift and go to state 14
    sentenciaWhile                 shift and go to state 89
    sentenciaDoWhile               shift and go to state 90
    sentenciaIf                    shift and go to state 91
    sentenciaElse                  shift and go to state 92
    imprimir                       shift and go to state 93
    negacionBool                   shift and go to state 94
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 84

    (31) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 147


state 85

    (32) algoritmo -> expresionInt . PUNTOYCOMA
    (68) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 148
    INT             reduce using rule 68 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 68 (expresion -> expresionInt .)
    NUM             reduce using rule 68 (expresion -> expresionInt .)
    STRINGR         reduce using rule 68 (expresion -> expresionInt .)
    BOOLR           reduce using rule 68 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 68 (expresion -> expresionInt .)
    VAR             reduce using rule 68 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 68 (expresion -> expresionInt .)
    WHILE           reduce using rule 68 (expresion -> expresionInt .)
    DO              reduce using rule 68 (expresion -> expresionInt .)
    IF              reduce using rule 68 (expresion -> expresionInt .)
    ELSE            reduce using rule 68 (expresion -> expresionInt .)
    PRINT           reduce using rule 68 (expresion -> expresionInt .)
    NOT             reduce using rule 68 (expresion -> expresionInt .)
    ENTERO          reduce using rule 68 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 68 (expresion -> expresionInt .)
    STRING          reduce using rule 68 (expresion -> expresionInt .)
    BOOL            reduce using rule 68 (expresion -> expresionInt .)
    $end            reduce using rule 68 (expresion -> expresionInt .)
    LDER            reduce using rule 68 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 68 (expresion -> expresionInt .) ]


state 86

    (33) algoritmo -> expresionDouble . PUNTOYCOMA
    (69) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 149
    INT             reduce using rule 69 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 69 (expresion -> expresionDouble .)
    NUM             reduce using rule 69 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 69 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 69 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 69 (expresion -> expresionDouble .)
    VAR             reduce using rule 69 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 69 (expresion -> expresionDouble .)
    WHILE           reduce using rule 69 (expresion -> expresionDouble .)
    DO              reduce using rule 69 (expresion -> expresionDouble .)
    IF              reduce using rule 69 (expresion -> expresionDouble .)
    ELSE            reduce using rule 69 (expresion -> expresionDouble .)
    PRINT           reduce using rule 69 (expresion -> expresionDouble .)
    NOT             reduce using rule 69 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 69 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 69 (expresion -> expresionDouble .)
    STRING          reduce using rule 69 (expresion -> expresionDouble .)
    BOOL            reduce using rule 69 (expresion -> expresionDouble .)
    $end            reduce using rule 69 (expresion -> expresionDouble .)
    LDER            reduce using rule 69 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 69 (expresion -> expresionDouble .) ]


state 87

    (34) algoritmo -> expresionString . PUNTOYCOMA
    (67) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 150
    INT             reduce using rule 67 (expresion -> expresionString .)
    DOUBLER         reduce using rule 67 (expresion -> expresionString .)
    NUM             reduce using rule 67 (expresion -> expresionString .)
    STRINGR         reduce using rule 67 (expresion -> expresionString .)
    BOOLR           reduce using rule 67 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 67 (expresion -> expresionString .)
    VAR             reduce using rule 67 (expresion -> expresionString .)
    VARIABLE        reduce using rule 67 (expresion -> expresionString .)
    WHILE           reduce using rule 67 (expresion -> expresionString .)
    DO              reduce using rule 67 (expresion -> expresionString .)
    IF              reduce using rule 67 (expresion -> expresionString .)
    ELSE            reduce using rule 67 (expresion -> expresionString .)
    PRINT           reduce using rule 67 (expresion -> expresionString .)
    NOT             reduce using rule 67 (expresion -> expresionString .)
    ENTERO          reduce using rule 67 (expresion -> expresionString .)
    DOUBLE          reduce using rule 67 (expresion -> expresionString .)
    STRING          reduce using rule 67 (expresion -> expresionString .)
    BOOL            reduce using rule 67 (expresion -> expresionString .)
    $end            reduce using rule 67 (expresion -> expresionString .)
    LDER            reduce using rule 67 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 67 (expresion -> expresionString .) ]


state 88

    (35) algoritmo -> expresionBool . PUNTOYCOMA
    (70) expresion -> expresionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 151
    INT             reduce using rule 70 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 70 (expresion -> expresionBool .)
    NUM             reduce using rule 70 (expresion -> expresionBool .)
    STRINGR         reduce using rule 70 (expresion -> expresionBool .)
    BOOLR           reduce using rule 70 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 70 (expresion -> expresionBool .)
    VAR             reduce using rule 70 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 70 (expresion -> expresionBool .)
    WHILE           reduce using rule 70 (expresion -> expresionBool .)
    DO              reduce using rule 70 (expresion -> expresionBool .)
    IF              reduce using rule 70 (expresion -> expresionBool .)
    ELSE            reduce using rule 70 (expresion -> expresionBool .)
    PRINT           reduce using rule 70 (expresion -> expresionBool .)
    NOT             reduce using rule 70 (expresion -> expresionBool .)
    ENTERO          reduce using rule 70 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 70 (expresion -> expresionBool .)
    STRING          reduce using rule 70 (expresion -> expresionBool .)
    BOOL            reduce using rule 70 (expresion -> expresionBool .)
    $end            reduce using rule 70 (expresion -> expresionBool .)
    LDER            reduce using rule 70 (expresion -> expresionBool .)

  ! PUNTOYCOMA      [ reduce using rule 70 (expresion -> expresionBool .) ]


state 89

    (37) algoritmo -> sentenciaWhile .
    (38) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 37 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 37 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 37 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 37 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 37 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 37 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 37 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 37 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 37 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 37 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 37 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 37 (algoritmo -> sentenciaWhile .)
    PRINT           reduce using rule 37 (algoritmo -> sentenciaWhile .)
    NOT             reduce using rule 37 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 37 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 37 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 37 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 37 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 37 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 37 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 152

  ! PUNTOYCOMA      [ reduce using rule 37 (algoritmo -> sentenciaWhile .) ]


state 90

    (39) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 153


state 91

    (40) algoritmo -> sentenciaIf . PUNTOYCOMA
    (41) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 154
    INT             reduce using rule 41 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 41 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 41 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 41 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 41 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 41 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 41 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 41 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 41 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 41 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 41 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 41 (algoritmo -> sentenciaIf .)
    PRINT           reduce using rule 41 (algoritmo -> sentenciaIf .)
    NOT             reduce using rule 41 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 41 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 41 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 41 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 41 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 41 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 41 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 41 (algoritmo -> sentenciaIf .) ]


state 92

    (42) algoritmo -> sentenciaElse . PUNTOYCOMA
    (43) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 155
    INT             reduce using rule 43 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 43 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 43 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 43 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 43 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 43 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 43 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 43 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 43 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 43 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 43 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 43 (algoritmo -> sentenciaElse .)
    PRINT           reduce using rule 43 (algoritmo -> sentenciaElse .)
    NOT             reduce using rule 43 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 43 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 43 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 43 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 43 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 43 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 43 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 43 (algoritmo -> sentenciaElse .) ]


state 93

    (44) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 156


state 94

    (45) algoritmo -> negacionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 157


state 95

    (55) imprimir -> PRINT PIZQ . expresion PDER
    (56) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE

    VARIABLE        shift and go to state 160
    ENTERO          shift and go to state 123
    DOUBLE          shift and go to state 124
    STRING          shift and go to state 125
    BOOL            shift and go to state 38

    expresion                      shift and go to state 158
    asignacionSimple               shift and go to state 159
    valor                          shift and go to state 34
    expresionString                shift and go to state 119
    expresionInt                   shift and go to state 120
    expresionDouble                shift and go to state 121
    expresionBool                  shift and go to state 122
    valorString                    shift and go to state 26
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorBool                      shift and go to state 27

state 96

    (81) negacionBool -> NOT PIZQ . expresionBool PDER
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 143
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 38
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 161
    valorDouble                    shift and go to state 142
    valorBool                      shift and go to state 27
    valorInt                       shift and go to state 115

state 97

    (65) expresion -> valor operadorMat . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE

    ENTERO          shift and go to state 123
    VARIABLE        shift and go to state 117
    DOUBLE          shift and go to state 124
    STRING          shift and go to state 125
    BOOL            shift and go to state 38

    valor                          shift and go to state 34
    expresion                      shift and go to state 162
    expresionString                shift and go to state 119
    expresionInt                   shift and go to state 120
    expresionDouble                shift and go to state 121
    expresionBool                  shift and go to state 122
    valorString                    shift and go to state 26
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorBool                      shift and go to state 27

state 98

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 99

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 100

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 101

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 102

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 103

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 104

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 105

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 106

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 107

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 108

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 109

    (30) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)


state 110

    (46) asignacion -> INT VARIABLE IGUAL . expresionInt
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 134

    expresionInt                   shift and go to state 163
    valorInt                       shift and go to state 132

state 111

    (78) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (87) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    INT             reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NUM             reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRINGR         reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOLR           reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VAR             reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    WHILE           reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DO              reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    IF              reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSE            reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PRINT           reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NOT             reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ENTERO          reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRING          reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOL            reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    $end            reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    LDER            reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 87 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 87 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 87 (valorInt -> VARIABLE .)
    DIV             reduce using rule 87 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 87 (valorInt -> VARIABLE .)
    MOD             reduce using rule 87 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]


state 112

    (77) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    INT             reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NUM             reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRINGR         reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOLR           reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VAR             reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    WHILE           reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DO              reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    IF              reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSE            reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PRINT           reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NOT             reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ENTERO          reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRING          reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOL            reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    $end            reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    LDER            reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 113

    (92) expresionDouble -> valorDouble . operadorMat expresionDouble
    (93) expresionDouble -> valorDouble .
    (94) operadorMat -> . SUMA
    (95) operadorMat -> . RESTA
    (96) operadorMat -> . MULTI
    (97) operadorMat -> . DIV
    (98) operadorMat -> . DIVENTERO
    (99) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 93 (expresionDouble -> valorDouble .)
    INT             reduce using rule 93 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 93 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 93 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 93 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 93 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 93 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 93 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 93 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 93 (expresionDouble -> valorDouble .)
    DO              reduce using rule 93 (expresionDouble -> valorDouble .)
    IF              reduce using rule 93 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 93 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 93 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 93 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 93 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 93 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 93 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 93 (expresionDouble -> valorDouble .)
    $end            reduce using rule 93 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 93 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 93 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 70
    RESTA           shift and go to state 71
    MULTI           shift and go to state 72
    DIV             shift and go to state 73
    DIVENTERO       shift and go to state 74
    MOD             shift and go to state 75

    operadorMat                    shift and go to state 76

state 114

    (90) valorDouble -> DOUBLE .

    SUMA            reduce using rule 90 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 90 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 90 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 90 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 90 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 90 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 90 (valorDouble -> DOUBLE .)
    INT             reduce using rule 90 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 90 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 90 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 90 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 90 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 90 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 90 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 90 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 90 (valorDouble -> DOUBLE .)
    DO              reduce using rule 90 (valorDouble -> DOUBLE .)
    IF              reduce using rule 90 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 90 (valorDouble -> DOUBLE .)
    PRINT           reduce using rule 90 (valorDouble -> DOUBLE .)
    NOT             reduce using rule 90 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 90 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 90 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 90 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 90 (valorDouble -> DOUBLE .)
    $end            reduce using rule 90 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 90 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 90 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 90 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 90 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 90 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 90 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 90 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 90 (valorDouble -> DOUBLE .)


state 115

    (91) valorDouble -> valorInt .

    SUMA            reduce using rule 91 (valorDouble -> valorInt .)
    RESTA           reduce using rule 91 (valorDouble -> valorInt .)
    MULTI           reduce using rule 91 (valorDouble -> valorInt .)
    DIV             reduce using rule 91 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 91 (valorDouble -> valorInt .)
    MOD             reduce using rule 91 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 91 (valorDouble -> valorInt .)
    INT             reduce using rule 91 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 91 (valorDouble -> valorInt .)
    NUM             reduce using rule 91 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 91 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 91 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 91 (valorDouble -> valorInt .)
    VAR             reduce using rule 91 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 91 (valorDouble -> valorInt .)
    WHILE           reduce using rule 91 (valorDouble -> valorInt .)
    DO              reduce using rule 91 (valorDouble -> valorInt .)
    IF              reduce using rule 91 (valorDouble -> valorInt .)
    ELSE            reduce using rule 91 (valorDouble -> valorInt .)
    PRINT           reduce using rule 91 (valorDouble -> valorInt .)
    NOT             reduce using rule 91 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 91 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 91 (valorDouble -> valorInt .)
    STRING          reduce using rule 91 (valorDouble -> valorInt .)
    BOOL            reduce using rule 91 (valorDouble -> valorInt .)
    $end            reduce using rule 91 (valorDouble -> valorInt .)
    LDER            reduce using rule 91 (valorDouble -> valorInt .)
    PDER            reduce using rule 91 (valorDouble -> valorInt .)
    DIGUAL          reduce using rule 91 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 91 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 91 (valorDouble -> valorInt .)
    MENOR           reduce using rule 91 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 91 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 91 (valorDouble -> valorInt .)


state 116

    (86) valorInt -> ENTERO .

    SUMA            reduce using rule 86 (valorInt -> ENTERO .)
    RESTA           reduce using rule 86 (valorInt -> ENTERO .)
    MULTI           reduce using rule 86 (valorInt -> ENTERO .)
    DIV             reduce using rule 86 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 86 (valorInt -> ENTERO .)
    MOD             reduce using rule 86 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 86 (valorInt -> ENTERO .)
    INT             reduce using rule 86 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 86 (valorInt -> ENTERO .)
    NUM             reduce using rule 86 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 86 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 86 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 86 (valorInt -> ENTERO .)
    VAR             reduce using rule 86 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 86 (valorInt -> ENTERO .)
    WHILE           reduce using rule 86 (valorInt -> ENTERO .)
    DO              reduce using rule 86 (valorInt -> ENTERO .)
    IF              reduce using rule 86 (valorInt -> ENTERO .)
    ELSE            reduce using rule 86 (valorInt -> ENTERO .)
    PRINT           reduce using rule 86 (valorInt -> ENTERO .)
    NOT             reduce using rule 86 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 86 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 86 (valorInt -> ENTERO .)
    STRING          reduce using rule 86 (valorInt -> ENTERO .)
    BOOL            reduce using rule 86 (valorInt -> ENTERO .)
    $end            reduce using rule 86 (valorInt -> ENTERO .)
    LDER            reduce using rule 86 (valorInt -> ENTERO .)
    PDER            reduce using rule 86 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 86 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 86 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 86 (valorInt -> ENTERO .)
    MENOR           reduce using rule 86 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 86 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 86 (valorInt -> ENTERO .)


state 117

    (62) valor -> VARIABLE .
    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (83) valorString -> VARIABLE .
    (87) valorInt -> VARIABLE .
    (75) valorBool -> VARIABLE .
    (100) comparadorMat -> . DIGUAL
    (101) comparadorMat -> . NOIGUAL
    (102) comparadorMat -> . MAYOR
    (103) comparadorMat -> . MENOR
    (104) comparadorMat -> . MAYIGUAL
    (105) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 62 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    SUMA            reduce using rule 62 (valor -> VARIABLE .)
    RESTA           reduce using rule 62 (valor -> VARIABLE .)
    MULTI           reduce using rule 62 (valor -> VARIABLE .)
    DIV             reduce using rule 62 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 62 (valor -> VARIABLE .)
    MOD             reduce using rule 62 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 62 (valor -> VARIABLE .)
    PDER            reduce using rule 62 (valor -> VARIABLE .)
    INT             reduce using rule 62 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 62 (valor -> VARIABLE .)
    NUM             reduce using rule 62 (valor -> VARIABLE .)
    STRINGR         reduce using rule 62 (valor -> VARIABLE .)
    BOOLR           reduce using rule 62 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 62 (valor -> VARIABLE .)
    VAR             reduce using rule 62 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 62 (valor -> VARIABLE .)
    WHILE           reduce using rule 62 (valor -> VARIABLE .)
    DO              reduce using rule 62 (valor -> VARIABLE .)
    IF              reduce using rule 62 (valor -> VARIABLE .)
    ELSE            reduce using rule 62 (valor -> VARIABLE .)
    PRINT           reduce using rule 62 (valor -> VARIABLE .)
    NOT             reduce using rule 62 (valor -> VARIABLE .)
    ENTERO          reduce using rule 62 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 62 (valor -> VARIABLE .)
    STRING          reduce using rule 62 (valor -> VARIABLE .)
    BOOL            reduce using rule 62 (valor -> VARIABLE .)
    $end            reduce using rule 62 (valor -> VARIABLE .)
    LDER            reduce using rule 62 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 57
    NOIGUAL         shift and go to state 58
    MAYOR           shift and go to state 59
    MENOR           shift and go to state 60
    MAYIGUAL        shift and go to state 61
    MENIGUAL        shift and go to state 62

  ! SUMA            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 75 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 55

state 118

    (54) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 54 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 54 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 119

    (67) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 67 (expresion -> expresionString .)
    PDER            reduce using rule 67 (expresion -> expresionString .)
    INT             reduce using rule 67 (expresion -> expresionString .)
    DOUBLER         reduce using rule 67 (expresion -> expresionString .)
    NUM             reduce using rule 67 (expresion -> expresionString .)
    STRINGR         reduce using rule 67 (expresion -> expresionString .)
    BOOLR           reduce using rule 67 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 67 (expresion -> expresionString .)
    VAR             reduce using rule 67 (expresion -> expresionString .)
    VARIABLE        reduce using rule 67 (expresion -> expresionString .)
    WHILE           reduce using rule 67 (expresion -> expresionString .)
    DO              reduce using rule 67 (expresion -> expresionString .)
    IF              reduce using rule 67 (expresion -> expresionString .)
    ELSE            reduce using rule 67 (expresion -> expresionString .)
    PRINT           reduce using rule 67 (expresion -> expresionString .)
    NOT             reduce using rule 67 (expresion -> expresionString .)
    ENTERO          reduce using rule 67 (expresion -> expresionString .)
    DOUBLE          reduce using rule 67 (expresion -> expresionString .)
    STRING          reduce using rule 67 (expresion -> expresionString .)
    BOOL            reduce using rule 67 (expresion -> expresionString .)
    $end            reduce using rule 67 (expresion -> expresionString .)
    LDER            reduce using rule 67 (expresion -> expresionString .)


state 120

    (68) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 68 (expresion -> expresionInt .)
    PDER            reduce using rule 68 (expresion -> expresionInt .)
    INT             reduce using rule 68 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 68 (expresion -> expresionInt .)
    NUM             reduce using rule 68 (expresion -> expresionInt .)
    STRINGR         reduce using rule 68 (expresion -> expresionInt .)
    BOOLR           reduce using rule 68 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 68 (expresion -> expresionInt .)
    VAR             reduce using rule 68 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 68 (expresion -> expresionInt .)
    WHILE           reduce using rule 68 (expresion -> expresionInt .)
    DO              reduce using rule 68 (expresion -> expresionInt .)
    IF              reduce using rule 68 (expresion -> expresionInt .)
    ELSE            reduce using rule 68 (expresion -> expresionInt .)
    PRINT           reduce using rule 68 (expresion -> expresionInt .)
    NOT             reduce using rule 68 (expresion -> expresionInt .)
    ENTERO          reduce using rule 68 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 68 (expresion -> expresionInt .)
    STRING          reduce using rule 68 (expresion -> expresionInt .)
    BOOL            reduce using rule 68 (expresion -> expresionInt .)
    $end            reduce using rule 68 (expresion -> expresionInt .)
    LDER            reduce using rule 68 (expresion -> expresionInt .)


state 121

    (69) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 69 (expresion -> expresionDouble .)
    PDER            reduce using rule 69 (expresion -> expresionDouble .)
    INT             reduce using rule 69 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 69 (expresion -> expresionDouble .)
    NUM             reduce using rule 69 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 69 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 69 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 69 (expresion -> expresionDouble .)
    VAR             reduce using rule 69 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 69 (expresion -> expresionDouble .)
    WHILE           reduce using rule 69 (expresion -> expresionDouble .)
    DO              reduce using rule 69 (expresion -> expresionDouble .)
    IF              reduce using rule 69 (expresion -> expresionDouble .)
    ELSE            reduce using rule 69 (expresion -> expresionDouble .)
    PRINT           reduce using rule 69 (expresion -> expresionDouble .)
    NOT             reduce using rule 69 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 69 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 69 (expresion -> expresionDouble .)
    STRING          reduce using rule 69 (expresion -> expresionDouble .)
    BOOL            reduce using rule 69 (expresion -> expresionDouble .)
    $end            reduce using rule 69 (expresion -> expresionDouble .)
    LDER            reduce using rule 69 (expresion -> expresionDouble .)


state 122

    (70) expresion -> expresionBool .

    PUNTOYCOMA      reduce using rule 70 (expresion -> expresionBool .)
    PDER            reduce using rule 70 (expresion -> expresionBool .)
    INT             reduce using rule 70 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 70 (expresion -> expresionBool .)
    NUM             reduce using rule 70 (expresion -> expresionBool .)
    STRINGR         reduce using rule 70 (expresion -> expresionBool .)
    BOOLR           reduce using rule 70 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 70 (expresion -> expresionBool .)
    VAR             reduce using rule 70 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 70 (expresion -> expresionBool .)
    WHILE           reduce using rule 70 (expresion -> expresionBool .)
    DO              reduce using rule 70 (expresion -> expresionBool .)
    IF              reduce using rule 70 (expresion -> expresionBool .)
    ELSE            reduce using rule 70 (expresion -> expresionBool .)
    PRINT           reduce using rule 70 (expresion -> expresionBool .)
    NOT             reduce using rule 70 (expresion -> expresionBool .)
    ENTERO          reduce using rule 70 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 70 (expresion -> expresionBool .)
    STRING          reduce using rule 70 (expresion -> expresionBool .)
    BOOL            reduce using rule 70 (expresion -> expresionBool .)
    $end            reduce using rule 70 (expresion -> expresionBool .)
    LDER            reduce using rule 70 (expresion -> expresionBool .)


state 123

    (61) valor -> ENTERO .
    (86) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 61 (valor -> ENTERO .)
    SUMA            reduce using rule 61 (valor -> ENTERO .)
    RESTA           reduce using rule 61 (valor -> ENTERO .)
    MULTI           reduce using rule 61 (valor -> ENTERO .)
    DIV             reduce using rule 61 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 61 (valor -> ENTERO .)
    MOD             reduce using rule 61 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 61 (valor -> ENTERO .)
    PDER            reduce using rule 61 (valor -> ENTERO .)
    INT             reduce using rule 61 (valor -> ENTERO .)
    DOUBLER         reduce using rule 61 (valor -> ENTERO .)
    NUM             reduce using rule 61 (valor -> ENTERO .)
    STRINGR         reduce using rule 61 (valor -> ENTERO .)
    BOOLR           reduce using rule 61 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 61 (valor -> ENTERO .)
    VAR             reduce using rule 61 (valor -> ENTERO .)
    VARIABLE        reduce using rule 61 (valor -> ENTERO .)
    WHILE           reduce using rule 61 (valor -> ENTERO .)
    DO              reduce using rule 61 (valor -> ENTERO .)
    IF              reduce using rule 61 (valor -> ENTERO .)
    ELSE            reduce using rule 61 (valor -> ENTERO .)
    PRINT           reduce using rule 61 (valor -> ENTERO .)
    NOT             reduce using rule 61 (valor -> ENTERO .)
    ENTERO          reduce using rule 61 (valor -> ENTERO .)
    DOUBLE          reduce using rule 61 (valor -> ENTERO .)
    STRING          reduce using rule 61 (valor -> ENTERO .)
    BOOL            reduce using rule 61 (valor -> ENTERO .)
    $end            reduce using rule 61 (valor -> ENTERO .)
    LDER            reduce using rule 61 (valor -> ENTERO .)
    DIGUAL          reduce using rule 86 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 86 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 86 (valorInt -> ENTERO .)
    MENOR           reduce using rule 86 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 86 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 86 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 86 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 86 (valorInt -> ENTERO .) ]


state 124

    (63) valor -> DOUBLE .
    (90) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 63 (valor -> DOUBLE .)
    SUMA            reduce using rule 63 (valor -> DOUBLE .)
    RESTA           reduce using rule 63 (valor -> DOUBLE .)
    MULTI           reduce using rule 63 (valor -> DOUBLE .)
    DIV             reduce using rule 63 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 63 (valor -> DOUBLE .)
    MOD             reduce using rule 63 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 63 (valor -> DOUBLE .)
    PDER            reduce using rule 63 (valor -> DOUBLE .)
    INT             reduce using rule 63 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 63 (valor -> DOUBLE .)
    NUM             reduce using rule 63 (valor -> DOUBLE .)
    STRINGR         reduce using rule 63 (valor -> DOUBLE .)
    BOOLR           reduce using rule 63 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 63 (valor -> DOUBLE .)
    VAR             reduce using rule 63 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 63 (valor -> DOUBLE .)
    WHILE           reduce using rule 63 (valor -> DOUBLE .)
    DO              reduce using rule 63 (valor -> DOUBLE .)
    IF              reduce using rule 63 (valor -> DOUBLE .)
    ELSE            reduce using rule 63 (valor -> DOUBLE .)
    PRINT           reduce using rule 63 (valor -> DOUBLE .)
    NOT             reduce using rule 63 (valor -> DOUBLE .)
    ENTERO          reduce using rule 63 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 63 (valor -> DOUBLE .)
    STRING          reduce using rule 63 (valor -> DOUBLE .)
    BOOL            reduce using rule 63 (valor -> DOUBLE .)
    $end            reduce using rule 63 (valor -> DOUBLE .)
    LDER            reduce using rule 63 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 90 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 90 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 90 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 90 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 90 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 90 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 90 (valorDouble -> DOUBLE .) ]


state 125

    (64) valor -> STRING .
    (82) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 64 (valor -> STRING .)
    SUMA            reduce using rule 64 (valor -> STRING .)
    RESTA           reduce using rule 64 (valor -> STRING .)
    MULTI           reduce using rule 64 (valor -> STRING .)
    DIV             reduce using rule 64 (valor -> STRING .)
    DIVENTERO       reduce using rule 64 (valor -> STRING .)
    MOD             reduce using rule 64 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 64 (valor -> STRING .)
    PDER            reduce using rule 64 (valor -> STRING .)
    INT             reduce using rule 64 (valor -> STRING .)
    DOUBLER         reduce using rule 64 (valor -> STRING .)
    NUM             reduce using rule 64 (valor -> STRING .)
    STRINGR         reduce using rule 64 (valor -> STRING .)
    BOOLR           reduce using rule 64 (valor -> STRING .)
    DYNAMIC         reduce using rule 64 (valor -> STRING .)
    VAR             reduce using rule 64 (valor -> STRING .)
    VARIABLE        reduce using rule 64 (valor -> STRING .)
    WHILE           reduce using rule 64 (valor -> STRING .)
    DO              reduce using rule 64 (valor -> STRING .)
    IF              reduce using rule 64 (valor -> STRING .)
    ELSE            reduce using rule 64 (valor -> STRING .)
    PRINT           reduce using rule 64 (valor -> STRING .)
    NOT             reduce using rule 64 (valor -> STRING .)
    ENTERO          reduce using rule 64 (valor -> STRING .)
    DOUBLE          reduce using rule 64 (valor -> STRING .)
    STRING          reduce using rule 64 (valor -> STRING .)
    BOOL            reduce using rule 64 (valor -> STRING .)
    $end            reduce using rule 64 (valor -> STRING .)
    LDER            reduce using rule 64 (valor -> STRING .)

  ! SUMA            [ reduce using rule 82 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 82 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 82 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 82 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 82 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 82 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 82 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 82 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 82 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 82 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 82 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 82 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 82 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 82 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 82 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 82 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 82 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 82 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 82 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 82 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 82 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 82 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 82 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 82 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 82 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 82 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 82 (valorString -> STRING .) ]


state 126

    (47) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 134

    expresionDouble                shift and go to state 164
    valorDouble                    shift and go to state 113
    valorInt                       shift and go to state 115

state 127

    (48) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 134

    expresionDouble                shift and go to state 165
    valorDouble                    shift and go to state 113
    valorInt                       shift and go to state 115

state 128

    (49) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE

    STRING          shift and go to state 139
    VARIABLE        shift and go to state 140

    expresionString                shift and go to state 166
    valorString                    shift and go to state 26

state 129

    (50) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 143
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 38
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 167
    valorDouble                    shift and go to state 142
    valorBool                      shift and go to state 27
    valorInt                       shift and go to state 115

state 130

    (51) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE

    ENTERO          shift and go to state 123
    VARIABLE        shift and go to state 117
    DOUBLE          shift and go to state 124
    STRING          shift and go to state 125
    BOOL            shift and go to state 38

    expresion                      shift and go to state 168
    valor                          shift and go to state 34
    expresionString                shift and go to state 119
    expresionInt                   shift and go to state 120
    expresionDouble                shift and go to state 121
    expresionBool                  shift and go to state 122
    valorString                    shift and go to state 26
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorBool                      shift and go to state 27

state 131

    (52) asignacion -> VAR VARIABLE IGUAL . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE

    ENTERO          shift and go to state 123
    VARIABLE        shift and go to state 117
    DOUBLE          shift and go to state 124
    STRING          shift and go to state 125
    BOOL            shift and go to state 38

    expresion                      shift and go to state 169
    valor                          shift and go to state 34
    expresionString                shift and go to state 119
    expresionInt                   shift and go to state 120
    expresionDouble                shift and go to state 121
    expresionBool                  shift and go to state 122
    valorString                    shift and go to state 26
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorBool                      shift and go to state 27

state 132

    (88) expresionInt -> valorInt . operadorMat expresionInt
    (89) expresionInt -> valorInt .
    (94) operadorMat -> . SUMA
    (95) operadorMat -> . RESTA
    (96) operadorMat -> . MULTI
    (97) operadorMat -> . DIV
    (98) operadorMat -> . DIVENTERO
    (99) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 89 (expresionInt -> valorInt .)
    INT             reduce using rule 89 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 89 (expresionInt -> valorInt .)
    NUM             reduce using rule 89 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 89 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 89 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 89 (expresionInt -> valorInt .)
    VAR             reduce using rule 89 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 89 (expresionInt -> valorInt .)
    WHILE           reduce using rule 89 (expresionInt -> valorInt .)
    DO              reduce using rule 89 (expresionInt -> valorInt .)
    IF              reduce using rule 89 (expresionInt -> valorInt .)
    ELSE            reduce using rule 89 (expresionInt -> valorInt .)
    PRINT           reduce using rule 89 (expresionInt -> valorInt .)
    NOT             reduce using rule 89 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 89 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 89 (expresionInt -> valorInt .)
    STRING          reduce using rule 89 (expresionInt -> valorInt .)
    BOOL            reduce using rule 89 (expresionInt -> valorInt .)
    $end            reduce using rule 89 (expresionInt -> valorInt .)
    LDER            reduce using rule 89 (expresionInt -> valorInt .)
    PDER            reduce using rule 89 (expresionInt -> valorInt .)
    SUMA            shift and go to state 70
    RESTA           shift and go to state 71
    MULTI           shift and go to state 72
    DIV             shift and go to state 73
    DIVENTERO       shift and go to state 74
    MOD             shift and go to state 75

    operadorMat                    shift and go to state 69

state 133

    (88) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    PRINT           reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    NOT             reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 88 (expresionInt -> valorInt operadorMat expresionInt .)


state 134

    (87) valorInt -> VARIABLE .

    SUMA            reduce using rule 87 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 87 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 87 (valorInt -> VARIABLE .)
    DIV             reduce using rule 87 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 87 (valorInt -> VARIABLE .)
    MOD             reduce using rule 87 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 87 (valorInt -> VARIABLE .)
    INT             reduce using rule 87 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 87 (valorInt -> VARIABLE .)
    NUM             reduce using rule 87 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 87 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 87 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 87 (valorInt -> VARIABLE .)
    VAR             reduce using rule 87 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 87 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 87 (valorInt -> VARIABLE .)
    DO              reduce using rule 87 (valorInt -> VARIABLE .)
    IF              reduce using rule 87 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 87 (valorInt -> VARIABLE .)
    PRINT           reduce using rule 87 (valorInt -> VARIABLE .)
    NOT             reduce using rule 87 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 87 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 87 (valorInt -> VARIABLE .)
    STRING          reduce using rule 87 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 87 (valorInt -> VARIABLE .)
    $end            reduce using rule 87 (valorInt -> VARIABLE .)
    LDER            reduce using rule 87 (valorInt -> VARIABLE .)
    PDER            reduce using rule 87 (valorInt -> VARIABLE .)


state 135

    (92) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PRINT           reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NOT             reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 92 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 136

    (76) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    INT             reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NUM             reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRINGR         reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOLR           reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VAR             reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    WHILE           reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DO              reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    IF              reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSE            reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PRINT           reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NOT             reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ENTERO          reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRING          reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOL            reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    $end            reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    LDER            reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 137

    (79) expresionBool -> valorDouble comparadorMat VARIABLE .
    (87) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    INT             reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NUM             reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRINGR         reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOLR           reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VAR             reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    WHILE           reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DO              reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    IF              reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSE            reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PRINT           reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NOT             reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ENTERO          reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRING          reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOL            reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    $end            reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    LDER            reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 87 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 87 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 87 (valorInt -> VARIABLE .)
    DIV             reduce using rule 87 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 87 (valorInt -> VARIABLE .)
    MOD             reduce using rule 87 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]


state 138

    (84) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    INT             reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    DOUBLER         reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    NUM             reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    STRINGR         reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    BOOLR           reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    DYNAMIC         reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    VAR             reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    VARIABLE        reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    WHILE           reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    DO              reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    IF              reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    ELSE            reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    PRINT           reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    NOT             reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    ENTERO          reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    DOUBLE          reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    STRING          reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    BOOL            reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)
    PDER            reduce using rule 84 (expresionString -> valorString operadorMat expresionString .)


state 139

    (82) valorString -> STRING .

    SUMA            reduce using rule 82 (valorString -> STRING .)
    RESTA           reduce using rule 82 (valorString -> STRING .)
    MULTI           reduce using rule 82 (valorString -> STRING .)
    DIV             reduce using rule 82 (valorString -> STRING .)
    DIVENTERO       reduce using rule 82 (valorString -> STRING .)
    MOD             reduce using rule 82 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 82 (valorString -> STRING .)
    INT             reduce using rule 82 (valorString -> STRING .)
    DOUBLER         reduce using rule 82 (valorString -> STRING .)
    NUM             reduce using rule 82 (valorString -> STRING .)
    STRINGR         reduce using rule 82 (valorString -> STRING .)
    BOOLR           reduce using rule 82 (valorString -> STRING .)
    DYNAMIC         reduce using rule 82 (valorString -> STRING .)
    VAR             reduce using rule 82 (valorString -> STRING .)
    VARIABLE        reduce using rule 82 (valorString -> STRING .)
    WHILE           reduce using rule 82 (valorString -> STRING .)
    DO              reduce using rule 82 (valorString -> STRING .)
    IF              reduce using rule 82 (valorString -> STRING .)
    ELSE            reduce using rule 82 (valorString -> STRING .)
    PRINT           reduce using rule 82 (valorString -> STRING .)
    NOT             reduce using rule 82 (valorString -> STRING .)
    ENTERO          reduce using rule 82 (valorString -> STRING .)
    DOUBLE          reduce using rule 82 (valorString -> STRING .)
    STRING          reduce using rule 82 (valorString -> STRING .)
    BOOL            reduce using rule 82 (valorString -> STRING .)
    $end            reduce using rule 82 (valorString -> STRING .)
    LDER            reduce using rule 82 (valorString -> STRING .)
    PDER            reduce using rule 82 (valorString -> STRING .)


state 140

    (83) valorString -> VARIABLE .

    SUMA            reduce using rule 83 (valorString -> VARIABLE .)
    RESTA           reduce using rule 83 (valorString -> VARIABLE .)
    MULTI           reduce using rule 83 (valorString -> VARIABLE .)
    DIV             reduce using rule 83 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 83 (valorString -> VARIABLE .)
    MOD             reduce using rule 83 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 83 (valorString -> VARIABLE .)
    INT             reduce using rule 83 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 83 (valorString -> VARIABLE .)
    NUM             reduce using rule 83 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 83 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 83 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 83 (valorString -> VARIABLE .)
    VAR             reduce using rule 83 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 83 (valorString -> VARIABLE .)
    WHILE           reduce using rule 83 (valorString -> VARIABLE .)
    DO              reduce using rule 83 (valorString -> VARIABLE .)
    IF              reduce using rule 83 (valorString -> VARIABLE .)
    ELSE            reduce using rule 83 (valorString -> VARIABLE .)
    PRINT           reduce using rule 83 (valorString -> VARIABLE .)
    NOT             reduce using rule 83 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 83 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 83 (valorString -> VARIABLE .)
    STRING          reduce using rule 83 (valorString -> VARIABLE .)
    BOOL            reduce using rule 83 (valorString -> VARIABLE .)
    $end            reduce using rule 83 (valorString -> VARIABLE .)
    LDER            reduce using rule 83 (valorString -> VARIABLE .)
    PDER            reduce using rule 83 (valorString -> VARIABLE .)


state 141

    (71) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo

    PDER            shift and go to state 170


state 142

    (76) expresionBool -> valorDouble . comparadorMat expresionDouble
    (79) expresionBool -> valorDouble . comparadorMat VARIABLE
    (100) comparadorMat -> . DIGUAL
    (101) comparadorMat -> . NOIGUAL
    (102) comparadorMat -> . MAYOR
    (103) comparadorMat -> . MENOR
    (104) comparadorMat -> . MAYIGUAL
    (105) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 57
    NOIGUAL         shift and go to state 58
    MAYOR           shift and go to state 59
    MENOR           shift and go to state 60
    MAYIGUAL        shift and go to state 61
    MENIGUAL        shift and go to state 62

    comparadorMat                  shift and go to state 77

state 143

    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (75) valorBool -> VARIABLE .
    (87) valorInt -> VARIABLE .
    (100) comparadorMat -> . DIGUAL
    (101) comparadorMat -> . NOIGUAL
    (102) comparadorMat -> . MAYOR
    (103) comparadorMat -> . MENOR
    (104) comparadorMat -> . MAYIGUAL
    (105) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PDER            reduce using rule 75 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 57
    NOIGUAL         shift and go to state 58
    MAYOR           shift and go to state 59
    MENOR           shift and go to state 60
    MAYIGUAL        shift and go to state 61
    MENIGUAL        shift and go to state 62

  ! DIGUAL          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 55

state 144

    (73) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 171


state 145

    (57) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (58) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER

    PDER            shift and go to state 172


state 146

    (60) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 173


state 147

    (31) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    PRINT           reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    NOT             reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 31 (algoritmo -> asignacion PUNTOYCOMA .)


state 148

    (32) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    PRINT           reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    NOT             reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 32 (algoritmo -> expresionInt PUNTOYCOMA .)


state 149

    (33) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PRINT           reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NOT             reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 33 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 150

    (34) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    PRINT           reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    NOT             reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 34 (algoritmo -> expresionString PUNTOYCOMA .)


state 151

    (35) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    PRINT           reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    NOT             reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 35 (algoritmo -> expresionBool PUNTOYCOMA .)


state 152

    (38) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PRINT           reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NOT             reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 38 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 153

    (39) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PRINT           reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NOT             reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 39 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 154

    (40) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PRINT           reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NOT             reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 40 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 155

    (42) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    PRINT           reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NOT             reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 42 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 156

    (44) algoritmo -> imprimir PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLER         reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    NUM             reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    STRINGR         reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOLR           reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    DYNAMIC         reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    VAR             reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    VARIABLE        reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    DO              reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    PRINT           reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    NOT             reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    ENTERO          reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLE          reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    STRING          reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOL            reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 44 (algoritmo -> imprimir PUNTOYCOMA .)


state 157

    (45) algoritmo -> negacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    NUM             reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    VAR             reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    DO              reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    IF              reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    NOT             reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRING          reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    $end            reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 45 (algoritmo -> negacionBool PUNTOYCOMA .)


state 158

    (55) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 174


state 159

    (56) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 175


state 160

    (54) asignacionSimple -> VARIABLE . IGUAL expresion
    (62) valor -> VARIABLE .
    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (83) valorString -> VARIABLE .
    (87) valorInt -> VARIABLE .
    (75) valorBool -> VARIABLE .
    (100) comparadorMat -> . DIGUAL
    (101) comparadorMat -> . NOIGUAL
    (102) comparadorMat -> . MAYOR
    (103) comparadorMat -> . MENOR
    (104) comparadorMat -> . MAYIGUAL
    (105) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 56
    SUMA            reduce using rule 62 (valor -> VARIABLE .)
    RESTA           reduce using rule 62 (valor -> VARIABLE .)
    MULTI           reduce using rule 62 (valor -> VARIABLE .)
    DIV             reduce using rule 62 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 62 (valor -> VARIABLE .)
    MOD             reduce using rule 62 (valor -> VARIABLE .)
    PDER            reduce using rule 62 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 57
    NOIGUAL         shift and go to state 58
    MAYOR           shift and go to state 59
    MENOR           shift and go to state 60
    MAYIGUAL        shift and go to state 61
    MENIGUAL        shift and go to state 62

  ! SUMA            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 83 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 87 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 75 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 55

state 161

    (81) negacionBool -> NOT PIZQ expresionBool . PDER

    PDER            shift and go to state 176


state 162

    (65) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 65 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 65 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 65 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 65 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 65 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 65 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 65 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 65 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 65 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 65 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 65 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 65 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 65 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 65 (expresion -> valor operadorMat expresion .)
    NOT             reduce using rule 65 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 65 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 65 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 65 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 65 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 65 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 65 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 65 (expresion -> valor operadorMat expresion .)


state 163

    (46) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 46 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 164

    (47) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 47 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 165

    (48) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 48 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 166

    (49) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 49 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 167

    (50) asignacion -> BOOLR VARIABLE IGUAL expresionBool .

    PUNTOYCOMA      reduce using rule 50 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)


state 168

    (51) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 51 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 169

    (52) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 52 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 170

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (72) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    LIZQ            shift and go to state 177
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionBool                  shift and go to state 88
    algoritmo                      shift and go to state 178
    asignacion                     shift and go to state 84
    expresionInt                   shift and go to state 85
    expresionDouble                shift and go to state 86
    expresionString                shift and go to state 87
    expresion                      shift and go to state 14
    sentenciaWhile                 shift and go to state 89
    sentenciaDoWhile               shift and go to state 90
    sentenciaIf                    shift and go to state 91
    sentenciaElse                  shift and go to state 92
    imprimir                       shift and go to state 93
    negacionBool                   shift and go to state 94
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 171

    (73) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 179


state 172

    (57) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (58) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    LIZQ            shift and go to state 181
    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionBool                  shift and go to state 88
    algoritmo                      shift and go to state 180
    asignacion                     shift and go to state 84
    expresionInt                   shift and go to state 85
    expresionDouble                shift and go to state 86
    expresionString                shift and go to state 87
    expresion                      shift and go to state 14
    sentenciaWhile                 shift and go to state 89
    sentenciaDoWhile               shift and go to state 90
    sentenciaIf                    shift and go to state 91
    sentenciaElse                  shift and go to state 92
    imprimir                       shift and go to state 93
    negacionBool                   shift and go to state 94
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 173

    (60) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    PRINT           reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NOT             reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 60 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 174

    (55) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 55 (imprimir -> PRINT PIZQ expresion PDER .)


state 175

    (56) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 56 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 176

    (81) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 81 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 177

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionBool                  shift and go to state 88
    algoritmo                      shift and go to state 182
    asignacion                     shift and go to state 84
    expresionInt                   shift and go to state 85
    expresionDouble                shift and go to state 86
    expresionString                shift and go to state 87
    expresion                      shift and go to state 14
    sentenciaWhile                 shift and go to state 89
    sentenciaDoWhile               shift and go to state 90
    sentenciaIf                    shift and go to state 91
    sentenciaElse                  shift and go to state 92
    imprimir                       shift and go to state 93
    negacionBool                   shift and go to state 94
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 178

    (72) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 179

    (73) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 183


state 180

    (57) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 57 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 181

    (58) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (31) algoritmo -> . asignacion PUNTOYCOMA
    (32) algoritmo -> . expresionInt PUNTOYCOMA
    (33) algoritmo -> . expresionDouble PUNTOYCOMA
    (34) algoritmo -> . expresionString PUNTOYCOMA
    (35) algoritmo -> . expresionBool PUNTOYCOMA
    (36) algoritmo -> . expresion
    (37) algoritmo -> . sentenciaWhile
    (38) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (39) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (40) algoritmo -> . sentenciaIf PUNTOYCOMA
    (41) algoritmo -> . sentenciaIf
    (42) algoritmo -> . sentenciaElse PUNTOYCOMA
    (43) algoritmo -> . sentenciaElse
    (44) algoritmo -> . imprimir PUNTOYCOMA
    (45) algoritmo -> . negacionBool PUNTOYCOMA
    (46) asignacion -> . INT VARIABLE IGUAL expresionInt
    (47) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (48) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (49) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (50) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (51) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (52) asignacion -> . VAR VARIABLE IGUAL expresion
    (53) asignacion -> . asignacionSimple
    (88) expresionInt -> . valorInt operadorMat expresionInt
    (89) expresionInt -> . valorInt
    (92) expresionDouble -> . valorDouble operadorMat expresionDouble
    (93) expresionDouble -> . valorDouble
    (84) expresionString -> . valorString operadorMat expresionString
    (85) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (73) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (57) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (58) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (59) sentenciaElse -> . ELSE algoritmo
    (60) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) imprimir -> . PRINT PIZQ expresion PDER
    (56) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (81) negacionBool -> . NOT PIZQ expresionBool PDER
    (54) asignacionSimple -> . VARIABLE IGUAL expresion
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (82) valorString -> . STRING
    (83) valorString -> . VARIABLE
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING

    INT             shift and go to state 15
    DOUBLER         shift and go to state 17
    NUM             shift and go to state 18
    STRINGR         shift and go to state 19
    BOOLR           shift and go to state 20
    DYNAMIC         shift and go to state 21
    VAR             shift and go to state 22
    VARIABLE        shift and go to state 16
    WHILE           shift and go to state 28
    DO              shift and go to state 29
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    PRINT           shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 35
    DOUBLE          shift and go to state 36
    STRING          shift and go to state 37
    BOOL            shift and go to state 38

    expresionBool                  shift and go to state 88
    algoritmo                      shift and go to state 184
    asignacion                     shift and go to state 84
    expresionInt                   shift and go to state 85
    expresionDouble                shift and go to state 86
    expresionString                shift and go to state 87
    expresion                      shift and go to state 14
    sentenciaWhile                 shift and go to state 89
    sentenciaDoWhile               shift and go to state 90
    sentenciaIf                    shift and go to state 91
    sentenciaElse                  shift and go to state 92
    imprimir                       shift and go to state 93
    negacionBool                   shift and go to state 94
    asignacionSimple               shift and go to state 23
    valorInt                       shift and go to state 24
    valorDouble                    shift and go to state 25
    valorString                    shift and go to state 26
    valorBool                      shift and go to state 27
    valor                          shift and go to state 34

state 182

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 185


state 183

    (73) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (90) valorDouble -> . DOUBLE
    (91) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (86) valorInt -> . ENTERO
    (87) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 143
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 38
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 186
    valorDouble                    shift and go to state 142
    valorBool                      shift and go to state 27
    valorInt                       shift and go to state 115

state 184

    (58) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 187


state 185

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 186

    (73) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER

    PDER            shift and go to state 188


state 187

    (58) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 58 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 188

    (73) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 73 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 7 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 16 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 16 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 24 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 24 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 24 resolved as shift
WARNING: shift/reduce conflict for DIV in state 24 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 24 resolved as shift
WARNING: shift/reduce conflict for MOD in state 24 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 85 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 86 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 87 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 88 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 89 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 91 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 92 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 143 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 143 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 160 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 160 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 16 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 16
WARNING: reduce/reduce conflict in state 16 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 16
WARNING: reduce/reduce conflict in state 16 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 16
WARNING: reduce/reduce conflict in state 16 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 16
WARNING: reduce/reduce conflict in state 24 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 24
WARNING: reduce/reduce conflict in state 35 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 35
WARNING: reduce/reduce conflict in state 36 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 36
WARNING: reduce/reduce conflict in state 37 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 37
WARNING: reduce/reduce conflict in state 111 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 111
WARNING: reduce/reduce conflict in state 117 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 117
WARNING: reduce/reduce conflict in state 123 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 123
WARNING: reduce/reduce conflict in state 124 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 124
WARNING: reduce/reduce conflict in state 125 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 125
WARNING: reduce/reduce conflict in state 137 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 137
WARNING: reduce/reduce conflict in state 160 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 160
