Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    COMILLAD
    COMILLAS
    FLECHA
    FUNCIONARR
    RETURN

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expresionSet PUNTOYCOMA
Rule 56    final -> expresionSet PUNTOYCOMA final
Rule 57    final -> expresionMap PUNTOYCOMA
Rule 58    final -> expresionMap PUNTOYCOMA final
Rule 59    final -> expresionSwitch PUNTOYCOMA
Rule 60    final -> expresionSwitch PUNTOYCOMA final
Rule 61    expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
Rule 62    cases -> caseString
Rule 63    cases -> caseInt
Rule 64    cases -> caseBool
Rule 65    caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
Rule 66    caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
Rule 67    caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
Rule 68    caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
Rule 69    caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
Rule 70    caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool
Rule 71    expresionMap -> MAP VARIABLE
Rule 72    expresionMap -> MAP VARIABLE IGUAL LIZQ LDER
Rule 73    expresionMap -> LIZQ LDER
Rule 74    expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER
Rule 75    expresionMap -> LIZQ expMap LDER
Rule 76    expMap -> claveValor DOSPUNTOS claveValor
Rule 77    expMap -> claveValor DOSPUNTOS claveValor COMA expMap
Rule 78    claveValor -> VARIABLE
Rule 79    claveValor -> STRING
Rule 80    claveValor -> ENTERO
Rule 81    claveValor -> DOUBLE
Rule 82    claveValor -> BOOL
Rule 83    claveValor -> CIZQ expListDynamic CDER
Rule 84    claveValor -> CIZQ expListSet CDER
Rule 85    claveValor -> expresionNewList
Rule 86    claveValor -> SETFROM PIZQ CIZQ CDER PDER
Rule 87    claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 88    claveValor -> LIZQ LDER
Rule 89    claveValor -> LIZQ expMap LDER
Rule 90    expresionSet -> SET VARIABLE
Rule 91    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 92    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 93    expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 94    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 95    expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 96    expresionNewList -> NEWLIST PIZQ PDER
Rule 97    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 98    expresionNewList -> CIZQ CDER
Rule 99    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 100   expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 101   expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 102   expresionLista -> CIZQ expListString CDER
Rule 103   expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 104   expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 105   expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 106   expresionLista -> CIZQ expListInt CDER
Rule 107   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 108   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 109   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 110   expresionLista -> CIZQ expListNum CDER
Rule 111   expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 112   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 113   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 114   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 115   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 116   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 117   expresionLista -> CIZQ expListBool CDER
Rule 118   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 119   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 120   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 121   expresionLista -> CIZQ expListDynamic CDER
Rule 122   expresionLista -> LIST MENOR SET MAYOR VARIABLE
Rule 123   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
Rule 124   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
Rule 125   expresionLista -> CIZQ expListSet CDER
Rule 126   expresionLista -> LIST MENOR MAP MAYOR VARIABLE
Rule 127   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
Rule 128   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
Rule 129   expresionLista -> CIZQ expListMap CDER
Rule 130   expresionLista -> VARIABLE CIZQ ENTERO CDER
Rule 131   expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 132   expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
Rule 133   expListString -> STRING
Rule 134   expListString -> STRING COMA expListString
Rule 135   expListString -> VARIABLE
Rule 136   expListString -> VARIABLE COMA expListString
Rule 137   expListInt -> ENTERO
Rule 138   expListInt -> ENTERO COMA expListInt
Rule 139   expListInt -> VARIABLE
Rule 140   expListInt -> VARIABLE COMA expListInt
Rule 141   expListNum -> ENTERO
Rule 142   expListNum -> DOUBLE
Rule 143   expListNum -> ENTERO COMA expListNum
Rule 144   expListNum -> DOUBLE COMA expListNum
Rule 145   expListNum -> VARIABLE
Rule 146   expListNum -> VARIABLE COMA expListNum
Rule 147   expListBool -> BOOL
Rule 148   expListBool -> BOOL COMA expListBool
Rule 149   expListBool -> VARIABLE
Rule 150   expListBool -> VARIABLE COMA expListBool
Rule 151   expListDynamic -> STRING
Rule 152   expListDynamic -> ENTERO
Rule 153   expListDynamic -> DOUBLE
Rule 154   expListDynamic -> BOOL
Rule 155   expListDynamic -> STRING COMA expListDynamic
Rule 156   expListDynamic -> ENTERO COMA expListDynamic
Rule 157   expListDynamic -> DOUBLE COMA expListDynamic
Rule 158   expListDynamic -> BOOL COMA expListDynamic
Rule 159   expListDynamic -> VARIABLE
Rule 160   expListDynamic -> VARIABLE COMA expListDynamic
Rule 161   expListSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 162   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 163   expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet
Rule 164   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
Rule 165   expListSet -> VARIABLE
Rule 166   expListSet -> VARIABLE COMA expListSet
Rule 167   expListMap -> LIZQ LDER
Rule 168   expListMap -> LIZQ expMap LDER
Rule 169   expListMap -> LIZQ LDER COMA expListMap
Rule 170   expListMap -> LIZQ expMap LDER COMA expListMap
Rule 171   expListMap -> VARIABLE
Rule 172   expListMap -> VARIABLE COMA expListMap
Rule 173   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 174   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 175   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 176   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 177   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 178   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 179   asignacion -> VAR VARIABLE IGUAL expresion
Rule 180   asignacion -> asignacionSimple
Rule 181   asignacionSimple -> VARIABLE IGUAL expresion
Rule 182   imprimir -> PRINT PIZQ expresion PDER
Rule 183   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 184   funcionStdin -> FUNCIONSTDIN
Rule 185   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 186   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 187   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 188   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 189   sentenciaElse -> ELSE final
Rule 190   sentenciaElse -> ELSE LIZQ final LDER
Rule 191   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 192   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 193   valor -> ENTERO
Rule 194   valor -> VARIABLE
Rule 195   valor -> DOUBLE
Rule 196   valor -> STRING
Rule 197   expresion -> valor operadorMat expresion
Rule 198   expresion -> valor
Rule 199   expresion -> expresionString
Rule 200   expresion -> expresionInt
Rule 201   expresion -> expresionDouble
Rule 202   expresion -> expresionBool
Rule 203   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 204   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 205   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 206   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 207   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 208   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 209   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 210   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 211   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 212   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 213   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 214   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 215   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 216   expresionBoolFor -> valorBool
Rule 217   expresionBoolFor -> negacionBool
Rule 218   expresionBoolFor -> comparacionBool
Rule 219   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 220   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 221   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 222   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 223   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 224   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 225   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 226   valorBool -> BOOL
Rule 227   valorBool -> VARIABLE
Rule 228   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 229   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 230   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 231   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 232   expresionBool -> valorBool
Rule 233   expresionBool -> negacionBool
Rule 234   expresionBool -> comparacionBool
Rule 235   expresionBool -> valor IS objeto
Rule 236   expresionBool -> valor ISNEGADO objeto
Rule 237   negacionBool -> NOT PIZQ expresionBool PDER
Rule 238   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 239   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 240   valorString -> STRING
Rule 241   valorString -> VARIABLE
Rule 242   valorString -> FUNCIONSTDIN
Rule 243   valorString -> expresionIndexString
Rule 244   valorString -> sentenciaSubstring
Rule 245   valorString -> STRING CIZQ ENTERO CDER
Rule 246   expresionString -> valorString SUMA expresionString
Rule 247   expresionString -> valorString
Rule 248   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 249   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 250   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 251   valorInt -> ENTERO
Rule 252   valorInt -> VARIABLE
Rule 253   expresionInt -> valorInt operadorMat expresionInt
Rule 254   expresionInt -> valorInt
Rule 255   valorDouble -> DOUBLE
Rule 256   valorDouble -> valorInt
Rule 257   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 258   expresionDouble -> valorDouble
Rule 259   operadorMat -> SUMA
Rule 260   operadorMat -> RESTA
Rule 261   operadorMat -> MULTI
Rule 262   operadorMat -> DIV
Rule 263   operadorMat -> DIVENTERO
Rule 264   operadorMat -> MOD
Rule 265   comparadorMat -> DIGUAL
Rule 266   comparadorMat -> NOIGUAL
Rule 267   comparadorMat -> MAYOR
Rule 268   comparadorMat -> MENOR
Rule 269   comparadorMat -> MAYIGUAL
Rule 270   comparadorMat -> MENIGUAL
Rule 271   operadorLogico -> AND
Rule 272   operadorLogico -> OR
Rule 273   objeto -> STRINGR
Rule 274   objeto -> INT
Rule 275   objeto -> DOUBLER
Rule 276   objeto -> NUM
Rule 277   objeto -> VAR
Rule 278   objeto -> DYNAMIC
Rule 279   objeto -> LIST
Rule 280   objeto -> BOOL
Rule 281   objeto -> MAP
Rule 282   objeto -> SET

Terminals, with rules where they appear

AND                  : 271
AS                   : 
BOOL                 : 69 70 82 147 148 154 158 226 280
BOOLR                : 114 115 116 177
BREAK                : 65 66 67 68 69 70
CASE                 : 65 66 67 68 69 70
CDER                 : 83 84 86 87 91 92 93 94 98 100 102 104 106 108 110 112 115 117 119 121 123 125 127 129 130 161 162 163 164 245 248
CIZQ                 : 83 84 86 87 91 92 93 94 98 100 102 104 106 108 110 112 115 117 119 121 123 125 127 129 130 161 162 163 164 245 248
COMA                 : 77 132 134 136 138 140 143 144 146 148 150 155 156 157 158 160 163 164 166 169 170 172 250
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 265
DIV                  : 262
DIVENTERO            : 263
DO                   : 225
DOSPUNTOS            : 65 66 67 68 69 70 76 77
DOUBLE               : 81 142 144 153 157 195 255
DOUBLER              : 107 108 109 174 204 275
DRESTA               : 49 50 221 222
DSUMA                : 47 48 219 220
DYNAMIC              : 118 119 120 178 206 207 278
ELSE                 : 189 190
ELSEIF               : 191 192
ENTERO               : 67 68 80 95 97 130 131 132 132 137 138 141 143 152 156 193 245 248 249 250 250 251
FLECHA               : 
FOR                  : 219 220 221 222
FUNCIONARR           : 
FUNCIONRANGE         : 132
FUNCIONSTDIN         : 184 242
FUNCIONSTDOUT        : 185 186
FUNCIONSUBSTRING     : 249 250
FUNCIONTAKE          : 95 131
IF                   : 187 188
IGUAL                : 72 74 92 94 100 101 104 105 108 109 112 113 115 116 119 120 123 124 127 128 173 174 175 176 177 178 179 181 203 204 205 206 207 208 209 210 211
INT                  : 103 104 105 173 203 274
IS                   : 235
ISNEGADO             : 236
LDER                 : 61 72 73 74 75 88 89 167 168 169 170 188 190 192 219 221 223 225
LIST                 : 99 100 101 103 104 105 107 108 109 111 112 113 114 115 116 118 119 120 122 123 124 126 127 128 279
LIZQ                 : 61 72 73 74 75 88 89 167 168 169 170 188 190 192 219 221 223 225
MAP                  : 71 72 74 126 127 128 281
MAYIGUAL             : 269
MAYOR                : 99 100 101 103 104 105 107 108 109 111 112 113 114 115 116 118 119 120 122 123 124 126 127 128 267
MENIGUAL             : 270
MENOR                : 99 100 101 103 104 105 107 108 109 111 112 113 114 115 116 118 119 120 122 123 124 126 127 128 268
MOD                  : 264
MULTI                : 261
NEWLIST              : 96 97
NOIGUAL              : 266
NOT                  : 237
NUM                  : 111 112 113 175 205 276
OR                   : 272
PDER                 : 61 86 87 91 92 93 94 95 96 97 131 132 161 162 163 164 182 183 185 186 187 188 191 192 219 220 221 222 223 224 225 237 249 250
PIZQ                 : 61 86 87 91 92 93 94 95 96 97 131 132 161 162 163 164 182 183 185 186 187 188 191 192 219 220 221 222 223 224 225 237 249 250
PRINT                : 182 183
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 65 66 67 68 69 70 219 219 220 220 221 221 222 222
RESTA                : 260
RETURN               : 
SET                  : 90 92 94 122 123 124 282
SETFROM              : 86 87 91 92 93 94 161 162 163 164
STRING               : 65 66 79 133 134 151 155 196 240 245
STRINGR              : 99 100 101 176 273
SUMA                 : 246 259
SWITCH               : 61
VAR                  : 179 208 209 277
VARIABLE             : 47 48 49 50 61 71 72 74 78 90 92 94 95 99 100 101 103 104 105 107 108 109 111 112 113 114 115 116 118 119 120 122 123 124 126 127 128 130 131 132 135 136 139 140 145 146 149 150 159 160 165 166 171 172 173 174 175 176 177 178 179 181 194 203 204 205 206 207 208 209 210 211 213 214 214 215 219 220 221 222 227 229 230 230 231 241 249 250 252
WHILE                : 223 224 225
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 219 220 221 222
asignacionSimple     : 180 183 186
caseBool             : 64 70
caseInt              : 63 68
caseString           : 62 66
cases                : 61
claveValor           : 76 76 77 77
comparacionBool      : 35 36 218 234 239
comparadorMat        : 212 213 214 215 228 229 230 231
expListBool          : 115 117 148 150
expListDynamic       : 83 87 93 94 119 121 155 156 157 158 160 162 164
expListInt           : 104 106 138 140
expListMap           : 127 129 169 170 172
expListNum           : 108 110 112 143 144 146
expListSet           : 84 123 125 163 164 166
expListString        : 100 102 134 136
expMap               : 74 75 77 89 168 170
expresion            : 178 179 181 182 185 197
expresionBool        : 9 10 177 187 188 191 192 202 223 224 225 237 238 238 239
expresionBoolFor     : 11 12 219 220 221 222
expresionDouble      : 5 6 174 175 201 204 205 207 209 211 212 213 228 229 257
expresionIndexString : 243
expresionInt         : 3 4 173 200 203 206 208 210 253
expresionLista       : 51 52
expresionMap         : 57 58
expresionNewList     : 53 54 85 101 105 109 113 116 120 124 128
expresionSet         : 55 56
expresionString      : 7 8 176 199 246
expresionSwitch      : 59 60
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 56 58 60 65 66 67 68 69 70 187 188 189 190 191 192 219 220 221 222 223 224 225 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 217 233
objeto               : 235 236
operadorLogico       : 238 239
operadorMat          : 197 253 257
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 244
sentenciaWhile       : 13 14 15 16
valor                : 197 198 235 236
valorBool            : 216 232
valorDouble          : 212 215 228 231 257 258
valorInt             : 253 254 256
valorString          : 246 247 248

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 62


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 64


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 65


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 66
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 70


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    BREAK           reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 72
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! MAP             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SWITCH          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 71
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 73


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 74
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    BREAK           reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! MAP             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SWITCH          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 75
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 76
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    BREAK           reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SET             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SETFROM         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! MAP             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SWITCH          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 77
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 78


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 79


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 80


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (233) expresionBool -> negacionBool .
    (217) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 81
    AND             reduce using rule 233 (expresionBool -> negacionBool .)
    OR              reduce using rule 233 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 233 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 217 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (234) expresionBool -> comparacionBool .
    (218) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 82
    AND             reduce using rule 234 (expresionBool -> comparacionBool .)
    OR              reduce using rule 234 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 234 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 218 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 83
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    BREAK           reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SET             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SETFROM         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! MAP             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SWITCH          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 84
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 85
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    BREAK           reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! MAP             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SWITCH          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 86
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (244) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 87
    SUMA            reduce using rule 244 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 244 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 244 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (229) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (230) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (213) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (214) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (249) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (130) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (131) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (95) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (181) asignacionSimple -> VARIABLE . IGUAL expresion
    (252) valorInt -> VARIABLE .
    (241) valorString -> VARIABLE .
    (227) valorBool -> VARIABLE .
    (194) valor -> VARIABLE .
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 241 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 241 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 227 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 88
    DRESTA          shift and go to state 89
    FUNCIONSUBSTRING shift and go to state 91
    CIZQ            shift and go to state 92
    FUNCIONTAKE     shift and go to state 93
    FUNCIONRANGE    shift and go to state 94
    IGUAL           shift and go to state 95
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 241 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 227 (valorBool -> VARIABLE .)
    AND             reduce using rule 227 (valorBool -> VARIABLE .)
    OR              reduce using rule 227 (valorBool -> VARIABLE .)
    IS              reduce using rule 194 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 194 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 241 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 90

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 102


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 103


state 23

    (55) final -> expresionSet . PUNTOYCOMA
    (56) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 104


state 24

    (57) final -> expresionMap . PUNTOYCOMA
    (58) final -> expresionMap . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 105


state 25

    (59) final -> expresionSwitch . PUNTOYCOMA
    (60) final -> expresionSwitch . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 106


state 26

    (173) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 107


state 27

    (174) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 108


state 28

    (175) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 109


state 29

    (176) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 110


state 30

    (177) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 111


state 31

    (178) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 112


state 32

    (179) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 113


state 33

    (180) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 180 (asignacion -> asignacionSimple .)


state 34

    (253) expresionInt -> valorInt . operadorMat expresionInt
    (254) expresionInt -> valorInt .
    (256) valorDouble -> valorInt .
    (259) operadorMat -> . SUMA
    (260) operadorMat -> . RESTA
    (261) operadorMat -> . MULTI
    (262) operadorMat -> . DIV
    (263) operadorMat -> . DIVENTERO
    (264) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 254 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 254 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 254 (expresionInt -> valorInt .)
    PDER            reduce using rule 254 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 256 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 256 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 256 (valorDouble -> valorInt .)
    MENOR           reduce using rule 256 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 256 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 256 (valorDouble -> valorInt .)
    SUMA            shift and go to state 115
    RESTA           shift and go to state 116
    MULTI           shift and go to state 117
    DIV             shift and go to state 118
    DIVENTERO       shift and go to state 119
    MOD             shift and go to state 120

  ! SUMA            [ reduce using rule 256 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 256 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 256 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 256 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 256 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 256 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 256 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 256 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 114

state 35

    (257) expresionDouble -> valorDouble . operadorMat expresionDouble
    (258) expresionDouble -> valorDouble .
    (228) expresionBool -> valorDouble . comparadorMat expresionDouble
    (231) expresionBool -> valorDouble . comparadorMat VARIABLE
    (212) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (215) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (259) operadorMat -> . SUMA
    (260) operadorMat -> . RESTA
    (261) operadorMat -> . MULTI
    (262) operadorMat -> . DIV
    (263) operadorMat -> . DIVENTERO
    (264) operadorMat -> . MOD
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 258 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 115
    RESTA           shift and go to state 116
    MULTI           shift and go to state 117
    DIV             shift and go to state 118
    DIVENTERO       shift and go to state 119
    MOD             shift and go to state 120
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    operadorMat                    shift and go to state 121
    comparadorMat                  shift and go to state 122

state 36

    (246) expresionString -> valorString . SUMA expresionString
    (247) expresionString -> valorString .
    (248) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 123
    PUNTOYCOMA      reduce using rule 247 (expresionString -> valorString .)
    PDER            reduce using rule 247 (expresionString -> valorString .)
    CIZQ            shift and go to state 124


state 37

    (232) expresionBool -> valorBool .
    (216) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 216 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 232 (expresionBool -> valorBool .)
    OR              reduce using rule 232 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 216 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 232 (expresionBool -> valorBool .) ]


state 38

    (235) expresionBool -> valor . IS objeto
    (236) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 125
    ISNEGADO        shift and go to state 126


state 39

    (223) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 127


state 40

    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 129
    VARIABLE        shift and go to state 132
    STRING          shift and go to state 133
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 135
    BOOL            shift and go to state 136
    CIZQ            shift and go to state 137
    SETFROM         shift and go to state 139
    LIZQ            shift and go to state 128
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 130
    claveValor                     shift and go to state 131
    expresionNewList               shift and go to state 138

state 41

    (225) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 140


state 42

    (187) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (188) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 141


state 43

    (189) sentenciaElse -> ELSE . final
    (190) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 143
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 142
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 44

    (182) imprimir -> PRINT . PIZQ expresion PDER
    (183) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 144


state 45

    (184) funcionStdin -> FUNCIONSTDIN .
    (242) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 184 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 184 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 242 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 242 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 242 (valorString -> FUNCIONSTDIN .) ]


state 46

    (185) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (186) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 145


state 47

    (237) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 146


state 48

    (191) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 147


state 49

    (219) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 148


state 50

    (251) valorInt -> ENTERO .
    (193) valor -> ENTERO .

    SUMA            reduce using rule 251 (valorInt -> ENTERO .)
    RESTA           reduce using rule 251 (valorInt -> ENTERO .)
    MULTI           reduce using rule 251 (valorInt -> ENTERO .)
    DIV             reduce using rule 251 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 251 (valorInt -> ENTERO .)
    MOD             reduce using rule 251 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 251 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 251 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 251 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 251 (valorInt -> ENTERO .)
    MENOR           reduce using rule 251 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 251 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 251 (valorInt -> ENTERO .)
    IS              reduce using rule 193 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 193 (valor -> ENTERO .)


state 51

    (99) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (104) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (122) expresionLista -> LIST . MENOR SET MAYOR VARIABLE
    (123) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (126) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 149


state 52

    (102) expresionLista -> CIZQ . expListString CDER
    (106) expresionLista -> CIZQ . expListInt CDER
    (110) expresionLista -> CIZQ . expListNum CDER
    (117) expresionLista -> CIZQ . expListBool CDER
    (121) expresionLista -> CIZQ . expListDynamic CDER
    (125) expresionLista -> CIZQ . expListSet CDER
    (129) expresionLista -> CIZQ . expListMap CDER
    (98) expresionNewList -> CIZQ . CDER
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet
    (167) expListMap -> . LIZQ LDER
    (168) expListMap -> . LIZQ expMap LDER
    (169) expListMap -> . LIZQ LDER COMA expListMap
    (170) expListMap -> . LIZQ expMap LDER COMA expListMap
    (171) expListMap -> . VARIABLE
    (172) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 151
    STRING          shift and go to state 158
    VARIABLE        shift and go to state 159
    ENTERO          shift and go to state 160
    DOUBLE          shift and go to state 161
    BOOL            shift and go to state 162
    SETFROM         shift and go to state 163
    LIZQ            shift and go to state 164

    expListString                  shift and go to state 150
    expListInt                     shift and go to state 152
    expListNum                     shift and go to state 153
    expListBool                    shift and go to state 154
    expListDynamic                 shift and go to state 155
    expListSet                     shift and go to state 156
    expListMap                     shift and go to state 157

state 53

    (90) expresionSet -> SET . VARIABLE
    (92) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 165


state 54

    (71) expresionMap -> MAP . VARIABLE
    (72) expresionMap -> MAP . VARIABLE IGUAL LIZQ LDER
    (74) expresionMap -> MAP . VARIABLE IGUAL LIZQ expMap LDER

    VARIABLE        shift and go to state 166


state 55

    (96) expresionNewList -> NEWLIST . PIZQ PDER
    (97) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 167


state 56

    (91) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (93) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 168


state 57

    (61) expresionSwitch -> SWITCH . PIZQ VARIABLE PDER LIZQ cases LDER

    PIZQ            shift and go to state 169


state 58

    (255) valorDouble -> DOUBLE .
    (195) valor -> DOUBLE .

    SUMA            reduce using rule 255 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 255 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 255 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 255 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 255 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 255 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 255 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 255 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 255 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 255 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 255 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 255 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 255 (valorDouble -> DOUBLE .)
    IS              reduce using rule 195 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 195 (valor -> DOUBLE .)


state 59

    (240) valorString -> STRING .
    (245) valorString -> STRING . CIZQ ENTERO CDER
    (196) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 240 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 240 (valorString -> STRING .)
    CIZQ            shift and go to state 170
    IS              reduce using rule 196 (valor -> STRING .)
    ISNEGADO        reduce using rule 196 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 240 (valorString -> STRING .) ]


state 60

    (243) valorString -> expresionIndexString .

    SUMA            reduce using rule 243 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 243 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 243 (valorString -> expresionIndexString .)
    PDER            reduce using rule 243 (valorString -> expresionIndexString .)


state 61

    (226) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 226 (valorBool -> BOOL .)
    AND             reduce using rule 226 (valorBool -> BOOL .)
    OR              reduce using rule 226 (valorBool -> BOOL .)
    PDER            reduce using rule 226 (valorBool -> BOOL .)


state 62

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    BREAK           reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 171
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 63

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    BREAK           reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 172
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 64

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    BREAK           reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 173
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 65

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    BREAK           reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 174
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 66

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    BREAK           reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 175
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 67

    (238) comparacionBool -> expresionBool operadorLogico . expresionBool
    (239) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 183
    STRING          shift and go to state 184

    expresionBool                  shift and go to state 176
    comparacionBool                shift and go to state 177
    valorDouble                    shift and go to state 178
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    valor                          shift and go to state 38
    valorInt                       shift and go to state 182

state 68

    (271) operadorLogico -> AND .

    VARIABLE        reduce using rule 271 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 271 (operadorLogico -> AND .)
    BOOL            reduce using rule 271 (operadorLogico -> AND .)
    NOT             reduce using rule 271 (operadorLogico -> AND .)
    ENTERO          reduce using rule 271 (operadorLogico -> AND .)
    STRING          reduce using rule 271 (operadorLogico -> AND .)


state 69

    (272) operadorLogico -> OR .

    VARIABLE        reduce using rule 272 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 272 (operadorLogico -> OR .)
    BOOL            reduce using rule 272 (operadorLogico -> OR .)
    NOT             reduce using rule 272 (operadorLogico -> OR .)
    ENTERO          reduce using rule 272 (operadorLogico -> OR .)
    STRING          reduce using rule 272 (operadorLogico -> OR .)


state 70

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    BREAK           reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 185
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 71

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    MAP             reduce using rule 14 (final -> sentenciaWhile final .)
    LIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    SWITCH          reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)
    BREAK           reduce using rule 14 (final -> sentenciaWhile final .)


state 72

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    BREAK           reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 186
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 73

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    BREAK           reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 187
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 74

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    BREAK           reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 188
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 75

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    MAP             reduce using rule 22 (final -> sentenciaIf final .)
    LIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    SWITCH          reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)
    BREAK           reduce using rule 22 (final -> sentenciaIf final .)


state 76

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    BREAK           reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 189
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 77

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    SET             reduce using rule 26 (final -> sentenciaElse final .)
    SETFROM         reduce using rule 26 (final -> sentenciaElse final .)
    MAP             reduce using rule 26 (final -> sentenciaElse final .)
    LIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    SWITCH          reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)
    BREAK           reduce using rule 26 (final -> sentenciaElse final .)


state 78

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    BREAK           reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 190
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 79

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    BREAK           reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 191
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 80

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    BREAK           reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 192
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 81

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    BREAK           reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 193
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 82

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    BREAK           reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 194
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 83

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    BREAK           reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 195
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 84

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    SET             reduce using rule 38 (final -> sentenciaElseIf final .)
    SETFROM         reduce using rule 38 (final -> sentenciaElseIf final .)
    MAP             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    SWITCH          reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)
    BREAK           reduce using rule 38 (final -> sentenciaElseIf final .)


state 85

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    BREAK           reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 196
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 86

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    SET             reduce using rule 43 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 43 (final -> sentenciaFor final .)
    MAP             reduce using rule 43 (final -> sentenciaFor final .)
    LIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    SWITCH          reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)
    BREAK           reduce using rule 43 (final -> sentenciaFor final .)


state 87

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    BREAK           reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 197
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 88

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 198


state 89

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 199


state 90

    (229) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (230) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (213) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (214) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 200
    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204

    expresionDouble                shift and go to state 201
    valorDouble                    shift and go to state 202
    valorInt                       shift and go to state 182

state 91

    (249) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (250) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 205


state 92

    (130) expresionLista -> VARIABLE CIZQ . ENTERO CDER

    ENTERO          shift and go to state 206


state 93

    (131) expresionLista -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER
    (95) expresionSet -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER

    PIZQ            shift and go to state 207


state 94

    (132) expresionLista -> VARIABLE FUNCIONRANGE . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 208


state 95

    (181) asignacionSimple -> VARIABLE IGUAL . expresion
    (197) expresion -> . valor operadorMat expresion
    (198) expresion -> . valor
    (199) expresion -> . expresionString
    (200) expresion -> . expresionInt
    (201) expresion -> . expresionDouble
    (202) expresion -> . expresionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 183
    VARIABLE        shift and go to state 209
    DOUBLE          shift and go to state 216
    STRING          shift and go to state 217
    FUNCIONSTDIN    shift and go to state 220
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 210
    valor                          shift and go to state 211
    expresionString                shift and go to state 212
    expresionInt                   shift and go to state 213
    expresionDouble                shift and go to state 214
    expresionBool                  shift and go to state 215
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 218
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 96

    (265) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 265 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 265 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 265 (comparadorMat -> DIGUAL .)


state 97

    (266) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 266 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 266 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 266 (comparadorMat -> NOIGUAL .)


state 98

    (267) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 267 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 267 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 267 (comparadorMat -> MAYOR .)


state 99

    (268) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 268 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 268 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 268 (comparadorMat -> MENOR .)


state 100

    (269) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 269 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 269 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 269 (comparadorMat -> MAYIGUAL .)


state 101

    (270) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 270 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 270 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 270 (comparadorMat -> MENIGUAL .)


state 102

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    BREAK           reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 222
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 103

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    BREAK           reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 223
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 104

    (55) final -> expresionSet PUNTOYCOMA .
    (56) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    BREAK           reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]

    expresionSet                   shift and go to state 23
    final                          shift and go to state 224
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 105

    (57) final -> expresionMap PUNTOYCOMA .
    (58) final -> expresionMap PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    LDER            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    BREAK           reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]

    expresionMap                   shift and go to state 24
    final                          shift and go to state 225
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 106

    (59) final -> expresionSwitch PUNTOYCOMA .
    (60) final -> expresionSwitch PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    LDER            reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    BREAK           reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]

    expresionSwitch                shift and go to state 25
    final                          shift and go to state 226
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 107

    (173) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 227


state 108

    (174) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 228


state 109

    (175) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 229


state 110

    (176) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 230


state 111

    (177) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 231


state 112

    (178) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 232


state 113

    (179) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 233


state 114

    (253) expresionInt -> valorInt operadorMat . expresionInt
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    valorInt                       shift and go to state 234
    expresionInt                   shift and go to state 235

state 115

    (259) operadorMat -> SUMA .

    ENTERO          reduce using rule 259 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 259 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 259 (operadorMat -> SUMA .)
    STRING          reduce using rule 259 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 259 (operadorMat -> SUMA .)
    BOOL            reduce using rule 259 (operadorMat -> SUMA .)
    NOT             reduce using rule 259 (operadorMat -> SUMA .)


state 116

    (260) operadorMat -> RESTA .

    ENTERO          reduce using rule 260 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 260 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 260 (operadorMat -> RESTA .)
    STRING          reduce using rule 260 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 260 (operadorMat -> RESTA .)
    BOOL            reduce using rule 260 (operadorMat -> RESTA .)
    NOT             reduce using rule 260 (operadorMat -> RESTA .)


state 117

    (261) operadorMat -> MULTI .

    ENTERO          reduce using rule 261 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 261 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 261 (operadorMat -> MULTI .)
    STRING          reduce using rule 261 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 261 (operadorMat -> MULTI .)
    BOOL            reduce using rule 261 (operadorMat -> MULTI .)
    NOT             reduce using rule 261 (operadorMat -> MULTI .)


state 118

    (262) operadorMat -> DIV .

    ENTERO          reduce using rule 262 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 262 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 262 (operadorMat -> DIV .)
    STRING          reduce using rule 262 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 262 (operadorMat -> DIV .)
    BOOL            reduce using rule 262 (operadorMat -> DIV .)
    NOT             reduce using rule 262 (operadorMat -> DIV .)


state 119

    (263) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 263 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 263 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 263 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 263 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 263 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 263 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 263 (operadorMat -> DIVENTERO .)


state 120

    (264) operadorMat -> MOD .

    ENTERO          reduce using rule 264 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 264 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 264 (operadorMat -> MOD .)
    STRING          reduce using rule 264 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 264 (operadorMat -> MOD .)
    BOOL            reduce using rule 264 (operadorMat -> MOD .)
    NOT             reduce using rule 264 (operadorMat -> MOD .)


state 121

    (257) expresionDouble -> valorDouble operadorMat . expresionDouble
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    valorDouble                    shift and go to state 202
    expresionDouble                shift and go to state 237
    valorInt                       shift and go to state 182

state 122

    (228) expresionBool -> valorDouble comparadorMat . expresionDouble
    (231) expresionBool -> valorDouble comparadorMat . VARIABLE
    (212) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (215) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 239
    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204

    valorDouble                    shift and go to state 202
    expresionDouble                shift and go to state 238
    valorInt                       shift and go to state 182

state 123

    (246) expresionString -> valorString SUMA . expresionString
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 241
    VARIABLE        shift and go to state 242
    FUNCIONSTDIN    shift and go to state 220

    valorString                    shift and go to state 36
    expresionString                shift and go to state 240
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 124

    (248) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 243


state 125

    (235) expresionBool -> valor IS . objeto
    (273) objeto -> . STRINGR
    (274) objeto -> . INT
    (275) objeto -> . DOUBLER
    (276) objeto -> . NUM
    (277) objeto -> . VAR
    (278) objeto -> . DYNAMIC
    (279) objeto -> . LIST
    (280) objeto -> . BOOL
    (281) objeto -> . MAP
    (282) objeto -> . SET

    STRINGR         shift and go to state 245
    INT             shift and go to state 246
    DOUBLER         shift and go to state 247
    NUM             shift and go to state 248
    VAR             shift and go to state 249
    DYNAMIC         shift and go to state 250
    LIST            shift and go to state 251
    BOOL            shift and go to state 252
    MAP             shift and go to state 253
    SET             shift and go to state 254

    objeto                         shift and go to state 244

state 126

    (236) expresionBool -> valor ISNEGADO . objeto
    (273) objeto -> . STRINGR
    (274) objeto -> . INT
    (275) objeto -> . DOUBLER
    (276) objeto -> . NUM
    (277) objeto -> . VAR
    (278) objeto -> . DYNAMIC
    (279) objeto -> . LIST
    (280) objeto -> . BOOL
    (281) objeto -> . MAP
    (282) objeto -> . SET

    STRINGR         shift and go to state 245
    INT             shift and go to state 246
    DOUBLER         shift and go to state 247
    NUM             shift and go to state 248
    VAR             shift and go to state 249
    DYNAMIC         shift and go to state 250
    LIST            shift and go to state 251
    BOOL            shift and go to state 252
    MAP             shift and go to state 253
    SET             shift and go to state 254

    objeto                         shift and go to state 255

state 127

    (223) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 183
    STRING          shift and go to state 184

    expresionBool                  shift and go to state 256
    valorDouble                    shift and go to state 178
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    valor                          shift and go to state 38
    valorInt                       shift and go to state 182

state 128

    (88) claveValor -> LIZQ . LDER
    (89) claveValor -> LIZQ . expMap LDER
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 257
    VARIABLE        shift and go to state 132
    STRING          shift and go to state 133
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 135
    BOOL            shift and go to state 136
    CIZQ            shift and go to state 137
    SETFROM         shift and go to state 139
    LIZQ            shift and go to state 128
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 258
    claveValor                     shift and go to state 131
    expresionNewList               shift and go to state 138

state 129

    (73) expresionMap -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 73 (expresionMap -> LIZQ LDER .)


state 130

    (75) expresionMap -> LIZQ expMap . LDER

    LDER            shift and go to state 259


state 131

    (76) expMap -> claveValor . DOSPUNTOS claveValor
    (77) expMap -> claveValor . DOSPUNTOS claveValor COMA expMap

    DOSPUNTOS       shift and go to state 260


state 132

    (78) claveValor -> VARIABLE .

    DOSPUNTOS       reduce using rule 78 (claveValor -> VARIABLE .)
    COMA            reduce using rule 78 (claveValor -> VARIABLE .)
    LDER            reduce using rule 78 (claveValor -> VARIABLE .)


state 133

    (79) claveValor -> STRING .

    DOSPUNTOS       reduce using rule 79 (claveValor -> STRING .)
    COMA            reduce using rule 79 (claveValor -> STRING .)
    LDER            reduce using rule 79 (claveValor -> STRING .)


state 134

    (80) claveValor -> ENTERO .

    DOSPUNTOS       reduce using rule 80 (claveValor -> ENTERO .)
    COMA            reduce using rule 80 (claveValor -> ENTERO .)
    LDER            reduce using rule 80 (claveValor -> ENTERO .)


state 135

    (81) claveValor -> DOUBLE .

    DOSPUNTOS       reduce using rule 81 (claveValor -> DOUBLE .)
    COMA            reduce using rule 81 (claveValor -> DOUBLE .)
    LDER            reduce using rule 81 (claveValor -> DOUBLE .)


state 136

    (82) claveValor -> BOOL .

    DOSPUNTOS       reduce using rule 82 (claveValor -> BOOL .)
    COMA            reduce using rule 82 (claveValor -> BOOL .)
    LDER            reduce using rule 82 (claveValor -> BOOL .)


state 137

    (83) claveValor -> CIZQ . expListDynamic CDER
    (84) claveValor -> CIZQ . expListSet CDER
    (98) expresionNewList -> CIZQ . CDER
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 151
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 267
    SETFROM         shift and go to state 163

    expListDynamic                 shift and go to state 261
    expListSet                     shift and go to state 262

state 138

    (85) claveValor -> expresionNewList .

    DOSPUNTOS       reduce using rule 85 (claveValor -> expresionNewList .)
    COMA            reduce using rule 85 (claveValor -> expresionNewList .)
    LDER            reduce using rule 85 (claveValor -> expresionNewList .)


state 139

    (86) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (87) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 268


state 140

    (225) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 269
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 141

    (187) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (188) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 183
    STRING          shift and go to state 184

    expresionBool                  shift and go to state 270
    valorDouble                    shift and go to state 178
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    valor                          shift and go to state 38
    valorInt                       shift and go to state 182

state 142

    (189) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 189 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 189 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 189 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 189 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 189 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 189 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 189 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 189 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 189 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 189 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 189 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 189 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 189 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 189 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 189 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 189 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 189 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 189 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 189 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 189 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 189 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 189 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 189 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 189 (sentenciaElse -> ELSE final .)
    MAP             reduce using rule 189 (sentenciaElse -> ELSE final .)
    LIZQ            reduce using rule 189 (sentenciaElse -> ELSE final .)
    SWITCH          reduce using rule 189 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 189 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 189 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 189 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 189 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 189 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 189 (sentenciaElse -> ELSE final .)
    BREAK           reduce using rule 189 (sentenciaElse -> ELSE final .)


state 143

    (190) sentenciaElse -> ELSE LIZQ . final LDER
    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 129
    VARIABLE        shift and go to state 273
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 276
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 277
    MAP             shift and go to state 54
    LIZQ            shift and go to state 271
    SWITCH          shift and go to state 57
    STRING          shift and go to state 278
    ENTERO          shift and go to state 275
    DOUBLE          shift and go to state 279
    BOOL            shift and go to state 280

    final                          shift and go to state 272
    expMap                         shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 274
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 131
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 144

    (182) imprimir -> PRINT PIZQ . expresion PDER
    (183) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (197) expresion -> . valor operadorMat expresion
    (198) expresion -> . valor
    (199) expresion -> . expresionString
    (200) expresion -> . expresionInt
    (201) expresion -> . expresionDouble
    (202) expresion -> . expresionBool
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 283
    ENTERO          shift and go to state 183
    DOUBLE          shift and go to state 216
    STRING          shift and go to state 217
    FUNCIONSTDIN    shift and go to state 220
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 281
    asignacionSimple               shift and go to state 282
    valor                          shift and go to state 211
    expresionString                shift and go to state 212
    expresionInt                   shift and go to state 213
    expresionDouble                shift and go to state 214
    expresionBool                  shift and go to state 215
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 218
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 145

    (185) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (186) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (197) expresion -> . valor operadorMat expresion
    (198) expresion -> . valor
    (199) expresion -> . expresionString
    (200) expresion -> . expresionInt
    (201) expresion -> . expresionDouble
    (202) expresion -> . expresionBool
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 283
    ENTERO          shift and go to state 183
    DOUBLE          shift and go to state 216
    STRING          shift and go to state 217
    FUNCIONSTDIN    shift and go to state 220
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 284
    asignacionSimple               shift and go to state 285
    valor                          shift and go to state 211
    expresionString                shift and go to state 212
    expresionInt                   shift and go to state 213
    expresionDouble                shift and go to state 214
    expresionBool                  shift and go to state 215
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 218
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 146

    (237) negacionBool -> NOT PIZQ . expresionBool PDER
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 183
    STRING          shift and go to state 184

    expresionBool                  shift and go to state 286
    valorDouble                    shift and go to state 178
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    valor                          shift and go to state 38
    valorInt                       shift and go to state 182

state 147

    (191) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (192) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 183
    STRING          shift and go to state 184

    expresionBool                  shift and go to state 287
    valorDouble                    shift and go to state 178
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    valor                          shift and go to state 38
    valorInt                       shift and go to state 182

state 148

    (219) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (203) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (204) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (205) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (206) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (207) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (208) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (209) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (210) asignacionFor -> . VARIABLE IGUAL expresionInt
    (211) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 290
    DOUBLER         shift and go to state 291
    NUM             shift and go to state 292
    DYNAMIC         shift and go to state 293
    VAR             shift and go to state 294
    VARIABLE        shift and go to state 289

    asignacionFor                  shift and go to state 288

state 149

    (99) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (100) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (104) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (108) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (112) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (115) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (118) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (122) expresionLista -> LIST MENOR . SET MAYOR VARIABLE
    (123) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL expresionNewList
    (126) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE
    (127) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 295
    INT             shift and go to state 296
    DOUBLER         shift and go to state 297
    NUM             shift and go to state 298
    BOOLR           shift and go to state 299
    DYNAMIC         shift and go to state 300
    SET             shift and go to state 301
    MAP             shift and go to state 302


state 150

    (102) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 303


state 151

    (98) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 98 (expresionNewList -> CIZQ CDER .)
    DOSPUNTOS       reduce using rule 98 (expresionNewList -> CIZQ CDER .)
    COMA            reduce using rule 98 (expresionNewList -> CIZQ CDER .)
    LDER            reduce using rule 98 (expresionNewList -> CIZQ CDER .)


state 152

    (106) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 304


state 153

    (110) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 305


state 154

    (117) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 306


state 155

    (121) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 307


state 156

    (125) expresionLista -> CIZQ expListSet . CDER

    CDER            shift and go to state 308


state 157

    (129) expresionLista -> CIZQ expListMap . CDER

    CDER            shift and go to state 309


state 158

    (133) expListString -> STRING .
    (134) expListString -> STRING . COMA expListString
    (151) expListDynamic -> STRING .
    (155) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 133 (expListString -> STRING .)
    CDER            reduce using rule 133 (expListString -> STRING .)
    COMA            shift and go to state 310

  ! CDER            [ reduce using rule 151 (expListDynamic -> STRING .) ]


state 159

    (135) expListString -> VARIABLE .
    (136) expListString -> VARIABLE . COMA expListString
    (139) expListInt -> VARIABLE .
    (140) expListInt -> VARIABLE . COMA expListInt
    (145) expListNum -> VARIABLE .
    (146) expListNum -> VARIABLE . COMA expListNum
    (149) expListBool -> VARIABLE .
    (150) expListBool -> VARIABLE . COMA expListBool
    (159) expListDynamic -> VARIABLE .
    (160) expListDynamic -> VARIABLE . COMA expListDynamic
    (165) expListSet -> VARIABLE .
    (166) expListSet -> VARIABLE . COMA expListSet
    (171) expListMap -> VARIABLE .
    (172) expListMap -> VARIABLE . COMA expListMap

  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> VARIABLE .)
    CDER            reduce using rule 135 (expListString -> VARIABLE .)
    COMA            shift and go to state 311

  ! CDER            [ reduce using rule 139 (expListInt -> VARIABLE .) ]
  ! CDER            [ reduce using rule 145 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 149 (expListBool -> VARIABLE .) ]
  ! CDER            [ reduce using rule 159 (expListDynamic -> VARIABLE .) ]
  ! CDER            [ reduce using rule 165 (expListSet -> VARIABLE .) ]
  ! CDER            [ reduce using rule 171 (expListMap -> VARIABLE .) ]


state 160

    (137) expListInt -> ENTERO .
    (138) expListInt -> ENTERO . COMA expListInt
    (141) expListNum -> ENTERO .
    (143) expListNum -> ENTERO . COMA expListNum
    (152) expListDynamic -> ENTERO .
    (156) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 137 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 137 (expListInt -> ENTERO .)
    CDER            reduce using rule 137 (expListInt -> ENTERO .)
    COMA            shift and go to state 312

  ! CDER            [ reduce using rule 141 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 152 (expListDynamic -> ENTERO .) ]


state 161

    (142) expListNum -> DOUBLE .
    (144) expListNum -> DOUBLE . COMA expListNum
    (153) expListDynamic -> DOUBLE .
    (157) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 142 (expListNum -> DOUBLE .)
    CDER            reduce using rule 142 (expListNum -> DOUBLE .)
    COMA            shift and go to state 313

  ! CDER            [ reduce using rule 153 (expListDynamic -> DOUBLE .) ]


state 162

    (147) expListBool -> BOOL .
    (148) expListBool -> BOOL . COMA expListBool
    (154) expListDynamic -> BOOL .
    (158) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 147 (expListBool -> BOOL .)
    CDER            reduce using rule 147 (expListBool -> BOOL .)
    COMA            shift and go to state 314

  ! CDER            [ reduce using rule 154 (expListDynamic -> BOOL .) ]


state 163

    (161) expListSet -> SETFROM . PIZQ CIZQ CDER PDER
    (162) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> SETFROM . PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER COMA expListSet

    PIZQ            shift and go to state 315


state 164

    (167) expListMap -> LIZQ . LDER
    (168) expListMap -> LIZQ . expMap LDER
    (169) expListMap -> LIZQ . LDER COMA expListMap
    (170) expListMap -> LIZQ . expMap LDER COMA expListMap
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 316
    VARIABLE        shift and go to state 132
    STRING          shift and go to state 133
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 135
    BOOL            shift and go to state 136
    CIZQ            shift and go to state 137
    SETFROM         shift and go to state 139
    LIZQ            shift and go to state 128
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 317
    claveValor                     shift and go to state 131
    expresionNewList               shift and go to state 138

state 165

    (90) expresionSet -> SET VARIABLE .
    (92) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 90 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 318


state 166

    (71) expresionMap -> MAP VARIABLE .
    (72) expresionMap -> MAP VARIABLE . IGUAL LIZQ LDER
    (74) expresionMap -> MAP VARIABLE . IGUAL LIZQ expMap LDER

    PUNTOYCOMA      reduce using rule 71 (expresionMap -> MAP VARIABLE .)
    IGUAL           shift and go to state 319


state 167

    (96) expresionNewList -> NEWLIST PIZQ . PDER
    (97) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 320
    ENTERO          shift and go to state 321


state 168

    (91) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (93) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 322


state 169

    (61) expresionSwitch -> SWITCH PIZQ . VARIABLE PDER LIZQ cases LDER

    VARIABLE        shift and go to state 323


state 170

    (245) valorString -> STRING CIZQ . ENTERO CDER

    ENTERO          shift and go to state 324


state 171

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    MAP             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SWITCH          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BREAK           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 172

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    MAP             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SWITCH          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BREAK           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 173

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    MAP             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SWITCH          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BREAK           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 174

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    MAP             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SWITCH          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BREAK           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 175

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    MAP             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 176

    (238) comparacionBool -> expresionBool operadorLogico expresionBool .
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 238 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 238 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 68
    OR              shift and go to state 69

  ! AND             [ reduce using rule 238 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 238 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 67

state 177

    (239) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (234) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 234 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 234 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 234 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 234 (expresionBool -> comparacionBool .)
    AND             reduce using rule 234 (expresionBool -> comparacionBool .)
    OR              reduce using rule 234 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 234 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 234 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 239 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 239 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 239 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 239 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 178

    (228) expresionBool -> valorDouble . comparadorMat expresionDouble
    (231) expresionBool -> valorDouble . comparadorMat VARIABLE
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    comparadorMat                  shift and go to state 325

state 179

    (229) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (230) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (227) valorBool -> VARIABLE .
    (194) valor -> VARIABLE .
    (252) valorInt -> VARIABLE .
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 227 (valorBool -> VARIABLE .)
    OR              reduce using rule 227 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 227 (valorBool -> VARIABLE .)
    PDER            reduce using rule 227 (valorBool -> VARIABLE .)
    IS              reduce using rule 194 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 194 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! DIGUAL          [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 326

state 180

    (232) expresionBool -> valorBool .

    AND             reduce using rule 232 (expresionBool -> valorBool .)
    OR              reduce using rule 232 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 232 (expresionBool -> valorBool .)
    PDER            reduce using rule 232 (expresionBool -> valorBool .)


state 181

    (233) expresionBool -> negacionBool .

    AND             reduce using rule 233 (expresionBool -> negacionBool .)
    OR              reduce using rule 233 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 233 (expresionBool -> negacionBool .)
    PDER            reduce using rule 233 (expresionBool -> negacionBool .)


state 182

    (256) valorDouble -> valorInt .

    DIGUAL          reduce using rule 256 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 256 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 256 (valorDouble -> valorInt .)
    MENOR           reduce using rule 256 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 256 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 256 (valorDouble -> valorInt .)
    SUMA            reduce using rule 256 (valorDouble -> valorInt .)
    RESTA           reduce using rule 256 (valorDouble -> valorInt .)
    MULTI           reduce using rule 256 (valorDouble -> valorInt .)
    DIV             reduce using rule 256 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 256 (valorDouble -> valorInt .)
    MOD             reduce using rule 256 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 256 (valorDouble -> valorInt .)
    AND             reduce using rule 256 (valorDouble -> valorInt .)
    OR              reduce using rule 256 (valorDouble -> valorInt .)
    PDER            reduce using rule 256 (valorDouble -> valorInt .)


state 183

    (193) valor -> ENTERO .
    (251) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 193 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 193 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 193 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 193 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 193 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 193 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 193 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 193 (valor -> ENTERO .)
    IS              reduce using rule 193 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 193 (valor -> ENTERO .)
    SUMA            reduce using rule 193 (valor -> ENTERO .)
    RESTA           reduce using rule 193 (valor -> ENTERO .)
    MULTI           reduce using rule 193 (valor -> ENTERO .)
    DIV             reduce using rule 193 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 193 (valor -> ENTERO .)
    MOD             reduce using rule 193 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 193 (valor -> ENTERO .)
    PDER            reduce using rule 193 (valor -> ENTERO .)
    DIGUAL          reduce using rule 251 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 251 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 251 (valorInt -> ENTERO .)
    MENOR           reduce using rule 251 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 251 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 251 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 251 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 251 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 251 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 251 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 251 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 251 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 251 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 251 (valorInt -> ENTERO .) ]


state 184

    (196) valor -> STRING .

    IS              reduce using rule 196 (valor -> STRING .)
    ISNEGADO        reduce using rule 196 (valor -> STRING .)


state 185

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    MAP             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BREAK           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 186

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    MAP             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BREAK           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 187

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    MAP             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BREAK           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 188

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    MAP             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SWITCH          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BREAK           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 189

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    MAP             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SWITCH          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BREAK           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 190

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    MAP             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SWITCH          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BREAK           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 191

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    MAP             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SWITCH          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BREAK           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 192

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    MAP             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SWITCH          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BREAK           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 193

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 194

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 195

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    MAP             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SWITCH          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BREAK           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 196

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    MAP             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BREAK           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 197

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    MAP             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SWITCH          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BREAK           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 198

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    BREAK           reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 327
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 199

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    BREAK           reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 328
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 200

    (230) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (214) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (252) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 214 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 214 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 214 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 252 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 252 (valorInt -> VARIABLE .) ]


state 201

    (229) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (213) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 213 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 213 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 202

    (257) expresionDouble -> valorDouble . operadorMat expresionDouble
    (258) expresionDouble -> valorDouble .
    (259) operadorMat -> . SUMA
    (260) operadorMat -> . RESTA
    (261) operadorMat -> . MULTI
    (262) operadorMat -> . DIV
    (263) operadorMat -> . DIVENTERO
    (264) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 258 (expresionDouble -> valorDouble .)
    AND             reduce using rule 258 (expresionDouble -> valorDouble .)
    OR              reduce using rule 258 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 258 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 115
    RESTA           shift and go to state 116
    MULTI           shift and go to state 117
    DIV             shift and go to state 118
    DIVENTERO       shift and go to state 119
    MOD             shift and go to state 120

    operadorMat                    shift and go to state 121

state 203

    (255) valorDouble -> DOUBLE .

    SUMA            reduce using rule 255 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 255 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 255 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 255 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 255 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 255 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 255 (valorDouble -> DOUBLE .)
    AND             reduce using rule 255 (valorDouble -> DOUBLE .)
    OR              reduce using rule 255 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 255 (valorDouble -> DOUBLE .)


state 204

    (251) valorInt -> ENTERO .

    SUMA            reduce using rule 251 (valorInt -> ENTERO .)
    RESTA           reduce using rule 251 (valorInt -> ENTERO .)
    MULTI           reduce using rule 251 (valorInt -> ENTERO .)
    DIV             reduce using rule 251 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 251 (valorInt -> ENTERO .)
    MOD             reduce using rule 251 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 251 (valorInt -> ENTERO .)
    AND             reduce using rule 251 (valorInt -> ENTERO .)
    OR              reduce using rule 251 (valorInt -> ENTERO .)
    PDER            reduce using rule 251 (valorInt -> ENTERO .)


state 205

    (249) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (250) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 329


state 206

    (130) expresionLista -> VARIABLE CIZQ ENTERO . CDER

    CDER            shift and go to state 330


state 207

    (131) expresionLista -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER
    (95) expresionSet -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER

    ENTERO          shift and go to state 331


state 208

    (132) expresionLista -> VARIABLE FUNCIONRANGE PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 332


state 209

    (194) valor -> VARIABLE .
    (229) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (230) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (241) valorString -> VARIABLE .
    (252) valorInt -> VARIABLE .
    (227) valorBool -> VARIABLE .
    (249) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 194 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 194 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 194 (valor -> VARIABLE .)
    SUMA            reduce using rule 194 (valor -> VARIABLE .)
    RESTA           reduce using rule 194 (valor -> VARIABLE .)
    MULTI           reduce using rule 194 (valor -> VARIABLE .)
    DIV             reduce using rule 194 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 194 (valor -> VARIABLE .)
    MOD             reduce using rule 194 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 194 (valor -> VARIABLE .)
    PDER            reduce using rule 194 (valor -> VARIABLE .)
    CIZQ            reduce using rule 241 (valorString -> VARIABLE .)
    AND             reduce using rule 227 (valorBool -> VARIABLE .)
    OR              reduce using rule 227 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 91
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 241 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 241 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 227 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 227 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 326

state 210

    (181) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 181 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 181 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 211

    (197) expresion -> valor . operadorMat expresion
    (198) expresion -> valor .
    (235) expresionBool -> valor . IS objeto
    (236) expresionBool -> valor . ISNEGADO objeto
    (259) operadorMat -> . SUMA
    (260) operadorMat -> . RESTA
    (261) operadorMat -> . MULTI
    (262) operadorMat -> . DIV
    (263) operadorMat -> . DIVENTERO
    (264) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 198 (expresion -> valor .)
    PDER            reduce using rule 198 (expresion -> valor .)
    IS              shift and go to state 125
    ISNEGADO        shift and go to state 126
    SUMA            shift and go to state 115
    RESTA           shift and go to state 116
    MULTI           shift and go to state 117
    DIV             shift and go to state 118
    DIVENTERO       shift and go to state 119
    MOD             shift and go to state 120

    operadorMat                    shift and go to state 333

state 212

    (199) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 199 (expresion -> expresionString .)
    PDER            reduce using rule 199 (expresion -> expresionString .)


state 213

    (200) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 200 (expresion -> expresionInt .)
    PDER            reduce using rule 200 (expresion -> expresionInt .)


state 214

    (201) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 201 (expresion -> expresionDouble .)
    PDER            reduce using rule 201 (expresion -> expresionDouble .)


state 215

    (202) expresion -> expresionBool .
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 202 (expresion -> expresionBool .)
    PDER            reduce using rule 202 (expresion -> expresionBool .)
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 216

    (195) valor -> DOUBLE .
    (255) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 195 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 195 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 195 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 195 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 195 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 195 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 195 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 195 (valor -> DOUBLE .)
    IS              reduce using rule 195 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 195 (valor -> DOUBLE .)
    SUMA            reduce using rule 195 (valor -> DOUBLE .)
    RESTA           reduce using rule 195 (valor -> DOUBLE .)
    MULTI           reduce using rule 195 (valor -> DOUBLE .)
    DIV             reduce using rule 195 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 195 (valor -> DOUBLE .)
    MOD             reduce using rule 195 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 195 (valor -> DOUBLE .)
    PDER            reduce using rule 195 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 255 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 255 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 255 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 255 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 255 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 255 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 255 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 255 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 255 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 255 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 255 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 255 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 255 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 255 (valorDouble -> DOUBLE .) ]


state 217

    (196) valor -> STRING .
    (240) valorString -> STRING .
    (245) valorString -> STRING . CIZQ ENTERO CDER

  ! reduce/reduce conflict for SUMA resolved using rule 196 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 196 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 196 (valor -> STRING .)
  ! shift/reduce conflict for CIZQ resolved as shift
    IS              reduce using rule 196 (valor -> STRING .)
    ISNEGADO        reduce using rule 196 (valor -> STRING .)
    SUMA            reduce using rule 196 (valor -> STRING .)
    RESTA           reduce using rule 196 (valor -> STRING .)
    MULTI           reduce using rule 196 (valor -> STRING .)
    DIV             reduce using rule 196 (valor -> STRING .)
    DIVENTERO       reduce using rule 196 (valor -> STRING .)
    MOD             reduce using rule 196 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 196 (valor -> STRING .)
    PDER            reduce using rule 196 (valor -> STRING .)
    CIZQ            shift and go to state 170

  ! SUMA            [ reduce using rule 240 (valorString -> STRING .) ]
  ! CIZQ            [ reduce using rule 240 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 240 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 240 (valorString -> STRING .) ]


state 218

    (257) expresionDouble -> valorDouble . operadorMat expresionDouble
    (258) expresionDouble -> valorDouble .
    (228) expresionBool -> valorDouble . comparadorMat expresionDouble
    (231) expresionBool -> valorDouble . comparadorMat VARIABLE
    (259) operadorMat -> . SUMA
    (260) operadorMat -> . RESTA
    (261) operadorMat -> . MULTI
    (262) operadorMat -> . DIV
    (263) operadorMat -> . DIVENTERO
    (264) operadorMat -> . MOD
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 258 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 258 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 115
    RESTA           shift and go to state 116
    MULTI           shift and go to state 117
    DIV             shift and go to state 118
    DIVENTERO       shift and go to state 119
    MOD             shift and go to state 120
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    operadorMat                    shift and go to state 121
    comparadorMat                  shift and go to state 325

state 219

    (234) expresionBool -> comparacionBool .

    AND             reduce using rule 234 (expresionBool -> comparacionBool .)
    OR              reduce using rule 234 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 234 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 234 (expresionBool -> comparacionBool .)


state 220

    (242) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 242 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 242 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 242 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 242 (valorString -> FUNCIONSTDIN .)


state 221

    (244) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 244 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 244 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 244 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 244 (valorString -> sentenciaSubstring .)


state 222

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    MAP             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SWITCH          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BREAK           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 223

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    MAP             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SWITCH          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BREAK           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 224

    (56) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    MAP             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SWITCH          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BREAK           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)


state 225

    (58) final -> expresionMap PUNTOYCOMA final .

    $end            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VARIABLE        reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    INT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLER         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NUM             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRINGR         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOLR           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VAR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    WHILE           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DO              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    IF              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSE            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PRINT           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NOT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSEIF          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FOR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIST            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    CIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NEWLIST         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SET             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SETFROM         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    MAP             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SWITCH          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ENTERO          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLE          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRING          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOL            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LDER            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BREAK           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)


state 226

    (60) final -> expresionSwitch PUNTOYCOMA final .

    $end            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    VARIABLE        reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    INT             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DOUBLER         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    NUM             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    STRINGR         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    BOOLR           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    VAR             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    WHILE           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DO              reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    IF              reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    ELSE            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    PRINT           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    NOT             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    ELSEIF          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    FOR             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    LIST            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    CIZQ            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    NEWLIST         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    SET             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    SETFROM         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    MAP             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    LIZQ            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    SWITCH          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    ENTERO          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DOUBLE          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    STRING          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    BOOL            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    LDER            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    BREAK           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)


state 227

    (173) asignacion -> INT VARIABLE IGUAL . expresionInt
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    expresionInt                   shift and go to state 334
    valorInt                       shift and go to state 234

state 228

    (174) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    expresionDouble                shift and go to state 335
    valorDouble                    shift and go to state 202
    valorInt                       shift and go to state 182

state 229

    (175) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    expresionDouble                shift and go to state 336
    valorDouble                    shift and go to state 202
    valorInt                       shift and go to state 182

state 230

    (176) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 241
    VARIABLE        shift and go to state 242
    FUNCIONSTDIN    shift and go to state 220

    expresionString                shift and go to state 337
    valorString                    shift and go to state 36
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 231

    (177) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 183
    STRING          shift and go to state 184

    expresionBool                  shift and go to state 338
    valorDouble                    shift and go to state 178
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    valor                          shift and go to state 38
    valorInt                       shift and go to state 182

state 232

    (178) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (197) expresion -> . valor operadorMat expresion
    (198) expresion -> . valor
    (199) expresion -> . expresionString
    (200) expresion -> . expresionInt
    (201) expresion -> . expresionDouble
    (202) expresion -> . expresionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 183
    VARIABLE        shift and go to state 209
    DOUBLE          shift and go to state 216
    STRING          shift and go to state 217
    FUNCIONSTDIN    shift and go to state 220
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 339
    valor                          shift and go to state 211
    expresionString                shift and go to state 212
    expresionInt                   shift and go to state 213
    expresionDouble                shift and go to state 214
    expresionBool                  shift and go to state 215
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 218
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 233

    (179) asignacion -> VAR VARIABLE IGUAL . expresion
    (197) expresion -> . valor operadorMat expresion
    (198) expresion -> . valor
    (199) expresion -> . expresionString
    (200) expresion -> . expresionInt
    (201) expresion -> . expresionDouble
    (202) expresion -> . expresionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 183
    VARIABLE        shift and go to state 209
    DOUBLE          shift and go to state 216
    STRING          shift and go to state 217
    FUNCIONSTDIN    shift and go to state 220
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 340
    valor                          shift and go to state 211
    expresionString                shift and go to state 212
    expresionInt                   shift and go to state 213
    expresionDouble                shift and go to state 214
    expresionBool                  shift and go to state 215
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 218
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 234

    (253) expresionInt -> valorInt . operadorMat expresionInt
    (254) expresionInt -> valorInt .
    (259) operadorMat -> . SUMA
    (260) operadorMat -> . RESTA
    (261) operadorMat -> . MULTI
    (262) operadorMat -> . DIV
    (263) operadorMat -> . DIVENTERO
    (264) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 254 (expresionInt -> valorInt .)
    PDER            reduce using rule 254 (expresionInt -> valorInt .)
    SUMA            shift and go to state 115
    RESTA           shift and go to state 116
    MULTI           shift and go to state 117
    DIV             shift and go to state 118
    DIVENTERO       shift and go to state 119
    MOD             shift and go to state 120

    operadorMat                    shift and go to state 114

state 235

    (253) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 253 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 253 (expresionInt -> valorInt operadorMat expresionInt .)


state 236

    (252) valorInt -> VARIABLE .

    SUMA            reduce using rule 252 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 252 (valorInt -> VARIABLE .)
    PDER            reduce using rule 252 (valorInt -> VARIABLE .)
    AND             reduce using rule 252 (valorInt -> VARIABLE .)
    OR              reduce using rule 252 (valorInt -> VARIABLE .)


state 237

    (257) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 257 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 257 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 257 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 257 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 238

    (228) expresionBool -> valorDouble comparadorMat expresionDouble .
    (212) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 212 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 212 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 239

    (231) expresionBool -> valorDouble comparadorMat VARIABLE .
    (215) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (252) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 215 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 215 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 215 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 252 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 252 (valorInt -> VARIABLE .) ]


state 240

    (246) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 246 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 246 (expresionString -> valorString SUMA expresionString .)


state 241

    (240) valorString -> STRING .
    (245) valorString -> STRING . CIZQ ENTERO CDER

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 240 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 240 (valorString -> STRING .)
    PDER            reduce using rule 240 (valorString -> STRING .)
    CIZQ            shift and go to state 170

  ! CIZQ            [ reduce using rule 240 (valorString -> STRING .) ]


state 242

    (241) valorString -> VARIABLE .
    (249) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 241 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 241 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 241 (valorString -> VARIABLE .)
    PDER            reduce using rule 241 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 91


state 243

    (248) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 341


state 244

    (235) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 235 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 235 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 235 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 235 (expresionBool -> valor IS objeto .)


state 245

    (273) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 273 (objeto -> STRINGR .)
    AND             reduce using rule 273 (objeto -> STRINGR .)
    OR              reduce using rule 273 (objeto -> STRINGR .)
    PDER            reduce using rule 273 (objeto -> STRINGR .)


state 246

    (274) objeto -> INT .

    PUNTOYCOMA      reduce using rule 274 (objeto -> INT .)
    AND             reduce using rule 274 (objeto -> INT .)
    OR              reduce using rule 274 (objeto -> INT .)
    PDER            reduce using rule 274 (objeto -> INT .)


state 247

    (275) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 275 (objeto -> DOUBLER .)
    AND             reduce using rule 275 (objeto -> DOUBLER .)
    OR              reduce using rule 275 (objeto -> DOUBLER .)
    PDER            reduce using rule 275 (objeto -> DOUBLER .)


state 248

    (276) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 276 (objeto -> NUM .)
    AND             reduce using rule 276 (objeto -> NUM .)
    OR              reduce using rule 276 (objeto -> NUM .)
    PDER            reduce using rule 276 (objeto -> NUM .)


state 249

    (277) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 277 (objeto -> VAR .)
    AND             reduce using rule 277 (objeto -> VAR .)
    OR              reduce using rule 277 (objeto -> VAR .)
    PDER            reduce using rule 277 (objeto -> VAR .)


state 250

    (278) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 278 (objeto -> DYNAMIC .)
    AND             reduce using rule 278 (objeto -> DYNAMIC .)
    OR              reduce using rule 278 (objeto -> DYNAMIC .)
    PDER            reduce using rule 278 (objeto -> DYNAMIC .)


state 251

    (279) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 279 (objeto -> LIST .)
    AND             reduce using rule 279 (objeto -> LIST .)
    OR              reduce using rule 279 (objeto -> LIST .)
    PDER            reduce using rule 279 (objeto -> LIST .)


state 252

    (280) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 280 (objeto -> BOOL .)
    AND             reduce using rule 280 (objeto -> BOOL .)
    OR              reduce using rule 280 (objeto -> BOOL .)
    PDER            reduce using rule 280 (objeto -> BOOL .)


state 253

    (281) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 281 (objeto -> MAP .)
    AND             reduce using rule 281 (objeto -> MAP .)
    OR              reduce using rule 281 (objeto -> MAP .)
    PDER            reduce using rule 281 (objeto -> MAP .)


state 254

    (282) objeto -> SET .

    PUNTOYCOMA      reduce using rule 282 (objeto -> SET .)
    AND             reduce using rule 282 (objeto -> SET .)
    OR              reduce using rule 282 (objeto -> SET .)
    PDER            reduce using rule 282 (objeto -> SET .)


state 255

    (236) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 236 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 236 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 236 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 236 (expresionBool -> valor ISNEGADO objeto .)


state 256

    (223) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (224) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PDER            shift and go to state 342
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 257

    (88) claveValor -> LIZQ LDER .

    DOSPUNTOS       reduce using rule 88 (claveValor -> LIZQ LDER .)
    COMA            reduce using rule 88 (claveValor -> LIZQ LDER .)
    LDER            reduce using rule 88 (claveValor -> LIZQ LDER .)


state 258

    (89) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 343


state 259

    (75) expresionMap -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 75 (expresionMap -> LIZQ expMap LDER .)


state 260

    (76) expMap -> claveValor DOSPUNTOS . claveValor
    (77) expMap -> claveValor DOSPUNTOS . claveValor COMA expMap
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 132
    STRING          shift and go to state 133
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 135
    BOOL            shift and go to state 136
    CIZQ            shift and go to state 137
    SETFROM         shift and go to state 139
    LIZQ            shift and go to state 128
    NEWLIST         shift and go to state 55

    claveValor                     shift and go to state 344
    expresionNewList               shift and go to state 138

state 261

    (83) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 345


state 262

    (84) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 346


state 263

    (151) expListDynamic -> STRING .
    (155) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 151 (expListDynamic -> STRING .)
    COMA            shift and go to state 347


state 264

    (152) expListDynamic -> ENTERO .
    (156) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 152 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 348


state 265

    (153) expListDynamic -> DOUBLE .
    (157) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 153 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 349


state 266

    (154) expListDynamic -> BOOL .
    (158) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 154 (expListDynamic -> BOOL .)
    COMA            shift and go to state 350


state 267

    (159) expListDynamic -> VARIABLE .
    (160) expListDynamic -> VARIABLE . COMA expListDynamic
    (165) expListSet -> VARIABLE .
    (166) expListSet -> VARIABLE . COMA expListSet

  ! reduce/reduce conflict for CDER resolved using rule 159 (expListDynamic -> VARIABLE .)
    CDER            reduce using rule 159 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 351

  ! CDER            [ reduce using rule 165 (expListSet -> VARIABLE .) ]


state 268

    (86) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (87) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 352


state 269

    (225) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 353


state 270

    (187) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (188) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PDER            shift and go to state 354
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 271

    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (88) claveValor -> LIZQ . LDER
    (89) claveValor -> LIZQ . expMap LDER
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 355
    VARIABLE        shift and go to state 132
    STRING          shift and go to state 133
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 135
    BOOL            shift and go to state 136
    CIZQ            shift and go to state 137
    SETFROM         shift and go to state 139
    LIZQ            shift and go to state 128
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 356
    claveValor                     shift and go to state 131
    expresionNewList               shift and go to state 138

state 272

    (190) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 357


state 273

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (229) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (230) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (213) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (214) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (249) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (130) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (131) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (95) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (78) claveValor -> VARIABLE .
    (181) asignacionSimple -> VARIABLE . IGUAL expresion
    (252) valorInt -> VARIABLE .
    (241) valorString -> VARIABLE .
    (227) valorBool -> VARIABLE .
    (194) valor -> VARIABLE .
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 241 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 241 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 227 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 88
    DRESTA          shift and go to state 89
    FUNCIONSUBSTRING shift and go to state 91
    CIZQ            shift and go to state 92
    FUNCIONTAKE     shift and go to state 93
    FUNCIONRANGE    shift and go to state 94
    DOSPUNTOS       reduce using rule 78 (claveValor -> VARIABLE .)
    IGUAL           shift and go to state 95
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 241 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 227 (valorBool -> VARIABLE .)
    AND             reduce using rule 227 (valorBool -> VARIABLE .)
    OR              reduce using rule 227 (valorBool -> VARIABLE .)
    IS              reduce using rule 194 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 194 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 241 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 90

state 274

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final
    (85) claveValor -> expresionNewList .

    PUNTOYCOMA      shift and go to state 103
    DOSPUNTOS       reduce using rule 85 (claveValor -> expresionNewList .)


state 275

    (80) claveValor -> ENTERO .
    (251) valorInt -> ENTERO .
    (193) valor -> ENTERO .

    DOSPUNTOS       reduce using rule 80 (claveValor -> ENTERO .)
    SUMA            reduce using rule 251 (valorInt -> ENTERO .)
    RESTA           reduce using rule 251 (valorInt -> ENTERO .)
    MULTI           reduce using rule 251 (valorInt -> ENTERO .)
    DIV             reduce using rule 251 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 251 (valorInt -> ENTERO .)
    MOD             reduce using rule 251 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 251 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 251 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 251 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 251 (valorInt -> ENTERO .)
    MENOR           reduce using rule 251 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 251 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 251 (valorInt -> ENTERO .)
    IS              reduce using rule 193 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 193 (valor -> ENTERO .)


state 276

    (102) expresionLista -> CIZQ . expListString CDER
    (106) expresionLista -> CIZQ . expListInt CDER
    (110) expresionLista -> CIZQ . expListNum CDER
    (117) expresionLista -> CIZQ . expListBool CDER
    (121) expresionLista -> CIZQ . expListDynamic CDER
    (125) expresionLista -> CIZQ . expListSet CDER
    (129) expresionLista -> CIZQ . expListMap CDER
    (98) expresionNewList -> CIZQ . CDER
    (83) claveValor -> CIZQ . expListDynamic CDER
    (84) claveValor -> CIZQ . expListSet CDER
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet
    (167) expListMap -> . LIZQ LDER
    (168) expListMap -> . LIZQ expMap LDER
    (169) expListMap -> . LIZQ LDER COMA expListMap
    (170) expListMap -> . LIZQ expMap LDER COMA expListMap
    (171) expListMap -> . VARIABLE
    (172) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 151
    STRING          shift and go to state 158
    VARIABLE        shift and go to state 159
    ENTERO          shift and go to state 160
    DOUBLE          shift and go to state 161
    BOOL            shift and go to state 162
    SETFROM         shift and go to state 163
    LIZQ            shift and go to state 164

    expListString                  shift and go to state 150
    expListInt                     shift and go to state 152
    expListNum                     shift and go to state 153
    expListBool                    shift and go to state 154
    expListDynamic                 shift and go to state 358
    expListSet                     shift and go to state 359
    expListMap                     shift and go to state 157

state 277

    (91) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (93) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (86) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (87) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 360


state 278

    (79) claveValor -> STRING .
    (240) valorString -> STRING .
    (245) valorString -> STRING . CIZQ ENTERO CDER
    (196) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    DOSPUNTOS       reduce using rule 79 (claveValor -> STRING .)
    SUMA            reduce using rule 240 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 240 (valorString -> STRING .)
    CIZQ            shift and go to state 170
    IS              reduce using rule 196 (valor -> STRING .)
    ISNEGADO        reduce using rule 196 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 240 (valorString -> STRING .) ]


state 279

    (81) claveValor -> DOUBLE .
    (255) valorDouble -> DOUBLE .
    (195) valor -> DOUBLE .

    DOSPUNTOS       reduce using rule 81 (claveValor -> DOUBLE .)
    SUMA            reduce using rule 255 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 255 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 255 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 255 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 255 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 255 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 255 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 255 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 255 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 255 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 255 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 255 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 255 (valorDouble -> DOUBLE .)
    IS              reduce using rule 195 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 195 (valor -> DOUBLE .)


state 280

    (82) claveValor -> BOOL .
    (226) valorBool -> BOOL .

    DOSPUNTOS       reduce using rule 82 (claveValor -> BOOL .)
    PUNTOYCOMA      reduce using rule 226 (valorBool -> BOOL .)
    AND             reduce using rule 226 (valorBool -> BOOL .)
    OR              reduce using rule 226 (valorBool -> BOOL .)


state 281

    (182) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 361


state 282

    (183) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 362


state 283

    (181) asignacionSimple -> VARIABLE . IGUAL expresion
    (194) valor -> VARIABLE .
    (229) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (230) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (241) valorString -> VARIABLE .
    (252) valorInt -> VARIABLE .
    (227) valorBool -> VARIABLE .
    (249) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 194 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 194 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 95
    IS              reduce using rule 194 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 194 (valor -> VARIABLE .)
    SUMA            reduce using rule 194 (valor -> VARIABLE .)
    RESTA           reduce using rule 194 (valor -> VARIABLE .)
    MULTI           reduce using rule 194 (valor -> VARIABLE .)
    DIV             reduce using rule 194 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 194 (valor -> VARIABLE .)
    MOD             reduce using rule 194 (valor -> VARIABLE .)
    PDER            reduce using rule 194 (valor -> VARIABLE .)
    CIZQ            reduce using rule 241 (valorString -> VARIABLE .)
    AND             reduce using rule 227 (valorBool -> VARIABLE .)
    OR              reduce using rule 227 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 91
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 241 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 241 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 227 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 326

state 284

    (185) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 363


state 285

    (186) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 364


state 286

    (237) negacionBool -> NOT PIZQ expresionBool . PDER
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PDER            shift and go to state 365
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 287

    (191) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (192) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PDER            shift and go to state 366
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 288

    (219) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 367


state 289

    (210) asignacionFor -> VARIABLE . IGUAL expresionInt
    (211) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 368


state 290

    (203) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 369


state 291

    (204) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 370


state 292

    (205) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 371


state 293

    (206) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (207) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 372


state 294

    (208) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (209) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 373


state 295

    (99) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (100) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 374


state 296

    (103) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (104) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 375


state 297

    (107) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (108) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 376


state 298

    (111) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (112) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 377


state 299

    (114) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (115) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 378


state 300

    (118) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (119) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 379


state 301

    (122) expresionLista -> LIST MENOR SET . MAYOR VARIABLE
    (123) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 380


state 302

    (126) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE
    (127) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 381


state 303

    (102) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 102 (expresionLista -> CIZQ expListString CDER .)


state 304

    (106) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 106 (expresionLista -> CIZQ expListInt CDER .)


state 305

    (110) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 110 (expresionLista -> CIZQ expListNum CDER .)


state 306

    (117) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 117 (expresionLista -> CIZQ expListBool CDER .)


state 307

    (121) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 121 (expresionLista -> CIZQ expListDynamic CDER .)


state 308

    (125) expresionLista -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 125 (expresionLista -> CIZQ expListSet CDER .)


state 309

    (129) expresionLista -> CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 129 (expresionLista -> CIZQ expListMap CDER .)


state 310

    (134) expListString -> STRING COMA . expListString
    (155) expListDynamic -> STRING COMA . expListDynamic
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 158
    VARIABLE        shift and go to state 384
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    expListString                  shift and go to state 382
    expListDynamic                 shift and go to state 383

state 311

    (136) expListString -> VARIABLE COMA . expListString
    (140) expListInt -> VARIABLE COMA . expListInt
    (146) expListNum -> VARIABLE COMA . expListNum
    (150) expListBool -> VARIABLE COMA . expListBool
    (160) expListDynamic -> VARIABLE COMA . expListDynamic
    (166) expListSet -> VARIABLE COMA . expListSet
    (172) expListMap -> VARIABLE COMA . expListMap
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet
    (167) expListMap -> . LIZQ LDER
    (168) expListMap -> . LIZQ expMap LDER
    (169) expListMap -> . LIZQ LDER COMA expListMap
    (170) expListMap -> . LIZQ expMap LDER COMA expListMap
    (171) expListMap -> . VARIABLE
    (172) expListMap -> . VARIABLE COMA expListMap

    STRING          shift and go to state 158
    VARIABLE        shift and go to state 159
    ENTERO          shift and go to state 160
    DOUBLE          shift and go to state 161
    BOOL            shift and go to state 162
    SETFROM         shift and go to state 163
    LIZQ            shift and go to state 164

    expListString                  shift and go to state 385
    expListInt                     shift and go to state 386
    expListNum                     shift and go to state 387
    expListBool                    shift and go to state 388
    expListDynamic                 shift and go to state 389
    expListSet                     shift and go to state 390
    expListMap                     shift and go to state 391

state 312

    (138) expListInt -> ENTERO COMA . expListInt
    (143) expListNum -> ENTERO COMA . expListNum
    (156) expListDynamic -> ENTERO COMA . expListDynamic
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 160
    VARIABLE        shift and go to state 395
    DOUBLE          shift and go to state 161
    STRING          shift and go to state 263
    BOOL            shift and go to state 266

    expListInt                     shift and go to state 392
    expListNum                     shift and go to state 393
    expListDynamic                 shift and go to state 394

state 313

    (144) expListNum -> DOUBLE COMA . expListNum
    (157) expListDynamic -> DOUBLE COMA . expListDynamic
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 398
    DOUBLE          shift and go to state 161
    VARIABLE        shift and go to state 399
    STRING          shift and go to state 263
    BOOL            shift and go to state 266

    expListNum                     shift and go to state 396
    expListDynamic                 shift and go to state 397

state 314

    (148) expListBool -> BOOL COMA . expListBool
    (158) expListDynamic -> BOOL COMA . expListDynamic
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 162
    VARIABLE        shift and go to state 402
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265

    expListBool                    shift and go to state 400
    expListDynamic                 shift and go to state 401

state 315

    (161) expListSet -> SETFROM PIZQ . CIZQ CDER PDER
    (162) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (163) expListSet -> SETFROM PIZQ . CIZQ CDER PDER COMA expListSet
    (164) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER COMA expListSet

    CIZQ            shift and go to state 403


state 316

    (167) expListMap -> LIZQ LDER .
    (169) expListMap -> LIZQ LDER . COMA expListMap

    CDER            reduce using rule 167 (expListMap -> LIZQ LDER .)
    COMA            shift and go to state 404


state 317

    (168) expListMap -> LIZQ expMap . LDER
    (170) expListMap -> LIZQ expMap . LDER COMA expListMap

    LDER            shift and go to state 405


state 318

    (92) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 406


state 319

    (72) expresionMap -> MAP VARIABLE IGUAL . LIZQ LDER
    (74) expresionMap -> MAP VARIABLE IGUAL . LIZQ expMap LDER

    LIZQ            shift and go to state 407


state 320

    (96) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 96 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOSPUNTOS       reduce using rule 96 (expresionNewList -> NEWLIST PIZQ PDER .)
    COMA            reduce using rule 96 (expresionNewList -> NEWLIST PIZQ PDER .)
    LDER            reduce using rule 96 (expresionNewList -> NEWLIST PIZQ PDER .)


state 321

    (97) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 408


state 322

    (91) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (93) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 409
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 410

state 323

    (61) expresionSwitch -> SWITCH PIZQ VARIABLE . PDER LIZQ cases LDER

    PDER            shift and go to state 412


state 324

    (245) valorString -> STRING CIZQ ENTERO . CDER

    CDER            shift and go to state 413


state 325

    (228) expresionBool -> valorDouble comparadorMat . expresionDouble
    (231) expresionBool -> valorDouble comparadorMat . VARIABLE
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 415
    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204

    valorDouble                    shift and go to state 202
    expresionDouble                shift and go to state 414
    valorInt                       shift and go to state 182

state 326

    (229) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (230) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 416
    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204

    expresionDouble                shift and go to state 417
    valorDouble                    shift and go to state 202
    valorInt                       shift and go to state 182

state 327

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    MAP             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SWITCH          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BREAK           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 328

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    MAP             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SWITCH          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BREAK           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 329

    (249) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (250) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 418
    COMA            shift and go to state 419


state 330

    (130) expresionLista -> VARIABLE CIZQ ENTERO CDER .

    PUNTOYCOMA      reduce using rule 130 (expresionLista -> VARIABLE CIZQ ENTERO CDER .)


state 331

    (131) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER
    (95) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER

    PDER            shift and go to state 420


state 332

    (132) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO . COMA ENTERO PDER

    COMA            shift and go to state 421


state 333

    (197) expresion -> valor operadorMat . expresion
    (197) expresion -> . valor operadorMat expresion
    (198) expresion -> . valor
    (199) expresion -> . expresionString
    (200) expresion -> . expresionInt
    (201) expresion -> . expresionDouble
    (202) expresion -> . expresionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 183
    VARIABLE        shift and go to state 209
    DOUBLE          shift and go to state 216
    STRING          shift and go to state 217
    FUNCIONSTDIN    shift and go to state 220
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    valor                          shift and go to state 211
    expresion                      shift and go to state 422
    expresionString                shift and go to state 212
    expresionInt                   shift and go to state 213
    expresionDouble                shift and go to state 214
    expresionBool                  shift and go to state 215
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 218
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 221

state 334

    (173) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 173 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 335

    (174) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 174 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 336

    (175) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 175 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 337

    (176) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 176 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 338

    (177) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 177 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 339

    (178) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 178 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 340

    (179) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 179 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 341

    (248) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 248 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 248 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 248 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 248 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 342

    (223) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (224) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 423
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 424
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 343

    (89) claveValor -> LIZQ expMap LDER .

    DOSPUNTOS       reduce using rule 89 (claveValor -> LIZQ expMap LDER .)
    COMA            reduce using rule 89 (claveValor -> LIZQ expMap LDER .)
    LDER            reduce using rule 89 (claveValor -> LIZQ expMap LDER .)


state 344

    (76) expMap -> claveValor DOSPUNTOS claveValor .
    (77) expMap -> claveValor DOSPUNTOS claveValor . COMA expMap

    LDER            reduce using rule 76 (expMap -> claveValor DOSPUNTOS claveValor .)
    COMA            shift and go to state 425


state 345

    (83) claveValor -> CIZQ expListDynamic CDER .

    DOSPUNTOS       reduce using rule 83 (claveValor -> CIZQ expListDynamic CDER .)
    COMA            reduce using rule 83 (claveValor -> CIZQ expListDynamic CDER .)
    LDER            reduce using rule 83 (claveValor -> CIZQ expListDynamic CDER .)


state 346

    (84) claveValor -> CIZQ expListSet CDER .

    DOSPUNTOS       reduce using rule 84 (claveValor -> CIZQ expListSet CDER .)
    COMA            reduce using rule 84 (claveValor -> CIZQ expListSet CDER .)
    LDER            reduce using rule 84 (claveValor -> CIZQ expListSet CDER .)


state 347

    (155) expListDynamic -> STRING COMA . expListDynamic
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 383

state 348

    (156) expListDynamic -> ENTERO COMA . expListDynamic
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 394

state 349

    (157) expListDynamic -> DOUBLE COMA . expListDynamic
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 397

state 350

    (158) expListDynamic -> BOOL COMA . expListDynamic
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 401

state 351

    (160) expListDynamic -> VARIABLE COMA . expListDynamic
    (166) expListSet -> VARIABLE COMA . expListSet
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet

    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 267
    SETFROM         shift and go to state 163

    expListDynamic                 shift and go to state 389
    expListSet                     shift and go to state 390

state 352

    (86) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (87) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 426
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 427

state 353

    (225) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 428


state 354

    (187) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (188) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 430
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 429
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 355

    (73) expresionMap -> LIZQ LDER .
    (88) claveValor -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 73 (expresionMap -> LIZQ LDER .)
    DOSPUNTOS       reduce using rule 88 (claveValor -> LIZQ LDER .)


state 356

    (75) expresionMap -> LIZQ expMap . LDER
    (89) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 431


state 357

    (190) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    MAP             reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIZQ            reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    SWITCH          reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)
    BREAK           reduce using rule 190 (sentenciaElse -> ELSE LIZQ final LDER .)


state 358

    (121) expresionLista -> CIZQ expListDynamic . CDER
    (83) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 432


state 359

    (125) expresionLista -> CIZQ expListSet . CDER
    (84) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 433


state 360

    (91) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (93) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (86) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (87) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 434


state 361

    (182) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 182 (imprimir -> PRINT PIZQ expresion PDER .)


state 362

    (183) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 183 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 363

    (185) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 185 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 364

    (186) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 186 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 365

    (237) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 237 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 237 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 237 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 237 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 366

    (191) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (192) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 436
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 435
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 367

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING

    VARIABLE        shift and go to state 438
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 50
    STRING          shift and go to state 184

    expresionBoolFor               shift and go to state 437
    valorDouble                    shift and go to state 439
    valorBool                      shift and go to state 440
    negacionBool                   shift and go to state 441
    comparacionBool                shift and go to state 442
    valorInt                       shift and go to state 182
    expresionBool                  shift and go to state 443
    valor                          shift and go to state 38

state 368

    (210) asignacionFor -> VARIABLE IGUAL . expresionInt
    (211) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt

    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236
    DOUBLE          shift and go to state 203

    expresionInt                   shift and go to state 444
    expresionDouble                shift and go to state 445
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 202

state 369

    (203) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 446


state 370

    (204) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 447


state 371

    (205) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 448


state 372

    (206) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (207) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 449


state 373

    (208) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (209) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 450


state 374

    (99) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (100) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 451


state 375

    (103) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (104) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 452


state 376

    (107) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (108) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 453


state 377

    (111) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (112) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 454


state 378

    (114) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (115) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 455


state 379

    (118) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (119) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 456


state 380

    (122) expresionLista -> LIST MENOR SET MAYOR . VARIABLE
    (123) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 457


state 381

    (126) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE
    (127) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 458


state 382

    (134) expListString -> STRING COMA expListString .

    CDER            reduce using rule 134 (expListString -> STRING COMA expListString .)


state 383

    (155) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 155 (expListDynamic -> STRING COMA expListDynamic .)


state 384

    (135) expListString -> VARIABLE .
    (136) expListString -> VARIABLE . COMA expListString
    (159) expListDynamic -> VARIABLE .
    (160) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> VARIABLE .)
    CDER            reduce using rule 135 (expListString -> VARIABLE .)
    COMA            shift and go to state 459

  ! CDER            [ reduce using rule 159 (expListDynamic -> VARIABLE .) ]


state 385

    (136) expListString -> VARIABLE COMA expListString .

    CDER            reduce using rule 136 (expListString -> VARIABLE COMA expListString .)


state 386

    (140) expListInt -> VARIABLE COMA expListInt .

    CDER            reduce using rule 140 (expListInt -> VARIABLE COMA expListInt .)


state 387

    (146) expListNum -> VARIABLE COMA expListNum .

    CDER            reduce using rule 146 (expListNum -> VARIABLE COMA expListNum .)


state 388

    (150) expListBool -> VARIABLE COMA expListBool .

    CDER            reduce using rule 150 (expListBool -> VARIABLE COMA expListBool .)


state 389

    (160) expListDynamic -> VARIABLE COMA expListDynamic .

    CDER            reduce using rule 160 (expListDynamic -> VARIABLE COMA expListDynamic .)


state 390

    (166) expListSet -> VARIABLE COMA expListSet .

    CDER            reduce using rule 166 (expListSet -> VARIABLE COMA expListSet .)


state 391

    (172) expListMap -> VARIABLE COMA expListMap .

    CDER            reduce using rule 172 (expListMap -> VARIABLE COMA expListMap .)


state 392

    (138) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 138 (expListInt -> ENTERO COMA expListInt .)


state 393

    (143) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 143 (expListNum -> ENTERO COMA expListNum .)


state 394

    (156) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 156 (expListDynamic -> ENTERO COMA expListDynamic .)


state 395

    (139) expListInt -> VARIABLE .
    (140) expListInt -> VARIABLE . COMA expListInt
    (145) expListNum -> VARIABLE .
    (146) expListNum -> VARIABLE . COMA expListNum
    (159) expListDynamic -> VARIABLE .
    (160) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 139 (expListInt -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 139 (expListInt -> VARIABLE .)
    CDER            reduce using rule 139 (expListInt -> VARIABLE .)
    COMA            shift and go to state 460

  ! CDER            [ reduce using rule 145 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 159 (expListDynamic -> VARIABLE .) ]


state 396

    (144) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 144 (expListNum -> DOUBLE COMA expListNum .)


state 397

    (157) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 157 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 398

    (141) expListNum -> ENTERO .
    (143) expListNum -> ENTERO . COMA expListNum
    (152) expListDynamic -> ENTERO .
    (156) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 141 (expListNum -> ENTERO .)
    CDER            reduce using rule 141 (expListNum -> ENTERO .)
    COMA            shift and go to state 461

  ! CDER            [ reduce using rule 152 (expListDynamic -> ENTERO .) ]


state 399

    (145) expListNum -> VARIABLE .
    (146) expListNum -> VARIABLE . COMA expListNum
    (159) expListDynamic -> VARIABLE .
    (160) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 145 (expListNum -> VARIABLE .)
    CDER            reduce using rule 145 (expListNum -> VARIABLE .)
    COMA            shift and go to state 462

  ! CDER            [ reduce using rule 159 (expListDynamic -> VARIABLE .) ]


state 400

    (148) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 148 (expListBool -> BOOL COMA expListBool .)


state 401

    (158) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 158 (expListDynamic -> BOOL COMA expListDynamic .)


state 402

    (149) expListBool -> VARIABLE .
    (150) expListBool -> VARIABLE . COMA expListBool
    (159) expListDynamic -> VARIABLE .
    (160) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 149 (expListBool -> VARIABLE .)
    CDER            reduce using rule 149 (expListBool -> VARIABLE .)
    COMA            shift and go to state 463

  ! CDER            [ reduce using rule 159 (expListDynamic -> VARIABLE .) ]


state 403

    (161) expListSet -> SETFROM PIZQ CIZQ . CDER PDER
    (162) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (163) expListSet -> SETFROM PIZQ CIZQ . CDER PDER COMA expListSet
    (164) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER COMA expListSet
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 464
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 465

state 404

    (169) expListMap -> LIZQ LDER COMA . expListMap
    (167) expListMap -> . LIZQ LDER
    (168) expListMap -> . LIZQ expMap LDER
    (169) expListMap -> . LIZQ LDER COMA expListMap
    (170) expListMap -> . LIZQ expMap LDER COMA expListMap
    (171) expListMap -> . VARIABLE
    (172) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 164
    VARIABLE        shift and go to state 467

    expListMap                     shift and go to state 466

state 405

    (168) expListMap -> LIZQ expMap LDER .
    (170) expListMap -> LIZQ expMap LDER . COMA expListMap

    CDER            reduce using rule 168 (expListMap -> LIZQ expMap LDER .)
    COMA            shift and go to state 468


state 406

    (92) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (94) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 469


state 407

    (72) expresionMap -> MAP VARIABLE IGUAL LIZQ . LDER
    (74) expresionMap -> MAP VARIABLE IGUAL LIZQ . expMap LDER
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 470
    VARIABLE        shift and go to state 132
    STRING          shift and go to state 133
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 135
    BOOL            shift and go to state 136
    CIZQ            shift and go to state 137
    SETFROM         shift and go to state 139
    LIZQ            shift and go to state 128
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 471
    claveValor                     shift and go to state 131
    expresionNewList               shift and go to state 138

state 408

    (97) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 97 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOSPUNTOS       reduce using rule 97 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    COMA            reduce using rule 97 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LDER            reduce using rule 97 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 409

    (91) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 472


state 410

    (93) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 473


state 411

    (159) expListDynamic -> VARIABLE .
    (160) expListDynamic -> VARIABLE . COMA expListDynamic

    CDER            reduce using rule 159 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 474


state 412

    (61) expresionSwitch -> SWITCH PIZQ VARIABLE PDER . LIZQ cases LDER

    LIZQ            shift and go to state 475


state 413

    (245) valorString -> STRING CIZQ ENTERO CDER .

    SUMA            reduce using rule 245 (valorString -> STRING CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 245 (valorString -> STRING CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 245 (valorString -> STRING CIZQ ENTERO CDER .)
    PDER            reduce using rule 245 (valorString -> STRING CIZQ ENTERO CDER .)


state 414

    (228) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 415

    (231) expresionBool -> valorDouble comparadorMat VARIABLE .
    (252) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 252 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 252 (valorInt -> VARIABLE .) ]


state 416

    (230) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (252) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 252 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 252 (valorInt -> VARIABLE .) ]


state 417

    (229) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 418

    (249) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 249 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 249 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 249 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 249 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 419

    (250) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 476


state 420

    (131) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .
    (95) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 95 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)
    PUNTOYCOMA      reduce using rule 95 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)

  ! PUNTOYCOMA      [ reduce using rule 131 (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .) ]


state 421

    (132) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 477


state 422

    (197) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 197 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 197 (expresion -> valor operadorMat expresion .)


state 423

    (223) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 129
    VARIABLE        shift and go to state 273
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 276
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 277
    MAP             shift and go to state 54
    LIZQ            shift and go to state 271
    SWITCH          shift and go to state 57
    STRING          shift and go to state 278
    ENTERO          shift and go to state 275
    DOUBLE          shift and go to state 279
    BOOL            shift and go to state 280

    expresionBool                  shift and go to state 6
    final                          shift and go to state 478
    expMap                         shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 274
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 131
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 424

    (224) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    MAP             reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 224 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 425

    (77) expMap -> claveValor DOSPUNTOS claveValor COMA . expMap
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 132
    STRING          shift and go to state 133
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 135
    BOOL            shift and go to state 136
    CIZQ            shift and go to state 137
    SETFROM         shift and go to state 139
    LIZQ            shift and go to state 128
    NEWLIST         shift and go to state 55

    claveValor                     shift and go to state 131
    expMap                         shift and go to state 479
    expresionNewList               shift and go to state 138

state 426

    (86) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 480


state 427

    (87) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 481


state 428

    (225) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 482


state 429

    (187) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 187 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 430

    (188) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 129
    VARIABLE        shift and go to state 273
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 276
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 277
    MAP             shift and go to state 54
    LIZQ            shift and go to state 271
    SWITCH          shift and go to state 57
    STRING          shift and go to state 278
    ENTERO          shift and go to state 275
    DOUBLE          shift and go to state 279
    BOOL            shift and go to state 280

    expresionBool                  shift and go to state 6
    final                          shift and go to state 483
    expMap                         shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 274
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 131
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 431

    (75) expresionMap -> LIZQ expMap LDER .
    (89) claveValor -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 75 (expresionMap -> LIZQ expMap LDER .)
    DOSPUNTOS       reduce using rule 89 (claveValor -> LIZQ expMap LDER .)


state 432

    (121) expresionLista -> CIZQ expListDynamic CDER .
    (83) claveValor -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 121 (expresionLista -> CIZQ expListDynamic CDER .)
    DOSPUNTOS       reduce using rule 83 (claveValor -> CIZQ expListDynamic CDER .)


state 433

    (125) expresionLista -> CIZQ expListSet CDER .
    (84) claveValor -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 125 (expresionLista -> CIZQ expListSet CDER .)
    DOSPUNTOS       reduce using rule 84 (claveValor -> CIZQ expListSet CDER .)


state 434

    (91) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (93) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (86) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (87) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 484
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 485

state 435

    (191) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 191 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 436

    (192) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 129
    VARIABLE        shift and go to state 273
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 276
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 277
    MAP             shift and go to state 54
    LIZQ            shift and go to state 271
    SWITCH          shift and go to state 57
    STRING          shift and go to state 278
    ENTERO          shift and go to state 275
    DOUBLE          shift and go to state 279
    BOOL            shift and go to state 280

    expresionBool                  shift and go to state 6
    final                          shift and go to state 486
    expMap                         shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 274
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 131
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 437

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 487


state 438

    (213) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (214) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (227) valorBool -> VARIABLE .
    (252) valorInt -> VARIABLE .
    (229) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (230) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (194) valor -> VARIABLE .
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 227 (valorBool -> VARIABLE .)
    AND             reduce using rule 227 (valorBool -> VARIABLE .)
    OR              reduce using rule 227 (valorBool -> VARIABLE .)
    IS              reduce using rule 194 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 194 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! DIGUAL          [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 252 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 488

state 439

    (212) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (215) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (228) expresionBool -> valorDouble . comparadorMat expresionDouble
    (231) expresionBool -> valorDouble . comparadorMat VARIABLE
    (265) comparadorMat -> . DIGUAL
    (266) comparadorMat -> . NOIGUAL
    (267) comparadorMat -> . MAYOR
    (268) comparadorMat -> . MENOR
    (269) comparadorMat -> . MAYIGUAL
    (270) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    comparadorMat                  shift and go to state 489

state 440

    (216) expresionBoolFor -> valorBool .
    (232) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 216 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 232 (expresionBool -> valorBool .)
    OR              reduce using rule 232 (expresionBool -> valorBool .)


state 441

    (217) expresionBoolFor -> negacionBool .
    (233) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 217 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 233 (expresionBool -> negacionBool .)
    OR              reduce using rule 233 (expresionBool -> negacionBool .)


state 442

    (218) expresionBoolFor -> comparacionBool .
    (234) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 218 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 234 (expresionBool -> comparacionBool .)
    OR              reduce using rule 234 (expresionBool -> comparacionBool .)


state 443

    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 444

    (210) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 210 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 445

    (211) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 211 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 446

    (203) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    expresionInt                   shift and go to state 490
    valorInt                       shift and go to state 234

state 447

    (204) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    expresionDouble                shift and go to state 491
    valorDouble                    shift and go to state 202
    valorInt                       shift and go to state 182

state 448

    (205) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236

    expresionDouble                shift and go to state 492
    valorDouble                    shift and go to state 202
    valorInt                       shift and go to state 182

state 449

    (206) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (207) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt

    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236
    DOUBLE          shift and go to state 203

    expresionInt                   shift and go to state 493
    expresionDouble                shift and go to state 494
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 202

state 450

    (208) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (209) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt

    ENTERO          shift and go to state 204
    VARIABLE        shift and go to state 236
    DOUBLE          shift and go to state 203

    expresionInt                   shift and go to state 495
    expresionDouble                shift and go to state 496
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 202

state 451

    (99) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (100) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (101) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 99 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 497


state 452

    (103) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (104) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (105) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 103 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 498


state 453

    (107) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (108) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (109) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 107 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 499


state 454

    (111) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (112) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (113) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 500


state 455

    (114) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (115) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (116) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 114 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 501


state 456

    (118) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (119) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 118 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 502


state 457

    (122) expresionLista -> LIST MENOR SET MAYOR VARIABLE .
    (123) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL CIZQ expListSet CDER
    (124) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 122 (expresionLista -> LIST MENOR SET MAYOR VARIABLE .)
    IGUAL           shift and go to state 503


state 458

    (126) expresionLista -> LIST MENOR MAP MAYOR VARIABLE .
    (127) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL CIZQ expListMap CDER
    (128) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 126 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE .)
    IGUAL           shift and go to state 504


state 459

    (136) expListString -> VARIABLE COMA . expListString
    (160) expListDynamic -> VARIABLE COMA . expListDynamic
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 158
    VARIABLE        shift and go to state 384
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    expListString                  shift and go to state 385
    expListDynamic                 shift and go to state 389

state 460

    (140) expListInt -> VARIABLE COMA . expListInt
    (146) expListNum -> VARIABLE COMA . expListNum
    (160) expListDynamic -> VARIABLE COMA . expListDynamic
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 160
    VARIABLE        shift and go to state 395
    DOUBLE          shift and go to state 161
    STRING          shift and go to state 263
    BOOL            shift and go to state 266

    expListInt                     shift and go to state 386
    expListNum                     shift and go to state 387
    expListDynamic                 shift and go to state 389

state 461

    (143) expListNum -> ENTERO COMA . expListNum
    (156) expListDynamic -> ENTERO COMA . expListDynamic
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 398
    DOUBLE          shift and go to state 161
    VARIABLE        shift and go to state 399
    STRING          shift and go to state 263
    BOOL            shift and go to state 266

    expListNum                     shift and go to state 393
    expListDynamic                 shift and go to state 394

state 462

    (146) expListNum -> VARIABLE COMA . expListNum
    (160) expListDynamic -> VARIABLE COMA . expListDynamic
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 398
    DOUBLE          shift and go to state 161
    VARIABLE        shift and go to state 399
    STRING          shift and go to state 263
    BOOL            shift and go to state 266

    expListNum                     shift and go to state 387
    expListDynamic                 shift and go to state 389

state 463

    (150) expListBool -> VARIABLE COMA . expListBool
    (160) expListDynamic -> VARIABLE COMA . expListDynamic
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 162
    VARIABLE        shift and go to state 402
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265

    expListBool                    shift and go to state 388
    expListDynamic                 shift and go to state 389

state 464

    (161) expListSet -> SETFROM PIZQ CIZQ CDER . PDER
    (163) expListSet -> SETFROM PIZQ CIZQ CDER . PDER COMA expListSet

    PDER            shift and go to state 505


state 465

    (162) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER COMA expListSet

    CDER            shift and go to state 506


state 466

    (169) expListMap -> LIZQ LDER COMA expListMap .

    CDER            reduce using rule 169 (expListMap -> LIZQ LDER COMA expListMap .)


state 467

    (171) expListMap -> VARIABLE .
    (172) expListMap -> VARIABLE . COMA expListMap

    CDER            reduce using rule 171 (expListMap -> VARIABLE .)
    COMA            shift and go to state 507


state 468

    (170) expListMap -> LIZQ expMap LDER COMA . expListMap
    (167) expListMap -> . LIZQ LDER
    (168) expListMap -> . LIZQ expMap LDER
    (169) expListMap -> . LIZQ LDER COMA expListMap
    (170) expListMap -> . LIZQ expMap LDER COMA expListMap
    (171) expListMap -> . VARIABLE
    (172) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 164
    VARIABLE        shift and go to state 467

    expListMap                     shift and go to state 508

state 469

    (92) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 509


state 470

    (72) expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .

    PUNTOYCOMA      reduce using rule 72 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)


state 471

    (74) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap . LDER

    LDER            shift and go to state 510


state 472

    (91) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 91 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 473

    (93) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 511


state 474

    (160) expListDynamic -> VARIABLE COMA . expListDynamic
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 389

state 475

    (61) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ . cases LDER
    (62) cases -> . caseString
    (63) cases -> . caseInt
    (64) cases -> . caseBool
    (65) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (66) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
    (67) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
    (69) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    CASE            shift and go to state 516

    cases                          shift and go to state 512
    caseString                     shift and go to state 513
    caseInt                        shift and go to state 514
    caseBool                       shift and go to state 515

state 476

    (250) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 517


state 477

    (132) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 518


state 478

    (223) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 519


state 479

    (77) expMap -> claveValor DOSPUNTOS claveValor COMA expMap .

    LDER            reduce using rule 77 (expMap -> claveValor DOSPUNTOS claveValor COMA expMap .)


state 480

    (86) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    DOSPUNTOS       reduce using rule 86 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            reduce using rule 86 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    LDER            reduce using rule 86 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 481

    (87) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 520


state 482

    (225) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 183
    STRING          shift and go to state 184

    expresionBool                  shift and go to state 521
    valorDouble                    shift and go to state 178
    valorBool                      shift and go to state 180
    negacionBool                   shift and go to state 181
    comparacionBool                shift and go to state 219
    valor                          shift and go to state 38
    valorInt                       shift and go to state 182

state 483

    (188) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 522


state 484

    (91) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER
    (86) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 523


state 485

    (93) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (87) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 524


state 486

    (192) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 525


state 487

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 526


state 488

    (213) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (214) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (229) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (230) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 527
    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204

    expresionDouble                shift and go to state 528
    valorDouble                    shift and go to state 202
    valorInt                       shift and go to state 182

state 489

    (212) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (215) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (228) expresionBool -> valorDouble comparadorMat . expresionDouble
    (231) expresionBool -> valorDouble comparadorMat . VARIABLE
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 530
    DOUBLE          shift and go to state 203
    ENTERO          shift and go to state 204

    valorDouble                    shift and go to state 202
    expresionDouble                shift and go to state 529
    valorInt                       shift and go to state 182

state 490

    (203) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 203 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 491

    (204) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 204 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 492

    (205) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 205 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 493

    (206) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 206 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 494

    (207) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 207 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 495

    (208) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 208 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 496

    (209) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 209 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 497

    (100) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (101) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 531
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 532

state 498

    (104) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (105) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 533
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 534

state 499

    (108) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (109) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 535
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 536

state 500

    (112) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (113) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 537
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 538

state 501

    (115) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (116) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 539
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 540

state 502

    (119) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (120) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 541
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 542

state 503

    (123) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . CIZQ expListSet CDER
    (124) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 543
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 544

state 504

    (127) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . CIZQ expListMap CDER
    (128) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . expresionNewList
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 545
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 546

state 505

    (161) expListSet -> SETFROM PIZQ CIZQ CDER PDER .
    (163) expListSet -> SETFROM PIZQ CIZQ CDER PDER . COMA expListSet

    CDER            reduce using rule 161 (expListSet -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            shift and go to state 547


state 506

    (162) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER COMA expListSet

    PDER            shift and go to state 548


state 507

    (172) expListMap -> VARIABLE COMA . expListMap
    (167) expListMap -> . LIZQ LDER
    (168) expListMap -> . LIZQ expMap LDER
    (169) expListMap -> . LIZQ LDER COMA expListMap
    (170) expListMap -> . LIZQ expMap LDER COMA expListMap
    (171) expListMap -> . VARIABLE
    (172) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 164
    VARIABLE        shift and go to state 467

    expListMap                     shift and go to state 391

state 508

    (170) expListMap -> LIZQ expMap LDER COMA expListMap .

    CDER            reduce using rule 170 (expListMap -> LIZQ expMap LDER COMA expListMap .)


state 509

    (92) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 549
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 550

state 510

    (74) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 74 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)


state 511

    (93) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 93 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 512

    (61) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases . LDER

    LDER            shift and go to state 551


state 513

    (62) cases -> caseString .

    LDER            reduce using rule 62 (cases -> caseString .)


state 514

    (63) cases -> caseInt .

    LDER            reduce using rule 63 (cases -> caseInt .)


state 515

    (64) cases -> caseBool .

    LDER            reduce using rule 64 (cases -> caseBool .)


state 516

    (65) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (66) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
    (67) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
    (69) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    STRING          shift and go to state 552
    ENTERO          shift and go to state 553
    BOOL            shift and go to state 554


state 517

    (250) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 250 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 250 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 250 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 250 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 518

    (132) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 132 (expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .)


state 519

    (223) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 223 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 520

    (87) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    DOSPUNTOS       reduce using rule 87 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            reduce using rule 87 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    LDER            reduce using rule 87 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 521

    (225) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (238) comparacionBool -> expresionBool . operadorLogico expresionBool
    (239) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (271) operadorLogico -> . AND
    (272) operadorLogico -> . OR

    PDER            shift and go to state 555
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 522

    (188) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 188 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 523

    (91) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .
    (86) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 91 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)
    DOSPUNTOS       reduce using rule 86 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 524

    (93) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (87) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 556


state 525

    (192) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 192 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 526

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 557
    DRESTA          shift and go to state 558


state 527

    (214) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (230) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (252) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 214 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 214 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 230 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 252 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 252 (valorInt -> VARIABLE .) ]


state 528

    (213) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (229) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 213 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 229 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 529

    (212) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (228) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 212 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 228 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 530

    (215) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (231) expresionBool -> valorDouble comparadorMat VARIABLE .
    (252) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 215 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 215 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 231 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 252 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 252 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 252 (valorInt -> VARIABLE .)
    DIV             reduce using rule 252 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 252 (valorInt -> VARIABLE .)
    MOD             reduce using rule 252 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 252 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 252 (valorInt -> VARIABLE .) ]


state 531

    (100) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (98) expresionNewList -> CIZQ . CDER
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString

    CDER            shift and go to state 151
    STRING          shift and go to state 561
    VARIABLE        shift and go to state 559

    expListString                  shift and go to state 560

state 532

    (101) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 101 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 533

    (104) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (98) expresionNewList -> CIZQ . CDER
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt

    CDER            shift and go to state 151
    ENTERO          shift and go to state 564
    VARIABLE        shift and go to state 562

    expListInt                     shift and go to state 563

state 534

    (105) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 105 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 535

    (108) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (98) expresionNewList -> CIZQ . CDER
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 151
    ENTERO          shift and go to state 567
    DOUBLE          shift and go to state 568
    VARIABLE        shift and go to state 565

    expListNum                     shift and go to state 566

state 536

    (109) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 109 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 537

    (112) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (98) expresionNewList -> CIZQ . CDER
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 151
    ENTERO          shift and go to state 567
    DOUBLE          shift and go to state 568
    VARIABLE        shift and go to state 565

    expListNum                     shift and go to state 569

state 538

    (113) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 113 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 539

    (115) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (98) expresionNewList -> CIZQ . CDER
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool

    CDER            shift and go to state 151
    BOOL            shift and go to state 572
    VARIABLE        shift and go to state 570

    expListBool                    shift and go to state 571

state 540

    (116) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 116 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 541

    (119) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (98) expresionNewList -> CIZQ . CDER
    (151) expListDynamic -> . STRING
    (152) expListDynamic -> . ENTERO
    (153) expListDynamic -> . DOUBLE
    (154) expListDynamic -> . BOOL
    (155) expListDynamic -> . STRING COMA expListDynamic
    (156) expListDynamic -> . ENTERO COMA expListDynamic
    (157) expListDynamic -> . DOUBLE COMA expListDynamic
    (158) expListDynamic -> . BOOL COMA expListDynamic
    (159) expListDynamic -> . VARIABLE
    (160) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 151
    STRING          shift and go to state 263
    ENTERO          shift and go to state 264
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266
    VARIABLE        shift and go to state 411

    expListDynamic                 shift and go to state 573

state 542

    (120) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 120 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 543

    (123) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ . expListSet CDER
    (98) expresionNewList -> CIZQ . CDER
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 151
    SETFROM         shift and go to state 163
    VARIABLE        shift and go to state 574

    expListSet                     shift and go to state 575

state 544

    (124) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 124 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .)


state 545

    (127) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ . expListMap CDER
    (98) expresionNewList -> CIZQ . CDER
    (167) expListMap -> . LIZQ LDER
    (168) expListMap -> . LIZQ expMap LDER
    (169) expListMap -> . LIZQ LDER COMA expListMap
    (170) expListMap -> . LIZQ expMap LDER COMA expListMap
    (171) expListMap -> . VARIABLE
    (172) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 151
    LIZQ            shift and go to state 164
    VARIABLE        shift and go to state 467

    expListMap                     shift and go to state 576

state 546

    (128) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 128 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .)


state 547

    (163) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA . expListSet
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 163
    VARIABLE        shift and go to state 574

    expListSet                     shift and go to state 577

state 548

    (162) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER . COMA expListSet

    CDER            reduce using rule 162 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            shift and go to state 578


state 549

    (92) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 579


state 550

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 580


state 551

    (61) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .

    PUNTOYCOMA      reduce using rule 61 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)


state 552

    (65) caseString -> CASE STRING . DOSPUNTOS final BREAK PUNTOYCOMA
    (66) caseString -> CASE STRING . DOSPUNTOS final BREAK PUNTOYCOMA caseString

    DOSPUNTOS       shift and go to state 581


state 553

    (67) caseInt -> CASE ENTERO . DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseInt -> CASE ENTERO . DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    DOSPUNTOS       shift and go to state 582


state 554

    (69) caseBool -> CASE BOOL . DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseBool -> CASE BOOL . DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    DOSPUNTOS       shift and go to state 583


state 555

    (225) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 225 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 556

    (93) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (87) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 93 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    DOSPUNTOS       reduce using rule 87 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 557

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 584


state 558

    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 585


state 559

    (135) expListString -> VARIABLE .
    (136) expListString -> VARIABLE . COMA expListString

    CDER            reduce using rule 135 (expListString -> VARIABLE .)
    COMA            shift and go to state 586


state 560

    (100) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 587


state 561

    (133) expListString -> STRING .
    (134) expListString -> STRING . COMA expListString

    CDER            reduce using rule 133 (expListString -> STRING .)
    COMA            shift and go to state 588


state 562

    (139) expListInt -> VARIABLE .
    (140) expListInt -> VARIABLE . COMA expListInt

    CDER            reduce using rule 139 (expListInt -> VARIABLE .)
    COMA            shift and go to state 589


state 563

    (104) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 590


state 564

    (137) expListInt -> ENTERO .
    (138) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 137 (expListInt -> ENTERO .)
    COMA            shift and go to state 591


state 565

    (145) expListNum -> VARIABLE .
    (146) expListNum -> VARIABLE . COMA expListNum

    CDER            reduce using rule 145 (expListNum -> VARIABLE .)
    COMA            shift and go to state 592


state 566

    (108) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 593


state 567

    (141) expListNum -> ENTERO .
    (143) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 141 (expListNum -> ENTERO .)
    COMA            shift and go to state 594


state 568

    (142) expListNum -> DOUBLE .
    (144) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 142 (expListNum -> DOUBLE .)
    COMA            shift and go to state 595


state 569

    (112) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 596


state 570

    (149) expListBool -> VARIABLE .
    (150) expListBool -> VARIABLE . COMA expListBool

    CDER            reduce using rule 149 (expListBool -> VARIABLE .)
    COMA            shift and go to state 597


state 571

    (115) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 598


state 572

    (147) expListBool -> BOOL .
    (148) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 147 (expListBool -> BOOL .)
    COMA            shift and go to state 599


state 573

    (119) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 600


state 574

    (165) expListSet -> VARIABLE .
    (166) expListSet -> VARIABLE . COMA expListSet

    CDER            reduce using rule 165 (expListSet -> VARIABLE .)
    COMA            shift and go to state 601


state 575

    (123) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet . CDER

    CDER            shift and go to state 602


state 576

    (127) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap . CDER

    CDER            shift and go to state 603


state 577

    (163) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .

    CDER            reduce using rule 163 (expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .)


state 578

    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA . expListSet
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 163
    VARIABLE        shift and go to state 574

    expListSet                     shift and go to state 604

state 579

    (92) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 92 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 580

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 605


state 581

    (65) caseString -> CASE STRING DOSPUNTOS . final BREAK PUNTOYCOMA
    (66) caseString -> CASE STRING DOSPUNTOS . final BREAK PUNTOYCOMA caseString
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 606
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 582

    (67) caseInt -> CASE ENTERO DOSPUNTOS . final BREAK PUNTOYCOMA
    (68) caseInt -> CASE ENTERO DOSPUNTOS . final BREAK PUNTOYCOMA caseInt
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 607
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 583

    (69) caseBool -> CASE BOOL DOSPUNTOS . final BREAK PUNTOYCOMA
    (70) caseBool -> CASE BOOL DOSPUNTOS . final BREAK PUNTOYCOMA caseBool
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 608
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 584

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (220) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 609
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 610
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 585

    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (222) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 611
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 612
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 586

    (136) expListString -> VARIABLE COMA . expListString
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 561
    VARIABLE        shift and go to state 559

    expListString                  shift and go to state 385

state 587

    (100) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 100 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 588

    (134) expListString -> STRING COMA . expListString
    (133) expListString -> . STRING
    (134) expListString -> . STRING COMA expListString
    (135) expListString -> . VARIABLE
    (136) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 561
    VARIABLE        shift and go to state 559

    expListString                  shift and go to state 382

state 589

    (140) expListInt -> VARIABLE COMA . expListInt
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 564
    VARIABLE        shift and go to state 562

    expListInt                     shift and go to state 386

state 590

    (104) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 104 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 591

    (138) expListInt -> ENTERO COMA . expListInt
    (137) expListInt -> . ENTERO
    (138) expListInt -> . ENTERO COMA expListInt
    (139) expListInt -> . VARIABLE
    (140) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 564
    VARIABLE        shift and go to state 562

    expListInt                     shift and go to state 392

state 592

    (146) expListNum -> VARIABLE COMA . expListNum
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 567
    DOUBLE          shift and go to state 568
    VARIABLE        shift and go to state 565

    expListNum                     shift and go to state 387

state 593

    (108) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 108 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 594

    (143) expListNum -> ENTERO COMA . expListNum
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 567
    DOUBLE          shift and go to state 568
    VARIABLE        shift and go to state 565

    expListNum                     shift and go to state 393

state 595

    (144) expListNum -> DOUBLE COMA . expListNum
    (141) expListNum -> . ENTERO
    (142) expListNum -> . DOUBLE
    (143) expListNum -> . ENTERO COMA expListNum
    (144) expListNum -> . DOUBLE COMA expListNum
    (145) expListNum -> . VARIABLE
    (146) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 567
    DOUBLE          shift and go to state 568
    VARIABLE        shift and go to state 565

    expListNum                     shift and go to state 396

state 596

    (112) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 112 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 597

    (150) expListBool -> VARIABLE COMA . expListBool
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 572
    VARIABLE        shift and go to state 570

    expListBool                    shift and go to state 388

state 598

    (115) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 115 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 599

    (148) expListBool -> BOOL COMA . expListBool
    (147) expListBool -> . BOOL
    (148) expListBool -> . BOOL COMA expListBool
    (149) expListBool -> . VARIABLE
    (150) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 572
    VARIABLE        shift and go to state 570

    expListBool                    shift and go to state 400

state 600

    (119) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 119 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 601

    (166) expListSet -> VARIABLE COMA . expListSet
    (161) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (162) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (165) expListSet -> . VARIABLE
    (166) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 163
    VARIABLE        shift and go to state 574

    expListSet                     shift and go to state 390

state 602

    (123) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 123 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .)


state 603

    (127) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 127 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .)


state 604

    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .

    CDER            reduce using rule 164 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .)


state 605

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 94 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 606

    (65) caseString -> CASE STRING DOSPUNTOS final . BREAK PUNTOYCOMA
    (66) caseString -> CASE STRING DOSPUNTOS final . BREAK PUNTOYCOMA caseString

    BREAK           shift and go to state 613


state 607

    (67) caseInt -> CASE ENTERO DOSPUNTOS final . BREAK PUNTOYCOMA
    (68) caseInt -> CASE ENTERO DOSPUNTOS final . BREAK PUNTOYCOMA caseInt

    BREAK           shift and go to state 614


state 608

    (69) caseBool -> CASE BOOL DOSPUNTOS final . BREAK PUNTOYCOMA
    (70) caseBool -> CASE BOOL DOSPUNTOS final . BREAK PUNTOYCOMA caseBool

    BREAK           shift and go to state 615


state 609

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 129
    VARIABLE        shift and go to state 273
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 276
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 277
    MAP             shift and go to state 54
    LIZQ            shift and go to state 271
    SWITCH          shift and go to state 57
    STRING          shift and go to state 278
    ENTERO          shift and go to state 275
    DOUBLE          shift and go to state 279
    BOOL            shift and go to state 280

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 616
    expMap                         shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 274
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 131
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 610

    (220) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    MAP             reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIZQ            reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SWITCH          reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BREAK           reduce using rule 220 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 611

    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (73) expresionMap -> LIZQ . LDER
    (75) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (76) expMap -> . claveValor DOSPUNTOS claveValor
    (77) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (173) asignacion -> . INT VARIABLE IGUAL expresionInt
    (174) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (175) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (176) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (177) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (178) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (179) asignacion -> . VAR VARIABLE IGUAL expresion
    (180) asignacion -> . asignacionSimple
    (253) expresionInt -> . valorInt operadorMat expresionInt
    (254) expresionInt -> . valorInt
    (257) expresionDouble -> . valorDouble operadorMat expresionDouble
    (258) expresionDouble -> . valorDouble
    (246) expresionString -> . valorString SUMA expresionString
    (247) expresionString -> . valorString
    (228) expresionBool -> . valorDouble comparadorMat expresionDouble
    (229) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (230) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (231) expresionBool -> . valorDouble comparadorMat VARIABLE
    (232) expresionBool -> . valorBool
    (233) expresionBool -> . negacionBool
    (234) expresionBool -> . comparacionBool
    (235) expresionBool -> . valor IS objeto
    (236) expresionBool -> . valor ISNEGADO objeto
    (212) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (213) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (214) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (215) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (216) expresionBoolFor -> . valorBool
    (217) expresionBoolFor -> . negacionBool
    (218) expresionBoolFor -> . comparacionBool
    (223) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (224) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (225) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (187) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (188) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (189) sentenciaElse -> . ELSE final
    (190) sentenciaElse -> . ELSE LIZQ final LDER
    (182) imprimir -> . PRINT PIZQ expresion PDER
    (183) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (184) funcionStdin -> . FUNCIONSTDIN
    (185) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (186) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (237) negacionBool -> . NOT PIZQ expresionBool PDER
    (238) comparacionBool -> . expresionBool operadorLogico expresionBool
    (239) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (192) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (219) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (220) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (221) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (222) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (249) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (250) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (99) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (100) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> . CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (104) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> . CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (108) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (110) expresionLista -> . CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (112) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (114) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (115) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> . CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (119) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> . CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (123) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (125) expresionLista -> . CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (127) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (129) expresionLista -> . CIZQ expListMap CDER
    (130) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (131) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (132) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (96) expresionNewList -> . NEWLIST PIZQ PDER
    (97) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (98) expresionNewList -> . CIZQ CDER
    (90) expresionSet -> . SET VARIABLE
    (91) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (92) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (93) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (95) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (71) expresionMap -> . MAP VARIABLE
    (72) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (73) expresionMap -> . LIZQ LDER
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (75) expresionMap -> . LIZQ expMap LDER
    (61) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (78) claveValor -> . VARIABLE
    (79) claveValor -> . STRING
    (80) claveValor -> . ENTERO
    (81) claveValor -> . DOUBLE
    (82) claveValor -> . BOOL
    (83) claveValor -> . CIZQ expListDynamic CDER
    (84) claveValor -> . CIZQ expListSet CDER
    (85) claveValor -> . expresionNewList
    (86) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (87) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> . LIZQ LDER
    (89) claveValor -> . LIZQ expMap LDER
    (181) asignacionSimple -> . VARIABLE IGUAL expresion
    (251) valorInt -> . ENTERO
    (252) valorInt -> . VARIABLE
    (255) valorDouble -> . DOUBLE
    (256) valorDouble -> . valorInt
    (240) valorString -> . STRING
    (241) valorString -> . VARIABLE
    (242) valorString -> . FUNCIONSTDIN
    (243) valorString -> . expresionIndexString
    (244) valorString -> . sentenciaSubstring
    (245) valorString -> . STRING CIZQ ENTERO CDER
    (226) valorBool -> . BOOL
    (227) valorBool -> . VARIABLE
    (193) valor -> . ENTERO
    (194) valor -> . VARIABLE
    (195) valor -> . DOUBLE
    (196) valor -> . STRING
    (248) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 129
    VARIABLE        shift and go to state 273
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 276
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 277
    MAP             shift and go to state 54
    LIZQ            shift and go to state 271
    SWITCH          shift and go to state 57
    STRING          shift and go to state 278
    ENTERO          shift and go to state 275
    DOUBLE          shift and go to state 279
    BOOL            shift and go to state 280

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 617
    expMap                         shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 274
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 131
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 612

    (222) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    MAP             reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIZQ            reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SWITCH          reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BREAK           reduce using rule 222 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 613

    (65) caseString -> CASE STRING DOSPUNTOS final BREAK . PUNTOYCOMA
    (66) caseString -> CASE STRING DOSPUNTOS final BREAK . PUNTOYCOMA caseString

    PUNTOYCOMA      shift and go to state 618


state 614

    (67) caseInt -> CASE ENTERO DOSPUNTOS final BREAK . PUNTOYCOMA
    (68) caseInt -> CASE ENTERO DOSPUNTOS final BREAK . PUNTOYCOMA caseInt

    PUNTOYCOMA      shift and go to state 619


state 615

    (69) caseBool -> CASE BOOL DOSPUNTOS final BREAK . PUNTOYCOMA
    (70) caseBool -> CASE BOOL DOSPUNTOS final BREAK . PUNTOYCOMA caseBool

    PUNTOYCOMA      shift and go to state 620


state 616

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 621


state 617

    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 622


state 618

    (65) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA .
    (66) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA . caseString
    (65) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (66) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString

    LDER            reduce using rule 65 (caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 623

    caseString                     shift and go to state 624

state 619

    (67) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA .
    (68) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA . caseInt
    (67) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    LDER            reduce using rule 67 (caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 625

    caseInt                        shift and go to state 626

state 620

    (69) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA .
    (70) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA . caseBool
    (69) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    LDER            reduce using rule 69 (caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 627

    caseBool                       shift and go to state 628

state 621

    (219) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    MAP             reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BREAK           reduce using rule 219 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 622

    (221) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    MAP             reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BREAK           reduce using rule 221 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)


state 623

    (65) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (66) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString

    STRING          shift and go to state 552


state 624

    (66) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString .

    LDER            reduce using rule 66 (caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString .)


state 625

    (67) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    ENTERO          shift and go to state 553


state 626

    (68) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt .

    LDER            reduce using rule 68 (caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt .)


state 627

    (69) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    BOOL            shift and go to state 554


state 628

    (70) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool .

    LDER            reduce using rule 70 (caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for MAP in state 8 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for MAP in state 10 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for SET in state 11 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 11 resolved as shift
WARNING: shift/reduce conflict for MAP in state 11 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for SET in state 17 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 17 resolved as shift
WARNING: shift/reduce conflict for MAP in state 17 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for SET in state 18 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 18 resolved as shift
WARNING: shift/reduce conflict for MAP in state 18 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 20 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 34 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 34 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 34 resolved as shift
WARNING: shift/reduce conflict for DIV in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 34 resolved as shift
WARNING: shift/reduce conflict for MOD in state 34 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for INT in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 62 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for DO in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 62 resolved as shift
WARNING: shift/reduce conflict for FOR in state 62 resolved as shift
WARNING: shift/reduce conflict for LIST in state 62 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 62 resolved as shift
WARNING: shift/reduce conflict for SET in state 62 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 62 resolved as shift
WARNING: shift/reduce conflict for MAP in state 62 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for SET in state 63 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 63 resolved as shift
WARNING: shift/reduce conflict for MAP in state 63 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 64 resolved as shift
WARNING: shift/reduce conflict for INT in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 64 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 64 resolved as shift
WARNING: shift/reduce conflict for VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for DO in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 64 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 64 resolved as shift
WARNING: shift/reduce conflict for FOR in state 64 resolved as shift
WARNING: shift/reduce conflict for LIST in state 64 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 64 resolved as shift
WARNING: shift/reduce conflict for SET in state 64 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 64 resolved as shift
WARNING: shift/reduce conflict for MAP in state 64 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 64 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for LIST in state 65 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 65 resolved as shift
WARNING: shift/reduce conflict for SET in state 65 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 65 resolved as shift
WARNING: shift/reduce conflict for MAP in state 65 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 66 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for LIST in state 66 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 66 resolved as shift
WARNING: shift/reduce conflict for SET in state 66 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 66 resolved as shift
WARNING: shift/reduce conflict for MAP in state 66 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for INT in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 70 resolved as shift
WARNING: shift/reduce conflict for NUM in state 70 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 70 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 70 resolved as shift
WARNING: shift/reduce conflict for VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 70 resolved as shift
WARNING: shift/reduce conflict for FOR in state 70 resolved as shift
WARNING: shift/reduce conflict for LIST in state 70 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 70 resolved as shift
WARNING: shift/reduce conflict for SET in state 70 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 70 resolved as shift
WARNING: shift/reduce conflict for MAP in state 70 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 70 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 70 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 72 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 72 resolved as shift
WARNING: shift/reduce conflict for DO in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 72 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 72 resolved as shift
WARNING: shift/reduce conflict for FOR in state 72 resolved as shift
WARNING: shift/reduce conflict for LIST in state 72 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 72 resolved as shift
WARNING: shift/reduce conflict for SET in state 72 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 72 resolved as shift
WARNING: shift/reduce conflict for MAP in state 72 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for SET in state 73 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 73 resolved as shift
WARNING: shift/reduce conflict for MAP in state 73 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for MAP in state 74 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for SET in state 76 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 76 resolved as shift
WARNING: shift/reduce conflict for MAP in state 76 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for SET in state 78 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 78 resolved as shift
WARNING: shift/reduce conflict for MAP in state 78 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 79 resolved as shift
WARNING: shift/reduce conflict for INT in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 79 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 79 resolved as shift
WARNING: shift/reduce conflict for VAR in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 79 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 79 resolved as shift
WARNING: shift/reduce conflict for NOT in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 79 resolved as shift
WARNING: shift/reduce conflict for FOR in state 79 resolved as shift
WARNING: shift/reduce conflict for LIST in state 79 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 79 resolved as shift
WARNING: shift/reduce conflict for SET in state 79 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 79 resolved as shift
WARNING: shift/reduce conflict for MAP in state 79 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 79 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 79 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for MAP in state 80 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 81 resolved as shift
WARNING: shift/reduce conflict for INT in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 81 resolved as shift
WARNING: shift/reduce conflict for NUM in state 81 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 81 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 81 resolved as shift
WARNING: shift/reduce conflict for DO in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 81 resolved as shift
WARNING: shift/reduce conflict for NOT in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 81 resolved as shift
WARNING: shift/reduce conflict for FOR in state 81 resolved as shift
WARNING: shift/reduce conflict for LIST in state 81 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 81 resolved as shift
WARNING: shift/reduce conflict for SET in state 81 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 81 resolved as shift
WARNING: shift/reduce conflict for MAP in state 81 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 81 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 81 resolved as shift
WARNING: shift/reduce conflict for STRING in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 81 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 82 resolved as shift
WARNING: shift/reduce conflict for NUM in state 82 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 82 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 82 resolved as shift
WARNING: shift/reduce conflict for VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for DO in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 82 resolved as shift
WARNING: shift/reduce conflict for FOR in state 82 resolved as shift
WARNING: shift/reduce conflict for LIST in state 82 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 82 resolved as shift
WARNING: shift/reduce conflict for SET in state 82 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 82 resolved as shift
WARNING: shift/reduce conflict for MAP in state 82 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 82 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 83 resolved as shift
WARNING: shift/reduce conflict for INT in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 83 resolved as shift
WARNING: shift/reduce conflict for NUM in state 83 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 83 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for DO in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 83 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 83 resolved as shift
WARNING: shift/reduce conflict for FOR in state 83 resolved as shift
WARNING: shift/reduce conflict for LIST in state 83 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 83 resolved as shift
WARNING: shift/reduce conflict for SET in state 83 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 83 resolved as shift
WARNING: shift/reduce conflict for MAP in state 83 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 83 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 85 resolved as shift
WARNING: shift/reduce conflict for INT in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 85 resolved as shift
WARNING: shift/reduce conflict for NUM in state 85 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 85 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 85 resolved as shift
WARNING: shift/reduce conflict for VAR in state 85 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 85 resolved as shift
WARNING: shift/reduce conflict for DO in state 85 resolved as shift
WARNING: shift/reduce conflict for IF in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 85 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 85 resolved as shift
WARNING: shift/reduce conflict for NOT in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 85 resolved as shift
WARNING: shift/reduce conflict for FOR in state 85 resolved as shift
WARNING: shift/reduce conflict for LIST in state 85 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 85 resolved as shift
WARNING: shift/reduce conflict for SET in state 85 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 85 resolved as shift
WARNING: shift/reduce conflict for MAP in state 85 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 85 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 85 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 87 resolved as shift
WARNING: shift/reduce conflict for INT in state 87 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 87 resolved as shift
WARNING: shift/reduce conflict for NUM in state 87 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 87 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 87 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 87 resolved as shift
WARNING: shift/reduce conflict for VAR in state 87 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 87 resolved as shift
WARNING: shift/reduce conflict for DO in state 87 resolved as shift
WARNING: shift/reduce conflict for IF in state 87 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 87 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 87 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 87 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 87 resolved as shift
WARNING: shift/reduce conflict for NOT in state 87 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 87 resolved as shift
WARNING: shift/reduce conflict for FOR in state 87 resolved as shift
WARNING: shift/reduce conflict for LIST in state 87 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 87 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 87 resolved as shift
WARNING: shift/reduce conflict for SET in state 87 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 87 resolved as shift
WARNING: shift/reduce conflict for MAP in state 87 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 87 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 87 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 87 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 87 resolved as shift
WARNING: shift/reduce conflict for STRING in state 87 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 87 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 102 resolved as shift
WARNING: shift/reduce conflict for INT in state 102 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 102 resolved as shift
WARNING: shift/reduce conflict for NUM in state 102 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 102 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 102 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 102 resolved as shift
WARNING: shift/reduce conflict for VAR in state 102 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 102 resolved as shift
WARNING: shift/reduce conflict for DO in state 102 resolved as shift
WARNING: shift/reduce conflict for IF in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 102 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 102 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 102 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 102 resolved as shift
WARNING: shift/reduce conflict for NOT in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 102 resolved as shift
WARNING: shift/reduce conflict for FOR in state 102 resolved as shift
WARNING: shift/reduce conflict for LIST in state 102 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 102 resolved as shift
WARNING: shift/reduce conflict for SET in state 102 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 102 resolved as shift
WARNING: shift/reduce conflict for MAP in state 102 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 102 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 102 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 102 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 102 resolved as shift
WARNING: shift/reduce conflict for STRING in state 102 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 102 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 103 resolved as shift
WARNING: shift/reduce conflict for INT in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 103 resolved as shift
WARNING: shift/reduce conflict for NUM in state 103 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 103 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 103 resolved as shift
WARNING: shift/reduce conflict for VAR in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for DO in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 103 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 103 resolved as shift
WARNING: shift/reduce conflict for NOT in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for LIST in state 103 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 103 resolved as shift
WARNING: shift/reduce conflict for SET in state 103 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 103 resolved as shift
WARNING: shift/reduce conflict for MAP in state 103 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 103 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 103 resolved as shift
WARNING: shift/reduce conflict for STRING in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 103 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 104 resolved as shift
WARNING: shift/reduce conflict for INT in state 104 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 104 resolved as shift
WARNING: shift/reduce conflict for NUM in state 104 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 104 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 104 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 104 resolved as shift
WARNING: shift/reduce conflict for VAR in state 104 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 104 resolved as shift
WARNING: shift/reduce conflict for DO in state 104 resolved as shift
WARNING: shift/reduce conflict for IF in state 104 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 104 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 104 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 104 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 104 resolved as shift
WARNING: shift/reduce conflict for NOT in state 104 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 104 resolved as shift
WARNING: shift/reduce conflict for FOR in state 104 resolved as shift
WARNING: shift/reduce conflict for LIST in state 104 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 104 resolved as shift
WARNING: shift/reduce conflict for SET in state 104 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 104 resolved as shift
WARNING: shift/reduce conflict for MAP in state 104 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 104 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 104 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 104 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 104 resolved as shift
WARNING: shift/reduce conflict for STRING in state 104 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 104 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 105 resolved as shift
WARNING: shift/reduce conflict for INT in state 105 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 105 resolved as shift
WARNING: shift/reduce conflict for NUM in state 105 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 105 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 105 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 105 resolved as shift
WARNING: shift/reduce conflict for VAR in state 105 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 105 resolved as shift
WARNING: shift/reduce conflict for DO in state 105 resolved as shift
WARNING: shift/reduce conflict for IF in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 105 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 105 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 105 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 105 resolved as shift
WARNING: shift/reduce conflict for NOT in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 105 resolved as shift
WARNING: shift/reduce conflict for FOR in state 105 resolved as shift
WARNING: shift/reduce conflict for LIST in state 105 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 105 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 105 resolved as shift
WARNING: shift/reduce conflict for SET in state 105 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 105 resolved as shift
WARNING: shift/reduce conflict for MAP in state 105 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 105 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 105 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 105 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 105 resolved as shift
WARNING: shift/reduce conflict for STRING in state 105 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 105 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 106 resolved as shift
WARNING: shift/reduce conflict for INT in state 106 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 106 resolved as shift
WARNING: shift/reduce conflict for NUM in state 106 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 106 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 106 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 106 resolved as shift
WARNING: shift/reduce conflict for VAR in state 106 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 106 resolved as shift
WARNING: shift/reduce conflict for DO in state 106 resolved as shift
WARNING: shift/reduce conflict for IF in state 106 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 106 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 106 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 106 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 106 resolved as shift
WARNING: shift/reduce conflict for NOT in state 106 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 106 resolved as shift
WARNING: shift/reduce conflict for FOR in state 106 resolved as shift
WARNING: shift/reduce conflict for LIST in state 106 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 106 resolved as shift
WARNING: shift/reduce conflict for SET in state 106 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 106 resolved as shift
WARNING: shift/reduce conflict for MAP in state 106 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 106 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 106 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 106 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 106 resolved as shift
WARNING: shift/reduce conflict for STRING in state 106 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 176 resolved as shift
WARNING: shift/reduce conflict for OR in state 176 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 179 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 179 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 198 resolved as shift
WARNING: shift/reduce conflict for INT in state 198 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 198 resolved as shift
WARNING: shift/reduce conflict for NUM in state 198 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 198 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 198 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 198 resolved as shift
WARNING: shift/reduce conflict for VAR in state 198 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 198 resolved as shift
WARNING: shift/reduce conflict for DO in state 198 resolved as shift
WARNING: shift/reduce conflict for IF in state 198 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 198 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 198 resolved as shift
WARNING: shift/reduce conflict for NOT in state 198 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 198 resolved as shift
WARNING: shift/reduce conflict for FOR in state 198 resolved as shift
WARNING: shift/reduce conflict for LIST in state 198 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 198 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 198 resolved as shift
WARNING: shift/reduce conflict for SET in state 198 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 198 resolved as shift
WARNING: shift/reduce conflict for MAP in state 198 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 198 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 198 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 198 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 198 resolved as shift
WARNING: shift/reduce conflict for STRING in state 198 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 198 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 199 resolved as shift
WARNING: shift/reduce conflict for INT in state 199 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 199 resolved as shift
WARNING: shift/reduce conflict for NUM in state 199 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 199 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 199 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 199 resolved as shift
WARNING: shift/reduce conflict for VAR in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 199 resolved as shift
WARNING: shift/reduce conflict for DO in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 199 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 199 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 199 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 199 resolved as shift
WARNING: shift/reduce conflict for NOT in state 199 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 199 resolved as shift
WARNING: shift/reduce conflict for FOR in state 199 resolved as shift
WARNING: shift/reduce conflict for LIST in state 199 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 199 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 199 resolved as shift
WARNING: shift/reduce conflict for SET in state 199 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 199 resolved as shift
WARNING: shift/reduce conflict for MAP in state 199 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 199 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 199 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 199 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 199 resolved as shift
WARNING: shift/reduce conflict for STRING in state 199 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 199 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 209 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 209 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 217 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 241 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 273 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 273 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 273 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 273 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 273 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 273 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 273 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 278 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 283 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 283 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 283 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 283 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 283 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 283 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 438 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 438 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 438 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 438 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 438 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 438 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 34 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 34
WARNING: reduce/reduce conflict in state 37 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 37
WARNING: reduce/reduce conflict in state 45 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 45
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListInt -> VARIABLE) in state 159
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 159
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListBool -> VARIABLE) in state 159
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 159
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 159
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListMap -> VARIABLE) in state 159
WARNING: reduce/reduce conflict in state 160 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 160
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 161
WARNING: reduce/reduce conflict in state 162 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 162
WARNING: reduce/reduce conflict in state 177 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 177
WARNING: reduce/reduce conflict in state 183 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 183
WARNING: reduce/reduce conflict in state 200 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 200
WARNING: reduce/reduce conflict in state 200 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 200
WARNING: reduce/reduce conflict in state 200 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 200
WARNING: reduce/reduce conflict in state 201 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 201
WARNING: reduce/reduce conflict in state 209 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 209
WARNING: reduce/reduce conflict in state 209 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 209
WARNING: reduce/reduce conflict in state 209 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 209
WARNING: reduce/reduce conflict in state 216 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 216
WARNING: reduce/reduce conflict in state 217 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 217
WARNING: reduce/reduce conflict in state 238 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 238
WARNING: reduce/reduce conflict in state 239 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 239
WARNING: reduce/reduce conflict in state 267 resolved using rule (expListDynamic -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 267
WARNING: reduce/reduce conflict in state 273 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 273
WARNING: reduce/reduce conflict in state 273 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 273
WARNING: reduce/reduce conflict in state 283 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 283
WARNING: reduce/reduce conflict in state 283 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 283
WARNING: reduce/reduce conflict in state 283 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 283
WARNING: reduce/reduce conflict in state 384 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 384
WARNING: reduce/reduce conflict in state 395 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 395
WARNING: reduce/reduce conflict in state 395 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 395
WARNING: reduce/reduce conflict in state 398 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 398
WARNING: reduce/reduce conflict in state 399 resolved using rule (expListNum -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 399
WARNING: reduce/reduce conflict in state 402 resolved using rule (expListBool -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 402
WARNING: reduce/reduce conflict in state 415 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 415
WARNING: reduce/reduce conflict in state 416 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 416
WARNING: reduce/reduce conflict in state 420 resolved using rule (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER)
WARNING: rejected rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) in state 420
WARNING: reduce/reduce conflict in state 527 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 527
WARNING: reduce/reduce conflict in state 527 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 527
WARNING: reduce/reduce conflict in state 530 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 530
WARNING: reduce/reduce conflict in state 530 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 530
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
WARNING: Rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) is never reduced
