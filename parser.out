Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTRING
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaSubstring PUNTOYCOMA final
Rule 42    final -> sentenciaSubstring PUNTOYCOMA
Rule 43    algoritmo -> asignacion PUNTOYCOMA
Rule 44    algoritmo -> expresionInt PUNTOYCOMA
Rule 45    algoritmo -> expresionDouble PUNTOYCOMA
Rule 46    algoritmo -> expresionString PUNTOYCOMA
Rule 47    algoritmo -> expresionBool PUNTOYCOMA
Rule 48    algoritmo -> expresion
Rule 49    algoritmo -> sentenciaWhile
Rule 50    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 51    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 52    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 53    algoritmo -> sentenciaIf
Rule 54    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 55    algoritmo -> sentenciaElse
Rule 56    algoritmo -> imprimir PUNTOYCOMA
Rule 57    algoritmo -> funcionStdin PUNTOYCOMA
Rule 58    algoritmo -> funcionStdout PUNTOYCOMA
Rule 59    algoritmo -> negacionBool PUNTOYCOMA
Rule 60    algoritmo -> comparacionBool PUNTOYCOMA
Rule 61    algoritmo -> sentenciaElseIf
Rule 62    algoritmo -> sentenciaElseIf PUNTOYCOMA
Rule 63    algoritmo -> sentenciaSubstring PUNTOYCOMA
Rule 64    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 65    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 66    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 67    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 68    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 69    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 70    asignacion -> VAR VARIABLE IGUAL expresion
Rule 71    asignacion -> asignacionSimple
Rule 72    asignacionSimple -> VARIABLE IGUAL expresion
Rule 73    imprimir -> PRINT PIZQ expresion PDER
Rule 74    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 75    funcionStdin -> FUNCIONSTDIN
Rule 76    funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 77    funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 78    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 79    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 80    sentenciaElse -> ELSE algoritmo
Rule 81    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 82    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo
Rule 83    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 84    valor -> ENTERO
Rule 85    valor -> VARIABLE
Rule 86    valor -> DOUBLE
Rule 87    valor -> STRING
Rule 88    expresion -> valor operadorMat expresion
Rule 89    expresion -> valor
Rule 90    expresion -> expresionString
Rule 91    expresion -> expresionInt
Rule 92    expresion -> expresionDouble
Rule 93    expresion -> expresionBool
Rule 94    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 95    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 96    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 97    sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER
Rule 98    sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 99    valorBool -> BOOL
Rule 100   valorBool -> VARIABLE
Rule 101   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 102   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 103   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 104   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 105   expresionBool -> valorBool
Rule 106   expresionBool -> negacionBool
Rule 107   expresionBool -> comparacionBool
Rule 108   expresionBool -> valor IS objeto
Rule 109   expresionBool -> valor ISNEGADO objeto
Rule 110   negacionBool -> NOT PIZQ expresionBool PDER
Rule 111   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 112   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 113   valorString -> STRING
Rule 114   valorString -> VARIABLE
Rule 115   valorString -> FUNCIONSTDIN
Rule 116   valorString -> expresionIndexString
Rule 117   valorString -> sentenciaSubstring
Rule 118   expresionString -> valorString SUMA expresionString
Rule 119   expresionString -> valorString
Rule 120   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 121   valorInt -> ENTERO
Rule 122   valorInt -> VARIABLE
Rule 123   expresionInt -> valorInt operadorMat expresionInt
Rule 124   expresionInt -> valorInt
Rule 125   valorDouble -> DOUBLE
Rule 126   valorDouble -> valorInt
Rule 127   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 128   expresionDouble -> valorDouble
Rule 129   operadorMat -> SUMA
Rule 130   operadorMat -> RESTA
Rule 131   operadorMat -> MULTI
Rule 132   operadorMat -> DIV
Rule 133   operadorMat -> DIVENTERO
Rule 134   operadorMat -> MOD
Rule 135   comparadorMat -> DIGUAL
Rule 136   comparadorMat -> NOIGUAL
Rule 137   comparadorMat -> MAYOR
Rule 138   comparadorMat -> MENOR
Rule 139   comparadorMat -> MAYIGUAL
Rule 140   comparadorMat -> MENIGUAL
Rule 141   operadorLogico -> AND
Rule 142   operadorLogico -> OR
Rule 143   objeto -> STRINGR
Rule 144   objeto -> INT
Rule 145   objeto -> DOUBLER
Rule 146   objeto -> NUM
Rule 147   objeto -> VAR
Rule 148   objeto -> DYNAMIC
Rule 149   objeto -> LIST
Rule 150   objeto -> BOOL
Rule 151   objeto -> MAP
Rule 152   objeto -> SET

Terminals, with rules where they appear

AND                  : 141
AS                   : 
BOOL                 : 99 150
BOOLR                : 68
BREAK                : 
CASE                 : 
CDER                 : 120
CIZQ                 : 120
COMA                 : 98
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 135
DIV                  : 132
DIVENTERO            : 133
DO                   : 96
DOSPUNTOS            : 
DOUBLE               : 86 125
DOUBLER              : 65 145
DRESTA               : 
DSUMA                : 
DYNAMIC              : 69 148
ELSE                 : 80 81
ELSEIF               : 82 83
ENTERO               : 84 97 98 98 120 121
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 75 115
FUNCIONSTDOUT        : 76 77
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 78 79
IGUAL                : 64 65 66 67 68 69 70 72
INT                  : 64 144
IS                   : 108
ISNEGADO             : 109
LDER                 : 79 81 83 94 96
LIST                 : 149
LIZQ                 : 79 81 83 94 96
MAP                  : 151
MAYIGUAL             : 139
MAYOR                : 137
MENIGUAL             : 140
MENOR                : 138
MOD                  : 134
MULTI                : 131
NOIGUAL              : 136
NOT                  : 110
NUM                  : 66 146
OR                   : 142
PDER                 : 73 74 76 77 78 79 82 83 94 95 96 97 98 110
PIZQ                 : 73 74 76 77 78 79 82 83 94 95 96 97 98 110
PRINT                : 73 74
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 43 44 45 46 47 50 51 52 54 56 57 58 59 60 62 63
RESTA                : 130
RETURN               : 
SET                  : 152
STRING               : 87 113
STRINGR              : 67 143
SUBSTRING            : 97 98
SUMA                 : 118 129
SWITCH               : 
VAR                  : 70 147
VARIABLE             : 64 65 66 67 68 69 70 72 85 97 98 100 102 103 103 104 114 122
WHILE                : 94 95 96
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 78 79 80 81 82 83 94 95 96
asignacion           : 3 4 43
asignacionSimple     : 71 74 77
comparacionBool      : 35 36 60 107 112
comparadorMat        : 101 102 103 104
expresion            : 48 69 70 72 73 76 88
expresionBool        : 11 12 47 68 78 79 82 83 93 94 95 96 110 111 111 112
expresionDouble      : 7 8 45 65 66 92 101 102 127
expresionIndexString : 116
expresionInt         : 5 6 44 64 91 123
expresionString      : 9 10 46 67 90 118
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 0
funcionStdin         : 29 30 57
funcionStdout        : 31 32 58
imprimir             : 27 28 56
negacionBool         : 33 34 59 106
objeto               : 108 109
operadorLogico       : 111 112
operadorMat          : 88 123 127
sentenciaDoWhile     : 17 18 51
sentenciaElse        : 23 24 25 26 54 55
sentenciaElseIf      : 37 38 39 40 61 62
sentenciaIf          : 19 20 21 22 52 53
sentenciaSubstring   : 41 42 63 117
sentenciaWhile       : 13 14 15 16 49 50
valor                : 88 89 108 109
valorBool            : 105
valorDouble          : 101 104 127 128
valorInt             : 123 124 126
valorString          : 118 119 120

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 48


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (43) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 49


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (44) algoritmo -> expresionInt . PUNTOYCOMA
    (91) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 50

  ! PUNTOYCOMA      [ reduce using rule 91 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (45) algoritmo -> expresionDouble . PUNTOYCOMA
    (92) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 51

  ! PUNTOYCOMA      [ reduce using rule 92 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (46) algoritmo -> expresionString . PUNTOYCOMA
    (90) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 52

  ! PUNTOYCOMA      [ reduce using rule 90 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (47) algoritmo -> expresionBool . PUNTOYCOMA
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (93) expresion -> expresionBool .
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 53
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 93 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 54

state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (49) algoritmo -> sentenciaWhile .
    (50) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 58
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

  ! PUNTOYCOMA      [ reduce using rule 49 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 57
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (51) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 59


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (52) algoritmo -> sentenciaIf . PUNTOYCOMA
    (53) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 60
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

  ! PUNTOYCOMA      [ reduce using rule 53 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 61
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (54) algoritmo -> sentenciaElse . PUNTOYCOMA
    (55) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 62
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

  ! PUNTOYCOMA      [ reduce using rule 55 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 63
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final
    (56) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 64


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final
    (57) algoritmo -> funcionStdin . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 65


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final
    (58) algoritmo -> funcionStdout . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 66


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (59) algoritmo -> negacionBool . PUNTOYCOMA
    (106) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 67
    AND             reduce using rule 106 (expresionBool -> negacionBool .)
    OR              reduce using rule 106 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 106 (expresionBool -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (60) algoritmo -> comparacionBool . PUNTOYCOMA
    (107) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 68
    AND             reduce using rule 107 (expresionBool -> comparacionBool .)
    OR              reduce using rule 107 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 107 (expresionBool -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (61) algoritmo -> sentenciaElseIf .
    (62) algoritmo -> sentenciaElseIf . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 69
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

  ! PUNTOYCOMA      [ reduce using rule 61 (algoritmo -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 70
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 18

    (41) final -> sentenciaSubstring . PUNTOYCOMA final
    (42) final -> sentenciaSubstring . PUNTOYCOMA
    (63) algoritmo -> sentenciaSubstring . PUNTOYCOMA
    (117) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 71
    SUMA            reduce using rule 117 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 117 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 117 (valorString -> sentenciaSubstring .) ]


state 19

    (48) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 48 (algoritmo -> expresion .)
    INT             reduce using rule 48 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 48 (algoritmo -> expresion .)
    NUM             reduce using rule 48 (algoritmo -> expresion .)
    STRINGR         reduce using rule 48 (algoritmo -> expresion .)
    BOOLR           reduce using rule 48 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 48 (algoritmo -> expresion .)
    VAR             reduce using rule 48 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 48 (algoritmo -> expresion .)
    WHILE           reduce using rule 48 (algoritmo -> expresion .)
    DO              reduce using rule 48 (algoritmo -> expresion .)
    IF              reduce using rule 48 (algoritmo -> expresion .)
    ELSE            reduce using rule 48 (algoritmo -> expresion .)
    PRINT           reduce using rule 48 (algoritmo -> expresion .)
    FUNCIONSTDIN    reduce using rule 48 (algoritmo -> expresion .)
    FUNCIONSTDOUT   reduce using rule 48 (algoritmo -> expresion .)
    NOT             reduce using rule 48 (algoritmo -> expresion .)
    ELSEIF          reduce using rule 48 (algoritmo -> expresion .)
    ENTERO          reduce using rule 48 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 48 (algoritmo -> expresion .)
    STRING          reduce using rule 48 (algoritmo -> expresion .)
    BOOL            reduce using rule 48 (algoritmo -> expresion .)
    $end            reduce using rule 48 (algoritmo -> expresion .)
    LDER            reduce using rule 48 (algoritmo -> expresion .)


state 20

    (64) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 72


state 21

    (102) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (103) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (97) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> VARIABLE . IGUAL expresion
    (122) valorInt -> VARIABLE .
    (114) valorString -> VARIABLE .
    (100) valorBool -> VARIABLE .
    (85) valor -> VARIABLE .
    (135) comparadorMat -> . DIGUAL
    (136) comparadorMat -> . NOIGUAL
    (137) comparadorMat -> . MAYOR
    (138) comparadorMat -> . MENOR
    (139) comparadorMat -> . MAYIGUAL
    (140) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 114 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 100 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 85 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    SUBSTRING       shift and go to state 74
    IGUAL           shift and go to state 75
    CIZQ            reduce using rule 114 (valorString -> VARIABLE .)
    AND             reduce using rule 100 (valorBool -> VARIABLE .)
    OR              reduce using rule 100 (valorBool -> VARIABLE .)
    IS              reduce using rule 85 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 85 (valor -> VARIABLE .)
    SUMA            reduce using rule 85 (valor -> VARIABLE .)
    RESTA           reduce using rule 85 (valor -> VARIABLE .)
    MULTI           reduce using rule 85 (valor -> VARIABLE .)
    DIV             reduce using rule 85 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 85 (valor -> VARIABLE .)
    MOD             reduce using rule 85 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 85 (valor -> VARIABLE .)
    INT             reduce using rule 85 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 85 (valor -> VARIABLE .)
    NUM             reduce using rule 85 (valor -> VARIABLE .)
    STRINGR         reduce using rule 85 (valor -> VARIABLE .)
    BOOLR           reduce using rule 85 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 85 (valor -> VARIABLE .)
    VAR             reduce using rule 85 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 85 (valor -> VARIABLE .)
    WHILE           reduce using rule 85 (valor -> VARIABLE .)
    DO              reduce using rule 85 (valor -> VARIABLE .)
    IF              reduce using rule 85 (valor -> VARIABLE .)
    ELSE            reduce using rule 85 (valor -> VARIABLE .)
    PRINT           reduce using rule 85 (valor -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 85 (valor -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 85 (valor -> VARIABLE .)
    NOT             reduce using rule 85 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 85 (valor -> VARIABLE .)
    ENTERO          reduce using rule 85 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 85 (valor -> VARIABLE .)
    STRING          reduce using rule 85 (valor -> VARIABLE .)
    BOOL            reduce using rule 85 (valor -> VARIABLE .)
    $end            reduce using rule 85 (valor -> VARIABLE .)
    LDER            reduce using rule 85 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 76
    NOIGUAL         shift and go to state 77
    MAYOR           shift and go to state 78
    MENOR           shift and go to state 79
    MAYIGUAL        shift and go to state 80
    MENIGUAL        shift and go to state 81

  ! SUMA            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 100 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 73

state 22

    (65) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 82


state 23

    (66) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 83


state 24

    (67) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 84


state 25

    (68) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 85


state 26

    (69) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 86


state 27

    (70) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 87


state 28

    (71) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 71 (asignacion -> asignacionSimple .)


state 29

    (123) expresionInt -> valorInt . operadorMat expresionInt
    (124) expresionInt -> valorInt .
    (126) valorDouble -> valorInt .
    (129) operadorMat -> . SUMA
    (130) operadorMat -> . RESTA
    (131) operadorMat -> . MULTI
    (132) operadorMat -> . DIV
    (133) operadorMat -> . DIVENTERO
    (134) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PRINT resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NOT resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 124 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 124 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 124 (expresionInt -> valorInt .)
    INT             reduce using rule 124 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 124 (expresionInt -> valorInt .)
    NUM             reduce using rule 124 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 124 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 124 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 124 (expresionInt -> valorInt .)
    VAR             reduce using rule 124 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 124 (expresionInt -> valorInt .)
    WHILE           reduce using rule 124 (expresionInt -> valorInt .)
    DO              reduce using rule 124 (expresionInt -> valorInt .)
    IF              reduce using rule 124 (expresionInt -> valorInt .)
    ELSE            reduce using rule 124 (expresionInt -> valorInt .)
    PRINT           reduce using rule 124 (expresionInt -> valorInt .)
    FUNCIONSTDIN    reduce using rule 124 (expresionInt -> valorInt .)
    FUNCIONSTDOUT   reduce using rule 124 (expresionInt -> valorInt .)
    NOT             reduce using rule 124 (expresionInt -> valorInt .)
    ELSEIF          reduce using rule 124 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 124 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 124 (expresionInt -> valorInt .)
    STRING          reduce using rule 124 (expresionInt -> valorInt .)
    BOOL            reduce using rule 124 (expresionInt -> valorInt .)
    $end            reduce using rule 124 (expresionInt -> valorInt .)
    LDER            reduce using rule 124 (expresionInt -> valorInt .)
    PDER            reduce using rule 124 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 126 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 126 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 126 (valorDouble -> valorInt .)
    MENOR           reduce using rule 126 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 126 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 126 (valorDouble -> valorInt .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTI           shift and go to state 91
    DIV             shift and go to state 92
    DIVENTERO       shift and go to state 93
    MOD             shift and go to state 94

  ! SUMA            [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! PRINT           [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! FUNCIONSTDIN    [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! NOT             [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! ELSEIF          [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 126 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 126 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 88

state 30

    (127) expresionDouble -> valorDouble . operadorMat expresionDouble
    (128) expresionDouble -> valorDouble .
    (101) expresionBool -> valorDouble . comparadorMat expresionDouble
    (104) expresionBool -> valorDouble . comparadorMat VARIABLE
    (129) operadorMat -> . SUMA
    (130) operadorMat -> . RESTA
    (131) operadorMat -> . MULTI
    (132) operadorMat -> . DIV
    (133) operadorMat -> . DIVENTERO
    (134) operadorMat -> . MOD
    (135) comparadorMat -> . DIGUAL
    (136) comparadorMat -> . NOIGUAL
    (137) comparadorMat -> . MAYOR
    (138) comparadorMat -> . MENOR
    (139) comparadorMat -> . MAYIGUAL
    (140) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 128 (expresionDouble -> valorDouble .)
    INT             reduce using rule 128 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 128 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 128 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 128 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 128 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 128 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 128 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 128 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 128 (expresionDouble -> valorDouble .)
    DO              reduce using rule 128 (expresionDouble -> valorDouble .)
    IF              reduce using rule 128 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 128 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 128 (expresionDouble -> valorDouble .)
    FUNCIONSTDIN    reduce using rule 128 (expresionDouble -> valorDouble .)
    FUNCIONSTDOUT   reduce using rule 128 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 128 (expresionDouble -> valorDouble .)
    ELSEIF          reduce using rule 128 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 128 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 128 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 128 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 128 (expresionDouble -> valorDouble .)
    $end            reduce using rule 128 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 128 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 128 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTI           shift and go to state 91
    DIV             shift and go to state 92
    DIVENTERO       shift and go to state 93
    MOD             shift and go to state 94
    DIGUAL          shift and go to state 76
    NOIGUAL         shift and go to state 77
    MAYOR           shift and go to state 78
    MENOR           shift and go to state 79
    MAYIGUAL        shift and go to state 80
    MENIGUAL        shift and go to state 81

    operadorMat                    shift and go to state 95
    comparadorMat                  shift and go to state 96

state 31

    (118) expresionString -> valorString . SUMA expresionString
    (119) expresionString -> valorString .
    (120) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 97
    PUNTOYCOMA      reduce using rule 119 (expresionString -> valorString .)
    INT             reduce using rule 119 (expresionString -> valorString .)
    DOUBLER         reduce using rule 119 (expresionString -> valorString .)
    NUM             reduce using rule 119 (expresionString -> valorString .)
    STRINGR         reduce using rule 119 (expresionString -> valorString .)
    BOOLR           reduce using rule 119 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 119 (expresionString -> valorString .)
    VAR             reduce using rule 119 (expresionString -> valorString .)
    VARIABLE        reduce using rule 119 (expresionString -> valorString .)
    WHILE           reduce using rule 119 (expresionString -> valorString .)
    DO              reduce using rule 119 (expresionString -> valorString .)
    IF              reduce using rule 119 (expresionString -> valorString .)
    ELSE            reduce using rule 119 (expresionString -> valorString .)
    PRINT           reduce using rule 119 (expresionString -> valorString .)
    FUNCIONSTDIN    reduce using rule 119 (expresionString -> valorString .)
    FUNCIONSTDOUT   reduce using rule 119 (expresionString -> valorString .)
    NOT             reduce using rule 119 (expresionString -> valorString .)
    ELSEIF          reduce using rule 119 (expresionString -> valorString .)
    ENTERO          reduce using rule 119 (expresionString -> valorString .)
    DOUBLE          reduce using rule 119 (expresionString -> valorString .)
    STRING          reduce using rule 119 (expresionString -> valorString .)
    BOOL            reduce using rule 119 (expresionString -> valorString .)
    $end            reduce using rule 119 (expresionString -> valorString .)
    LDER            reduce using rule 119 (expresionString -> valorString .)
    PDER            reduce using rule 119 (expresionString -> valorString .)
    CIZQ            shift and go to state 98


state 32

    (105) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 105 (expresionBool -> valorBool .)
    AND             reduce using rule 105 (expresionBool -> valorBool .)
    OR              reduce using rule 105 (expresionBool -> valorBool .)
    INT             reduce using rule 105 (expresionBool -> valorBool .)
    DOUBLER         reduce using rule 105 (expresionBool -> valorBool .)
    NUM             reduce using rule 105 (expresionBool -> valorBool .)
    STRINGR         reduce using rule 105 (expresionBool -> valorBool .)
    BOOLR           reduce using rule 105 (expresionBool -> valorBool .)
    DYNAMIC         reduce using rule 105 (expresionBool -> valorBool .)
    VAR             reduce using rule 105 (expresionBool -> valorBool .)
    VARIABLE        reduce using rule 105 (expresionBool -> valorBool .)
    WHILE           reduce using rule 105 (expresionBool -> valorBool .)
    DO              reduce using rule 105 (expresionBool -> valorBool .)
    IF              reduce using rule 105 (expresionBool -> valorBool .)
    ELSE            reduce using rule 105 (expresionBool -> valorBool .)
    PRINT           reduce using rule 105 (expresionBool -> valorBool .)
    FUNCIONSTDIN    reduce using rule 105 (expresionBool -> valorBool .)
    FUNCIONSTDOUT   reduce using rule 105 (expresionBool -> valorBool .)
    NOT             reduce using rule 105 (expresionBool -> valorBool .)
    ELSEIF          reduce using rule 105 (expresionBool -> valorBool .)
    ENTERO          reduce using rule 105 (expresionBool -> valorBool .)
    DOUBLE          reduce using rule 105 (expresionBool -> valorBool .)
    STRING          reduce using rule 105 (expresionBool -> valorBool .)
    BOOL            reduce using rule 105 (expresionBool -> valorBool .)
    $end            reduce using rule 105 (expresionBool -> valorBool .)
    LDER            reduce using rule 105 (expresionBool -> valorBool .)
    PDER            reduce using rule 105 (expresionBool -> valorBool .)


state 33

    (108) expresionBool -> valor . IS objeto
    (109) expresionBool -> valor . ISNEGADO objeto
    (88) expresion -> valor . operadorMat expresion
    (89) expresion -> valor .
    (129) operadorMat -> . SUMA
    (130) operadorMat -> . RESTA
    (131) operadorMat -> . MULTI
    (132) operadorMat -> . DIV
    (133) operadorMat -> . DIVENTERO
    (134) operadorMat -> . MOD

    IS              shift and go to state 99
    ISNEGADO        shift and go to state 100
    PUNTOYCOMA      reduce using rule 89 (expresion -> valor .)
    INT             reduce using rule 89 (expresion -> valor .)
    DOUBLER         reduce using rule 89 (expresion -> valor .)
    NUM             reduce using rule 89 (expresion -> valor .)
    STRINGR         reduce using rule 89 (expresion -> valor .)
    BOOLR           reduce using rule 89 (expresion -> valor .)
    DYNAMIC         reduce using rule 89 (expresion -> valor .)
    VAR             reduce using rule 89 (expresion -> valor .)
    VARIABLE        reduce using rule 89 (expresion -> valor .)
    WHILE           reduce using rule 89 (expresion -> valor .)
    DO              reduce using rule 89 (expresion -> valor .)
    IF              reduce using rule 89 (expresion -> valor .)
    ELSE            reduce using rule 89 (expresion -> valor .)
    PRINT           reduce using rule 89 (expresion -> valor .)
    FUNCIONSTDIN    reduce using rule 89 (expresion -> valor .)
    FUNCIONSTDOUT   reduce using rule 89 (expresion -> valor .)
    NOT             reduce using rule 89 (expresion -> valor .)
    ELSEIF          reduce using rule 89 (expresion -> valor .)
    ENTERO          reduce using rule 89 (expresion -> valor .)
    DOUBLE          reduce using rule 89 (expresion -> valor .)
    STRING          reduce using rule 89 (expresion -> valor .)
    BOOL            reduce using rule 89 (expresion -> valor .)
    $end            reduce using rule 89 (expresion -> valor .)
    LDER            reduce using rule 89 (expresion -> valor .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTI           shift and go to state 91
    DIV             shift and go to state 92
    DIVENTERO       shift and go to state 93
    MOD             shift and go to state 94

    operadorMat                    shift and go to state 101

state 34

    (94) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 102


state 35

    (96) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 103


state 36

    (78) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 104


state 37

    (80) sentenciaElse -> ELSE . algoritmo
    (81) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 106
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    algoritmo                      shift and go to state 105
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresionBool                  shift and go to state 111
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 38

    (73) imprimir -> PRINT . PIZQ expresion PDER
    (74) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 123


state 39

    (75) funcionStdin -> FUNCIONSTDIN .
    (115) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 75 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 75 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    INT             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DOUBLER         reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    NUM             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    STRINGR         reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    BOOLR           reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DYNAMIC         reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    VAR             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    VARIABLE        reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    WHILE           reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DO              reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    IF              reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    ELSE            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    PRINT           reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    FUNCIONSTDIN    reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    FUNCIONSTDOUT   reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    NOT             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    ELSEIF          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    ENTERO          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DOUBLE          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    STRING          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    BOOL            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    $end            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    LDER            reduce using rule 115 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 115 (valorString -> FUNCIONSTDIN .) ]


state 40

    (76) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (77) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 124


state 41

    (110) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 125


state 42

    (82) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 126


state 43

    (121) valorInt -> ENTERO .
    (84) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 84 (valor -> ENTERO .)
    DIGUAL          reduce using rule 121 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 121 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 121 (valorInt -> ENTERO .)
    MENOR           reduce using rule 121 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 121 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 121 (valorInt -> ENTERO .)
    IS              reduce using rule 84 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 84 (valor -> ENTERO .)
    SUMA            reduce using rule 84 (valor -> ENTERO .)
    RESTA           reduce using rule 84 (valor -> ENTERO .)
    MULTI           reduce using rule 84 (valor -> ENTERO .)
    DIV             reduce using rule 84 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 84 (valor -> ENTERO .)
    MOD             reduce using rule 84 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 84 (valor -> ENTERO .)
    INT             reduce using rule 84 (valor -> ENTERO .)
    DOUBLER         reduce using rule 84 (valor -> ENTERO .)
    NUM             reduce using rule 84 (valor -> ENTERO .)
    STRINGR         reduce using rule 84 (valor -> ENTERO .)
    BOOLR           reduce using rule 84 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 84 (valor -> ENTERO .)
    VAR             reduce using rule 84 (valor -> ENTERO .)
    VARIABLE        reduce using rule 84 (valor -> ENTERO .)
    WHILE           reduce using rule 84 (valor -> ENTERO .)
    DO              reduce using rule 84 (valor -> ENTERO .)
    IF              reduce using rule 84 (valor -> ENTERO .)
    ELSE            reduce using rule 84 (valor -> ENTERO .)
    PRINT           reduce using rule 84 (valor -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 84 (valor -> ENTERO .)
    FUNCIONSTDOUT   reduce using rule 84 (valor -> ENTERO .)
    NOT             reduce using rule 84 (valor -> ENTERO .)
    ELSEIF          reduce using rule 84 (valor -> ENTERO .)
    ENTERO          reduce using rule 84 (valor -> ENTERO .)
    DOUBLE          reduce using rule 84 (valor -> ENTERO .)
    STRING          reduce using rule 84 (valor -> ENTERO .)
    BOOL            reduce using rule 84 (valor -> ENTERO .)
    $end            reduce using rule 84 (valor -> ENTERO .)
    LDER            reduce using rule 84 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDIN    [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! ELSEIF          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 121 (valorInt -> ENTERO .) ]


state 44

    (125) valorDouble -> DOUBLE .
    (86) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 86 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 125 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 125 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 125 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 125 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 125 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 125 (valorDouble -> DOUBLE .)
    IS              reduce using rule 86 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 86 (valor -> DOUBLE .)
    SUMA            reduce using rule 86 (valor -> DOUBLE .)
    RESTA           reduce using rule 86 (valor -> DOUBLE .)
    MULTI           reduce using rule 86 (valor -> DOUBLE .)
    DIV             reduce using rule 86 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 86 (valor -> DOUBLE .)
    MOD             reduce using rule 86 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 86 (valor -> DOUBLE .)
    INT             reduce using rule 86 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 86 (valor -> DOUBLE .)
    NUM             reduce using rule 86 (valor -> DOUBLE .)
    STRINGR         reduce using rule 86 (valor -> DOUBLE .)
    BOOLR           reduce using rule 86 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 86 (valor -> DOUBLE .)
    VAR             reduce using rule 86 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 86 (valor -> DOUBLE .)
    WHILE           reduce using rule 86 (valor -> DOUBLE .)
    DO              reduce using rule 86 (valor -> DOUBLE .)
    IF              reduce using rule 86 (valor -> DOUBLE .)
    ELSE            reduce using rule 86 (valor -> DOUBLE .)
    PRINT           reduce using rule 86 (valor -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 86 (valor -> DOUBLE .)
    FUNCIONSTDOUT   reduce using rule 86 (valor -> DOUBLE .)
    NOT             reduce using rule 86 (valor -> DOUBLE .)
    ELSEIF          reduce using rule 86 (valor -> DOUBLE .)
    ENTERO          reduce using rule 86 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 86 (valor -> DOUBLE .)
    STRING          reduce using rule 86 (valor -> DOUBLE .)
    BOOL            reduce using rule 86 (valor -> DOUBLE .)
    $end            reduce using rule 86 (valor -> DOUBLE .)
    LDER            reduce using rule 86 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! ELSEIF          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]


state 45

    (113) valorString -> STRING .
    (87) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 87 (valor -> STRING .)
    CIZQ            reduce using rule 113 (valorString -> STRING .)
    IS              reduce using rule 87 (valor -> STRING .)
    ISNEGADO        reduce using rule 87 (valor -> STRING .)
    SUMA            reduce using rule 87 (valor -> STRING .)
    RESTA           reduce using rule 87 (valor -> STRING .)
    MULTI           reduce using rule 87 (valor -> STRING .)
    DIV             reduce using rule 87 (valor -> STRING .)
    DIVENTERO       reduce using rule 87 (valor -> STRING .)
    MOD             reduce using rule 87 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 87 (valor -> STRING .)
    INT             reduce using rule 87 (valor -> STRING .)
    DOUBLER         reduce using rule 87 (valor -> STRING .)
    NUM             reduce using rule 87 (valor -> STRING .)
    STRINGR         reduce using rule 87 (valor -> STRING .)
    BOOLR           reduce using rule 87 (valor -> STRING .)
    DYNAMIC         reduce using rule 87 (valor -> STRING .)
    VAR             reduce using rule 87 (valor -> STRING .)
    VARIABLE        reduce using rule 87 (valor -> STRING .)
    WHILE           reduce using rule 87 (valor -> STRING .)
    DO              reduce using rule 87 (valor -> STRING .)
    IF              reduce using rule 87 (valor -> STRING .)
    ELSE            reduce using rule 87 (valor -> STRING .)
    PRINT           reduce using rule 87 (valor -> STRING .)
    FUNCIONSTDIN    reduce using rule 87 (valor -> STRING .)
    FUNCIONSTDOUT   reduce using rule 87 (valor -> STRING .)
    NOT             reduce using rule 87 (valor -> STRING .)
    ELSEIF          reduce using rule 87 (valor -> STRING .)
    ENTERO          reduce using rule 87 (valor -> STRING .)
    DOUBLE          reduce using rule 87 (valor -> STRING .)
    STRING          reduce using rule 87 (valor -> STRING .)
    BOOL            reduce using rule 87 (valor -> STRING .)
    $end            reduce using rule 87 (valor -> STRING .)
    LDER            reduce using rule 87 (valor -> STRING .)

  ! SUMA            [ reduce using rule 113 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 113 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 113 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 113 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 113 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 113 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 113 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 113 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 113 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 113 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 113 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 113 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 113 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 113 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 113 (valorString -> STRING .) ]
  ! FUNCIONSTDIN    [ reduce using rule 113 (valorString -> STRING .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 113 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 113 (valorString -> STRING .) ]
  ! ELSEIF          [ reduce using rule 113 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 113 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 113 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 113 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 113 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 113 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 113 (valorString -> STRING .) ]


state 46

    (116) valorString -> expresionIndexString .

    SUMA            reduce using rule 116 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 116 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 116 (valorString -> expresionIndexString .)
    INT             reduce using rule 116 (valorString -> expresionIndexString .)
    DOUBLER         reduce using rule 116 (valorString -> expresionIndexString .)
    NUM             reduce using rule 116 (valorString -> expresionIndexString .)
    STRINGR         reduce using rule 116 (valorString -> expresionIndexString .)
    BOOLR           reduce using rule 116 (valorString -> expresionIndexString .)
    DYNAMIC         reduce using rule 116 (valorString -> expresionIndexString .)
    VAR             reduce using rule 116 (valorString -> expresionIndexString .)
    VARIABLE        reduce using rule 116 (valorString -> expresionIndexString .)
    WHILE           reduce using rule 116 (valorString -> expresionIndexString .)
    DO              reduce using rule 116 (valorString -> expresionIndexString .)
    IF              reduce using rule 116 (valorString -> expresionIndexString .)
    ELSE            reduce using rule 116 (valorString -> expresionIndexString .)
    PRINT           reduce using rule 116 (valorString -> expresionIndexString .)
    FUNCIONSTDIN    reduce using rule 116 (valorString -> expresionIndexString .)
    FUNCIONSTDOUT   reduce using rule 116 (valorString -> expresionIndexString .)
    NOT             reduce using rule 116 (valorString -> expresionIndexString .)
    ELSEIF          reduce using rule 116 (valorString -> expresionIndexString .)
    ENTERO          reduce using rule 116 (valorString -> expresionIndexString .)
    DOUBLE          reduce using rule 116 (valorString -> expresionIndexString .)
    STRING          reduce using rule 116 (valorString -> expresionIndexString .)
    BOOL            reduce using rule 116 (valorString -> expresionIndexString .)
    $end            reduce using rule 116 (valorString -> expresionIndexString .)
    LDER            reduce using rule 116 (valorString -> expresionIndexString .)
    PDER            reduce using rule 116 (valorString -> expresionIndexString .)


state 47

    (99) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 99 (valorBool -> BOOL .)
    AND             reduce using rule 99 (valorBool -> BOOL .)
    OR              reduce using rule 99 (valorBool -> BOOL .)
    INT             reduce using rule 99 (valorBool -> BOOL .)
    DOUBLER         reduce using rule 99 (valorBool -> BOOL .)
    NUM             reduce using rule 99 (valorBool -> BOOL .)
    STRINGR         reduce using rule 99 (valorBool -> BOOL .)
    BOOLR           reduce using rule 99 (valorBool -> BOOL .)
    DYNAMIC         reduce using rule 99 (valorBool -> BOOL .)
    VAR             reduce using rule 99 (valorBool -> BOOL .)
    VARIABLE        reduce using rule 99 (valorBool -> BOOL .)
    WHILE           reduce using rule 99 (valorBool -> BOOL .)
    DO              reduce using rule 99 (valorBool -> BOOL .)
    IF              reduce using rule 99 (valorBool -> BOOL .)
    ELSE            reduce using rule 99 (valorBool -> BOOL .)
    PRINT           reduce using rule 99 (valorBool -> BOOL .)
    FUNCIONSTDIN    reduce using rule 99 (valorBool -> BOOL .)
    FUNCIONSTDOUT   reduce using rule 99 (valorBool -> BOOL .)
    NOT             reduce using rule 99 (valorBool -> BOOL .)
    ELSEIF          reduce using rule 99 (valorBool -> BOOL .)
    ENTERO          reduce using rule 99 (valorBool -> BOOL .)
    DOUBLE          reduce using rule 99 (valorBool -> BOOL .)
    STRING          reduce using rule 99 (valorBool -> BOOL .)
    BOOL            reduce using rule 99 (valorBool -> BOOL .)
    $end            reduce using rule 99 (valorBool -> BOOL .)
    LDER            reduce using rule 99 (valorBool -> BOOL .)
    PDER            reduce using rule 99 (valorBool -> BOOL .)


state 48

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    algoritmo                      shift and go to state 2
    final                          shift and go to state 127
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 49

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (43) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    asignacion                     shift and go to state 3
    final                          shift and go to state 128
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 50

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (44) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionInt                   shift and go to state 4
    final                          shift and go to state 129
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 51

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (45) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionDouble                shift and go to state 5
    final                          shift and go to state 130
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 52

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (46) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionString                shift and go to state 6
    final                          shift and go to state 131
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 53

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (47) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionBool                  shift and go to state 7
    final                          shift and go to state 132
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 54

    (111) comparacionBool -> expresionBool operadorLogico . expresionBool
    (112) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 44
    BOOL            shift and go to state 47
    NOT             shift and go to state 41
    ENTERO          shift and go to state 140
    STRING          shift and go to state 141

    expresionBool                  shift and go to state 133
    comparacionBool                shift and go to state 134
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    valor                          shift and go to state 138
    valorInt                       shift and go to state 139

state 55

    (141) operadorLogico -> AND .

    VARIABLE        reduce using rule 141 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 141 (operadorLogico -> AND .)
    BOOL            reduce using rule 141 (operadorLogico -> AND .)
    NOT             reduce using rule 141 (operadorLogico -> AND .)
    ENTERO          reduce using rule 141 (operadorLogico -> AND .)
    STRING          reduce using rule 141 (operadorLogico -> AND .)


state 56

    (142) operadorLogico -> OR .

    VARIABLE        reduce using rule 142 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 142 (operadorLogico -> OR .)
    BOOL            reduce using rule 142 (operadorLogico -> OR .)
    NOT             reduce using rule 142 (operadorLogico -> OR .)
    ENTERO          reduce using rule 142 (operadorLogico -> OR .)
    STRING          reduce using rule 142 (operadorLogico -> OR .)


state 57

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 58

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (50) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 142
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 59

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (51) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 143
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 60

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (52) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 144
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 61

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 62

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (54) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 145
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 63

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 64

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (56) algoritmo -> imprimir PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    imprimir                       shift and go to state 12
    final                          shift and go to state 146
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 65

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (57) algoritmo -> funcionStdin PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 147
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 66

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (58) algoritmo -> funcionStdout PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 148
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 67

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (59) algoritmo -> negacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    negacionBool                   shift and go to state 15
    final                          shift and go to state 149
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 68

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (60) algoritmo -> comparacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    comparacionBool                shift and go to state 16
    final                          shift and go to state 150
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 69

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (62) algoritmo -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 151
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaSubstring             shift and go to state 18
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 70

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)


state 71

    (41) final -> sentenciaSubstring PUNTOYCOMA . final
    (42) final -> sentenciaSubstring PUNTOYCOMA .
    (63) algoritmo -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaSubstring PUNTOYCOMA final
    (42) final -> . sentenciaSubstring PUNTOYCOMA
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    $end            reduce using rule 42 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    sentenciaSubstring             shift and go to state 18
    final                          shift and go to state 152
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 72

    (64) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 153


state 73

    (102) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (103) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 154
    DOUBLE          shift and go to state 157
    ENTERO          shift and go to state 158

    expresionDouble                shift and go to state 155
    valorDouble                    shift and go to state 156
    valorInt                       shift and go to state 139

state 74

    (97) sentenciaSubstring -> VARIABLE SUBSTRING . PIZQ ENTERO PDER
    (98) sentenciaSubstring -> VARIABLE SUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 159


state 75

    (72) asignacionSimple -> VARIABLE IGUAL . expresion
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 140
    VARIABLE        shift and go to state 160
    DOUBLE          shift and go to state 167
    STRING          shift and go to state 168
    FUNCIONSTDIN    shift and go to state 170
    BOOL            shift and go to state 47
    NOT             shift and go to state 41

    expresion                      shift and go to state 161
    valor                          shift and go to state 162
    expresionString                shift and go to state 163
    expresionInt                   shift and go to state 164
    expresionDouble                shift and go to state 165
    expresionBool                  shift and go to state 166
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 76

    (135) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 135 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 135 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 135 (comparadorMat -> DIGUAL .)


state 77

    (136) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 136 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 136 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 136 (comparadorMat -> NOIGUAL .)


state 78

    (137) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 137 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 137 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 137 (comparadorMat -> MAYOR .)


state 79

    (138) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 138 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 138 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 138 (comparadorMat -> MENOR .)


state 80

    (139) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 139 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 139 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 139 (comparadorMat -> MAYIGUAL .)


state 81

    (140) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 140 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 140 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 140 (comparadorMat -> MENIGUAL .)


state 82

    (65) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 172


state 83

    (66) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 173


state 84

    (67) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 174


state 85

    (68) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 175


state 86

    (69) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 176


state 87

    (70) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 177


state 88

    (123) expresionInt -> valorInt operadorMat . expresionInt
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    ENTERO          shift and go to state 158
    VARIABLE        shift and go to state 180

    valorInt                       shift and go to state 178
    expresionInt                   shift and go to state 179

state 89

    (129) operadorMat -> SUMA .

    ENTERO          reduce using rule 129 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 129 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 129 (operadorMat -> SUMA .)
    STRING          reduce using rule 129 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 129 (operadorMat -> SUMA .)
    BOOL            reduce using rule 129 (operadorMat -> SUMA .)
    NOT             reduce using rule 129 (operadorMat -> SUMA .)


state 90

    (130) operadorMat -> RESTA .

    ENTERO          reduce using rule 130 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 130 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 130 (operadorMat -> RESTA .)
    STRING          reduce using rule 130 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 130 (operadorMat -> RESTA .)
    BOOL            reduce using rule 130 (operadorMat -> RESTA .)
    NOT             reduce using rule 130 (operadorMat -> RESTA .)


state 91

    (131) operadorMat -> MULTI .

    ENTERO          reduce using rule 131 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 131 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 131 (operadorMat -> MULTI .)
    STRING          reduce using rule 131 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 131 (operadorMat -> MULTI .)
    BOOL            reduce using rule 131 (operadorMat -> MULTI .)
    NOT             reduce using rule 131 (operadorMat -> MULTI .)


state 92

    (132) operadorMat -> DIV .

    ENTERO          reduce using rule 132 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 132 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 132 (operadorMat -> DIV .)
    STRING          reduce using rule 132 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 132 (operadorMat -> DIV .)
    BOOL            reduce using rule 132 (operadorMat -> DIV .)
    NOT             reduce using rule 132 (operadorMat -> DIV .)


state 93

    (133) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 133 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 133 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 133 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 133 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 133 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 133 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 133 (operadorMat -> DIVENTERO .)


state 94

    (134) operadorMat -> MOD .

    ENTERO          reduce using rule 134 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 134 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 134 (operadorMat -> MOD .)
    STRING          reduce using rule 134 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 134 (operadorMat -> MOD .)
    BOOL            reduce using rule 134 (operadorMat -> MOD .)
    NOT             reduce using rule 134 (operadorMat -> MOD .)


state 95

    (127) expresionDouble -> valorDouble operadorMat . expresionDouble
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 157
    ENTERO          shift and go to state 158
    VARIABLE        shift and go to state 180

    valorDouble                    shift and go to state 156
    expresionDouble                shift and go to state 181
    valorInt                       shift and go to state 139

state 96

    (101) expresionBool -> valorDouble comparadorMat . expresionDouble
    (104) expresionBool -> valorDouble comparadorMat . VARIABLE
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 183
    DOUBLE          shift and go to state 157
    ENTERO          shift and go to state 158

    valorDouble                    shift and go to state 156
    expresionDouble                shift and go to state 182
    valorInt                       shift and go to state 139

state 97

    (118) expresionString -> valorString SUMA . expresionString
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 185
    VARIABLE        shift and go to state 186
    FUNCIONSTDIN    shift and go to state 170

    valorString                    shift and go to state 31
    expresionString                shift and go to state 184
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 98

    (120) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 187


state 99

    (108) expresionBool -> valor IS . objeto
    (143) objeto -> . STRINGR
    (144) objeto -> . INT
    (145) objeto -> . DOUBLER
    (146) objeto -> . NUM
    (147) objeto -> . VAR
    (148) objeto -> . DYNAMIC
    (149) objeto -> . LIST
    (150) objeto -> . BOOL
    (151) objeto -> . MAP
    (152) objeto -> . SET

    STRINGR         shift and go to state 189
    INT             shift and go to state 190
    DOUBLER         shift and go to state 191
    NUM             shift and go to state 192
    VAR             shift and go to state 193
    DYNAMIC         shift and go to state 194
    LIST            shift and go to state 195
    BOOL            shift and go to state 196
    MAP             shift and go to state 197
    SET             shift and go to state 198

    objeto                         shift and go to state 188

state 100

    (109) expresionBool -> valor ISNEGADO . objeto
    (143) objeto -> . STRINGR
    (144) objeto -> . INT
    (145) objeto -> . DOUBLER
    (146) objeto -> . NUM
    (147) objeto -> . VAR
    (148) objeto -> . DYNAMIC
    (149) objeto -> . LIST
    (150) objeto -> . BOOL
    (151) objeto -> . MAP
    (152) objeto -> . SET

    STRINGR         shift and go to state 189
    INT             shift and go to state 190
    DOUBLER         shift and go to state 191
    NUM             shift and go to state 192
    VAR             shift and go to state 193
    DYNAMIC         shift and go to state 194
    LIST            shift and go to state 195
    BOOL            shift and go to state 196
    MAP             shift and go to state 197
    SET             shift and go to state 198

    objeto                         shift and go to state 199

state 101

    (88) expresion -> valor operadorMat . expresion
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 140
    VARIABLE        shift and go to state 160
    DOUBLE          shift and go to state 167
    STRING          shift and go to state 168
    FUNCIONSTDIN    shift and go to state 170
    BOOL            shift and go to state 47
    NOT             shift and go to state 41

    valor                          shift and go to state 162
    expresion                      shift and go to state 200
    expresionString                shift and go to state 163
    expresionInt                   shift and go to state 164
    expresionDouble                shift and go to state 165
    expresionBool                  shift and go to state 166
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 102

    (94) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 44
    BOOL            shift and go to state 47
    NOT             shift and go to state 41
    ENTERO          shift and go to state 140
    STRING          shift and go to state 141

    expresionBool                  shift and go to state 201
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    valor                          shift and go to state 138
    valorInt                       shift and go to state 139

state 103

    (96) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    algoritmo                      shift and go to state 202
    expresionBool                  shift and go to state 111
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 104

    (78) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (79) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 44
    BOOL            shift and go to state 47
    NOT             shift and go to state 41
    ENTERO          shift and go to state 140
    STRING          shift and go to state 141

    expresionBool                  shift and go to state 203
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    valor                          shift and go to state 138
    valorInt                       shift and go to state 139

state 105

    (80) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    PRINT           reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    FUNCIONSTDIN    reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    FUNCIONSTDOUT   reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    NOT             reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    ELSEIF          reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 80 (sentenciaElse -> ELSE algoritmo .)


state 106

    (81) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    algoritmo                      shift and go to state 204
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresionBool                  shift and go to state 111
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 107

    (43) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 205


state 108

    (44) algoritmo -> expresionInt . PUNTOYCOMA
    (91) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 206
    INT             reduce using rule 91 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 91 (expresion -> expresionInt .)
    NUM             reduce using rule 91 (expresion -> expresionInt .)
    STRINGR         reduce using rule 91 (expresion -> expresionInt .)
    BOOLR           reduce using rule 91 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 91 (expresion -> expresionInt .)
    VAR             reduce using rule 91 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 91 (expresion -> expresionInt .)
    WHILE           reduce using rule 91 (expresion -> expresionInt .)
    DO              reduce using rule 91 (expresion -> expresionInt .)
    IF              reduce using rule 91 (expresion -> expresionInt .)
    ELSE            reduce using rule 91 (expresion -> expresionInt .)
    PRINT           reduce using rule 91 (expresion -> expresionInt .)
    FUNCIONSTDIN    reduce using rule 91 (expresion -> expresionInt .)
    FUNCIONSTDOUT   reduce using rule 91 (expresion -> expresionInt .)
    NOT             reduce using rule 91 (expresion -> expresionInt .)
    ELSEIF          reduce using rule 91 (expresion -> expresionInt .)
    ENTERO          reduce using rule 91 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 91 (expresion -> expresionInt .)
    STRING          reduce using rule 91 (expresion -> expresionInt .)
    BOOL            reduce using rule 91 (expresion -> expresionInt .)
    $end            reduce using rule 91 (expresion -> expresionInt .)
    LDER            reduce using rule 91 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 91 (expresion -> expresionInt .) ]


state 109

    (45) algoritmo -> expresionDouble . PUNTOYCOMA
    (92) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 207
    INT             reduce using rule 92 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 92 (expresion -> expresionDouble .)
    NUM             reduce using rule 92 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 92 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 92 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 92 (expresion -> expresionDouble .)
    VAR             reduce using rule 92 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 92 (expresion -> expresionDouble .)
    WHILE           reduce using rule 92 (expresion -> expresionDouble .)
    DO              reduce using rule 92 (expresion -> expresionDouble .)
    IF              reduce using rule 92 (expresion -> expresionDouble .)
    ELSE            reduce using rule 92 (expresion -> expresionDouble .)
    PRINT           reduce using rule 92 (expresion -> expresionDouble .)
    FUNCIONSTDIN    reduce using rule 92 (expresion -> expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 92 (expresion -> expresionDouble .)
    NOT             reduce using rule 92 (expresion -> expresionDouble .)
    ELSEIF          reduce using rule 92 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 92 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 92 (expresion -> expresionDouble .)
    STRING          reduce using rule 92 (expresion -> expresionDouble .)
    BOOL            reduce using rule 92 (expresion -> expresionDouble .)
    $end            reduce using rule 92 (expresion -> expresionDouble .)
    LDER            reduce using rule 92 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 92 (expresion -> expresionDouble .) ]


state 110

    (46) algoritmo -> expresionString . PUNTOYCOMA
    (90) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 208
    INT             reduce using rule 90 (expresion -> expresionString .)
    DOUBLER         reduce using rule 90 (expresion -> expresionString .)
    NUM             reduce using rule 90 (expresion -> expresionString .)
    STRINGR         reduce using rule 90 (expresion -> expresionString .)
    BOOLR           reduce using rule 90 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 90 (expresion -> expresionString .)
    VAR             reduce using rule 90 (expresion -> expresionString .)
    VARIABLE        reduce using rule 90 (expresion -> expresionString .)
    WHILE           reduce using rule 90 (expresion -> expresionString .)
    DO              reduce using rule 90 (expresion -> expresionString .)
    IF              reduce using rule 90 (expresion -> expresionString .)
    ELSE            reduce using rule 90 (expresion -> expresionString .)
    PRINT           reduce using rule 90 (expresion -> expresionString .)
    FUNCIONSTDIN    reduce using rule 90 (expresion -> expresionString .)
    FUNCIONSTDOUT   reduce using rule 90 (expresion -> expresionString .)
    NOT             reduce using rule 90 (expresion -> expresionString .)
    ELSEIF          reduce using rule 90 (expresion -> expresionString .)
    ENTERO          reduce using rule 90 (expresion -> expresionString .)
    DOUBLE          reduce using rule 90 (expresion -> expresionString .)
    STRING          reduce using rule 90 (expresion -> expresionString .)
    BOOL            reduce using rule 90 (expresion -> expresionString .)
    $end            reduce using rule 90 (expresion -> expresionString .)
    LDER            reduce using rule 90 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 90 (expresion -> expresionString .) ]


state 111

    (47) algoritmo -> expresionBool . PUNTOYCOMA
    (93) expresion -> expresionBool .
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 209
    INT             reduce using rule 93 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 93 (expresion -> expresionBool .)
    NUM             reduce using rule 93 (expresion -> expresionBool .)
    STRINGR         reduce using rule 93 (expresion -> expresionBool .)
    BOOLR           reduce using rule 93 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 93 (expresion -> expresionBool .)
    VAR             reduce using rule 93 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 93 (expresion -> expresionBool .)
    WHILE           reduce using rule 93 (expresion -> expresionBool .)
    DO              reduce using rule 93 (expresion -> expresionBool .)
    IF              reduce using rule 93 (expresion -> expresionBool .)
    ELSE            reduce using rule 93 (expresion -> expresionBool .)
    PRINT           reduce using rule 93 (expresion -> expresionBool .)
    FUNCIONSTDIN    reduce using rule 93 (expresion -> expresionBool .)
    FUNCIONSTDOUT   reduce using rule 93 (expresion -> expresionBool .)
    NOT             reduce using rule 93 (expresion -> expresionBool .)
    ELSEIF          reduce using rule 93 (expresion -> expresionBool .)
    ENTERO          reduce using rule 93 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 93 (expresion -> expresionBool .)
    STRING          reduce using rule 93 (expresion -> expresionBool .)
    BOOL            reduce using rule 93 (expresion -> expresionBool .)
    $end            reduce using rule 93 (expresion -> expresionBool .)
    LDER            reduce using rule 93 (expresion -> expresionBool .)
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 93 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 54

state 112

    (49) algoritmo -> sentenciaWhile .
    (50) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 49 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 49 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 49 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 49 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 49 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 49 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 49 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 49 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 49 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 49 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 49 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 49 (algoritmo -> sentenciaWhile .)
    PRINT           reduce using rule 49 (algoritmo -> sentenciaWhile .)
    FUNCIONSTDIN    reduce using rule 49 (algoritmo -> sentenciaWhile .)
    FUNCIONSTDOUT   reduce using rule 49 (algoritmo -> sentenciaWhile .)
    NOT             reduce using rule 49 (algoritmo -> sentenciaWhile .)
    ELSEIF          reduce using rule 49 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 49 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 49 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 49 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 49 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 49 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 49 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 210

  ! PUNTOYCOMA      [ reduce using rule 49 (algoritmo -> sentenciaWhile .) ]


state 113

    (51) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 211


state 114

    (52) algoritmo -> sentenciaIf . PUNTOYCOMA
    (53) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 212
    INT             reduce using rule 53 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 53 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 53 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 53 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 53 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 53 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 53 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 53 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 53 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 53 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 53 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 53 (algoritmo -> sentenciaIf .)
    PRINT           reduce using rule 53 (algoritmo -> sentenciaIf .)
    FUNCIONSTDIN    reduce using rule 53 (algoritmo -> sentenciaIf .)
    FUNCIONSTDOUT   reduce using rule 53 (algoritmo -> sentenciaIf .)
    NOT             reduce using rule 53 (algoritmo -> sentenciaIf .)
    ELSEIF          reduce using rule 53 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 53 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 53 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 53 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 53 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 53 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 53 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 53 (algoritmo -> sentenciaIf .) ]


state 115

    (54) algoritmo -> sentenciaElse . PUNTOYCOMA
    (55) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 213
    INT             reduce using rule 55 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 55 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 55 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 55 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 55 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 55 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 55 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 55 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 55 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 55 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 55 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 55 (algoritmo -> sentenciaElse .)
    PRINT           reduce using rule 55 (algoritmo -> sentenciaElse .)
    FUNCIONSTDIN    reduce using rule 55 (algoritmo -> sentenciaElse .)
    FUNCIONSTDOUT   reduce using rule 55 (algoritmo -> sentenciaElse .)
    NOT             reduce using rule 55 (algoritmo -> sentenciaElse .)
    ELSEIF          reduce using rule 55 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 55 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 55 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 55 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 55 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 55 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 55 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 55 (algoritmo -> sentenciaElse .) ]


state 116

    (56) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 214


state 117

    (57) algoritmo -> funcionStdin . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 215


state 118

    (58) algoritmo -> funcionStdout . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 216


state 119

    (59) algoritmo -> negacionBool . PUNTOYCOMA
    (106) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 217
    AND             reduce using rule 106 (expresionBool -> negacionBool .)
    OR              reduce using rule 106 (expresionBool -> negacionBool .)
    INT             reduce using rule 106 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 106 (expresionBool -> negacionBool .)
    NUM             reduce using rule 106 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 106 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 106 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 106 (expresionBool -> negacionBool .)
    VAR             reduce using rule 106 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 106 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 106 (expresionBool -> negacionBool .)
    DO              reduce using rule 106 (expresionBool -> negacionBool .)
    IF              reduce using rule 106 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 106 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 106 (expresionBool -> negacionBool .)
    FUNCIONSTDIN    reduce using rule 106 (expresionBool -> negacionBool .)
    FUNCIONSTDOUT   reduce using rule 106 (expresionBool -> negacionBool .)
    NOT             reduce using rule 106 (expresionBool -> negacionBool .)
    ELSEIF          reduce using rule 106 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 106 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 106 (expresionBool -> negacionBool .)
    STRING          reduce using rule 106 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 106 (expresionBool -> negacionBool .)
    $end            reduce using rule 106 (expresionBool -> negacionBool .)
    LDER            reduce using rule 106 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 106 (expresionBool -> negacionBool .) ]


state 120

    (60) algoritmo -> comparacionBool . PUNTOYCOMA
    (107) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 218
    AND             reduce using rule 107 (expresionBool -> comparacionBool .)
    OR              reduce using rule 107 (expresionBool -> comparacionBool .)
    INT             reduce using rule 107 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 107 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 107 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 107 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 107 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 107 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 107 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 107 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 107 (expresionBool -> comparacionBool .)
    DO              reduce using rule 107 (expresionBool -> comparacionBool .)
    IF              reduce using rule 107 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 107 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 107 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 107 (expresionBool -> comparacionBool .)
    FUNCIONSTDOUT   reduce using rule 107 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 107 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 107 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 107 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 107 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 107 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 107 (expresionBool -> comparacionBool .)
    $end            reduce using rule 107 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 107 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 107 (expresionBool -> comparacionBool .) ]


state 121

    (61) algoritmo -> sentenciaElseIf .
    (62) algoritmo -> sentenciaElseIf . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    DOUBLER         reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    NUM             reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    STRINGR         reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    BOOLR           reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    DYNAMIC         reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    VAR             reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    VARIABLE        reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    WHILE           reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    DO              reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    IF              reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    ELSE            reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    PRINT           reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    FUNCIONSTDIN    reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    FUNCIONSTDOUT   reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    NOT             reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    ELSEIF          reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    ENTERO          reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    DOUBLE          reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    STRING          reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    BOOL            reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    $end            reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    LDER            reduce using rule 61 (algoritmo -> sentenciaElseIf .)
    PUNTOYCOMA      shift and go to state 219

  ! PUNTOYCOMA      [ reduce using rule 61 (algoritmo -> sentenciaElseIf .) ]


state 122

    (63) algoritmo -> sentenciaSubstring . PUNTOYCOMA
    (117) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 220
    SUMA            reduce using rule 117 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 117 (valorString -> sentenciaSubstring .)
    INT             reduce using rule 117 (valorString -> sentenciaSubstring .)
    DOUBLER         reduce using rule 117 (valorString -> sentenciaSubstring .)
    NUM             reduce using rule 117 (valorString -> sentenciaSubstring .)
    STRINGR         reduce using rule 117 (valorString -> sentenciaSubstring .)
    BOOLR           reduce using rule 117 (valorString -> sentenciaSubstring .)
    DYNAMIC         reduce using rule 117 (valorString -> sentenciaSubstring .)
    VAR             reduce using rule 117 (valorString -> sentenciaSubstring .)
    VARIABLE        reduce using rule 117 (valorString -> sentenciaSubstring .)
    WHILE           reduce using rule 117 (valorString -> sentenciaSubstring .)
    DO              reduce using rule 117 (valorString -> sentenciaSubstring .)
    IF              reduce using rule 117 (valorString -> sentenciaSubstring .)
    ELSE            reduce using rule 117 (valorString -> sentenciaSubstring .)
    PRINT           reduce using rule 117 (valorString -> sentenciaSubstring .)
    FUNCIONSTDIN    reduce using rule 117 (valorString -> sentenciaSubstring .)
    FUNCIONSTDOUT   reduce using rule 117 (valorString -> sentenciaSubstring .)
    NOT             reduce using rule 117 (valorString -> sentenciaSubstring .)
    ELSEIF          reduce using rule 117 (valorString -> sentenciaSubstring .)
    ENTERO          reduce using rule 117 (valorString -> sentenciaSubstring .)
    DOUBLE          reduce using rule 117 (valorString -> sentenciaSubstring .)
    STRING          reduce using rule 117 (valorString -> sentenciaSubstring .)
    BOOL            reduce using rule 117 (valorString -> sentenciaSubstring .)
    $end            reduce using rule 117 (valorString -> sentenciaSubstring .)
    LDER            reduce using rule 117 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 117 (valorString -> sentenciaSubstring .) ]


state 123

    (73) imprimir -> PRINT PIZQ . expresion PDER
    (74) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 223
    ENTERO          shift and go to state 140
    DOUBLE          shift and go to state 167
    STRING          shift and go to state 168
    FUNCIONSTDIN    shift and go to state 170
    BOOL            shift and go to state 47
    NOT             shift and go to state 41

    expresion                      shift and go to state 221
    asignacionSimple               shift and go to state 222
    valor                          shift and go to state 162
    expresionString                shift and go to state 163
    expresionInt                   shift and go to state 164
    expresionDouble                shift and go to state 165
    expresionBool                  shift and go to state 166
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 124

    (76) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (77) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 223
    ENTERO          shift and go to state 140
    DOUBLE          shift and go to state 167
    STRING          shift and go to state 168
    FUNCIONSTDIN    shift and go to state 170
    BOOL            shift and go to state 47
    NOT             shift and go to state 41

    expresion                      shift and go to state 224
    asignacionSimple               shift and go to state 225
    valor                          shift and go to state 162
    expresionString                shift and go to state 163
    expresionInt                   shift and go to state 164
    expresionDouble                shift and go to state 165
    expresionBool                  shift and go to state 166
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 125

    (110) negacionBool -> NOT PIZQ . expresionBool PDER
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 44
    BOOL            shift and go to state 47
    NOT             shift and go to state 41
    ENTERO          shift and go to state 140
    STRING          shift and go to state 141

    expresionBool                  shift and go to state 226
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    valor                          shift and go to state 138
    valorInt                       shift and go to state 139

state 126

    (82) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER algoritmo
    (83) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 44
    BOOL            shift and go to state 47
    NOT             shift and go to state 41
    ENTERO          shift and go to state 140
    STRING          shift and go to state 141

    expresionBool                  shift and go to state 227
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    valor                          shift and go to state 138
    valorInt                       shift and go to state 139

state 127

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 128

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 129

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 130

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 131

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 132

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 133

    (111) comparacionBool -> expresionBool operadorLogico expresionBool .
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    INT             reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLER         reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NUM             reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRINGR         reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOLR           reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DYNAMIC         reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VAR             reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VARIABLE        reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    WHILE           reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DO              reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    IF              reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ELSE            reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PRINT           reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    FUNCIONSTDIN    reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    FUNCIONSTDOUT   reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NOT             reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ELSEIF          reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ENTERO          reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLE          reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRING          reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOL            reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    $end            reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    LDER            reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! AND             [ reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 111 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 54

state 134

    (112) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (107) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for INT resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NUM resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRINGR resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOLR resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VAR resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for WHILE resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DO resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for IF resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ELSE resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PRINT resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NOT resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ENTERO resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRING resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOL resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for $end resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for LDER resolved using rule 107 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 107 (expresionBool -> comparacionBool .)
    AND             reduce using rule 107 (expresionBool -> comparacionBool .)
    OR              reduce using rule 107 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 107 (expresionBool -> comparacionBool .)
    INT             reduce using rule 107 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 107 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 107 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 107 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 107 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 107 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 107 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 107 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 107 (expresionBool -> comparacionBool .)
    DO              reduce using rule 107 (expresionBool -> comparacionBool .)
    IF              reduce using rule 107 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 107 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 107 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 107 (expresionBool -> comparacionBool .)
    FUNCIONSTDOUT   reduce using rule 107 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 107 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 107 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 107 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 107 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 107 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 107 (expresionBool -> comparacionBool .)
    $end            reduce using rule 107 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 107 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 107 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! INT             [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLER         [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NUM             [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRINGR         [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOLR           [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DYNAMIC         [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VAR             [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VARIABLE        [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! WHILE           [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DO              [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! IF              [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ELSE            [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PRINT           [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! FUNCIONSTDIN    [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NOT             [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ELSEIF          [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ENTERO          [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLE          [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRING          [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOL            [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! $end            [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! LDER            [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 112 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 135

    (101) expresionBool -> valorDouble . comparadorMat expresionDouble
    (104) expresionBool -> valorDouble . comparadorMat VARIABLE
    (135) comparadorMat -> . DIGUAL
    (136) comparadorMat -> . NOIGUAL
    (137) comparadorMat -> . MAYOR
    (138) comparadorMat -> . MENOR
    (139) comparadorMat -> . MAYIGUAL
    (140) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 76
    NOIGUAL         shift and go to state 77
    MAYOR           shift and go to state 78
    MENOR           shift and go to state 79
    MAYIGUAL        shift and go to state 80
    MENIGUAL        shift and go to state 81

    comparadorMat                  shift and go to state 96

state 136

    (102) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (103) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (100) valorBool -> VARIABLE .
    (85) valor -> VARIABLE .
    (122) valorInt -> VARIABLE .
    (135) comparadorMat -> . DIGUAL
    (136) comparadorMat -> . NOIGUAL
    (137) comparadorMat -> . MAYOR
    (138) comparadorMat -> . MENOR
    (139) comparadorMat -> . MAYIGUAL
    (140) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 100 (valorBool -> VARIABLE .)
    OR              reduce using rule 100 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 100 (valorBool -> VARIABLE .)
    INT             reduce using rule 100 (valorBool -> VARIABLE .)
    DOUBLER         reduce using rule 100 (valorBool -> VARIABLE .)
    NUM             reduce using rule 100 (valorBool -> VARIABLE .)
    STRINGR         reduce using rule 100 (valorBool -> VARIABLE .)
    BOOLR           reduce using rule 100 (valorBool -> VARIABLE .)
    DYNAMIC         reduce using rule 100 (valorBool -> VARIABLE .)
    VAR             reduce using rule 100 (valorBool -> VARIABLE .)
    VARIABLE        reduce using rule 100 (valorBool -> VARIABLE .)
    WHILE           reduce using rule 100 (valorBool -> VARIABLE .)
    DO              reduce using rule 100 (valorBool -> VARIABLE .)
    IF              reduce using rule 100 (valorBool -> VARIABLE .)
    ELSE            reduce using rule 100 (valorBool -> VARIABLE .)
    PRINT           reduce using rule 100 (valorBool -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 100 (valorBool -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 100 (valorBool -> VARIABLE .)
    NOT             reduce using rule 100 (valorBool -> VARIABLE .)
    ELSEIF          reduce using rule 100 (valorBool -> VARIABLE .)
    ENTERO          reduce using rule 100 (valorBool -> VARIABLE .)
    DOUBLE          reduce using rule 100 (valorBool -> VARIABLE .)
    STRING          reduce using rule 100 (valorBool -> VARIABLE .)
    BOOL            reduce using rule 100 (valorBool -> VARIABLE .)
    $end            reduce using rule 100 (valorBool -> VARIABLE .)
    LDER            reduce using rule 100 (valorBool -> VARIABLE .)
    PDER            reduce using rule 100 (valorBool -> VARIABLE .)
    IS              reduce using rule 85 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 85 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 76
    NOIGUAL         shift and go to state 77
    MAYOR           shift and go to state 78
    MENOR           shift and go to state 79
    MAYIGUAL        shift and go to state 80
    MENIGUAL        shift and go to state 81

  ! DIGUAL          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 73

state 137

    (106) expresionBool -> negacionBool .

    AND             reduce using rule 106 (expresionBool -> negacionBool .)
    OR              reduce using rule 106 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 106 (expresionBool -> negacionBool .)
    INT             reduce using rule 106 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 106 (expresionBool -> negacionBool .)
    NUM             reduce using rule 106 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 106 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 106 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 106 (expresionBool -> negacionBool .)
    VAR             reduce using rule 106 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 106 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 106 (expresionBool -> negacionBool .)
    DO              reduce using rule 106 (expresionBool -> negacionBool .)
    IF              reduce using rule 106 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 106 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 106 (expresionBool -> negacionBool .)
    FUNCIONSTDIN    reduce using rule 106 (expresionBool -> negacionBool .)
    FUNCIONSTDOUT   reduce using rule 106 (expresionBool -> negacionBool .)
    NOT             reduce using rule 106 (expresionBool -> negacionBool .)
    ELSEIF          reduce using rule 106 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 106 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 106 (expresionBool -> negacionBool .)
    STRING          reduce using rule 106 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 106 (expresionBool -> negacionBool .)
    $end            reduce using rule 106 (expresionBool -> negacionBool .)
    LDER            reduce using rule 106 (expresionBool -> negacionBool .)
    PDER            reduce using rule 106 (expresionBool -> negacionBool .)


state 138

    (108) expresionBool -> valor . IS objeto
    (109) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 99
    ISNEGADO        shift and go to state 100


state 139

    (126) valorDouble -> valorInt .

    DIGUAL          reduce using rule 126 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 126 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 126 (valorDouble -> valorInt .)
    MENOR           reduce using rule 126 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 126 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 126 (valorDouble -> valorInt .)
    SUMA            reduce using rule 126 (valorDouble -> valorInt .)
    RESTA           reduce using rule 126 (valorDouble -> valorInt .)
    MULTI           reduce using rule 126 (valorDouble -> valorInt .)
    DIV             reduce using rule 126 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 126 (valorDouble -> valorInt .)
    MOD             reduce using rule 126 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 126 (valorDouble -> valorInt .)
    AND             reduce using rule 126 (valorDouble -> valorInt .)
    OR              reduce using rule 126 (valorDouble -> valorInt .)
    INT             reduce using rule 126 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 126 (valorDouble -> valorInt .)
    NUM             reduce using rule 126 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 126 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 126 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 126 (valorDouble -> valorInt .)
    VAR             reduce using rule 126 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 126 (valorDouble -> valorInt .)
    WHILE           reduce using rule 126 (valorDouble -> valorInt .)
    DO              reduce using rule 126 (valorDouble -> valorInt .)
    IF              reduce using rule 126 (valorDouble -> valorInt .)
    ELSE            reduce using rule 126 (valorDouble -> valorInt .)
    PRINT           reduce using rule 126 (valorDouble -> valorInt .)
    FUNCIONSTDIN    reduce using rule 126 (valorDouble -> valorInt .)
    FUNCIONSTDOUT   reduce using rule 126 (valorDouble -> valorInt .)
    NOT             reduce using rule 126 (valorDouble -> valorInt .)
    ELSEIF          reduce using rule 126 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 126 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 126 (valorDouble -> valorInt .)
    STRING          reduce using rule 126 (valorDouble -> valorInt .)
    BOOL            reduce using rule 126 (valorDouble -> valorInt .)
    $end            reduce using rule 126 (valorDouble -> valorInt .)
    LDER            reduce using rule 126 (valorDouble -> valorInt .)
    PDER            reduce using rule 126 (valorDouble -> valorInt .)


state 140

    (84) valor -> ENTERO .
    (121) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 84 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 84 (valor -> ENTERO .)
    IS              reduce using rule 84 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 84 (valor -> ENTERO .)
    SUMA            reduce using rule 84 (valor -> ENTERO .)
    RESTA           reduce using rule 84 (valor -> ENTERO .)
    MULTI           reduce using rule 84 (valor -> ENTERO .)
    DIV             reduce using rule 84 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 84 (valor -> ENTERO .)
    MOD             reduce using rule 84 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 84 (valor -> ENTERO .)
    PDER            reduce using rule 84 (valor -> ENTERO .)
    INT             reduce using rule 84 (valor -> ENTERO .)
    DOUBLER         reduce using rule 84 (valor -> ENTERO .)
    NUM             reduce using rule 84 (valor -> ENTERO .)
    STRINGR         reduce using rule 84 (valor -> ENTERO .)
    BOOLR           reduce using rule 84 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 84 (valor -> ENTERO .)
    VAR             reduce using rule 84 (valor -> ENTERO .)
    VARIABLE        reduce using rule 84 (valor -> ENTERO .)
    WHILE           reduce using rule 84 (valor -> ENTERO .)
    DO              reduce using rule 84 (valor -> ENTERO .)
    IF              reduce using rule 84 (valor -> ENTERO .)
    ELSE            reduce using rule 84 (valor -> ENTERO .)
    PRINT           reduce using rule 84 (valor -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 84 (valor -> ENTERO .)
    FUNCIONSTDOUT   reduce using rule 84 (valor -> ENTERO .)
    NOT             reduce using rule 84 (valor -> ENTERO .)
    ELSEIF          reduce using rule 84 (valor -> ENTERO .)
    ENTERO          reduce using rule 84 (valor -> ENTERO .)
    DOUBLE          reduce using rule 84 (valor -> ENTERO .)
    STRING          reduce using rule 84 (valor -> ENTERO .)
    BOOL            reduce using rule 84 (valor -> ENTERO .)
    $end            reduce using rule 84 (valor -> ENTERO .)
    LDER            reduce using rule 84 (valor -> ENTERO .)
    DIGUAL          reduce using rule 121 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 121 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 121 (valorInt -> ENTERO .)
    MENOR           reduce using rule 121 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 121 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 121 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDIN    [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! ELSEIF          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 121 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 121 (valorInt -> ENTERO .) ]


state 141

    (87) valor -> STRING .

    IS              reduce using rule 87 (valor -> STRING .)
    ISNEGADO        reduce using rule 87 (valor -> STRING .)


state 142

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 143

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 144

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 145

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 146

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 147

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 148

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 149

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 150

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 151

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 152

    (41) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 153

    (64) asignacion -> INT VARIABLE IGUAL . expresionInt
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    ENTERO          shift and go to state 158
    VARIABLE        shift and go to state 180

    expresionInt                   shift and go to state 228
    valorInt                       shift and go to state 178

state 154

    (103) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (122) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    INT             reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NUM             reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRINGR         reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOLR           reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VAR             reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    WHILE           reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DO              reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    IF              reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSE            reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PRINT           reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    FUNCIONSTDIN    reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NOT             reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSEIF          reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ENTERO          reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRING          reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOL            reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    $end            reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    LDER            reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 103 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 122 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 122 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 122 (valorInt -> VARIABLE .)
    DIV             reduce using rule 122 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 122 (valorInt -> VARIABLE .)
    MOD             reduce using rule 122 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]


state 155

    (102) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    INT             reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NUM             reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRINGR         reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOLR           reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VAR             reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    WHILE           reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DO              reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    IF              reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSE            reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PRINT           reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NOT             reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSEIF          reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ENTERO          reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRING          reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOL            reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    $end            reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    LDER            reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 102 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 156

    (127) expresionDouble -> valorDouble . operadorMat expresionDouble
    (128) expresionDouble -> valorDouble .
    (129) operadorMat -> . SUMA
    (130) operadorMat -> . RESTA
    (131) operadorMat -> . MULTI
    (132) operadorMat -> . DIV
    (133) operadorMat -> . DIVENTERO
    (134) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 128 (expresionDouble -> valorDouble .)
    AND             reduce using rule 128 (expresionDouble -> valorDouble .)
    OR              reduce using rule 128 (expresionDouble -> valorDouble .)
    INT             reduce using rule 128 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 128 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 128 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 128 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 128 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 128 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 128 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 128 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 128 (expresionDouble -> valorDouble .)
    DO              reduce using rule 128 (expresionDouble -> valorDouble .)
    IF              reduce using rule 128 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 128 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 128 (expresionDouble -> valorDouble .)
    FUNCIONSTDIN    reduce using rule 128 (expresionDouble -> valorDouble .)
    FUNCIONSTDOUT   reduce using rule 128 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 128 (expresionDouble -> valorDouble .)
    ELSEIF          reduce using rule 128 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 128 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 128 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 128 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 128 (expresionDouble -> valorDouble .)
    $end            reduce using rule 128 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 128 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 128 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTI           shift and go to state 91
    DIV             shift and go to state 92
    DIVENTERO       shift and go to state 93
    MOD             shift and go to state 94

    operadorMat                    shift and go to state 95

state 157

    (125) valorDouble -> DOUBLE .

    SUMA            reduce using rule 125 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 125 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 125 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 125 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 125 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 125 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 125 (valorDouble -> DOUBLE .)
    AND             reduce using rule 125 (valorDouble -> DOUBLE .)
    OR              reduce using rule 125 (valorDouble -> DOUBLE .)
    INT             reduce using rule 125 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 125 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 125 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 125 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 125 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 125 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 125 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 125 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 125 (valorDouble -> DOUBLE .)
    DO              reduce using rule 125 (valorDouble -> DOUBLE .)
    IF              reduce using rule 125 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 125 (valorDouble -> DOUBLE .)
    PRINT           reduce using rule 125 (valorDouble -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 125 (valorDouble -> DOUBLE .)
    FUNCIONSTDOUT   reduce using rule 125 (valorDouble -> DOUBLE .)
    NOT             reduce using rule 125 (valorDouble -> DOUBLE .)
    ELSEIF          reduce using rule 125 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 125 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 125 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 125 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 125 (valorDouble -> DOUBLE .)
    $end            reduce using rule 125 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 125 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 125 (valorDouble -> DOUBLE .)


state 158

    (121) valorInt -> ENTERO .

    SUMA            reduce using rule 121 (valorInt -> ENTERO .)
    RESTA           reduce using rule 121 (valorInt -> ENTERO .)
    MULTI           reduce using rule 121 (valorInt -> ENTERO .)
    DIV             reduce using rule 121 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 121 (valorInt -> ENTERO .)
    MOD             reduce using rule 121 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 121 (valorInt -> ENTERO .)
    AND             reduce using rule 121 (valorInt -> ENTERO .)
    OR              reduce using rule 121 (valorInt -> ENTERO .)
    INT             reduce using rule 121 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 121 (valorInt -> ENTERO .)
    NUM             reduce using rule 121 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 121 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 121 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 121 (valorInt -> ENTERO .)
    VAR             reduce using rule 121 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 121 (valorInt -> ENTERO .)
    WHILE           reduce using rule 121 (valorInt -> ENTERO .)
    DO              reduce using rule 121 (valorInt -> ENTERO .)
    IF              reduce using rule 121 (valorInt -> ENTERO .)
    ELSE            reduce using rule 121 (valorInt -> ENTERO .)
    PRINT           reduce using rule 121 (valorInt -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 121 (valorInt -> ENTERO .)
    FUNCIONSTDOUT   reduce using rule 121 (valorInt -> ENTERO .)
    NOT             reduce using rule 121 (valorInt -> ENTERO .)
    ELSEIF          reduce using rule 121 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 121 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 121 (valorInt -> ENTERO .)
    STRING          reduce using rule 121 (valorInt -> ENTERO .)
    BOOL            reduce using rule 121 (valorInt -> ENTERO .)
    $end            reduce using rule 121 (valorInt -> ENTERO .)
    LDER            reduce using rule 121 (valorInt -> ENTERO .)
    PDER            reduce using rule 121 (valorInt -> ENTERO .)


state 159

    (97) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ . ENTERO PDER
    (98) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 229


state 160

    (85) valor -> VARIABLE .
    (102) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (103) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (114) valorString -> VARIABLE .
    (122) valorInt -> VARIABLE .
    (100) valorBool -> VARIABLE .
    (97) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (135) comparadorMat -> . DIGUAL
    (136) comparadorMat -> . NOIGUAL
    (137) comparadorMat -> . MAYOR
    (138) comparadorMat -> . MENOR
    (139) comparadorMat -> . MAYIGUAL
    (140) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 85 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 85 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 85 (valor -> VARIABLE .)
    SUMA            reduce using rule 85 (valor -> VARIABLE .)
    RESTA           reduce using rule 85 (valor -> VARIABLE .)
    MULTI           reduce using rule 85 (valor -> VARIABLE .)
    DIV             reduce using rule 85 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 85 (valor -> VARIABLE .)
    MOD             reduce using rule 85 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 85 (valor -> VARIABLE .)
    PDER            reduce using rule 85 (valor -> VARIABLE .)
    INT             reduce using rule 85 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 85 (valor -> VARIABLE .)
    NUM             reduce using rule 85 (valor -> VARIABLE .)
    STRINGR         reduce using rule 85 (valor -> VARIABLE .)
    BOOLR           reduce using rule 85 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 85 (valor -> VARIABLE .)
    VAR             reduce using rule 85 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 85 (valor -> VARIABLE .)
    WHILE           reduce using rule 85 (valor -> VARIABLE .)
    DO              reduce using rule 85 (valor -> VARIABLE .)
    IF              reduce using rule 85 (valor -> VARIABLE .)
    ELSE            reduce using rule 85 (valor -> VARIABLE .)
    PRINT           reduce using rule 85 (valor -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 85 (valor -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 85 (valor -> VARIABLE .)
    NOT             reduce using rule 85 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 85 (valor -> VARIABLE .)
    ENTERO          reduce using rule 85 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 85 (valor -> VARIABLE .)
    STRING          reduce using rule 85 (valor -> VARIABLE .)
    BOOL            reduce using rule 85 (valor -> VARIABLE .)
    $end            reduce using rule 85 (valor -> VARIABLE .)
    LDER            reduce using rule 85 (valor -> VARIABLE .)
    CIZQ            reduce using rule 114 (valorString -> VARIABLE .)
    AND             reduce using rule 100 (valorBool -> VARIABLE .)
    OR              reduce using rule 100 (valorBool -> VARIABLE .)
    SUBSTRING       shift and go to state 74
    DIGUAL          shift and go to state 76
    NOIGUAL         shift and go to state 77
    MAYOR           shift and go to state 78
    MENOR           shift and go to state 79
    MAYIGUAL        shift and go to state 80
    MENIGUAL        shift and go to state 81

  ! SUMA            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 100 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 100 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 73

state 161

    (72) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 72 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 72 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 162

    (88) expresion -> valor . operadorMat expresion
    (89) expresion -> valor .
    (108) expresionBool -> valor . IS objeto
    (109) expresionBool -> valor . ISNEGADO objeto
    (129) operadorMat -> . SUMA
    (130) operadorMat -> . RESTA
    (131) operadorMat -> . MULTI
    (132) operadorMat -> . DIV
    (133) operadorMat -> . DIVENTERO
    (134) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 89 (expresion -> valor .)
    PDER            reduce using rule 89 (expresion -> valor .)
    INT             reduce using rule 89 (expresion -> valor .)
    DOUBLER         reduce using rule 89 (expresion -> valor .)
    NUM             reduce using rule 89 (expresion -> valor .)
    STRINGR         reduce using rule 89 (expresion -> valor .)
    BOOLR           reduce using rule 89 (expresion -> valor .)
    DYNAMIC         reduce using rule 89 (expresion -> valor .)
    VAR             reduce using rule 89 (expresion -> valor .)
    VARIABLE        reduce using rule 89 (expresion -> valor .)
    WHILE           reduce using rule 89 (expresion -> valor .)
    DO              reduce using rule 89 (expresion -> valor .)
    IF              reduce using rule 89 (expresion -> valor .)
    ELSE            reduce using rule 89 (expresion -> valor .)
    PRINT           reduce using rule 89 (expresion -> valor .)
    FUNCIONSTDIN    reduce using rule 89 (expresion -> valor .)
    FUNCIONSTDOUT   reduce using rule 89 (expresion -> valor .)
    NOT             reduce using rule 89 (expresion -> valor .)
    ELSEIF          reduce using rule 89 (expresion -> valor .)
    ENTERO          reduce using rule 89 (expresion -> valor .)
    DOUBLE          reduce using rule 89 (expresion -> valor .)
    STRING          reduce using rule 89 (expresion -> valor .)
    BOOL            reduce using rule 89 (expresion -> valor .)
    $end            reduce using rule 89 (expresion -> valor .)
    LDER            reduce using rule 89 (expresion -> valor .)
    IS              shift and go to state 99
    ISNEGADO        shift and go to state 100
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTI           shift and go to state 91
    DIV             shift and go to state 92
    DIVENTERO       shift and go to state 93
    MOD             shift and go to state 94

    operadorMat                    shift and go to state 101

state 163

    (90) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 90 (expresion -> expresionString .)
    PDER            reduce using rule 90 (expresion -> expresionString .)
    INT             reduce using rule 90 (expresion -> expresionString .)
    DOUBLER         reduce using rule 90 (expresion -> expresionString .)
    NUM             reduce using rule 90 (expresion -> expresionString .)
    STRINGR         reduce using rule 90 (expresion -> expresionString .)
    BOOLR           reduce using rule 90 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 90 (expresion -> expresionString .)
    VAR             reduce using rule 90 (expresion -> expresionString .)
    VARIABLE        reduce using rule 90 (expresion -> expresionString .)
    WHILE           reduce using rule 90 (expresion -> expresionString .)
    DO              reduce using rule 90 (expresion -> expresionString .)
    IF              reduce using rule 90 (expresion -> expresionString .)
    ELSE            reduce using rule 90 (expresion -> expresionString .)
    PRINT           reduce using rule 90 (expresion -> expresionString .)
    FUNCIONSTDIN    reduce using rule 90 (expresion -> expresionString .)
    FUNCIONSTDOUT   reduce using rule 90 (expresion -> expresionString .)
    NOT             reduce using rule 90 (expresion -> expresionString .)
    ELSEIF          reduce using rule 90 (expresion -> expresionString .)
    ENTERO          reduce using rule 90 (expresion -> expresionString .)
    DOUBLE          reduce using rule 90 (expresion -> expresionString .)
    STRING          reduce using rule 90 (expresion -> expresionString .)
    BOOL            reduce using rule 90 (expresion -> expresionString .)
    $end            reduce using rule 90 (expresion -> expresionString .)
    LDER            reduce using rule 90 (expresion -> expresionString .)


state 164

    (91) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 91 (expresion -> expresionInt .)
    PDER            reduce using rule 91 (expresion -> expresionInt .)
    INT             reduce using rule 91 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 91 (expresion -> expresionInt .)
    NUM             reduce using rule 91 (expresion -> expresionInt .)
    STRINGR         reduce using rule 91 (expresion -> expresionInt .)
    BOOLR           reduce using rule 91 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 91 (expresion -> expresionInt .)
    VAR             reduce using rule 91 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 91 (expresion -> expresionInt .)
    WHILE           reduce using rule 91 (expresion -> expresionInt .)
    DO              reduce using rule 91 (expresion -> expresionInt .)
    IF              reduce using rule 91 (expresion -> expresionInt .)
    ELSE            reduce using rule 91 (expresion -> expresionInt .)
    PRINT           reduce using rule 91 (expresion -> expresionInt .)
    FUNCIONSTDIN    reduce using rule 91 (expresion -> expresionInt .)
    FUNCIONSTDOUT   reduce using rule 91 (expresion -> expresionInt .)
    NOT             reduce using rule 91 (expresion -> expresionInt .)
    ELSEIF          reduce using rule 91 (expresion -> expresionInt .)
    ENTERO          reduce using rule 91 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 91 (expresion -> expresionInt .)
    STRING          reduce using rule 91 (expresion -> expresionInt .)
    BOOL            reduce using rule 91 (expresion -> expresionInt .)
    $end            reduce using rule 91 (expresion -> expresionInt .)
    LDER            reduce using rule 91 (expresion -> expresionInt .)


state 165

    (92) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 92 (expresion -> expresionDouble .)
    PDER            reduce using rule 92 (expresion -> expresionDouble .)
    INT             reduce using rule 92 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 92 (expresion -> expresionDouble .)
    NUM             reduce using rule 92 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 92 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 92 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 92 (expresion -> expresionDouble .)
    VAR             reduce using rule 92 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 92 (expresion -> expresionDouble .)
    WHILE           reduce using rule 92 (expresion -> expresionDouble .)
    DO              reduce using rule 92 (expresion -> expresionDouble .)
    IF              reduce using rule 92 (expresion -> expresionDouble .)
    ELSE            reduce using rule 92 (expresion -> expresionDouble .)
    PRINT           reduce using rule 92 (expresion -> expresionDouble .)
    FUNCIONSTDIN    reduce using rule 92 (expresion -> expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 92 (expresion -> expresionDouble .)
    NOT             reduce using rule 92 (expresion -> expresionDouble .)
    ELSEIF          reduce using rule 92 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 92 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 92 (expresion -> expresionDouble .)
    STRING          reduce using rule 92 (expresion -> expresionDouble .)
    BOOL            reduce using rule 92 (expresion -> expresionDouble .)
    $end            reduce using rule 92 (expresion -> expresionDouble .)
    LDER            reduce using rule 92 (expresion -> expresionDouble .)


state 166

    (93) expresion -> expresionBool .
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 93 (expresion -> expresionBool .)
    PDER            reduce using rule 93 (expresion -> expresionBool .)
    INT             reduce using rule 93 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 93 (expresion -> expresionBool .)
    NUM             reduce using rule 93 (expresion -> expresionBool .)
    STRINGR         reduce using rule 93 (expresion -> expresionBool .)
    BOOLR           reduce using rule 93 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 93 (expresion -> expresionBool .)
    VAR             reduce using rule 93 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 93 (expresion -> expresionBool .)
    WHILE           reduce using rule 93 (expresion -> expresionBool .)
    DO              reduce using rule 93 (expresion -> expresionBool .)
    IF              reduce using rule 93 (expresion -> expresionBool .)
    ELSE            reduce using rule 93 (expresion -> expresionBool .)
    PRINT           reduce using rule 93 (expresion -> expresionBool .)
    FUNCIONSTDIN    reduce using rule 93 (expresion -> expresionBool .)
    FUNCIONSTDOUT   reduce using rule 93 (expresion -> expresionBool .)
    NOT             reduce using rule 93 (expresion -> expresionBool .)
    ELSEIF          reduce using rule 93 (expresion -> expresionBool .)
    ENTERO          reduce using rule 93 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 93 (expresion -> expresionBool .)
    STRING          reduce using rule 93 (expresion -> expresionBool .)
    BOOL            reduce using rule 93 (expresion -> expresionBool .)
    $end            reduce using rule 93 (expresion -> expresionBool .)
    LDER            reduce using rule 93 (expresion -> expresionBool .)
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 167

    (86) valor -> DOUBLE .
    (125) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 86 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 86 (valor -> DOUBLE .)
    IS              reduce using rule 86 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 86 (valor -> DOUBLE .)
    SUMA            reduce using rule 86 (valor -> DOUBLE .)
    RESTA           reduce using rule 86 (valor -> DOUBLE .)
    MULTI           reduce using rule 86 (valor -> DOUBLE .)
    DIV             reduce using rule 86 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 86 (valor -> DOUBLE .)
    MOD             reduce using rule 86 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 86 (valor -> DOUBLE .)
    PDER            reduce using rule 86 (valor -> DOUBLE .)
    INT             reduce using rule 86 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 86 (valor -> DOUBLE .)
    NUM             reduce using rule 86 (valor -> DOUBLE .)
    STRINGR         reduce using rule 86 (valor -> DOUBLE .)
    BOOLR           reduce using rule 86 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 86 (valor -> DOUBLE .)
    VAR             reduce using rule 86 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 86 (valor -> DOUBLE .)
    WHILE           reduce using rule 86 (valor -> DOUBLE .)
    DO              reduce using rule 86 (valor -> DOUBLE .)
    IF              reduce using rule 86 (valor -> DOUBLE .)
    ELSE            reduce using rule 86 (valor -> DOUBLE .)
    PRINT           reduce using rule 86 (valor -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 86 (valor -> DOUBLE .)
    FUNCIONSTDOUT   reduce using rule 86 (valor -> DOUBLE .)
    NOT             reduce using rule 86 (valor -> DOUBLE .)
    ELSEIF          reduce using rule 86 (valor -> DOUBLE .)
    ENTERO          reduce using rule 86 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 86 (valor -> DOUBLE .)
    STRING          reduce using rule 86 (valor -> DOUBLE .)
    BOOL            reduce using rule 86 (valor -> DOUBLE .)
    $end            reduce using rule 86 (valor -> DOUBLE .)
    LDER            reduce using rule 86 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 125 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 125 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 125 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 125 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 125 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 125 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! ELSEIF          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 125 (valorDouble -> DOUBLE .) ]


state 168

    (87) valor -> STRING .
    (113) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 87 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 87 (valor -> STRING .)
    IS              reduce using rule 87 (valor -> STRING .)
    ISNEGADO        reduce using rule 87 (valor -> STRING .)
    SUMA            reduce using rule 87 (valor -> STRING .)
    RESTA           reduce using rule 87 (valor -> STRING .)
    MULTI           reduce using rule 87 (valor -> STRING .)
    DIV             reduce using rule 87 (valor -> STRING .)
    DIVENTERO       reduce using rule 87 (valor -> STRING .)
    MOD             reduce using rule 87 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 87 (valor -> STRING .)
    PDER            reduce using rule 87 (valor -> STRING .)
    INT             reduce using rule 87 (valor -> STRING .)
    DOUBLER         reduce using rule 87 (valor -> STRING .)
    NUM             reduce using rule 87 (valor -> STRING .)
    STRINGR         reduce using rule 87 (valor -> STRING .)
    BOOLR           reduce using rule 87 (valor -> STRING .)
    DYNAMIC         reduce using rule 87 (valor -> STRING .)
    VAR             reduce using rule 87 (valor -> STRING .)
    VARIABLE        reduce using rule 87 (valor -> STRING .)
    WHILE           reduce using rule 87 (valor -> STRING .)
    DO              reduce using rule 87 (valor -> STRING .)
    IF              reduce using rule 87 (valor -> STRING .)
    ELSE            reduce using rule 87 (valor -> STRING .)
    PRINT           reduce using rule 87 (valor -> STRING .)
    FUNCIONSTDIN    reduce using rule 87 (valor -> STRING .)
    FUNCIONSTDOUT   reduce using rule 87 (valor -> STRING .)
    NOT             reduce using rule 87 (valor -> STRING .)
    ELSEIF          reduce using rule 87 (valor -> STRING .)
    ENTERO          reduce using rule 87 (valor -> STRING .)
    DOUBLE          reduce using rule 87 (valor -> STRING .)
    STRING          reduce using rule 87 (valor -> STRING .)
    BOOL            reduce using rule 87 (valor -> STRING .)
    $end            reduce using rule 87 (valor -> STRING .)
    LDER            reduce using rule 87 (valor -> STRING .)
    CIZQ            reduce using rule 113 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 113 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 113 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 113 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 113 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 113 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 113 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 113 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 113 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 113 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 113 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 113 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 113 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 113 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 113 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 113 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 113 (valorString -> STRING .) ]
  ! FUNCIONSTDIN    [ reduce using rule 113 (valorString -> STRING .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 113 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 113 (valorString -> STRING .) ]
  ! ELSEIF          [ reduce using rule 113 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 113 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 113 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 113 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 113 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 113 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 113 (valorString -> STRING .) ]


state 169

    (107) expresionBool -> comparacionBool .

    AND             reduce using rule 107 (expresionBool -> comparacionBool .)
    OR              reduce using rule 107 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 107 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 107 (expresionBool -> comparacionBool .)
    INT             reduce using rule 107 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 107 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 107 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 107 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 107 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 107 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 107 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 107 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 107 (expresionBool -> comparacionBool .)
    DO              reduce using rule 107 (expresionBool -> comparacionBool .)
    IF              reduce using rule 107 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 107 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 107 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 107 (expresionBool -> comparacionBool .)
    FUNCIONSTDOUT   reduce using rule 107 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 107 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 107 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 107 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 107 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 107 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 107 (expresionBool -> comparacionBool .)
    $end            reduce using rule 107 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 107 (expresionBool -> comparacionBool .)


state 170

    (115) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    INT             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DOUBLER         reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    NUM             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    STRINGR         reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    BOOLR           reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DYNAMIC         reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    VAR             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    VARIABLE        reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    WHILE           reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DO              reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    IF              reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    ELSE            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    PRINT           reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    FUNCIONSTDIN    reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    FUNCIONSTDOUT   reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    NOT             reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    ELSEIF          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    ENTERO          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    DOUBLE          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    STRING          reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    BOOL            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    $end            reduce using rule 115 (valorString -> FUNCIONSTDIN .)
    LDER            reduce using rule 115 (valorString -> FUNCIONSTDIN .)


state 171

    (117) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 117 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 117 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 117 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 117 (valorString -> sentenciaSubstring .)
    INT             reduce using rule 117 (valorString -> sentenciaSubstring .)
    DOUBLER         reduce using rule 117 (valorString -> sentenciaSubstring .)
    NUM             reduce using rule 117 (valorString -> sentenciaSubstring .)
    STRINGR         reduce using rule 117 (valorString -> sentenciaSubstring .)
    BOOLR           reduce using rule 117 (valorString -> sentenciaSubstring .)
    DYNAMIC         reduce using rule 117 (valorString -> sentenciaSubstring .)
    VAR             reduce using rule 117 (valorString -> sentenciaSubstring .)
    VARIABLE        reduce using rule 117 (valorString -> sentenciaSubstring .)
    WHILE           reduce using rule 117 (valorString -> sentenciaSubstring .)
    DO              reduce using rule 117 (valorString -> sentenciaSubstring .)
    IF              reduce using rule 117 (valorString -> sentenciaSubstring .)
    ELSE            reduce using rule 117 (valorString -> sentenciaSubstring .)
    PRINT           reduce using rule 117 (valorString -> sentenciaSubstring .)
    FUNCIONSTDIN    reduce using rule 117 (valorString -> sentenciaSubstring .)
    FUNCIONSTDOUT   reduce using rule 117 (valorString -> sentenciaSubstring .)
    NOT             reduce using rule 117 (valorString -> sentenciaSubstring .)
    ELSEIF          reduce using rule 117 (valorString -> sentenciaSubstring .)
    ENTERO          reduce using rule 117 (valorString -> sentenciaSubstring .)
    DOUBLE          reduce using rule 117 (valorString -> sentenciaSubstring .)
    STRING          reduce using rule 117 (valorString -> sentenciaSubstring .)
    BOOL            reduce using rule 117 (valorString -> sentenciaSubstring .)
    $end            reduce using rule 117 (valorString -> sentenciaSubstring .)
    LDER            reduce using rule 117 (valorString -> sentenciaSubstring .)


state 172

    (65) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 157
    ENTERO          shift and go to state 158
    VARIABLE        shift and go to state 180

    expresionDouble                shift and go to state 230
    valorDouble                    shift and go to state 156
    valorInt                       shift and go to state 139

state 173

    (66) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 157
    ENTERO          shift and go to state 158
    VARIABLE        shift and go to state 180

    expresionDouble                shift and go to state 231
    valorDouble                    shift and go to state 156
    valorInt                       shift and go to state 139

state 174

    (67) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 185
    VARIABLE        shift and go to state 186
    FUNCIONSTDIN    shift and go to state 170

    expresionString                shift and go to state 232
    valorString                    shift and go to state 31
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 175

    (68) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 44
    BOOL            shift and go to state 47
    NOT             shift and go to state 41
    ENTERO          shift and go to state 140
    STRING          shift and go to state 141

    expresionBool                  shift and go to state 233
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    valor                          shift and go to state 138
    valorInt                       shift and go to state 139

state 176

    (69) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 140
    VARIABLE        shift and go to state 160
    DOUBLE          shift and go to state 167
    STRING          shift and go to state 168
    FUNCIONSTDIN    shift and go to state 170
    BOOL            shift and go to state 47
    NOT             shift and go to state 41

    expresion                      shift and go to state 234
    valor                          shift and go to state 162
    expresionString                shift and go to state 163
    expresionInt                   shift and go to state 164
    expresionDouble                shift and go to state 165
    expresionBool                  shift and go to state 166
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 177

    (70) asignacion -> VAR VARIABLE IGUAL . expresion
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 140
    VARIABLE        shift and go to state 160
    DOUBLE          shift and go to state 167
    STRING          shift and go to state 168
    FUNCIONSTDIN    shift and go to state 170
    BOOL            shift and go to state 47
    NOT             shift and go to state 41

    expresion                      shift and go to state 235
    valor                          shift and go to state 162
    expresionString                shift and go to state 163
    expresionInt                   shift and go to state 164
    expresionDouble                shift and go to state 165
    expresionBool                  shift and go to state 166
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    expresionIndexString           shift and go to state 46
    sentenciaSubstring             shift and go to state 171

state 178

    (123) expresionInt -> valorInt . operadorMat expresionInt
    (124) expresionInt -> valorInt .
    (129) operadorMat -> . SUMA
    (130) operadorMat -> . RESTA
    (131) operadorMat -> . MULTI
    (132) operadorMat -> . DIV
    (133) operadorMat -> . DIVENTERO
    (134) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 124 (expresionInt -> valorInt .)
    INT             reduce using rule 124 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 124 (expresionInt -> valorInt .)
    NUM             reduce using rule 124 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 124 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 124 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 124 (expresionInt -> valorInt .)
    VAR             reduce using rule 124 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 124 (expresionInt -> valorInt .)
    WHILE           reduce using rule 124 (expresionInt -> valorInt .)
    DO              reduce using rule 124 (expresionInt -> valorInt .)
    IF              reduce using rule 124 (expresionInt -> valorInt .)
    ELSE            reduce using rule 124 (expresionInt -> valorInt .)
    PRINT           reduce using rule 124 (expresionInt -> valorInt .)
    FUNCIONSTDIN    reduce using rule 124 (expresionInt -> valorInt .)
    FUNCIONSTDOUT   reduce using rule 124 (expresionInt -> valorInt .)
    NOT             reduce using rule 124 (expresionInt -> valorInt .)
    ELSEIF          reduce using rule 124 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 124 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 124 (expresionInt -> valorInt .)
    STRING          reduce using rule 124 (expresionInt -> valorInt .)
    BOOL            reduce using rule 124 (expresionInt -> valorInt .)
    $end            reduce using rule 124 (expresionInt -> valorInt .)
    LDER            reduce using rule 124 (expresionInt -> valorInt .)
    PDER            reduce using rule 124 (expresionInt -> valorInt .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTI           shift and go to state 91
    DIV             shift and go to state 92
    DIVENTERO       shift and go to state 93
    MOD             shift and go to state 94

    operadorMat                    shift and go to state 88

state 179

    (123) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    PRINT           reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    FUNCIONSTDIN    reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    FUNCIONSTDOUT   reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    NOT             reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSEIF          reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 123 (expresionInt -> valorInt operadorMat expresionInt .)


state 180

    (122) valorInt -> VARIABLE .

    SUMA            reduce using rule 122 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 122 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 122 (valorInt -> VARIABLE .)
    DIV             reduce using rule 122 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 122 (valorInt -> VARIABLE .)
    MOD             reduce using rule 122 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 122 (valorInt -> VARIABLE .)
    INT             reduce using rule 122 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 122 (valorInt -> VARIABLE .)
    NUM             reduce using rule 122 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 122 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 122 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 122 (valorInt -> VARIABLE .)
    VAR             reduce using rule 122 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 122 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 122 (valorInt -> VARIABLE .)
    DO              reduce using rule 122 (valorInt -> VARIABLE .)
    IF              reduce using rule 122 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 122 (valorInt -> VARIABLE .)
    PRINT           reduce using rule 122 (valorInt -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 122 (valorInt -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 122 (valorInt -> VARIABLE .)
    NOT             reduce using rule 122 (valorInt -> VARIABLE .)
    ELSEIF          reduce using rule 122 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 122 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 122 (valorInt -> VARIABLE .)
    STRING          reduce using rule 122 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 122 (valorInt -> VARIABLE .)
    $end            reduce using rule 122 (valorInt -> VARIABLE .)
    LDER            reduce using rule 122 (valorInt -> VARIABLE .)
    PDER            reduce using rule 122 (valorInt -> VARIABLE .)
    AND             reduce using rule 122 (valorInt -> VARIABLE .)
    OR              reduce using rule 122 (valorInt -> VARIABLE .)


state 181

    (127) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PRINT           reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NOT             reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSEIF          reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 127 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 182

    (101) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    INT             reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NUM             reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRINGR         reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOLR           reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VAR             reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    WHILE           reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DO              reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    IF              reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSE            reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PRINT           reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NOT             reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSEIF          reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ENTERO          reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRING          reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOL            reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    $end            reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    LDER            reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 101 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 183

    (104) expresionBool -> valorDouble comparadorMat VARIABLE .
    (122) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    INT             reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NUM             reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRINGR         reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOLR           reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VAR             reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    WHILE           reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DO              reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    IF              reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSE            reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PRINT           reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    FUNCIONSTDIN    reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NOT             reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSEIF          reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ENTERO          reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRING          reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOL            reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    $end            reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    LDER            reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 104 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 122 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 122 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 122 (valorInt -> VARIABLE .)
    DIV             reduce using rule 122 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 122 (valorInt -> VARIABLE .)
    MOD             reduce using rule 122 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]


state 184

    (118) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    INT             reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    DOUBLER         reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    NUM             reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    STRINGR         reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    BOOLR           reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    DYNAMIC         reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    VAR             reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    VARIABLE        reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    WHILE           reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    DO              reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    IF              reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    ELSE            reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    PRINT           reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    FUNCIONSTDIN    reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    FUNCIONSTDOUT   reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    NOT             reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    ELSEIF          reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    ENTERO          reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    DOUBLE          reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    STRING          reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    BOOL            reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    $end            reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    LDER            reduce using rule 118 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 118 (expresionString -> valorString SUMA expresionString .)


state 185

    (113) valorString -> STRING .

    SUMA            reduce using rule 113 (valorString -> STRING .)
    CIZQ            reduce using rule 113 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 113 (valorString -> STRING .)
    INT             reduce using rule 113 (valorString -> STRING .)
    DOUBLER         reduce using rule 113 (valorString -> STRING .)
    NUM             reduce using rule 113 (valorString -> STRING .)
    STRINGR         reduce using rule 113 (valorString -> STRING .)
    BOOLR           reduce using rule 113 (valorString -> STRING .)
    DYNAMIC         reduce using rule 113 (valorString -> STRING .)
    VAR             reduce using rule 113 (valorString -> STRING .)
    VARIABLE        reduce using rule 113 (valorString -> STRING .)
    WHILE           reduce using rule 113 (valorString -> STRING .)
    DO              reduce using rule 113 (valorString -> STRING .)
    IF              reduce using rule 113 (valorString -> STRING .)
    ELSE            reduce using rule 113 (valorString -> STRING .)
    PRINT           reduce using rule 113 (valorString -> STRING .)
    FUNCIONSTDIN    reduce using rule 113 (valorString -> STRING .)
    FUNCIONSTDOUT   reduce using rule 113 (valorString -> STRING .)
    NOT             reduce using rule 113 (valorString -> STRING .)
    ELSEIF          reduce using rule 113 (valorString -> STRING .)
    ENTERO          reduce using rule 113 (valorString -> STRING .)
    DOUBLE          reduce using rule 113 (valorString -> STRING .)
    STRING          reduce using rule 113 (valorString -> STRING .)
    BOOL            reduce using rule 113 (valorString -> STRING .)
    $end            reduce using rule 113 (valorString -> STRING .)
    LDER            reduce using rule 113 (valorString -> STRING .)
    PDER            reduce using rule 113 (valorString -> STRING .)


state 186

    (114) valorString -> VARIABLE .
    (97) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 114 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 114 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 114 (valorString -> VARIABLE .)
    INT             reduce using rule 114 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 114 (valorString -> VARIABLE .)
    NUM             reduce using rule 114 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 114 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 114 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 114 (valorString -> VARIABLE .)
    VAR             reduce using rule 114 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 114 (valorString -> VARIABLE .)
    WHILE           reduce using rule 114 (valorString -> VARIABLE .)
    DO              reduce using rule 114 (valorString -> VARIABLE .)
    IF              reduce using rule 114 (valorString -> VARIABLE .)
    ELSE            reduce using rule 114 (valorString -> VARIABLE .)
    PRINT           reduce using rule 114 (valorString -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 114 (valorString -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 114 (valorString -> VARIABLE .)
    NOT             reduce using rule 114 (valorString -> VARIABLE .)
    ELSEIF          reduce using rule 114 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 114 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 114 (valorString -> VARIABLE .)
    STRING          reduce using rule 114 (valorString -> VARIABLE .)
    BOOL            reduce using rule 114 (valorString -> VARIABLE .)
    $end            reduce using rule 114 (valorString -> VARIABLE .)
    LDER            reduce using rule 114 (valorString -> VARIABLE .)
    PDER            reduce using rule 114 (valorString -> VARIABLE .)
    SUBSTRING       shift and go to state 74


state 187

    (120) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 236


state 188

    (108) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 108 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 108 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 108 (expresionBool -> valor IS objeto .)
    INT             reduce using rule 108 (expresionBool -> valor IS objeto .)
    DOUBLER         reduce using rule 108 (expresionBool -> valor IS objeto .)
    NUM             reduce using rule 108 (expresionBool -> valor IS objeto .)
    STRINGR         reduce using rule 108 (expresionBool -> valor IS objeto .)
    BOOLR           reduce using rule 108 (expresionBool -> valor IS objeto .)
    DYNAMIC         reduce using rule 108 (expresionBool -> valor IS objeto .)
    VAR             reduce using rule 108 (expresionBool -> valor IS objeto .)
    VARIABLE        reduce using rule 108 (expresionBool -> valor IS objeto .)
    WHILE           reduce using rule 108 (expresionBool -> valor IS objeto .)
    DO              reduce using rule 108 (expresionBool -> valor IS objeto .)
    IF              reduce using rule 108 (expresionBool -> valor IS objeto .)
    ELSE            reduce using rule 108 (expresionBool -> valor IS objeto .)
    PRINT           reduce using rule 108 (expresionBool -> valor IS objeto .)
    FUNCIONSTDIN    reduce using rule 108 (expresionBool -> valor IS objeto .)
    FUNCIONSTDOUT   reduce using rule 108 (expresionBool -> valor IS objeto .)
    NOT             reduce using rule 108 (expresionBool -> valor IS objeto .)
    ELSEIF          reduce using rule 108 (expresionBool -> valor IS objeto .)
    ENTERO          reduce using rule 108 (expresionBool -> valor IS objeto .)
    DOUBLE          reduce using rule 108 (expresionBool -> valor IS objeto .)
    STRING          reduce using rule 108 (expresionBool -> valor IS objeto .)
    BOOL            reduce using rule 108 (expresionBool -> valor IS objeto .)
    $end            reduce using rule 108 (expresionBool -> valor IS objeto .)
    LDER            reduce using rule 108 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 108 (expresionBool -> valor IS objeto .)


state 189

    (143) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 143 (objeto -> STRINGR .)
    AND             reduce using rule 143 (objeto -> STRINGR .)
    OR              reduce using rule 143 (objeto -> STRINGR .)
    INT             reduce using rule 143 (objeto -> STRINGR .)
    DOUBLER         reduce using rule 143 (objeto -> STRINGR .)
    NUM             reduce using rule 143 (objeto -> STRINGR .)
    STRINGR         reduce using rule 143 (objeto -> STRINGR .)
    BOOLR           reduce using rule 143 (objeto -> STRINGR .)
    DYNAMIC         reduce using rule 143 (objeto -> STRINGR .)
    VAR             reduce using rule 143 (objeto -> STRINGR .)
    VARIABLE        reduce using rule 143 (objeto -> STRINGR .)
    WHILE           reduce using rule 143 (objeto -> STRINGR .)
    DO              reduce using rule 143 (objeto -> STRINGR .)
    IF              reduce using rule 143 (objeto -> STRINGR .)
    ELSE            reduce using rule 143 (objeto -> STRINGR .)
    PRINT           reduce using rule 143 (objeto -> STRINGR .)
    FUNCIONSTDIN    reduce using rule 143 (objeto -> STRINGR .)
    FUNCIONSTDOUT   reduce using rule 143 (objeto -> STRINGR .)
    NOT             reduce using rule 143 (objeto -> STRINGR .)
    ELSEIF          reduce using rule 143 (objeto -> STRINGR .)
    ENTERO          reduce using rule 143 (objeto -> STRINGR .)
    DOUBLE          reduce using rule 143 (objeto -> STRINGR .)
    STRING          reduce using rule 143 (objeto -> STRINGR .)
    BOOL            reduce using rule 143 (objeto -> STRINGR .)
    $end            reduce using rule 143 (objeto -> STRINGR .)
    LDER            reduce using rule 143 (objeto -> STRINGR .)
    PDER            reduce using rule 143 (objeto -> STRINGR .)


state 190

    (144) objeto -> INT .

    PUNTOYCOMA      reduce using rule 144 (objeto -> INT .)
    AND             reduce using rule 144 (objeto -> INT .)
    OR              reduce using rule 144 (objeto -> INT .)
    INT             reduce using rule 144 (objeto -> INT .)
    DOUBLER         reduce using rule 144 (objeto -> INT .)
    NUM             reduce using rule 144 (objeto -> INT .)
    STRINGR         reduce using rule 144 (objeto -> INT .)
    BOOLR           reduce using rule 144 (objeto -> INT .)
    DYNAMIC         reduce using rule 144 (objeto -> INT .)
    VAR             reduce using rule 144 (objeto -> INT .)
    VARIABLE        reduce using rule 144 (objeto -> INT .)
    WHILE           reduce using rule 144 (objeto -> INT .)
    DO              reduce using rule 144 (objeto -> INT .)
    IF              reduce using rule 144 (objeto -> INT .)
    ELSE            reduce using rule 144 (objeto -> INT .)
    PRINT           reduce using rule 144 (objeto -> INT .)
    FUNCIONSTDIN    reduce using rule 144 (objeto -> INT .)
    FUNCIONSTDOUT   reduce using rule 144 (objeto -> INT .)
    NOT             reduce using rule 144 (objeto -> INT .)
    ELSEIF          reduce using rule 144 (objeto -> INT .)
    ENTERO          reduce using rule 144 (objeto -> INT .)
    DOUBLE          reduce using rule 144 (objeto -> INT .)
    STRING          reduce using rule 144 (objeto -> INT .)
    BOOL            reduce using rule 144 (objeto -> INT .)
    $end            reduce using rule 144 (objeto -> INT .)
    LDER            reduce using rule 144 (objeto -> INT .)
    PDER            reduce using rule 144 (objeto -> INT .)


state 191

    (145) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 145 (objeto -> DOUBLER .)
    AND             reduce using rule 145 (objeto -> DOUBLER .)
    OR              reduce using rule 145 (objeto -> DOUBLER .)
    INT             reduce using rule 145 (objeto -> DOUBLER .)
    DOUBLER         reduce using rule 145 (objeto -> DOUBLER .)
    NUM             reduce using rule 145 (objeto -> DOUBLER .)
    STRINGR         reduce using rule 145 (objeto -> DOUBLER .)
    BOOLR           reduce using rule 145 (objeto -> DOUBLER .)
    DYNAMIC         reduce using rule 145 (objeto -> DOUBLER .)
    VAR             reduce using rule 145 (objeto -> DOUBLER .)
    VARIABLE        reduce using rule 145 (objeto -> DOUBLER .)
    WHILE           reduce using rule 145 (objeto -> DOUBLER .)
    DO              reduce using rule 145 (objeto -> DOUBLER .)
    IF              reduce using rule 145 (objeto -> DOUBLER .)
    ELSE            reduce using rule 145 (objeto -> DOUBLER .)
    PRINT           reduce using rule 145 (objeto -> DOUBLER .)
    FUNCIONSTDIN    reduce using rule 145 (objeto -> DOUBLER .)
    FUNCIONSTDOUT   reduce using rule 145 (objeto -> DOUBLER .)
    NOT             reduce using rule 145 (objeto -> DOUBLER .)
    ELSEIF          reduce using rule 145 (objeto -> DOUBLER .)
    ENTERO          reduce using rule 145 (objeto -> DOUBLER .)
    DOUBLE          reduce using rule 145 (objeto -> DOUBLER .)
    STRING          reduce using rule 145 (objeto -> DOUBLER .)
    BOOL            reduce using rule 145 (objeto -> DOUBLER .)
    $end            reduce using rule 145 (objeto -> DOUBLER .)
    LDER            reduce using rule 145 (objeto -> DOUBLER .)
    PDER            reduce using rule 145 (objeto -> DOUBLER .)


state 192

    (146) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 146 (objeto -> NUM .)
    AND             reduce using rule 146 (objeto -> NUM .)
    OR              reduce using rule 146 (objeto -> NUM .)
    INT             reduce using rule 146 (objeto -> NUM .)
    DOUBLER         reduce using rule 146 (objeto -> NUM .)
    NUM             reduce using rule 146 (objeto -> NUM .)
    STRINGR         reduce using rule 146 (objeto -> NUM .)
    BOOLR           reduce using rule 146 (objeto -> NUM .)
    DYNAMIC         reduce using rule 146 (objeto -> NUM .)
    VAR             reduce using rule 146 (objeto -> NUM .)
    VARIABLE        reduce using rule 146 (objeto -> NUM .)
    WHILE           reduce using rule 146 (objeto -> NUM .)
    DO              reduce using rule 146 (objeto -> NUM .)
    IF              reduce using rule 146 (objeto -> NUM .)
    ELSE            reduce using rule 146 (objeto -> NUM .)
    PRINT           reduce using rule 146 (objeto -> NUM .)
    FUNCIONSTDIN    reduce using rule 146 (objeto -> NUM .)
    FUNCIONSTDOUT   reduce using rule 146 (objeto -> NUM .)
    NOT             reduce using rule 146 (objeto -> NUM .)
    ELSEIF          reduce using rule 146 (objeto -> NUM .)
    ENTERO          reduce using rule 146 (objeto -> NUM .)
    DOUBLE          reduce using rule 146 (objeto -> NUM .)
    STRING          reduce using rule 146 (objeto -> NUM .)
    BOOL            reduce using rule 146 (objeto -> NUM .)
    $end            reduce using rule 146 (objeto -> NUM .)
    LDER            reduce using rule 146 (objeto -> NUM .)
    PDER            reduce using rule 146 (objeto -> NUM .)


state 193

    (147) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 147 (objeto -> VAR .)
    AND             reduce using rule 147 (objeto -> VAR .)
    OR              reduce using rule 147 (objeto -> VAR .)
    INT             reduce using rule 147 (objeto -> VAR .)
    DOUBLER         reduce using rule 147 (objeto -> VAR .)
    NUM             reduce using rule 147 (objeto -> VAR .)
    STRINGR         reduce using rule 147 (objeto -> VAR .)
    BOOLR           reduce using rule 147 (objeto -> VAR .)
    DYNAMIC         reduce using rule 147 (objeto -> VAR .)
    VAR             reduce using rule 147 (objeto -> VAR .)
    VARIABLE        reduce using rule 147 (objeto -> VAR .)
    WHILE           reduce using rule 147 (objeto -> VAR .)
    DO              reduce using rule 147 (objeto -> VAR .)
    IF              reduce using rule 147 (objeto -> VAR .)
    ELSE            reduce using rule 147 (objeto -> VAR .)
    PRINT           reduce using rule 147 (objeto -> VAR .)
    FUNCIONSTDIN    reduce using rule 147 (objeto -> VAR .)
    FUNCIONSTDOUT   reduce using rule 147 (objeto -> VAR .)
    NOT             reduce using rule 147 (objeto -> VAR .)
    ELSEIF          reduce using rule 147 (objeto -> VAR .)
    ENTERO          reduce using rule 147 (objeto -> VAR .)
    DOUBLE          reduce using rule 147 (objeto -> VAR .)
    STRING          reduce using rule 147 (objeto -> VAR .)
    BOOL            reduce using rule 147 (objeto -> VAR .)
    $end            reduce using rule 147 (objeto -> VAR .)
    LDER            reduce using rule 147 (objeto -> VAR .)
    PDER            reduce using rule 147 (objeto -> VAR .)


state 194

    (148) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 148 (objeto -> DYNAMIC .)
    AND             reduce using rule 148 (objeto -> DYNAMIC .)
    OR              reduce using rule 148 (objeto -> DYNAMIC .)
    INT             reduce using rule 148 (objeto -> DYNAMIC .)
    DOUBLER         reduce using rule 148 (objeto -> DYNAMIC .)
    NUM             reduce using rule 148 (objeto -> DYNAMIC .)
    STRINGR         reduce using rule 148 (objeto -> DYNAMIC .)
    BOOLR           reduce using rule 148 (objeto -> DYNAMIC .)
    DYNAMIC         reduce using rule 148 (objeto -> DYNAMIC .)
    VAR             reduce using rule 148 (objeto -> DYNAMIC .)
    VARIABLE        reduce using rule 148 (objeto -> DYNAMIC .)
    WHILE           reduce using rule 148 (objeto -> DYNAMIC .)
    DO              reduce using rule 148 (objeto -> DYNAMIC .)
    IF              reduce using rule 148 (objeto -> DYNAMIC .)
    ELSE            reduce using rule 148 (objeto -> DYNAMIC .)
    PRINT           reduce using rule 148 (objeto -> DYNAMIC .)
    FUNCIONSTDIN    reduce using rule 148 (objeto -> DYNAMIC .)
    FUNCIONSTDOUT   reduce using rule 148 (objeto -> DYNAMIC .)
    NOT             reduce using rule 148 (objeto -> DYNAMIC .)
    ELSEIF          reduce using rule 148 (objeto -> DYNAMIC .)
    ENTERO          reduce using rule 148 (objeto -> DYNAMIC .)
    DOUBLE          reduce using rule 148 (objeto -> DYNAMIC .)
    STRING          reduce using rule 148 (objeto -> DYNAMIC .)
    BOOL            reduce using rule 148 (objeto -> DYNAMIC .)
    $end            reduce using rule 148 (objeto -> DYNAMIC .)
    LDER            reduce using rule 148 (objeto -> DYNAMIC .)
    PDER            reduce using rule 148 (objeto -> DYNAMIC .)


state 195

    (149) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 149 (objeto -> LIST .)
    AND             reduce using rule 149 (objeto -> LIST .)
    OR              reduce using rule 149 (objeto -> LIST .)
    INT             reduce using rule 149 (objeto -> LIST .)
    DOUBLER         reduce using rule 149 (objeto -> LIST .)
    NUM             reduce using rule 149 (objeto -> LIST .)
    STRINGR         reduce using rule 149 (objeto -> LIST .)
    BOOLR           reduce using rule 149 (objeto -> LIST .)
    DYNAMIC         reduce using rule 149 (objeto -> LIST .)
    VAR             reduce using rule 149 (objeto -> LIST .)
    VARIABLE        reduce using rule 149 (objeto -> LIST .)
    WHILE           reduce using rule 149 (objeto -> LIST .)
    DO              reduce using rule 149 (objeto -> LIST .)
    IF              reduce using rule 149 (objeto -> LIST .)
    ELSE            reduce using rule 149 (objeto -> LIST .)
    PRINT           reduce using rule 149 (objeto -> LIST .)
    FUNCIONSTDIN    reduce using rule 149 (objeto -> LIST .)
    FUNCIONSTDOUT   reduce using rule 149 (objeto -> LIST .)
    NOT             reduce using rule 149 (objeto -> LIST .)
    ELSEIF          reduce using rule 149 (objeto -> LIST .)
    ENTERO          reduce using rule 149 (objeto -> LIST .)
    DOUBLE          reduce using rule 149 (objeto -> LIST .)
    STRING          reduce using rule 149 (objeto -> LIST .)
    BOOL            reduce using rule 149 (objeto -> LIST .)
    $end            reduce using rule 149 (objeto -> LIST .)
    LDER            reduce using rule 149 (objeto -> LIST .)
    PDER            reduce using rule 149 (objeto -> LIST .)


state 196

    (150) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 150 (objeto -> BOOL .)
    AND             reduce using rule 150 (objeto -> BOOL .)
    OR              reduce using rule 150 (objeto -> BOOL .)
    INT             reduce using rule 150 (objeto -> BOOL .)
    DOUBLER         reduce using rule 150 (objeto -> BOOL .)
    NUM             reduce using rule 150 (objeto -> BOOL .)
    STRINGR         reduce using rule 150 (objeto -> BOOL .)
    BOOLR           reduce using rule 150 (objeto -> BOOL .)
    DYNAMIC         reduce using rule 150 (objeto -> BOOL .)
    VAR             reduce using rule 150 (objeto -> BOOL .)
    VARIABLE        reduce using rule 150 (objeto -> BOOL .)
    WHILE           reduce using rule 150 (objeto -> BOOL .)
    DO              reduce using rule 150 (objeto -> BOOL .)
    IF              reduce using rule 150 (objeto -> BOOL .)
    ELSE            reduce using rule 150 (objeto -> BOOL .)
    PRINT           reduce using rule 150 (objeto -> BOOL .)
    FUNCIONSTDIN    reduce using rule 150 (objeto -> BOOL .)
    FUNCIONSTDOUT   reduce using rule 150 (objeto -> BOOL .)
    NOT             reduce using rule 150 (objeto -> BOOL .)
    ELSEIF          reduce using rule 150 (objeto -> BOOL .)
    ENTERO          reduce using rule 150 (objeto -> BOOL .)
    DOUBLE          reduce using rule 150 (objeto -> BOOL .)
    STRING          reduce using rule 150 (objeto -> BOOL .)
    BOOL            reduce using rule 150 (objeto -> BOOL .)
    $end            reduce using rule 150 (objeto -> BOOL .)
    LDER            reduce using rule 150 (objeto -> BOOL .)
    PDER            reduce using rule 150 (objeto -> BOOL .)


state 197

    (151) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 151 (objeto -> MAP .)
    AND             reduce using rule 151 (objeto -> MAP .)
    OR              reduce using rule 151 (objeto -> MAP .)
    INT             reduce using rule 151 (objeto -> MAP .)
    DOUBLER         reduce using rule 151 (objeto -> MAP .)
    NUM             reduce using rule 151 (objeto -> MAP .)
    STRINGR         reduce using rule 151 (objeto -> MAP .)
    BOOLR           reduce using rule 151 (objeto -> MAP .)
    DYNAMIC         reduce using rule 151 (objeto -> MAP .)
    VAR             reduce using rule 151 (objeto -> MAP .)
    VARIABLE        reduce using rule 151 (objeto -> MAP .)
    WHILE           reduce using rule 151 (objeto -> MAP .)
    DO              reduce using rule 151 (objeto -> MAP .)
    IF              reduce using rule 151 (objeto -> MAP .)
    ELSE            reduce using rule 151 (objeto -> MAP .)
    PRINT           reduce using rule 151 (objeto -> MAP .)
    FUNCIONSTDIN    reduce using rule 151 (objeto -> MAP .)
    FUNCIONSTDOUT   reduce using rule 151 (objeto -> MAP .)
    NOT             reduce using rule 151 (objeto -> MAP .)
    ELSEIF          reduce using rule 151 (objeto -> MAP .)
    ENTERO          reduce using rule 151 (objeto -> MAP .)
    DOUBLE          reduce using rule 151 (objeto -> MAP .)
    STRING          reduce using rule 151 (objeto -> MAP .)
    BOOL            reduce using rule 151 (objeto -> MAP .)
    $end            reduce using rule 151 (objeto -> MAP .)
    LDER            reduce using rule 151 (objeto -> MAP .)
    PDER            reduce using rule 151 (objeto -> MAP .)


state 198

    (152) objeto -> SET .

    PUNTOYCOMA      reduce using rule 152 (objeto -> SET .)
    AND             reduce using rule 152 (objeto -> SET .)
    OR              reduce using rule 152 (objeto -> SET .)
    INT             reduce using rule 152 (objeto -> SET .)
    DOUBLER         reduce using rule 152 (objeto -> SET .)
    NUM             reduce using rule 152 (objeto -> SET .)
    STRINGR         reduce using rule 152 (objeto -> SET .)
    BOOLR           reduce using rule 152 (objeto -> SET .)
    DYNAMIC         reduce using rule 152 (objeto -> SET .)
    VAR             reduce using rule 152 (objeto -> SET .)
    VARIABLE        reduce using rule 152 (objeto -> SET .)
    WHILE           reduce using rule 152 (objeto -> SET .)
    DO              reduce using rule 152 (objeto -> SET .)
    IF              reduce using rule 152 (objeto -> SET .)
    ELSE            reduce using rule 152 (objeto -> SET .)
    PRINT           reduce using rule 152 (objeto -> SET .)
    FUNCIONSTDIN    reduce using rule 152 (objeto -> SET .)
    FUNCIONSTDOUT   reduce using rule 152 (objeto -> SET .)
    NOT             reduce using rule 152 (objeto -> SET .)
    ELSEIF          reduce using rule 152 (objeto -> SET .)
    ENTERO          reduce using rule 152 (objeto -> SET .)
    DOUBLE          reduce using rule 152 (objeto -> SET .)
    STRING          reduce using rule 152 (objeto -> SET .)
    BOOL            reduce using rule 152 (objeto -> SET .)
    $end            reduce using rule 152 (objeto -> SET .)
    LDER            reduce using rule 152 (objeto -> SET .)
    PDER            reduce using rule 152 (objeto -> SET .)


state 199

    (109) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    INT             reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLER         reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    NUM             reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    STRINGR         reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    BOOLR           reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    DYNAMIC         reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    VAR             reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    VARIABLE        reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    WHILE           reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    DO              reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    IF              reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    ELSE            reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    PRINT           reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    FUNCIONSTDIN    reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    FUNCIONSTDOUT   reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    NOT             reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    ELSEIF          reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    ENTERO          reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLE          reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    STRING          reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    BOOL            reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    $end            reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    LDER            reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 109 (expresionBool -> valor ISNEGADO objeto .)


state 200

    (88) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 88 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 88 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 88 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 88 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 88 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 88 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 88 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 88 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 88 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 88 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 88 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 88 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 88 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 88 (expresion -> valor operadorMat expresion .)
    FUNCIONSTDIN    reduce using rule 88 (expresion -> valor operadorMat expresion .)
    FUNCIONSTDOUT   reduce using rule 88 (expresion -> valor operadorMat expresion .)
    NOT             reduce using rule 88 (expresion -> valor operadorMat expresion .)
    ELSEIF          reduce using rule 88 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 88 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 88 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 88 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 88 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 88 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 88 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 88 (expresion -> valor operadorMat expresion .)


state 201

    (94) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

    PDER            shift and go to state 237
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 202

    (96) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 238


state 203

    (78) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (79) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

    PDER            shift and go to state 239
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 204

    (81) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 240


state 205

    (43) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    PRINT           reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    NOT             reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSEIF          reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 43 (algoritmo -> asignacion PUNTOYCOMA .)


state 206

    (44) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    PRINT           reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    NOT             reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSEIF          reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 44 (algoritmo -> expresionInt PUNTOYCOMA .)


state 207

    (45) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PRINT           reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NOT             reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSEIF          reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 45 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 208

    (46) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    PRINT           reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    NOT             reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSEIF          reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 46 (algoritmo -> expresionString PUNTOYCOMA .)


state 209

    (47) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    PRINT           reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    NOT             reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 47 (algoritmo -> expresionBool PUNTOYCOMA .)


state 210

    (50) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PRINT           reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NOT             reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 50 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 211

    (51) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PRINT           reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NOT             reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 51 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 212

    (52) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PRINT           reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NOT             reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSEIF          reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 52 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 213

    (54) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    PRINT           reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NOT             reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSEIF          reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 54 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 214

    (56) algoritmo -> imprimir PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLER         reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    NUM             reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    STRINGR         reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOLR           reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    DYNAMIC         reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    VAR             reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    VARIABLE        reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    DO              reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    PRINT           reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    NOT             reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSEIF          reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    ENTERO          reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLE          reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    STRING          reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOL            reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 56 (algoritmo -> imprimir PUNTOYCOMA .)


state 215

    (57) algoritmo -> funcionStdin PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    INT             reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DOUBLER         reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    NUM             reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    STRINGR         reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    BOOLR           reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DYNAMIC         reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    VAR             reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    VARIABLE        reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    WHILE           reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DO              reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    IF              reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ELSE            reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    PRINT           reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    NOT             reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ELSEIF          reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ENTERO          reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DOUBLE          reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    STRING          reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    BOOL            reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    $end            reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 57 (algoritmo -> funcionStdin PUNTOYCOMA .)


state 216

    (58) algoritmo -> funcionStdout PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    INT             reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DOUBLER         reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    NUM             reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    STRINGR         reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    BOOLR           reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DYNAMIC         reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    VAR             reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    VARIABLE        reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    WHILE           reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DO              reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    IF              reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    ELSE            reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    PRINT           reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    NOT             reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    ELSEIF          reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    ENTERO          reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DOUBLE          reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    STRING          reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    BOOL            reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    $end            reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 58 (algoritmo -> funcionStdout PUNTOYCOMA .)


state 217

    (59) algoritmo -> negacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    NUM             reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    VAR             reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    DO              reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    IF              reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    NOT             reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRING          reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    $end            reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 59 (algoritmo -> negacionBool PUNTOYCOMA .)


state 218

    (60) algoritmo -> comparacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    INT             reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NUM             reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VAR             reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DO              reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    IF              reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NOT             reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRING          reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    $end            reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 60 (algoritmo -> comparacionBool PUNTOYCOMA .)


state 219

    (62) algoritmo -> sentenciaElseIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    INT             reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    NUM             reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    STRINGR         reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    BOOLR           reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    VAR             reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    WHILE           reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DO              reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    IF              reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ELSE            reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    PRINT           reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    NOT             reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ELSEIF          reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ENTERO          reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    STRING          reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    BOOL            reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    $end            reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 62 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)


state 220

    (63) algoritmo -> sentenciaSubstring PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    INT             reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    DOUBLER         reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    NUM             reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    STRINGR         reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    BOOLR           reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    DYNAMIC         reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    VAR             reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    WHILE           reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    DO              reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    IF              reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    ELSE            reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    PRINT           reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    NOT             reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    ELSEIF          reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    ENTERO          reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    DOUBLE          reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    STRING          reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    BOOL            reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    $end            reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 63 (algoritmo -> sentenciaSubstring PUNTOYCOMA .)


state 221

    (73) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 241


state 222

    (74) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 242


state 223

    (72) asignacionSimple -> VARIABLE . IGUAL expresion
    (85) valor -> VARIABLE .
    (102) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (103) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (114) valorString -> VARIABLE .
    (122) valorInt -> VARIABLE .
    (100) valorBool -> VARIABLE .
    (97) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> VARIABLE . SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (135) comparadorMat -> . DIGUAL
    (136) comparadorMat -> . NOIGUAL
    (137) comparadorMat -> . MAYOR
    (138) comparadorMat -> . MENOR
    (139) comparadorMat -> . MAYIGUAL
    (140) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 75
    IS              reduce using rule 85 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 85 (valor -> VARIABLE .)
    SUMA            reduce using rule 85 (valor -> VARIABLE .)
    RESTA           reduce using rule 85 (valor -> VARIABLE .)
    MULTI           reduce using rule 85 (valor -> VARIABLE .)
    DIV             reduce using rule 85 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 85 (valor -> VARIABLE .)
    MOD             reduce using rule 85 (valor -> VARIABLE .)
    PDER            reduce using rule 85 (valor -> VARIABLE .)
    CIZQ            reduce using rule 114 (valorString -> VARIABLE .)
    AND             reduce using rule 100 (valorBool -> VARIABLE .)
    OR              reduce using rule 100 (valorBool -> VARIABLE .)
    SUBSTRING       shift and go to state 74
    DIGUAL          shift and go to state 76
    NOIGUAL         shift and go to state 77
    MAYOR           shift and go to state 78
    MENOR           shift and go to state 79
    MAYIGUAL        shift and go to state 80
    MENIGUAL        shift and go to state 81

  ! SUMA            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 114 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 122 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 100 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 73

state 224

    (76) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 243


state 225

    (77) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 244


state 226

    (110) negacionBool -> NOT PIZQ expresionBool . PDER
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

    PDER            shift and go to state 245
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 227

    (82) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER algoritmo
    (83) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

    PDER            shift and go to state 246
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 228

    (64) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 64 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 229

    (97) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO . PDER
    (98) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 247
    COMA            shift and go to state 248


state 230

    (65) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 65 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 231

    (66) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 66 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 232

    (67) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 67 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 233

    (68) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 68 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 234

    (69) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 69 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 235

    (70) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 70 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 236

    (120) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    INT             reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    DOUBLER         reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    NUM             reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    STRINGR         reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    BOOLR           reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    DYNAMIC         reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    VAR             reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    VARIABLE        reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    WHILE           reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    DO              reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    IF              reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    ELSE            reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PRINT           reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    FUNCIONSTDIN    reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    FUNCIONSTDOUT   reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    NOT             reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    ELSEIF          reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    ENTERO          reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    DOUBLE          reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    STRING          reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    BOOL            reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    $end            reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    LDER            reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 120 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 237

    (94) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (95) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 249
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionBool                  shift and go to state 111
    algoritmo                      shift and go to state 250
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 238

    (96) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 251


state 239

    (78) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (79) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 253
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionBool                  shift and go to state 111
    algoritmo                      shift and go to state 252
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 240

    (81) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    PRINT           reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NOT             reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 81 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 241

    (73) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 73 (imprimir -> PRINT PIZQ expresion PDER .)


state 242

    (74) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 74 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 243

    (76) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 76 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 244

    (77) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 77 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 245

    (110) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    INT             reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLER         reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NUM             reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRINGR         reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOLR           reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DYNAMIC         reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VAR             reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VARIABLE        reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    WHILE           reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DO              reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    IF              reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ELSE            reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PRINT           reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    FUNCIONSTDIN    reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    FUNCIONSTDOUT   reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NOT             reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ELSEIF          reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ENTERO          reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLE          reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRING          reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOL            reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    $end            reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    LDER            reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 110 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 246

    (82) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . algoritmo
    (83) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 255
    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionBool                  shift and go to state 111
    algoritmo                      shift and go to state 254
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 247

    (97) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    INT             reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    DOUBLER         reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    NUM             reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    STRINGR         reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    BOOLR           reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    DYNAMIC         reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    VAR             reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    VARIABLE        reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    WHILE           reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    DO              reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    IF              reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    ELSE            reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    PRINT           reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    FUNCIONSTDIN    reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    FUNCIONSTDOUT   reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    NOT             reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    ELSEIF          reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    ENTERO          reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    DOUBLE          reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    STRING          reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    BOOL            reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    $end            reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    LDER            reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 97 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO PDER .)


state 248

    (98) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 256


state 249

    (94) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionBool                  shift and go to state 111
    algoritmo                      shift and go to state 257
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 250

    (95) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDOUT   reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 95 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 251

    (96) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 258


state 252

    (78) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDOUT   reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 78 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 253

    (79) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionBool                  shift and go to state 111
    algoritmo                      shift and go to state 259
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 254

    (82) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDOUT   reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 82 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)


state 255

    (83) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (43) algoritmo -> . asignacion PUNTOYCOMA
    (44) algoritmo -> . expresionInt PUNTOYCOMA
    (45) algoritmo -> . expresionDouble PUNTOYCOMA
    (46) algoritmo -> . expresionString PUNTOYCOMA
    (47) algoritmo -> . expresionBool PUNTOYCOMA
    (48) algoritmo -> . expresion
    (49) algoritmo -> . sentenciaWhile
    (50) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (51) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (52) algoritmo -> . sentenciaIf PUNTOYCOMA
    (53) algoritmo -> . sentenciaIf
    (54) algoritmo -> . sentenciaElse PUNTOYCOMA
    (55) algoritmo -> . sentenciaElse
    (56) algoritmo -> . imprimir PUNTOYCOMA
    (57) algoritmo -> . funcionStdin PUNTOYCOMA
    (58) algoritmo -> . funcionStdout PUNTOYCOMA
    (59) algoritmo -> . negacionBool PUNTOYCOMA
    (60) algoritmo -> . comparacionBool PUNTOYCOMA
    (61) algoritmo -> . sentenciaElseIf
    (62) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (63) algoritmo -> . sentenciaSubstring PUNTOYCOMA
    (64) asignacion -> . INT VARIABLE IGUAL expresionInt
    (65) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (66) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (67) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (68) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (69) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (70) asignacion -> . VAR VARIABLE IGUAL expresion
    (71) asignacion -> . asignacionSimple
    (123) expresionInt -> . valorInt operadorMat expresionInt
    (124) expresionInt -> . valorInt
    (127) expresionDouble -> . valorDouble operadorMat expresionDouble
    (128) expresionDouble -> . valorDouble
    (118) expresionString -> . valorString SUMA expresionString
    (119) expresionString -> . valorString
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (88) expresion -> . valor operadorMat expresion
    (89) expresion -> . valor
    (90) expresion -> . expresionString
    (91) expresion -> . expresionInt
    (92) expresion -> . expresionDouble
    (93) expresion -> . expresionBool
    (94) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (95) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (96) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (78) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (79) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) sentenciaElse -> . ELSE algoritmo
    (81) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (73) imprimir -> . PRINT PIZQ expresion PDER
    (74) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (75) funcionStdin -> . FUNCIONSTDIN
    (76) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (77) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (82) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (83) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (97) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO PDER
    (98) sentenciaSubstring -> . VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (72) asignacionSimple -> . VARIABLE IGUAL expresion
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (113) valorString -> . STRING
    (114) valorString -> . VARIABLE
    (115) valorString -> . FUNCIONSTDIN
    (116) valorString -> . expresionIndexString
    (117) valorString -> . sentenciaSubstring
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (120) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 20
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    VARIABLE        shift and go to state 21
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    ENTERO          shift and go to state 43
    DOUBLE          shift and go to state 44
    STRING          shift and go to state 45
    BOOL            shift and go to state 47

    expresionBool                  shift and go to state 111
    algoritmo                      shift and go to state 260
    asignacion                     shift and go to state 107
    expresionInt                   shift and go to state 108
    expresionDouble                shift and go to state 109
    expresionString                shift and go to state 110
    expresion                      shift and go to state 19
    sentenciaWhile                 shift and go to state 112
    sentenciaDoWhile               shift and go to state 113
    sentenciaIf                    shift and go to state 114
    sentenciaElse                  shift and go to state 115
    imprimir                       shift and go to state 116
    funcionStdin                   shift and go to state 117
    funcionStdout                  shift and go to state 118
    negacionBool                   shift and go to state 119
    comparacionBool                shift and go to state 120
    sentenciaElseIf                shift and go to state 121
    sentenciaSubstring             shift and go to state 122
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 46

state 256

    (98) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 261


state 257

    (94) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 262


state 258

    (96) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (101) expresionBool -> . valorDouble comparadorMat expresionDouble
    (102) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (103) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (104) expresionBool -> . valorDouble comparadorMat VARIABLE
    (105) expresionBool -> . valorBool
    (106) expresionBool -> . negacionBool
    (107) expresionBool -> . comparacionBool
    (108) expresionBool -> . valor IS objeto
    (109) expresionBool -> . valor ISNEGADO objeto
    (125) valorDouble -> . DOUBLE
    (126) valorDouble -> . valorInt
    (99) valorBool -> . BOOL
    (100) valorBool -> . VARIABLE
    (110) negacionBool -> . NOT PIZQ expresionBool PDER
    (111) comparacionBool -> . expresionBool operadorLogico expresionBool
    (112) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (84) valor -> . ENTERO
    (85) valor -> . VARIABLE
    (86) valor -> . DOUBLE
    (87) valor -> . STRING
    (121) valorInt -> . ENTERO
    (122) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 44
    BOOL            shift and go to state 47
    NOT             shift and go to state 41
    ENTERO          shift and go to state 140
    STRING          shift and go to state 141

    expresionBool                  shift and go to state 263
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 32
    negacionBool                   shift and go to state 137
    comparacionBool                shift and go to state 169
    valor                          shift and go to state 138
    valorInt                       shift and go to state 139

state 259

    (79) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 264


state 260

    (83) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 265


state 261

    (98) sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    INT             reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    DOUBLER         reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    NUM             reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    STRINGR         reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    BOOLR           reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    DYNAMIC         reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    VAR             reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    VARIABLE        reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    WHILE           reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    DO              reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    IF              reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    ELSE            reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PRINT           reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    FUNCIONSTDIN    reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    FUNCIONSTDOUT   reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    NOT             reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    ELSEIF          reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    ENTERO          reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    DOUBLE          reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    STRING          reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    BOOL            reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    $end            reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    LDER            reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 98 (sentenciaSubstring -> VARIABLE SUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 262

    (94) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 94 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 263

    (96) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER
    (111) comparacionBool -> expresionBool . operadorLogico expresionBool
    (112) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (141) operadorLogico -> . AND
    (142) operadorLogico -> . OR

    PDER            shift and go to state 266
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 264

    (79) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 79 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 265

    (83) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 83 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 266

    (96) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 96 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 7 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 29 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 29 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 29 resolved as shift
WARNING: shift/reduce conflict for DIV in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 29 resolved as shift
WARNING: shift/reduce conflict for MOD in state 29 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 108 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 109 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 110 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 111 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 112 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 114 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 115 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 119 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 120 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 121 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 122 resolved as shift
WARNING: shift/reduce conflict for AND in state 133 resolved as shift
WARNING: shift/reduce conflict for OR in state 133 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 160 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 160 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 223 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 223 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 223 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 223 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 223 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 223 resolved as shift
WARNING: reduce/reduce conflict in state 21 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 21
WARNING: reduce/reduce conflict in state 21 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 21
WARNING: reduce/reduce conflict in state 21 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 21
WARNING: reduce/reduce conflict in state 21 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 21
WARNING: reduce/reduce conflict in state 21 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 21
WARNING: reduce/reduce conflict in state 29 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 29
WARNING: reduce/reduce conflict in state 39 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 39
WARNING: reduce/reduce conflict in state 43 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 43
WARNING: reduce/reduce conflict in state 44 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 44
WARNING: reduce/reduce conflict in state 45 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 45
WARNING: reduce/reduce conflict in state 134 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 134
WARNING: reduce/reduce conflict in state 140 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 140
WARNING: reduce/reduce conflict in state 154 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 154
WARNING: reduce/reduce conflict in state 160 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 160
WARNING: reduce/reduce conflict in state 167 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 168
WARNING: reduce/reduce conflict in state 183 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 183
WARNING: reduce/reduce conflict in state 223 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 223
WARNING: reduce/reduce conflict in state 223 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 223
WARNING: reduce/reduce conflict in state 223 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 223
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
