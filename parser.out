Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    ELSEIF
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDIN
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    IS
    ISNEGADO
    LIST
    MAP
    NOT
    OR
    RETURN
    SET
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    algoritmo -> asignacion PUNTOYCOMA
Rule 29    algoritmo -> expresionInt PUNTOYCOMA
Rule 30    algoritmo -> expresionDouble PUNTOYCOMA
Rule 31    algoritmo -> expresionString PUNTOYCOMA
Rule 32    algoritmo -> expresionBool PUNTOYCOMA
Rule 33    algoritmo -> expresion
Rule 34    algoritmo -> sentenciaWhile
Rule 35    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 36    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 37    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 38    algoritmo -> sentenciaIf
Rule 39    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 40    algoritmo -> sentenciaElse
Rule 41    algoritmo -> imprimir PUNTOYCOMA
Rule 42    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 43    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 44    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 45    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 46    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 47    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 48    asignacion -> VAR VARIABLE IGUAL expresion
Rule 49    asignacion -> asignacionSimple
Rule 50    asignacionSimple -> VARIABLE IGUAL expresion
Rule 51    imprimir -> PRINT PIZQ expresion PDER
Rule 52    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 53    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 54    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 55    sentenciaElse -> ELSE algoritmo
Rule 56    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 57    valor -> ENTERO
Rule 58    valor -> VARIABLE
Rule 59    valor -> DOUBLE
Rule 60    valor -> STRING
Rule 61    expresion -> valor operadorMat expresion
Rule 62    expresion -> valor
Rule 63    expresion -> expresionString
Rule 64    expresion -> expresionInt
Rule 65    expresion -> expresionDouble
Rule 66    expresion -> expresionBool
Rule 67    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 68    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 69    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 70    valorBool -> BOOL
Rule 71    valorBool -> VARIABLE
Rule 72    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 73    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 74    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 75    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 76    expresionBool -> valorBool
Rule 77    valorString -> STRING
Rule 78    valorString -> VARIABLE
Rule 79    expresionString -> valorString operadorMat expresionString
Rule 80    expresionString -> valorString
Rule 81    valorInt -> ENTERO
Rule 82    valorInt -> VARIABLE
Rule 83    expresionInt -> valorInt operadorMat expresionInt
Rule 84    expresionInt -> valorInt
Rule 85    valorDouble -> DOUBLE
Rule 86    valorDouble -> valorInt
Rule 87    expresionDouble -> valorDouble operadorMat expresionDouble
Rule 88    expresionDouble -> valorDouble
Rule 89    operadorMat -> SUMA
Rule 90    operadorMat -> RESTA
Rule 91    operadorMat -> MULTI
Rule 92    operadorMat -> DIV
Rule 93    operadorMat -> DIVENTERO
Rule 94    operadorMat -> MOD
Rule 95    comparadorMat -> DIGUAL
Rule 96    comparadorMat -> NOIGUAL
Rule 97    comparadorMat -> MAYOR
Rule 98    comparadorMat -> MENOR
Rule 99    comparadorMat -> MAYIGUAL
Rule 100   comparadorMat -> MENIGUAL

Terminals, with rules where they appear

AND                  : 
AS                   : 
BOOL                 : 70
BOOLR                : 46
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 95
DIV                  : 92
DIVENTERO            : 93
DO                   : 69
DOSPUNTOS            : 
DOUBLE               : 59 85
DOUBLER              : 43
DRESTA               : 
DSUMA                : 
DYNAMIC              : 47
ELSE                 : 55 56
ELSEIF               : 
ENTERO               : 57 81
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 53 54
IGUAL                : 42 43 44 45 46 47 48 50
INT                  : 42
IS                   : 
ISNEGADO             : 
LDER                 : 54 56 67 69
LIST                 : 
LIZQ                 : 54 56 67 69
MAP                  : 
MAYIGUAL             : 99
MAYOR                : 97
MENIGUAL             : 100
MENOR                : 98
MOD                  : 94
MULTI                : 91
NOIGUAL              : 96
NOT                  : 
NUM                  : 44
OR                   : 
PDER                 : 51 52 53 54 67 68 69
PIZQ                 : 51 52 53 54 67 68 69
PRINT                : 51 52
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 35 36 37 39 41
RESTA                : 90
RETURN               : 
SET                  : 
STRING               : 60 77
STRINGR              : 45
SUMA                 : 89
SWITCH               : 
VAR                  : 48
VARIABLE             : 42 43 44 45 46 47 48 50 58 71 73 74 74 75 78 82
WHILE                : 67 68 69
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 53 54 55 56 67 68 69
asignacion           : 3 4 28
asignacionSimple     : 49 52
comparadorMat        : 72 73 74 75
expresion            : 33 47 48 50 51 61
expresionBool        : 11 12 32 46 53 54 66 67 68 69
expresionDouble      : 7 8 30 43 44 65 72 73 87
expresionInt         : 5 6 29 42 64 83
expresionString      : 9 10 31 45 63 79
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 0
imprimir             : 27 41
operadorMat          : 61 79 83 87
sentenciaDoWhile     : 17 18 36
sentenciaElse        : 23 24 25 26 39 40
sentenciaIf          : 19 20 21 22 37 38
sentenciaWhile       : 13 14 15 16 34 35
valor                : 61 62
valorBool            : 76
valorDouble          : 72 75 87 88
valorInt             : 83 84 86
valorString          : 79 80

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 37


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (28) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 38


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (29) algoritmo -> expresionInt . PUNTOYCOMA
    (64) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 39

  ! PUNTOYCOMA      [ reduce using rule 64 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (30) algoritmo -> expresionDouble . PUNTOYCOMA
    (65) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 40

  ! PUNTOYCOMA      [ reduce using rule 65 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (31) algoritmo -> expresionString . PUNTOYCOMA
    (63) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 41

  ! PUNTOYCOMA      [ reduce using rule 63 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (32) algoritmo -> expresionBool . PUNTOYCOMA
    (66) expresion -> expresionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 42

  ! PUNTOYCOMA      [ reduce using rule 66 (expresion -> expresionBool .) ]


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (34) algoritmo -> sentenciaWhile .
    (35) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 44
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

  ! PUNTOYCOMA      [ reduce using rule 34 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 43
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (36) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 45


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (37) algoritmo -> sentenciaIf . PUNTOYCOMA
    (38) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 46
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

  ! PUNTOYCOMA      [ reduce using rule 38 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 47
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (39) algoritmo -> sentenciaElse . PUNTOYCOMA
    (40) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 48
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

  ! PUNTOYCOMA      [ reduce using rule 40 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 49
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (41) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 50


state 13

    (33) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 33 (algoritmo -> expresion .)
    INT             reduce using rule 33 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 33 (algoritmo -> expresion .)
    NUM             reduce using rule 33 (algoritmo -> expresion .)
    STRINGR         reduce using rule 33 (algoritmo -> expresion .)
    BOOLR           reduce using rule 33 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 33 (algoritmo -> expresion .)
    VAR             reduce using rule 33 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 33 (algoritmo -> expresion .)
    WHILE           reduce using rule 33 (algoritmo -> expresion .)
    DO              reduce using rule 33 (algoritmo -> expresion .)
    IF              reduce using rule 33 (algoritmo -> expresion .)
    ELSE            reduce using rule 33 (algoritmo -> expresion .)
    PRINT           reduce using rule 33 (algoritmo -> expresion .)
    ENTERO          reduce using rule 33 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 33 (algoritmo -> expresion .)
    STRING          reduce using rule 33 (algoritmo -> expresion .)
    BOOL            reduce using rule 33 (algoritmo -> expresion .)
    $end            reduce using rule 33 (algoritmo -> expresion .)
    LDER            reduce using rule 33 (algoritmo -> expresion .)


state 14

    (42) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 51


state 15

    (73) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (74) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (50) asignacionSimple -> VARIABLE . IGUAL expresion
    (82) valorInt -> VARIABLE .
    (78) valorString -> VARIABLE .
    (71) valorBool -> VARIABLE .
    (58) valor -> VARIABLE .
    (95) comparadorMat -> . DIGUAL
    (96) comparadorMat -> . NOIGUAL
    (97) comparadorMat -> . MAYOR
    (98) comparadorMat -> . MENOR
    (99) comparadorMat -> . MAYIGUAL
    (100) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 78 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 71 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 58 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 53
    SUMA            reduce using rule 58 (valor -> VARIABLE .)
    RESTA           reduce using rule 58 (valor -> VARIABLE .)
    MULTI           reduce using rule 58 (valor -> VARIABLE .)
    DIV             reduce using rule 58 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 58 (valor -> VARIABLE .)
    MOD             reduce using rule 58 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 58 (valor -> VARIABLE .)
    INT             reduce using rule 58 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 58 (valor -> VARIABLE .)
    NUM             reduce using rule 58 (valor -> VARIABLE .)
    STRINGR         reduce using rule 58 (valor -> VARIABLE .)
    BOOLR           reduce using rule 58 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 58 (valor -> VARIABLE .)
    VAR             reduce using rule 58 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 58 (valor -> VARIABLE .)
    WHILE           reduce using rule 58 (valor -> VARIABLE .)
    DO              reduce using rule 58 (valor -> VARIABLE .)
    IF              reduce using rule 58 (valor -> VARIABLE .)
    ELSE            reduce using rule 58 (valor -> VARIABLE .)
    PRINT           reduce using rule 58 (valor -> VARIABLE .)
    ENTERO          reduce using rule 58 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 58 (valor -> VARIABLE .)
    STRING          reduce using rule 58 (valor -> VARIABLE .)
    BOOL            reduce using rule 58 (valor -> VARIABLE .)
    $end            reduce using rule 58 (valor -> VARIABLE .)
    LDER            reduce using rule 58 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 54
    NOIGUAL         shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYIGUAL        shift and go to state 58
    MENIGUAL        shift and go to state 59

  ! SUMA            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 71 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 52

state 16

    (43) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 60


state 17

    (44) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 61


state 18

    (45) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 62


state 19

    (46) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 63


state 20

    (47) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 64


state 21

    (48) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 65


state 22

    (49) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 49 (asignacion -> asignacionSimple .)


state 23

    (83) expresionInt -> valorInt . operadorMat expresionInt
    (84) expresionInt -> valorInt .
    (86) valorDouble -> valorInt .
    (89) operadorMat -> . SUMA
    (90) operadorMat -> . RESTA
    (91) operadorMat -> . MULTI
    (92) operadorMat -> . DIV
    (93) operadorMat -> . DIVENTERO
    (94) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PRINT resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 84 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 84 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 84 (expresionInt -> valorInt .)
    INT             reduce using rule 84 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 84 (expresionInt -> valorInt .)
    NUM             reduce using rule 84 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 84 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 84 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 84 (expresionInt -> valorInt .)
    VAR             reduce using rule 84 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 84 (expresionInt -> valorInt .)
    WHILE           reduce using rule 84 (expresionInt -> valorInt .)
    DO              reduce using rule 84 (expresionInt -> valorInt .)
    IF              reduce using rule 84 (expresionInt -> valorInt .)
    ELSE            reduce using rule 84 (expresionInt -> valorInt .)
    PRINT           reduce using rule 84 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 84 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 84 (expresionInt -> valorInt .)
    STRING          reduce using rule 84 (expresionInt -> valorInt .)
    BOOL            reduce using rule 84 (expresionInt -> valorInt .)
    $end            reduce using rule 84 (expresionInt -> valorInt .)
    LDER            reduce using rule 84 (expresionInt -> valorInt .)
    PDER            reduce using rule 84 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 86 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 86 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 86 (valorDouble -> valorInt .)
    MENOR           reduce using rule 86 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 86 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 86 (valorDouble -> valorInt .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    DIVENTERO       shift and go to state 71
    MOD             shift and go to state 72

  ! SUMA            [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! PRINT           [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 86 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 86 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 66

state 24

    (87) expresionDouble -> valorDouble . operadorMat expresionDouble
    (88) expresionDouble -> valorDouble .
    (72) expresionBool -> valorDouble . comparadorMat expresionDouble
    (75) expresionBool -> valorDouble . comparadorMat VARIABLE
    (89) operadorMat -> . SUMA
    (90) operadorMat -> . RESTA
    (91) operadorMat -> . MULTI
    (92) operadorMat -> . DIV
    (93) operadorMat -> . DIVENTERO
    (94) operadorMat -> . MOD
    (95) comparadorMat -> . DIGUAL
    (96) comparadorMat -> . NOIGUAL
    (97) comparadorMat -> . MAYOR
    (98) comparadorMat -> . MENOR
    (99) comparadorMat -> . MAYIGUAL
    (100) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 88 (expresionDouble -> valorDouble .)
    INT             reduce using rule 88 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 88 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 88 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 88 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 88 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 88 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 88 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 88 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 88 (expresionDouble -> valorDouble .)
    DO              reduce using rule 88 (expresionDouble -> valorDouble .)
    IF              reduce using rule 88 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 88 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 88 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 88 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 88 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 88 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 88 (expresionDouble -> valorDouble .)
    $end            reduce using rule 88 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 88 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 88 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    DIVENTERO       shift and go to state 71
    MOD             shift and go to state 72
    DIGUAL          shift and go to state 54
    NOIGUAL         shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYIGUAL        shift and go to state 58
    MENIGUAL        shift and go to state 59

    operadorMat                    shift and go to state 73
    comparadorMat                  shift and go to state 74

state 25

    (79) expresionString -> valorString . operadorMat expresionString
    (80) expresionString -> valorString .
    (89) operadorMat -> . SUMA
    (90) operadorMat -> . RESTA
    (91) operadorMat -> . MULTI
    (92) operadorMat -> . DIV
    (93) operadorMat -> . DIVENTERO
    (94) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 80 (expresionString -> valorString .)
    INT             reduce using rule 80 (expresionString -> valorString .)
    DOUBLER         reduce using rule 80 (expresionString -> valorString .)
    NUM             reduce using rule 80 (expresionString -> valorString .)
    STRINGR         reduce using rule 80 (expresionString -> valorString .)
    BOOLR           reduce using rule 80 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 80 (expresionString -> valorString .)
    VAR             reduce using rule 80 (expresionString -> valorString .)
    VARIABLE        reduce using rule 80 (expresionString -> valorString .)
    WHILE           reduce using rule 80 (expresionString -> valorString .)
    DO              reduce using rule 80 (expresionString -> valorString .)
    IF              reduce using rule 80 (expresionString -> valorString .)
    ELSE            reduce using rule 80 (expresionString -> valorString .)
    PRINT           reduce using rule 80 (expresionString -> valorString .)
    ENTERO          reduce using rule 80 (expresionString -> valorString .)
    DOUBLE          reduce using rule 80 (expresionString -> valorString .)
    STRING          reduce using rule 80 (expresionString -> valorString .)
    BOOL            reduce using rule 80 (expresionString -> valorString .)
    $end            reduce using rule 80 (expresionString -> valorString .)
    LDER            reduce using rule 80 (expresionString -> valorString .)
    PDER            reduce using rule 80 (expresionString -> valorString .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    DIVENTERO       shift and go to state 71
    MOD             shift and go to state 72

    operadorMat                    shift and go to state 75

state 26

    (76) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 76 (expresionBool -> valorBool .)
    INT             reduce using rule 76 (expresionBool -> valorBool .)
    DOUBLER         reduce using rule 76 (expresionBool -> valorBool .)
    NUM             reduce using rule 76 (expresionBool -> valorBool .)
    STRINGR         reduce using rule 76 (expresionBool -> valorBool .)
    BOOLR           reduce using rule 76 (expresionBool -> valorBool .)
    DYNAMIC         reduce using rule 76 (expresionBool -> valorBool .)
    VAR             reduce using rule 76 (expresionBool -> valorBool .)
    VARIABLE        reduce using rule 76 (expresionBool -> valorBool .)
    WHILE           reduce using rule 76 (expresionBool -> valorBool .)
    DO              reduce using rule 76 (expresionBool -> valorBool .)
    IF              reduce using rule 76 (expresionBool -> valorBool .)
    ELSE            reduce using rule 76 (expresionBool -> valorBool .)
    PRINT           reduce using rule 76 (expresionBool -> valorBool .)
    ENTERO          reduce using rule 76 (expresionBool -> valorBool .)
    DOUBLE          reduce using rule 76 (expresionBool -> valorBool .)
    STRING          reduce using rule 76 (expresionBool -> valorBool .)
    BOOL            reduce using rule 76 (expresionBool -> valorBool .)
    $end            reduce using rule 76 (expresionBool -> valorBool .)
    LDER            reduce using rule 76 (expresionBool -> valorBool .)
    PDER            reduce using rule 76 (expresionBool -> valorBool .)


state 27

    (67) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 76


state 28

    (69) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 77


state 29

    (53) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 78


state 30

    (55) sentenciaElse -> ELSE . algoritmo
    (56) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    LIZQ            shift and go to state 80
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    algoritmo                      shift and go to state 79
    asignacion                     shift and go to state 81
    expresionInt                   shift and go to state 82
    expresionDouble                shift and go to state 83
    expresionString                shift and go to state 84
    expresionBool                  shift and go to state 85
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 86
    sentenciaDoWhile               shift and go to state 87
    sentenciaIf                    shift and go to state 88
    sentenciaElse                  shift and go to state 89
    imprimir                       shift and go to state 90
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 31

    (51) imprimir -> PRINT . PIZQ expresion PDER
    (52) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 91


state 32

    (61) expresion -> valor . operadorMat expresion
    (62) expresion -> valor .
    (89) operadorMat -> . SUMA
    (90) operadorMat -> . RESTA
    (91) operadorMat -> . MULTI
    (92) operadorMat -> . DIV
    (93) operadorMat -> . DIVENTERO
    (94) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 62 (expresion -> valor .)
    INT             reduce using rule 62 (expresion -> valor .)
    DOUBLER         reduce using rule 62 (expresion -> valor .)
    NUM             reduce using rule 62 (expresion -> valor .)
    STRINGR         reduce using rule 62 (expresion -> valor .)
    BOOLR           reduce using rule 62 (expresion -> valor .)
    DYNAMIC         reduce using rule 62 (expresion -> valor .)
    VAR             reduce using rule 62 (expresion -> valor .)
    VARIABLE        reduce using rule 62 (expresion -> valor .)
    WHILE           reduce using rule 62 (expresion -> valor .)
    DO              reduce using rule 62 (expresion -> valor .)
    IF              reduce using rule 62 (expresion -> valor .)
    ELSE            reduce using rule 62 (expresion -> valor .)
    PRINT           reduce using rule 62 (expresion -> valor .)
    ENTERO          reduce using rule 62 (expresion -> valor .)
    DOUBLE          reduce using rule 62 (expresion -> valor .)
    STRING          reduce using rule 62 (expresion -> valor .)
    BOOL            reduce using rule 62 (expresion -> valor .)
    $end            reduce using rule 62 (expresion -> valor .)
    LDER            reduce using rule 62 (expresion -> valor .)
    PDER            reduce using rule 62 (expresion -> valor .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    DIVENTERO       shift and go to state 71
    MOD             shift and go to state 72

    operadorMat                    shift and go to state 92

state 33

    (81) valorInt -> ENTERO .
    (57) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 57 (valor -> ENTERO .)
    DIGUAL          reduce using rule 81 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 81 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 81 (valorInt -> ENTERO .)
    MENOR           reduce using rule 81 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 81 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 81 (valorInt -> ENTERO .)
    SUMA            reduce using rule 57 (valor -> ENTERO .)
    RESTA           reduce using rule 57 (valor -> ENTERO .)
    MULTI           reduce using rule 57 (valor -> ENTERO .)
    DIV             reduce using rule 57 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 57 (valor -> ENTERO .)
    MOD             reduce using rule 57 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 57 (valor -> ENTERO .)
    INT             reduce using rule 57 (valor -> ENTERO .)
    DOUBLER         reduce using rule 57 (valor -> ENTERO .)
    NUM             reduce using rule 57 (valor -> ENTERO .)
    STRINGR         reduce using rule 57 (valor -> ENTERO .)
    BOOLR           reduce using rule 57 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 57 (valor -> ENTERO .)
    VAR             reduce using rule 57 (valor -> ENTERO .)
    VARIABLE        reduce using rule 57 (valor -> ENTERO .)
    WHILE           reduce using rule 57 (valor -> ENTERO .)
    DO              reduce using rule 57 (valor -> ENTERO .)
    IF              reduce using rule 57 (valor -> ENTERO .)
    ELSE            reduce using rule 57 (valor -> ENTERO .)
    PRINT           reduce using rule 57 (valor -> ENTERO .)
    ENTERO          reduce using rule 57 (valor -> ENTERO .)
    DOUBLE          reduce using rule 57 (valor -> ENTERO .)
    STRING          reduce using rule 57 (valor -> ENTERO .)
    BOOL            reduce using rule 57 (valor -> ENTERO .)
    $end            reduce using rule 57 (valor -> ENTERO .)
    LDER            reduce using rule 57 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 81 (valorInt -> ENTERO .) ]


state 34

    (85) valorDouble -> DOUBLE .
    (59) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 59 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 85 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 85 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 85 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 85 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 85 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 85 (valorDouble -> DOUBLE .)
    SUMA            reduce using rule 59 (valor -> DOUBLE .)
    RESTA           reduce using rule 59 (valor -> DOUBLE .)
    MULTI           reduce using rule 59 (valor -> DOUBLE .)
    DIV             reduce using rule 59 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 59 (valor -> DOUBLE .)
    MOD             reduce using rule 59 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 59 (valor -> DOUBLE .)
    INT             reduce using rule 59 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 59 (valor -> DOUBLE .)
    NUM             reduce using rule 59 (valor -> DOUBLE .)
    STRINGR         reduce using rule 59 (valor -> DOUBLE .)
    BOOLR           reduce using rule 59 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 59 (valor -> DOUBLE .)
    VAR             reduce using rule 59 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 59 (valor -> DOUBLE .)
    WHILE           reduce using rule 59 (valor -> DOUBLE .)
    DO              reduce using rule 59 (valor -> DOUBLE .)
    IF              reduce using rule 59 (valor -> DOUBLE .)
    ELSE            reduce using rule 59 (valor -> DOUBLE .)
    PRINT           reduce using rule 59 (valor -> DOUBLE .)
    ENTERO          reduce using rule 59 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 59 (valor -> DOUBLE .)
    STRING          reduce using rule 59 (valor -> DOUBLE .)
    BOOL            reduce using rule 59 (valor -> DOUBLE .)
    $end            reduce using rule 59 (valor -> DOUBLE .)
    LDER            reduce using rule 59 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]


state 35

    (77) valorString -> STRING .
    (60) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 60 (valor -> STRING .)
    SUMA            reduce using rule 60 (valor -> STRING .)
    RESTA           reduce using rule 60 (valor -> STRING .)
    MULTI           reduce using rule 60 (valor -> STRING .)
    DIV             reduce using rule 60 (valor -> STRING .)
    DIVENTERO       reduce using rule 60 (valor -> STRING .)
    MOD             reduce using rule 60 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 60 (valor -> STRING .)
    INT             reduce using rule 60 (valor -> STRING .)
    DOUBLER         reduce using rule 60 (valor -> STRING .)
    NUM             reduce using rule 60 (valor -> STRING .)
    STRINGR         reduce using rule 60 (valor -> STRING .)
    BOOLR           reduce using rule 60 (valor -> STRING .)
    DYNAMIC         reduce using rule 60 (valor -> STRING .)
    VAR             reduce using rule 60 (valor -> STRING .)
    VARIABLE        reduce using rule 60 (valor -> STRING .)
    WHILE           reduce using rule 60 (valor -> STRING .)
    DO              reduce using rule 60 (valor -> STRING .)
    IF              reduce using rule 60 (valor -> STRING .)
    ELSE            reduce using rule 60 (valor -> STRING .)
    PRINT           reduce using rule 60 (valor -> STRING .)
    ENTERO          reduce using rule 60 (valor -> STRING .)
    DOUBLE          reduce using rule 60 (valor -> STRING .)
    STRING          reduce using rule 60 (valor -> STRING .)
    BOOL            reduce using rule 60 (valor -> STRING .)
    $end            reduce using rule 60 (valor -> STRING .)
    LDER            reduce using rule 60 (valor -> STRING .)

  ! SUMA            [ reduce using rule 77 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 77 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 77 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 77 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 77 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 77 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 77 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 77 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 77 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 77 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 77 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 77 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 77 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 77 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 77 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 77 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 77 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 77 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 77 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 77 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 77 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 77 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 77 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 77 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 77 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 77 (valorString -> STRING .) ]


state 36

    (70) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 70 (valorBool -> BOOL .)
    INT             reduce using rule 70 (valorBool -> BOOL .)
    DOUBLER         reduce using rule 70 (valorBool -> BOOL .)
    NUM             reduce using rule 70 (valorBool -> BOOL .)
    STRINGR         reduce using rule 70 (valorBool -> BOOL .)
    BOOLR           reduce using rule 70 (valorBool -> BOOL .)
    DYNAMIC         reduce using rule 70 (valorBool -> BOOL .)
    VAR             reduce using rule 70 (valorBool -> BOOL .)
    VARIABLE        reduce using rule 70 (valorBool -> BOOL .)
    WHILE           reduce using rule 70 (valorBool -> BOOL .)
    DO              reduce using rule 70 (valorBool -> BOOL .)
    IF              reduce using rule 70 (valorBool -> BOOL .)
    ELSE            reduce using rule 70 (valorBool -> BOOL .)
    PRINT           reduce using rule 70 (valorBool -> BOOL .)
    ENTERO          reduce using rule 70 (valorBool -> BOOL .)
    DOUBLE          reduce using rule 70 (valorBool -> BOOL .)
    STRING          reduce using rule 70 (valorBool -> BOOL .)
    BOOL            reduce using rule 70 (valorBool -> BOOL .)
    $end            reduce using rule 70 (valorBool -> BOOL .)
    LDER            reduce using rule 70 (valorBool -> BOOL .)
    PDER            reduce using rule 70 (valorBool -> BOOL .)


state 37

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    algoritmo                      shift and go to state 2
    final                          shift and go to state 93
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 38

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (28) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    asignacion                     shift and go to state 3
    final                          shift and go to state 94
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 39

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (29) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionInt                   shift and go to state 4
    final                          shift and go to state 95
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 40

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (30) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionDouble                shift and go to state 5
    final                          shift and go to state 96
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 41

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (31) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionString                shift and go to state 6
    final                          shift and go to state 97
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 42

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (32) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionBool                  shift and go to state 7
    final                          shift and go to state 98
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 43

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 44

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (35) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 99
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 45

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (36) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 100
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 46

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (37) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 101
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 47

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 48

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (39) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 102
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 49

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 50

    (27) final -> imprimir PUNTOYCOMA .
    (41) algoritmo -> imprimir PUNTOYCOMA .

    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)


state 51

    (42) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 103


state 52

    (73) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (74) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 104
    DOUBLE          shift and go to state 107
    ENTERO          shift and go to state 109

    expresionDouble                shift and go to state 105
    valorDouble                    shift and go to state 106
    valorInt                       shift and go to state 108

state 53

    (50) asignacionSimple -> VARIABLE IGUAL . expresion
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 110
    DOUBLE          shift and go to state 117
    STRING          shift and go to state 118
    BOOL            shift and go to state 36

    expresion                      shift and go to state 111
    valor                          shift and go to state 32
    expresionString                shift and go to state 112
    expresionInt                   shift and go to state 113
    expresionDouble                shift and go to state 114
    expresionBool                  shift and go to state 115
    valorString                    shift and go to state 25
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorBool                      shift and go to state 26

state 54

    (95) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 95 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 95 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 95 (comparadorMat -> DIGUAL .)


state 55

    (96) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 96 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 96 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 96 (comparadorMat -> NOIGUAL .)


state 56

    (97) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 97 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 97 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 97 (comparadorMat -> MAYOR .)


state 57

    (98) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 98 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 98 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 98 (comparadorMat -> MENOR .)


state 58

    (99) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 99 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 99 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 99 (comparadorMat -> MAYIGUAL .)


state 59

    (100) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 100 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 100 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 100 (comparadorMat -> MENIGUAL .)


state 60

    (43) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 119


state 61

    (44) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 120


state 62

    (45) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 121


state 63

    (46) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 122


state 64

    (47) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 123


state 65

    (48) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 124


state 66

    (83) expresionInt -> valorInt operadorMat . expresionInt
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    ENTERO          shift and go to state 109
    VARIABLE        shift and go to state 127

    valorInt                       shift and go to state 125
    expresionInt                   shift and go to state 126

state 67

    (89) operadorMat -> SUMA .

    ENTERO          reduce using rule 89 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 89 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 89 (operadorMat -> SUMA .)
    STRING          reduce using rule 89 (operadorMat -> SUMA .)
    BOOL            reduce using rule 89 (operadorMat -> SUMA .)


state 68

    (90) operadorMat -> RESTA .

    ENTERO          reduce using rule 90 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 90 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 90 (operadorMat -> RESTA .)
    STRING          reduce using rule 90 (operadorMat -> RESTA .)
    BOOL            reduce using rule 90 (operadorMat -> RESTA .)


state 69

    (91) operadorMat -> MULTI .

    ENTERO          reduce using rule 91 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 91 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 91 (operadorMat -> MULTI .)
    STRING          reduce using rule 91 (operadorMat -> MULTI .)
    BOOL            reduce using rule 91 (operadorMat -> MULTI .)


state 70

    (92) operadorMat -> DIV .

    ENTERO          reduce using rule 92 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 92 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 92 (operadorMat -> DIV .)
    STRING          reduce using rule 92 (operadorMat -> DIV .)
    BOOL            reduce using rule 92 (operadorMat -> DIV .)


state 71

    (93) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 93 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 93 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 93 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 93 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 93 (operadorMat -> DIVENTERO .)


state 72

    (94) operadorMat -> MOD .

    ENTERO          reduce using rule 94 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 94 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 94 (operadorMat -> MOD .)
    STRING          reduce using rule 94 (operadorMat -> MOD .)
    BOOL            reduce using rule 94 (operadorMat -> MOD .)


state 73

    (87) expresionDouble -> valorDouble operadorMat . expresionDouble
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 107
    ENTERO          shift and go to state 109
    VARIABLE        shift and go to state 127

    valorDouble                    shift and go to state 106
    expresionDouble                shift and go to state 128
    valorInt                       shift and go to state 108

state 74

    (72) expresionBool -> valorDouble comparadorMat . expresionDouble
    (75) expresionBool -> valorDouble comparadorMat . VARIABLE
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 107
    ENTERO          shift and go to state 109

    valorDouble                    shift and go to state 106
    expresionDouble                shift and go to state 129
    valorInt                       shift and go to state 108

state 75

    (79) expresionString -> valorString operadorMat . expresionString
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE

    STRING          shift and go to state 132
    VARIABLE        shift and go to state 133

    valorString                    shift and go to state 25
    expresionString                shift and go to state 131

state 76

    (67) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 107
    BOOL            shift and go to state 36
    ENTERO          shift and go to state 109

    expresionBool                  shift and go to state 134
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 26
    valorInt                       shift and go to state 108

state 77

    (69) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    algoritmo                      shift and go to state 137
    expresionBool                  shift and go to state 85
    asignacion                     shift and go to state 81
    expresionInt                   shift and go to state 82
    expresionDouble                shift and go to state 83
    expresionString                shift and go to state 84
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 86
    sentenciaDoWhile               shift and go to state 87
    sentenciaIf                    shift and go to state 88
    sentenciaElse                  shift and go to state 89
    imprimir                       shift and go to state 90
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 78

    (53) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (54) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 107
    BOOL            shift and go to state 36
    ENTERO          shift and go to state 109

    expresionBool                  shift and go to state 138
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 26
    valorInt                       shift and go to state 108

state 79

    (55) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    PRINT           reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 55 (sentenciaElse -> ELSE algoritmo .)


state 80

    (56) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    algoritmo                      shift and go to state 139
    asignacion                     shift and go to state 81
    expresionInt                   shift and go to state 82
    expresionDouble                shift and go to state 83
    expresionString                shift and go to state 84
    expresionBool                  shift and go to state 85
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 86
    sentenciaDoWhile               shift and go to state 87
    sentenciaIf                    shift and go to state 88
    sentenciaElse                  shift and go to state 89
    imprimir                       shift and go to state 90
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 81

    (28) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 140


state 82

    (29) algoritmo -> expresionInt . PUNTOYCOMA
    (64) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 141
    INT             reduce using rule 64 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 64 (expresion -> expresionInt .)
    NUM             reduce using rule 64 (expresion -> expresionInt .)
    STRINGR         reduce using rule 64 (expresion -> expresionInt .)
    BOOLR           reduce using rule 64 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 64 (expresion -> expresionInt .)
    VAR             reduce using rule 64 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 64 (expresion -> expresionInt .)
    WHILE           reduce using rule 64 (expresion -> expresionInt .)
    DO              reduce using rule 64 (expresion -> expresionInt .)
    IF              reduce using rule 64 (expresion -> expresionInt .)
    ELSE            reduce using rule 64 (expresion -> expresionInt .)
    PRINT           reduce using rule 64 (expresion -> expresionInt .)
    ENTERO          reduce using rule 64 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 64 (expresion -> expresionInt .)
    STRING          reduce using rule 64 (expresion -> expresionInt .)
    BOOL            reduce using rule 64 (expresion -> expresionInt .)
    $end            reduce using rule 64 (expresion -> expresionInt .)
    LDER            reduce using rule 64 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 64 (expresion -> expresionInt .) ]


state 83

    (30) algoritmo -> expresionDouble . PUNTOYCOMA
    (65) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 142
    INT             reduce using rule 65 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 65 (expresion -> expresionDouble .)
    NUM             reduce using rule 65 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 65 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 65 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 65 (expresion -> expresionDouble .)
    VAR             reduce using rule 65 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 65 (expresion -> expresionDouble .)
    WHILE           reduce using rule 65 (expresion -> expresionDouble .)
    DO              reduce using rule 65 (expresion -> expresionDouble .)
    IF              reduce using rule 65 (expresion -> expresionDouble .)
    ELSE            reduce using rule 65 (expresion -> expresionDouble .)
    PRINT           reduce using rule 65 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 65 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 65 (expresion -> expresionDouble .)
    STRING          reduce using rule 65 (expresion -> expresionDouble .)
    BOOL            reduce using rule 65 (expresion -> expresionDouble .)
    $end            reduce using rule 65 (expresion -> expresionDouble .)
    LDER            reduce using rule 65 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 65 (expresion -> expresionDouble .) ]


state 84

    (31) algoritmo -> expresionString . PUNTOYCOMA
    (63) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 143
    INT             reduce using rule 63 (expresion -> expresionString .)
    DOUBLER         reduce using rule 63 (expresion -> expresionString .)
    NUM             reduce using rule 63 (expresion -> expresionString .)
    STRINGR         reduce using rule 63 (expresion -> expresionString .)
    BOOLR           reduce using rule 63 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 63 (expresion -> expresionString .)
    VAR             reduce using rule 63 (expresion -> expresionString .)
    VARIABLE        reduce using rule 63 (expresion -> expresionString .)
    WHILE           reduce using rule 63 (expresion -> expresionString .)
    DO              reduce using rule 63 (expresion -> expresionString .)
    IF              reduce using rule 63 (expresion -> expresionString .)
    ELSE            reduce using rule 63 (expresion -> expresionString .)
    PRINT           reduce using rule 63 (expresion -> expresionString .)
    ENTERO          reduce using rule 63 (expresion -> expresionString .)
    DOUBLE          reduce using rule 63 (expresion -> expresionString .)
    STRING          reduce using rule 63 (expresion -> expresionString .)
    BOOL            reduce using rule 63 (expresion -> expresionString .)
    $end            reduce using rule 63 (expresion -> expresionString .)
    LDER            reduce using rule 63 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 63 (expresion -> expresionString .) ]


state 85

    (32) algoritmo -> expresionBool . PUNTOYCOMA
    (66) expresion -> expresionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 144
    INT             reduce using rule 66 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 66 (expresion -> expresionBool .)
    NUM             reduce using rule 66 (expresion -> expresionBool .)
    STRINGR         reduce using rule 66 (expresion -> expresionBool .)
    BOOLR           reduce using rule 66 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 66 (expresion -> expresionBool .)
    VAR             reduce using rule 66 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 66 (expresion -> expresionBool .)
    WHILE           reduce using rule 66 (expresion -> expresionBool .)
    DO              reduce using rule 66 (expresion -> expresionBool .)
    IF              reduce using rule 66 (expresion -> expresionBool .)
    ELSE            reduce using rule 66 (expresion -> expresionBool .)
    PRINT           reduce using rule 66 (expresion -> expresionBool .)
    ENTERO          reduce using rule 66 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 66 (expresion -> expresionBool .)
    STRING          reduce using rule 66 (expresion -> expresionBool .)
    BOOL            reduce using rule 66 (expresion -> expresionBool .)
    $end            reduce using rule 66 (expresion -> expresionBool .)
    LDER            reduce using rule 66 (expresion -> expresionBool .)

  ! PUNTOYCOMA      [ reduce using rule 66 (expresion -> expresionBool .) ]


state 86

    (34) algoritmo -> sentenciaWhile .
    (35) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 34 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 34 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 34 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 34 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 34 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 34 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 34 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 34 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    PRINT           reduce using rule 34 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 34 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 34 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 145

  ! PUNTOYCOMA      [ reduce using rule 34 (algoritmo -> sentenciaWhile .) ]


state 87

    (36) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 146


state 88

    (37) algoritmo -> sentenciaIf . PUNTOYCOMA
    (38) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 147
    INT             reduce using rule 38 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 38 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 38 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 38 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 38 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 38 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 38 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 38 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 38 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 38 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 38 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 38 (algoritmo -> sentenciaIf .)
    PRINT           reduce using rule 38 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 38 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 38 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 38 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 38 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 38 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 38 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 38 (algoritmo -> sentenciaIf .) ]


state 89

    (39) algoritmo -> sentenciaElse . PUNTOYCOMA
    (40) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 148
    INT             reduce using rule 40 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 40 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 40 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 40 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 40 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 40 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 40 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 40 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 40 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 40 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 40 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 40 (algoritmo -> sentenciaElse .)
    PRINT           reduce using rule 40 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 40 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 40 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 40 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 40 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 40 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 40 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 40 (algoritmo -> sentenciaElse .) ]


state 90

    (41) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 149


state 91

    (51) imprimir -> PRINT PIZQ . expresion PDER
    (52) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE

    VARIABLE        shift and go to state 152
    ENTERO          shift and go to state 116
    DOUBLE          shift and go to state 117
    STRING          shift and go to state 118
    BOOL            shift and go to state 36

    expresion                      shift and go to state 150
    asignacionSimple               shift and go to state 151
    valor                          shift and go to state 32
    expresionString                shift and go to state 112
    expresionInt                   shift and go to state 113
    expresionDouble                shift and go to state 114
    expresionBool                  shift and go to state 115
    valorString                    shift and go to state 25
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorBool                      shift and go to state 26

state 92

    (61) expresion -> valor operadorMat . expresion
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 110
    DOUBLE          shift and go to state 117
    STRING          shift and go to state 118
    BOOL            shift and go to state 36

    valor                          shift and go to state 32
    expresion                      shift and go to state 153
    expresionString                shift and go to state 112
    expresionInt                   shift and go to state 113
    expresionDouble                shift and go to state 114
    expresionBool                  shift and go to state 115
    valorString                    shift and go to state 25
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorBool                      shift and go to state 26

state 93

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 94

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 95

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 96

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 97

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 98

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 99

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 100

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 101

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 102

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 103

    (42) asignacion -> INT VARIABLE IGUAL . expresionInt
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    ENTERO          shift and go to state 109
    VARIABLE        shift and go to state 127

    expresionInt                   shift and go to state 154
    valorInt                       shift and go to state 125

state 104

    (74) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (82) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    INT             reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NUM             reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRINGR         reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOLR           reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VAR             reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    WHILE           reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DO              reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    IF              reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSE            reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PRINT           reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ENTERO          reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRING          reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOL            reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    $end            reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    LDER            reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 74 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 82 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 82 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 82 (valorInt -> VARIABLE .)
    DIV             reduce using rule 82 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 82 (valorInt -> VARIABLE .)
    MOD             reduce using rule 82 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]


state 105

    (73) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    INT             reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NUM             reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRINGR         reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOLR           reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VAR             reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    WHILE           reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DO              reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    IF              reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSE            reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PRINT           reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ENTERO          reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRING          reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOL            reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    $end            reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    LDER            reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 73 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 106

    (87) expresionDouble -> valorDouble . operadorMat expresionDouble
    (88) expresionDouble -> valorDouble .
    (89) operadorMat -> . SUMA
    (90) operadorMat -> . RESTA
    (91) operadorMat -> . MULTI
    (92) operadorMat -> . DIV
    (93) operadorMat -> . DIVENTERO
    (94) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 88 (expresionDouble -> valorDouble .)
    INT             reduce using rule 88 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 88 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 88 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 88 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 88 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 88 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 88 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 88 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 88 (expresionDouble -> valorDouble .)
    DO              reduce using rule 88 (expresionDouble -> valorDouble .)
    IF              reduce using rule 88 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 88 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 88 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 88 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 88 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 88 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 88 (expresionDouble -> valorDouble .)
    $end            reduce using rule 88 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 88 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 88 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    DIVENTERO       shift and go to state 71
    MOD             shift and go to state 72

    operadorMat                    shift and go to state 73

state 107

    (85) valorDouble -> DOUBLE .

    SUMA            reduce using rule 85 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 85 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 85 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 85 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 85 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 85 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 85 (valorDouble -> DOUBLE .)
    INT             reduce using rule 85 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 85 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 85 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 85 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 85 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 85 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 85 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 85 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 85 (valorDouble -> DOUBLE .)
    DO              reduce using rule 85 (valorDouble -> DOUBLE .)
    IF              reduce using rule 85 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 85 (valorDouble -> DOUBLE .)
    PRINT           reduce using rule 85 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 85 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 85 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 85 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 85 (valorDouble -> DOUBLE .)
    $end            reduce using rule 85 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 85 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 85 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 85 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 85 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 85 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 85 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 85 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 85 (valorDouble -> DOUBLE .)


state 108

    (86) valorDouble -> valorInt .

    SUMA            reduce using rule 86 (valorDouble -> valorInt .)
    RESTA           reduce using rule 86 (valorDouble -> valorInt .)
    MULTI           reduce using rule 86 (valorDouble -> valorInt .)
    DIV             reduce using rule 86 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 86 (valorDouble -> valorInt .)
    MOD             reduce using rule 86 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 86 (valorDouble -> valorInt .)
    INT             reduce using rule 86 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 86 (valorDouble -> valorInt .)
    NUM             reduce using rule 86 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 86 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 86 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 86 (valorDouble -> valorInt .)
    VAR             reduce using rule 86 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 86 (valorDouble -> valorInt .)
    WHILE           reduce using rule 86 (valorDouble -> valorInt .)
    DO              reduce using rule 86 (valorDouble -> valorInt .)
    IF              reduce using rule 86 (valorDouble -> valorInt .)
    ELSE            reduce using rule 86 (valorDouble -> valorInt .)
    PRINT           reduce using rule 86 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 86 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 86 (valorDouble -> valorInt .)
    STRING          reduce using rule 86 (valorDouble -> valorInt .)
    BOOL            reduce using rule 86 (valorDouble -> valorInt .)
    $end            reduce using rule 86 (valorDouble -> valorInt .)
    LDER            reduce using rule 86 (valorDouble -> valorInt .)
    PDER            reduce using rule 86 (valorDouble -> valorInt .)
    DIGUAL          reduce using rule 86 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 86 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 86 (valorDouble -> valorInt .)
    MENOR           reduce using rule 86 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 86 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 86 (valorDouble -> valorInt .)


state 109

    (81) valorInt -> ENTERO .

    SUMA            reduce using rule 81 (valorInt -> ENTERO .)
    RESTA           reduce using rule 81 (valorInt -> ENTERO .)
    MULTI           reduce using rule 81 (valorInt -> ENTERO .)
    DIV             reduce using rule 81 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 81 (valorInt -> ENTERO .)
    MOD             reduce using rule 81 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 81 (valorInt -> ENTERO .)
    INT             reduce using rule 81 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 81 (valorInt -> ENTERO .)
    NUM             reduce using rule 81 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 81 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 81 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 81 (valorInt -> ENTERO .)
    VAR             reduce using rule 81 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 81 (valorInt -> ENTERO .)
    WHILE           reduce using rule 81 (valorInt -> ENTERO .)
    DO              reduce using rule 81 (valorInt -> ENTERO .)
    IF              reduce using rule 81 (valorInt -> ENTERO .)
    ELSE            reduce using rule 81 (valorInt -> ENTERO .)
    PRINT           reduce using rule 81 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 81 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 81 (valorInt -> ENTERO .)
    STRING          reduce using rule 81 (valorInt -> ENTERO .)
    BOOL            reduce using rule 81 (valorInt -> ENTERO .)
    $end            reduce using rule 81 (valorInt -> ENTERO .)
    LDER            reduce using rule 81 (valorInt -> ENTERO .)
    PDER            reduce using rule 81 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 81 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 81 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 81 (valorInt -> ENTERO .)
    MENOR           reduce using rule 81 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 81 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 81 (valorInt -> ENTERO .)


state 110

    (58) valor -> VARIABLE .
    (73) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (74) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (78) valorString -> VARIABLE .
    (82) valorInt -> VARIABLE .
    (71) valorBool -> VARIABLE .
    (95) comparadorMat -> . DIGUAL
    (96) comparadorMat -> . NOIGUAL
    (97) comparadorMat -> . MAYOR
    (98) comparadorMat -> . MENOR
    (99) comparadorMat -> . MAYIGUAL
    (100) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 58 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    SUMA            reduce using rule 58 (valor -> VARIABLE .)
    RESTA           reduce using rule 58 (valor -> VARIABLE .)
    MULTI           reduce using rule 58 (valor -> VARIABLE .)
    DIV             reduce using rule 58 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 58 (valor -> VARIABLE .)
    MOD             reduce using rule 58 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 58 (valor -> VARIABLE .)
    PDER            reduce using rule 58 (valor -> VARIABLE .)
    INT             reduce using rule 58 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 58 (valor -> VARIABLE .)
    NUM             reduce using rule 58 (valor -> VARIABLE .)
    STRINGR         reduce using rule 58 (valor -> VARIABLE .)
    BOOLR           reduce using rule 58 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 58 (valor -> VARIABLE .)
    VAR             reduce using rule 58 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 58 (valor -> VARIABLE .)
    WHILE           reduce using rule 58 (valor -> VARIABLE .)
    DO              reduce using rule 58 (valor -> VARIABLE .)
    IF              reduce using rule 58 (valor -> VARIABLE .)
    ELSE            reduce using rule 58 (valor -> VARIABLE .)
    PRINT           reduce using rule 58 (valor -> VARIABLE .)
    ENTERO          reduce using rule 58 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 58 (valor -> VARIABLE .)
    STRING          reduce using rule 58 (valor -> VARIABLE .)
    BOOL            reduce using rule 58 (valor -> VARIABLE .)
    $end            reduce using rule 58 (valor -> VARIABLE .)
    LDER            reduce using rule 58 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 54
    NOIGUAL         shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYIGUAL        shift and go to state 58
    MENIGUAL        shift and go to state 59

  ! SUMA            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 71 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 71 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 52

state 111

    (50) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 50 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 50 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 112

    (63) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 63 (expresion -> expresionString .)
    PDER            reduce using rule 63 (expresion -> expresionString .)
    INT             reduce using rule 63 (expresion -> expresionString .)
    DOUBLER         reduce using rule 63 (expresion -> expresionString .)
    NUM             reduce using rule 63 (expresion -> expresionString .)
    STRINGR         reduce using rule 63 (expresion -> expresionString .)
    BOOLR           reduce using rule 63 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 63 (expresion -> expresionString .)
    VAR             reduce using rule 63 (expresion -> expresionString .)
    VARIABLE        reduce using rule 63 (expresion -> expresionString .)
    WHILE           reduce using rule 63 (expresion -> expresionString .)
    DO              reduce using rule 63 (expresion -> expresionString .)
    IF              reduce using rule 63 (expresion -> expresionString .)
    ELSE            reduce using rule 63 (expresion -> expresionString .)
    PRINT           reduce using rule 63 (expresion -> expresionString .)
    ENTERO          reduce using rule 63 (expresion -> expresionString .)
    DOUBLE          reduce using rule 63 (expresion -> expresionString .)
    STRING          reduce using rule 63 (expresion -> expresionString .)
    BOOL            reduce using rule 63 (expresion -> expresionString .)
    $end            reduce using rule 63 (expresion -> expresionString .)
    LDER            reduce using rule 63 (expresion -> expresionString .)


state 113

    (64) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 64 (expresion -> expresionInt .)
    PDER            reduce using rule 64 (expresion -> expresionInt .)
    INT             reduce using rule 64 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 64 (expresion -> expresionInt .)
    NUM             reduce using rule 64 (expresion -> expresionInt .)
    STRINGR         reduce using rule 64 (expresion -> expresionInt .)
    BOOLR           reduce using rule 64 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 64 (expresion -> expresionInt .)
    VAR             reduce using rule 64 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 64 (expresion -> expresionInt .)
    WHILE           reduce using rule 64 (expresion -> expresionInt .)
    DO              reduce using rule 64 (expresion -> expresionInt .)
    IF              reduce using rule 64 (expresion -> expresionInt .)
    ELSE            reduce using rule 64 (expresion -> expresionInt .)
    PRINT           reduce using rule 64 (expresion -> expresionInt .)
    ENTERO          reduce using rule 64 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 64 (expresion -> expresionInt .)
    STRING          reduce using rule 64 (expresion -> expresionInt .)
    BOOL            reduce using rule 64 (expresion -> expresionInt .)
    $end            reduce using rule 64 (expresion -> expresionInt .)
    LDER            reduce using rule 64 (expresion -> expresionInt .)


state 114

    (65) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 65 (expresion -> expresionDouble .)
    PDER            reduce using rule 65 (expresion -> expresionDouble .)
    INT             reduce using rule 65 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 65 (expresion -> expresionDouble .)
    NUM             reduce using rule 65 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 65 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 65 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 65 (expresion -> expresionDouble .)
    VAR             reduce using rule 65 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 65 (expresion -> expresionDouble .)
    WHILE           reduce using rule 65 (expresion -> expresionDouble .)
    DO              reduce using rule 65 (expresion -> expresionDouble .)
    IF              reduce using rule 65 (expresion -> expresionDouble .)
    ELSE            reduce using rule 65 (expresion -> expresionDouble .)
    PRINT           reduce using rule 65 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 65 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 65 (expresion -> expresionDouble .)
    STRING          reduce using rule 65 (expresion -> expresionDouble .)
    BOOL            reduce using rule 65 (expresion -> expresionDouble .)
    $end            reduce using rule 65 (expresion -> expresionDouble .)
    LDER            reduce using rule 65 (expresion -> expresionDouble .)


state 115

    (66) expresion -> expresionBool .

    PUNTOYCOMA      reduce using rule 66 (expresion -> expresionBool .)
    PDER            reduce using rule 66 (expresion -> expresionBool .)
    INT             reduce using rule 66 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 66 (expresion -> expresionBool .)
    NUM             reduce using rule 66 (expresion -> expresionBool .)
    STRINGR         reduce using rule 66 (expresion -> expresionBool .)
    BOOLR           reduce using rule 66 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 66 (expresion -> expresionBool .)
    VAR             reduce using rule 66 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 66 (expresion -> expresionBool .)
    WHILE           reduce using rule 66 (expresion -> expresionBool .)
    DO              reduce using rule 66 (expresion -> expresionBool .)
    IF              reduce using rule 66 (expresion -> expresionBool .)
    ELSE            reduce using rule 66 (expresion -> expresionBool .)
    PRINT           reduce using rule 66 (expresion -> expresionBool .)
    ENTERO          reduce using rule 66 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 66 (expresion -> expresionBool .)
    STRING          reduce using rule 66 (expresion -> expresionBool .)
    BOOL            reduce using rule 66 (expresion -> expresionBool .)
    $end            reduce using rule 66 (expresion -> expresionBool .)
    LDER            reduce using rule 66 (expresion -> expresionBool .)


state 116

    (57) valor -> ENTERO .
    (81) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 57 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 57 (valor -> ENTERO .)
    SUMA            reduce using rule 57 (valor -> ENTERO .)
    RESTA           reduce using rule 57 (valor -> ENTERO .)
    MULTI           reduce using rule 57 (valor -> ENTERO .)
    DIV             reduce using rule 57 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 57 (valor -> ENTERO .)
    MOD             reduce using rule 57 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 57 (valor -> ENTERO .)
    PDER            reduce using rule 57 (valor -> ENTERO .)
    INT             reduce using rule 57 (valor -> ENTERO .)
    DOUBLER         reduce using rule 57 (valor -> ENTERO .)
    NUM             reduce using rule 57 (valor -> ENTERO .)
    STRINGR         reduce using rule 57 (valor -> ENTERO .)
    BOOLR           reduce using rule 57 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 57 (valor -> ENTERO .)
    VAR             reduce using rule 57 (valor -> ENTERO .)
    VARIABLE        reduce using rule 57 (valor -> ENTERO .)
    WHILE           reduce using rule 57 (valor -> ENTERO .)
    DO              reduce using rule 57 (valor -> ENTERO .)
    IF              reduce using rule 57 (valor -> ENTERO .)
    ELSE            reduce using rule 57 (valor -> ENTERO .)
    PRINT           reduce using rule 57 (valor -> ENTERO .)
    ENTERO          reduce using rule 57 (valor -> ENTERO .)
    DOUBLE          reduce using rule 57 (valor -> ENTERO .)
    STRING          reduce using rule 57 (valor -> ENTERO .)
    BOOL            reduce using rule 57 (valor -> ENTERO .)
    $end            reduce using rule 57 (valor -> ENTERO .)
    LDER            reduce using rule 57 (valor -> ENTERO .)
    DIGUAL          reduce using rule 81 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 81 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 81 (valorInt -> ENTERO .)
    MENOR           reduce using rule 81 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 81 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 81 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 81 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 81 (valorInt -> ENTERO .) ]


state 117

    (59) valor -> DOUBLE .
    (85) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 59 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 59 (valor -> DOUBLE .)
    SUMA            reduce using rule 59 (valor -> DOUBLE .)
    RESTA           reduce using rule 59 (valor -> DOUBLE .)
    MULTI           reduce using rule 59 (valor -> DOUBLE .)
    DIV             reduce using rule 59 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 59 (valor -> DOUBLE .)
    MOD             reduce using rule 59 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 59 (valor -> DOUBLE .)
    PDER            reduce using rule 59 (valor -> DOUBLE .)
    INT             reduce using rule 59 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 59 (valor -> DOUBLE .)
    NUM             reduce using rule 59 (valor -> DOUBLE .)
    STRINGR         reduce using rule 59 (valor -> DOUBLE .)
    BOOLR           reduce using rule 59 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 59 (valor -> DOUBLE .)
    VAR             reduce using rule 59 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 59 (valor -> DOUBLE .)
    WHILE           reduce using rule 59 (valor -> DOUBLE .)
    DO              reduce using rule 59 (valor -> DOUBLE .)
    IF              reduce using rule 59 (valor -> DOUBLE .)
    ELSE            reduce using rule 59 (valor -> DOUBLE .)
    PRINT           reduce using rule 59 (valor -> DOUBLE .)
    ENTERO          reduce using rule 59 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 59 (valor -> DOUBLE .)
    STRING          reduce using rule 59 (valor -> DOUBLE .)
    BOOL            reduce using rule 59 (valor -> DOUBLE .)
    $end            reduce using rule 59 (valor -> DOUBLE .)
    LDER            reduce using rule 59 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 85 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 85 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 85 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 85 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 85 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 85 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 85 (valorDouble -> DOUBLE .) ]


state 118

    (60) valor -> STRING .
    (77) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 60 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 60 (valor -> STRING .)
    SUMA            reduce using rule 60 (valor -> STRING .)
    RESTA           reduce using rule 60 (valor -> STRING .)
    MULTI           reduce using rule 60 (valor -> STRING .)
    DIV             reduce using rule 60 (valor -> STRING .)
    DIVENTERO       reduce using rule 60 (valor -> STRING .)
    MOD             reduce using rule 60 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 60 (valor -> STRING .)
    PDER            reduce using rule 60 (valor -> STRING .)
    INT             reduce using rule 60 (valor -> STRING .)
    DOUBLER         reduce using rule 60 (valor -> STRING .)
    NUM             reduce using rule 60 (valor -> STRING .)
    STRINGR         reduce using rule 60 (valor -> STRING .)
    BOOLR           reduce using rule 60 (valor -> STRING .)
    DYNAMIC         reduce using rule 60 (valor -> STRING .)
    VAR             reduce using rule 60 (valor -> STRING .)
    VARIABLE        reduce using rule 60 (valor -> STRING .)
    WHILE           reduce using rule 60 (valor -> STRING .)
    DO              reduce using rule 60 (valor -> STRING .)
    IF              reduce using rule 60 (valor -> STRING .)
    ELSE            reduce using rule 60 (valor -> STRING .)
    PRINT           reduce using rule 60 (valor -> STRING .)
    ENTERO          reduce using rule 60 (valor -> STRING .)
    DOUBLE          reduce using rule 60 (valor -> STRING .)
    STRING          reduce using rule 60 (valor -> STRING .)
    BOOL            reduce using rule 60 (valor -> STRING .)
    $end            reduce using rule 60 (valor -> STRING .)
    LDER            reduce using rule 60 (valor -> STRING .)

  ! SUMA            [ reduce using rule 77 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 77 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 77 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 77 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 77 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 77 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 77 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 77 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 77 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 77 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 77 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 77 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 77 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 77 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 77 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 77 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 77 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 77 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 77 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 77 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 77 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 77 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 77 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 77 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 77 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 77 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 77 (valorString -> STRING .) ]


state 119

    (43) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 107
    ENTERO          shift and go to state 109
    VARIABLE        shift and go to state 127

    expresionDouble                shift and go to state 155
    valorDouble                    shift and go to state 106
    valorInt                       shift and go to state 108

state 120

    (44) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 107
    ENTERO          shift and go to state 109
    VARIABLE        shift and go to state 127

    expresionDouble                shift and go to state 156
    valorDouble                    shift and go to state 106
    valorInt                       shift and go to state 108

state 121

    (45) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE

    STRING          shift and go to state 132
    VARIABLE        shift and go to state 133

    expresionString                shift and go to state 157
    valorString                    shift and go to state 25

state 122

    (46) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 107
    BOOL            shift and go to state 36
    ENTERO          shift and go to state 109

    expresionBool                  shift and go to state 158
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 26
    valorInt                       shift and go to state 108

state 123

    (47) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 110
    DOUBLE          shift and go to state 117
    STRING          shift and go to state 118
    BOOL            shift and go to state 36

    expresion                      shift and go to state 159
    valor                          shift and go to state 32
    expresionString                shift and go to state 112
    expresionInt                   shift and go to state 113
    expresionDouble                shift and go to state 114
    expresionBool                  shift and go to state 115
    valorString                    shift and go to state 25
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorBool                      shift and go to state 26

state 124

    (48) asignacion -> VAR VARIABLE IGUAL . expresion
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 110
    DOUBLE          shift and go to state 117
    STRING          shift and go to state 118
    BOOL            shift and go to state 36

    expresion                      shift and go to state 160
    valor                          shift and go to state 32
    expresionString                shift and go to state 112
    expresionInt                   shift and go to state 113
    expresionDouble                shift and go to state 114
    expresionBool                  shift and go to state 115
    valorString                    shift and go to state 25
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorBool                      shift and go to state 26

state 125

    (83) expresionInt -> valorInt . operadorMat expresionInt
    (84) expresionInt -> valorInt .
    (89) operadorMat -> . SUMA
    (90) operadorMat -> . RESTA
    (91) operadorMat -> . MULTI
    (92) operadorMat -> . DIV
    (93) operadorMat -> . DIVENTERO
    (94) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 84 (expresionInt -> valorInt .)
    INT             reduce using rule 84 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 84 (expresionInt -> valorInt .)
    NUM             reduce using rule 84 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 84 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 84 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 84 (expresionInt -> valorInt .)
    VAR             reduce using rule 84 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 84 (expresionInt -> valorInt .)
    WHILE           reduce using rule 84 (expresionInt -> valorInt .)
    DO              reduce using rule 84 (expresionInt -> valorInt .)
    IF              reduce using rule 84 (expresionInt -> valorInt .)
    ELSE            reduce using rule 84 (expresionInt -> valorInt .)
    PRINT           reduce using rule 84 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 84 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 84 (expresionInt -> valorInt .)
    STRING          reduce using rule 84 (expresionInt -> valorInt .)
    BOOL            reduce using rule 84 (expresionInt -> valorInt .)
    $end            reduce using rule 84 (expresionInt -> valorInt .)
    LDER            reduce using rule 84 (expresionInt -> valorInt .)
    PDER            reduce using rule 84 (expresionInt -> valorInt .)
    SUMA            shift and go to state 67
    RESTA           shift and go to state 68
    MULTI           shift and go to state 69
    DIV             shift and go to state 70
    DIVENTERO       shift and go to state 71
    MOD             shift and go to state 72

    operadorMat                    shift and go to state 66

state 126

    (83) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    PRINT           reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 83 (expresionInt -> valorInt operadorMat expresionInt .)


state 127

    (82) valorInt -> VARIABLE .

    SUMA            reduce using rule 82 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 82 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 82 (valorInt -> VARIABLE .)
    DIV             reduce using rule 82 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 82 (valorInt -> VARIABLE .)
    MOD             reduce using rule 82 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 82 (valorInt -> VARIABLE .)
    INT             reduce using rule 82 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 82 (valorInt -> VARIABLE .)
    NUM             reduce using rule 82 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 82 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 82 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 82 (valorInt -> VARIABLE .)
    VAR             reduce using rule 82 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 82 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 82 (valorInt -> VARIABLE .)
    DO              reduce using rule 82 (valorInt -> VARIABLE .)
    IF              reduce using rule 82 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 82 (valorInt -> VARIABLE .)
    PRINT           reduce using rule 82 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 82 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 82 (valorInt -> VARIABLE .)
    STRING          reduce using rule 82 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 82 (valorInt -> VARIABLE .)
    $end            reduce using rule 82 (valorInt -> VARIABLE .)
    LDER            reduce using rule 82 (valorInt -> VARIABLE .)
    PDER            reduce using rule 82 (valorInt -> VARIABLE .)


state 128

    (87) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PRINT           reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 87 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 129

    (72) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    INT             reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NUM             reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRINGR         reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOLR           reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VAR             reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    WHILE           reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DO              reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    IF              reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSE            reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PRINT           reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ENTERO          reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRING          reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOL            reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    $end            reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    LDER            reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 72 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 130

    (75) expresionBool -> valorDouble comparadorMat VARIABLE .
    (82) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    INT             reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NUM             reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRINGR         reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOLR           reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VAR             reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    WHILE           reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DO              reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    IF              reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSE            reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PRINT           reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ENTERO          reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRING          reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOL            reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    $end            reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    LDER            reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 75 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 82 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 82 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 82 (valorInt -> VARIABLE .)
    DIV             reduce using rule 82 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 82 (valorInt -> VARIABLE .)
    MOD             reduce using rule 82 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]


state 131

    (79) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    INT             reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    DOUBLER         reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    NUM             reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    STRINGR         reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    BOOLR           reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    DYNAMIC         reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    VAR             reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    VARIABLE        reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    WHILE           reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    DO              reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    IF              reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    ELSE            reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    PRINT           reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    ENTERO          reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    DOUBLE          reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    STRING          reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    BOOL            reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)
    PDER            reduce using rule 79 (expresionString -> valorString operadorMat expresionString .)


state 132

    (77) valorString -> STRING .

    SUMA            reduce using rule 77 (valorString -> STRING .)
    RESTA           reduce using rule 77 (valorString -> STRING .)
    MULTI           reduce using rule 77 (valorString -> STRING .)
    DIV             reduce using rule 77 (valorString -> STRING .)
    DIVENTERO       reduce using rule 77 (valorString -> STRING .)
    MOD             reduce using rule 77 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 77 (valorString -> STRING .)
    INT             reduce using rule 77 (valorString -> STRING .)
    DOUBLER         reduce using rule 77 (valorString -> STRING .)
    NUM             reduce using rule 77 (valorString -> STRING .)
    STRINGR         reduce using rule 77 (valorString -> STRING .)
    BOOLR           reduce using rule 77 (valorString -> STRING .)
    DYNAMIC         reduce using rule 77 (valorString -> STRING .)
    VAR             reduce using rule 77 (valorString -> STRING .)
    VARIABLE        reduce using rule 77 (valorString -> STRING .)
    WHILE           reduce using rule 77 (valorString -> STRING .)
    DO              reduce using rule 77 (valorString -> STRING .)
    IF              reduce using rule 77 (valorString -> STRING .)
    ELSE            reduce using rule 77 (valorString -> STRING .)
    PRINT           reduce using rule 77 (valorString -> STRING .)
    ENTERO          reduce using rule 77 (valorString -> STRING .)
    DOUBLE          reduce using rule 77 (valorString -> STRING .)
    STRING          reduce using rule 77 (valorString -> STRING .)
    BOOL            reduce using rule 77 (valorString -> STRING .)
    $end            reduce using rule 77 (valorString -> STRING .)
    LDER            reduce using rule 77 (valorString -> STRING .)
    PDER            reduce using rule 77 (valorString -> STRING .)


state 133

    (78) valorString -> VARIABLE .

    SUMA            reduce using rule 78 (valorString -> VARIABLE .)
    RESTA           reduce using rule 78 (valorString -> VARIABLE .)
    MULTI           reduce using rule 78 (valorString -> VARIABLE .)
    DIV             reduce using rule 78 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 78 (valorString -> VARIABLE .)
    MOD             reduce using rule 78 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 78 (valorString -> VARIABLE .)
    INT             reduce using rule 78 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 78 (valorString -> VARIABLE .)
    NUM             reduce using rule 78 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 78 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 78 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 78 (valorString -> VARIABLE .)
    VAR             reduce using rule 78 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 78 (valorString -> VARIABLE .)
    WHILE           reduce using rule 78 (valorString -> VARIABLE .)
    DO              reduce using rule 78 (valorString -> VARIABLE .)
    IF              reduce using rule 78 (valorString -> VARIABLE .)
    ELSE            reduce using rule 78 (valorString -> VARIABLE .)
    PRINT           reduce using rule 78 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 78 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 78 (valorString -> VARIABLE .)
    STRING          reduce using rule 78 (valorString -> VARIABLE .)
    BOOL            reduce using rule 78 (valorString -> VARIABLE .)
    $end            reduce using rule 78 (valorString -> VARIABLE .)
    LDER            reduce using rule 78 (valorString -> VARIABLE .)
    PDER            reduce using rule 78 (valorString -> VARIABLE .)


state 134

    (67) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo

    PDER            shift and go to state 161


state 135

    (72) expresionBool -> valorDouble . comparadorMat expresionDouble
    (75) expresionBool -> valorDouble . comparadorMat VARIABLE
    (95) comparadorMat -> . DIGUAL
    (96) comparadorMat -> . NOIGUAL
    (97) comparadorMat -> . MAYOR
    (98) comparadorMat -> . MENOR
    (99) comparadorMat -> . MAYIGUAL
    (100) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 54
    NOIGUAL         shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYIGUAL        shift and go to state 58
    MENIGUAL        shift and go to state 59

    comparadorMat                  shift and go to state 74

state 136

    (73) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (74) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (71) valorBool -> VARIABLE .
    (82) valorInt -> VARIABLE .
    (95) comparadorMat -> . DIGUAL
    (96) comparadorMat -> . NOIGUAL
    (97) comparadorMat -> . MAYOR
    (98) comparadorMat -> . MENOR
    (99) comparadorMat -> . MAYIGUAL
    (100) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PDER            reduce using rule 71 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 71 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 54
    NOIGUAL         shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYIGUAL        shift and go to state 58
    MENIGUAL        shift and go to state 59

  ! DIGUAL          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 52

state 137

    (69) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 162


state 138

    (53) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (54) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER

    PDER            shift and go to state 163


state 139

    (56) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 164


state 140

    (28) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    PRINT           reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)


state 141

    (29) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    PRINT           reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)


state 142

    (30) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PRINT           reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 143

    (31) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    PRINT           reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)


state 144

    (32) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    PRINT           reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)


state 145

    (35) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PRINT           reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 146

    (36) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PRINT           reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 147

    (37) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PRINT           reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 148

    (39) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    PRINT           reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 149

    (41) algoritmo -> imprimir PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLER         reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    NUM             reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    STRINGR         reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOLR           reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DYNAMIC         reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    VAR             reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    VARIABLE        reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DO              reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    PRINT           reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    ENTERO          reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLE          reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    STRING          reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOL            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)


state 150

    (51) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 165


state 151

    (52) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 166


state 152

    (50) asignacionSimple -> VARIABLE . IGUAL expresion
    (58) valor -> VARIABLE .
    (73) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (74) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (78) valorString -> VARIABLE .
    (82) valorInt -> VARIABLE .
    (71) valorBool -> VARIABLE .
    (95) comparadorMat -> . DIGUAL
    (96) comparadorMat -> . NOIGUAL
    (97) comparadorMat -> . MAYOR
    (98) comparadorMat -> . MENOR
    (99) comparadorMat -> . MAYIGUAL
    (100) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 53
    SUMA            reduce using rule 58 (valor -> VARIABLE .)
    RESTA           reduce using rule 58 (valor -> VARIABLE .)
    MULTI           reduce using rule 58 (valor -> VARIABLE .)
    DIV             reduce using rule 58 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 58 (valor -> VARIABLE .)
    MOD             reduce using rule 58 (valor -> VARIABLE .)
    PDER            reduce using rule 58 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 54
    NOIGUAL         shift and go to state 55
    MAYOR           shift and go to state 56
    MENOR           shift and go to state 57
    MAYIGUAL        shift and go to state 58
    MENIGUAL        shift and go to state 59

  ! SUMA            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 78 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 82 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 71 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 52

state 153

    (61) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 61 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 61 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 61 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 61 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 61 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 61 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 61 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 61 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 61 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 61 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 61 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 61 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 61 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 61 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 61 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 61 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 61 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 61 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 61 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 61 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 61 (expresion -> valor operadorMat expresion .)


state 154

    (42) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 42 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 155

    (43) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 43 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 156

    (44) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 44 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 157

    (45) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 45 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 158

    (46) asignacion -> BOOLR VARIABLE IGUAL expresionBool .

    PUNTOYCOMA      reduce using rule 46 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)


state 159

    (47) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 47 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 160

    (48) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 161

    (67) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (68) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    LIZQ            shift and go to state 167
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionBool                  shift and go to state 85
    algoritmo                      shift and go to state 168
    asignacion                     shift and go to state 81
    expresionInt                   shift and go to state 82
    expresionDouble                shift and go to state 83
    expresionString                shift and go to state 84
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 86
    sentenciaDoWhile               shift and go to state 87
    sentenciaIf                    shift and go to state 88
    sentenciaElse                  shift and go to state 89
    imprimir                       shift and go to state 90
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 162

    (69) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 169


state 163

    (53) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (54) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    LIZQ            shift and go to state 171
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionBool                  shift and go to state 85
    algoritmo                      shift and go to state 170
    asignacion                     shift and go to state 81
    expresionInt                   shift and go to state 82
    expresionDouble                shift and go to state 83
    expresionString                shift and go to state 84
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 86
    sentenciaDoWhile               shift and go to state 87
    sentenciaIf                    shift and go to state 88
    sentenciaElse                  shift and go to state 89
    imprimir                       shift and go to state 90
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 164

    (56) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    PRINT           reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 56 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 165

    (51) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 51 (imprimir -> PRINT PIZQ expresion PDER .)


state 166

    (52) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 52 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 167

    (67) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionBool                  shift and go to state 85
    algoritmo                      shift and go to state 172
    asignacion                     shift and go to state 81
    expresionInt                   shift and go to state 82
    expresionDouble                shift and go to state 83
    expresionString                shift and go to state 84
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 86
    sentenciaDoWhile               shift and go to state 87
    sentenciaIf                    shift and go to state 88
    sentenciaElse                  shift and go to state 89
    imprimir                       shift and go to state 90
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 168

    (68) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 68 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 169

    (69) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 173


state 170

    (53) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 53 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 171

    (54) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . asignacionSimple
    (83) expresionInt -> . valorInt operadorMat expresionInt
    (84) expresionInt -> . valorInt
    (87) expresionDouble -> . valorDouble operadorMat expresionDouble
    (88) expresionDouble -> . valorDouble
    (79) expresionString -> . valorString operadorMat expresionString
    (80) expresionString -> . valorString
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (61) expresion -> . valor operadorMat expresion
    (62) expresion -> . valor
    (63) expresion -> . expresionString
    (64) expresion -> . expresionInt
    (65) expresion -> . expresionDouble
    (66) expresion -> . expresionBool
    (67) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (68) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (69) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (53) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (54) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (55) sentenciaElse -> . ELSE algoritmo
    (56) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (51) imprimir -> . PRINT PIZQ expresion PDER
    (52) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (50) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (77) valorString -> . STRING
    (78) valorString -> . VARIABLE
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (57) valor -> . ENTERO
    (58) valor -> . VARIABLE
    (59) valor -> . DOUBLE
    (60) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    IF              shift and go to state 29
    ELSE            shift and go to state 30
    PRINT           shift and go to state 31
    ENTERO          shift and go to state 33
    DOUBLE          shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36

    expresionBool                  shift and go to state 85
    algoritmo                      shift and go to state 174
    asignacion                     shift and go to state 81
    expresionInt                   shift and go to state 82
    expresionDouble                shift and go to state 83
    expresionString                shift and go to state 84
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 86
    sentenciaDoWhile               shift and go to state 87
    sentenciaIf                    shift and go to state 88
    sentenciaElse                  shift and go to state 89
    imprimir                       shift and go to state 90
    asignacionSimple               shift and go to state 22
    valorInt                       shift and go to state 23
    valorDouble                    shift and go to state 24
    valorString                    shift and go to state 25
    valorBool                      shift and go to state 26
    valor                          shift and go to state 32

state 172

    (67) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 175


state 173

    (69) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (72) expresionBool -> . valorDouble comparadorMat expresionDouble
    (73) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (74) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (75) expresionBool -> . valorDouble comparadorMat VARIABLE
    (76) expresionBool -> . valorBool
    (85) valorDouble -> . DOUBLE
    (86) valorDouble -> . valorInt
    (70) valorBool -> . BOOL
    (71) valorBool -> . VARIABLE
    (81) valorInt -> . ENTERO
    (82) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 136
    DOUBLE          shift and go to state 107
    BOOL            shift and go to state 36
    ENTERO          shift and go to state 109

    expresionBool                  shift and go to state 176
    valorDouble                    shift and go to state 135
    valorBool                      shift and go to state 26
    valorInt                       shift and go to state 108

state 174

    (54) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 177


state 175

    (67) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 67 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 176

    (69) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER

    PDER            shift and go to state 178


state 177

    (54) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 54 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 178

    (69) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 69 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 7 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 15 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 15 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 23 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 23 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 23 resolved as shift
WARNING: shift/reduce conflict for DIV in state 23 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 23 resolved as shift
WARNING: shift/reduce conflict for MOD in state 23 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 82 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 83 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 84 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 85 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 86 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 88 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 89 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 110 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 152 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 152 resolved as shift
WARNING: reduce/reduce conflict in state 15 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 15 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 23 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 23
WARNING: reduce/reduce conflict in state 33 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 33
WARNING: reduce/reduce conflict in state 34 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 34
WARNING: reduce/reduce conflict in state 35 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 35
WARNING: reduce/reduce conflict in state 104 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 104
WARNING: reduce/reduce conflict in state 110 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 110
WARNING: reduce/reduce conflict in state 110 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 110
WARNING: reduce/reduce conflict in state 110 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 110
WARNING: reduce/reduce conflict in state 116 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 116
WARNING: reduce/reduce conflict in state 117 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 118
WARNING: reduce/reduce conflict in state 130 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 130
WARNING: reduce/reduce conflict in state 152 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 152
