Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    DOSPUNTOS
    FLECHA
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONTAKE
    RETURN
    SETFROM
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    expresionNewList -> NEWLIST PIZQ PDER
Rule 56    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 57    expresionNewList -> CIZQ CDER
Rule 58    expresionLista -> LIST MENOR objetoList MAYOR VARIABLE
Rule 59    expresionLista -> LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
Rule 60    expresionLista -> expresionListaTipos
Rule 61    objetoList -> VARIABLE
Rule 62    objetoList -> STRINGR
Rule 63    objetoList -> INT
Rule 64    objetoList -> DOUBLER
Rule 65    objetoList -> NUM
Rule 66    objetoList -> BOOLR
Rule 67    objetoList -> DYNAMIC
Rule 68    objetoList -> MAP
Rule 69    objetoList -> SET
Rule 70    objetoList -> LIST MENOR objetoList MAYOR
Rule 71    expresionListaTipos -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 72    expresionListaTipos -> CIZQ expListString CDER
Rule 73    expresionListaTipos -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 74    expresionListaTipos -> CIZQ expListInt CDER
Rule 75    expresionListaTipos -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
Rule 76    expresionListaTipos -> CIZQ expListDouble CDER
Rule 77    expresionListaTipos -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 78    expresionListaTipos -> CIZQ expListNum CDER
Rule 79    expresionListaTipos -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 80    expresionListaTipos -> CIZQ expListBool CDER
Rule 81    expListString -> STRING
Rule 82    expListString -> STRING COMA expListString
Rule 83    expListInt -> ENTERO
Rule 84    expListInt -> ENTERO COMA expListInt
Rule 85    expListDouble -> DOUBLE
Rule 86    expListDouble -> DOUBLE COMA expListDouble
Rule 87    expListNum -> ENTERO
Rule 88    expListNum -> DOUBLE
Rule 89    expListNum -> ENTERO COMA expListNum
Rule 90    expListNum -> DOUBLE COMA expListNum
Rule 91    expListBool -> BOOL
Rule 92    expListBool -> BOOL COMA expListBool
Rule 93    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 94    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 95    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 96    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 97    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 98    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 99    asignacion -> VAR VARIABLE IGUAL expresion
Rule 100   asignacion -> asignacionSimple
Rule 101   asignacionSimple -> VARIABLE IGUAL expresion
Rule 102   imprimir -> PRINT PIZQ expresion PDER
Rule 103   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 104   funcionStdin -> FUNCIONSTDIN
Rule 105   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 106   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 107   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 108   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 109   sentenciaElse -> ELSE final
Rule 110   sentenciaElse -> ELSE LIZQ final LDER
Rule 111   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 112   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 113   valor -> ENTERO
Rule 114   valor -> VARIABLE
Rule 115   valor -> DOUBLE
Rule 116   valor -> STRING
Rule 117   expresion -> valor operadorMat expresion
Rule 118   expresion -> valor
Rule 119   expresion -> expresionString
Rule 120   expresion -> expresionInt
Rule 121   expresion -> expresionDouble
Rule 122   expresion -> expresionBool
Rule 123   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 124   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 125   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 126   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 127   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 128   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 129   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 130   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 131   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 132   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 133   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 134   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 135   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 136   expresionBoolFor -> valorBool
Rule 137   expresionBoolFor -> negacionBool
Rule 138   expresionBoolFor -> comparacionBool
Rule 139   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 140   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 141   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 142   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 143   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 144   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 145   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 146   valorBool -> BOOL
Rule 147   valorBool -> VARIABLE
Rule 148   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 149   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 150   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 151   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 152   expresionBool -> valorBool
Rule 153   expresionBool -> negacionBool
Rule 154   expresionBool -> comparacionBool
Rule 155   expresionBool -> valor IS objeto
Rule 156   expresionBool -> valor ISNEGADO objeto
Rule 157   negacionBool -> NOT PIZQ expresionBool PDER
Rule 158   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 159   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 160   valorString -> STRING
Rule 161   valorString -> VARIABLE
Rule 162   valorString -> FUNCIONSTDIN
Rule 163   valorString -> expresionIndexString
Rule 164   valorString -> sentenciaSubstring
Rule 165   expresionString -> valorString SUMA expresionString
Rule 166   expresionString -> valorString
Rule 167   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 168   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 169   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 170   valorInt -> ENTERO
Rule 171   valorInt -> VARIABLE
Rule 172   expresionInt -> valorInt operadorMat expresionInt
Rule 173   expresionInt -> valorInt
Rule 174   valorDouble -> DOUBLE
Rule 175   valorDouble -> valorInt
Rule 176   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 177   expresionDouble -> valorDouble
Rule 178   operadorMat -> SUMA
Rule 179   operadorMat -> RESTA
Rule 180   operadorMat -> MULTI
Rule 181   operadorMat -> DIV
Rule 182   operadorMat -> DIVENTERO
Rule 183   operadorMat -> MOD
Rule 184   comparadorMat -> DIGUAL
Rule 185   comparadorMat -> NOIGUAL
Rule 186   comparadorMat -> MAYOR
Rule 187   comparadorMat -> MENOR
Rule 188   comparadorMat -> MAYIGUAL
Rule 189   comparadorMat -> MENIGUAL
Rule 190   operadorLogico -> AND
Rule 191   operadorLogico -> OR
Rule 192   objeto -> STRINGR
Rule 193   objeto -> INT
Rule 194   objeto -> DOUBLER
Rule 195   objeto -> NUM
Rule 196   objeto -> VAR
Rule 197   objeto -> DYNAMIC
Rule 198   objeto -> LIST
Rule 199   objeto -> BOOL
Rule 200   objeto -> MAP
Rule 201   objeto -> SET

Terminals, with rules where they appear

AND                  : 190
AS                   : 
BOOL                 : 91 92 146 199
BOOLR                : 66 79 97
BREAK                : 
CASE                 : 
CDER                 : 57 71 72 73 74 75 76 77 78 79 80 167
CIZQ                 : 57 71 72 73 74 75 76 77 78 79 80 167
COMA                 : 82 84 86 89 90 92 169
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 184
DIV                  : 181
DIVENTERO            : 182
DO                   : 145
DOSPUNTOS            : 
DOUBLE               : 85 86 88 90 115 174
DOUBLER              : 64 75 94 124 194
DRESTA               : 49 50 141 142
DSUMA                : 47 48 139 140
DYNAMIC              : 67 98 126 127 197
ELSE                 : 109 110
ELSEIF               : 111 112
ENTERO               : 56 83 84 87 89 113 167 168 169 169 170
FLECHA               : 
FOR                  : 139 140 141 142
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 104 162
FUNCIONSTDOUT        : 105 106
FUNCIONSUBSTRING     : 168 169
FUNCIONTAKE          : 
IF                   : 107 108
IGUAL                : 59 71 73 75 77 79 93 94 95 96 97 98 99 101 123 124 125 126 127 128 129 130 131
INT                  : 63 73 93 123 193
IS                   : 155
ISNEGADO             : 156
LDER                 : 108 110 112 139 141 143 145
LIST                 : 58 59 70 71 73 75 77 79 198
LIZQ                 : 108 110 112 139 141 143 145
MAP                  : 68 200
MAYIGUAL             : 188
MAYOR                : 58 59 70 71 73 75 77 79 186
MENIGUAL             : 189
MENOR                : 58 59 70 71 73 75 77 79 187
MOD                  : 183
MULTI                : 180
NEWLIST              : 55 56
NOIGUAL              : 185
NOT                  : 157
NUM                  : 65 77 95 125 195
OR                   : 191
PDER                 : 55 56 102 103 105 106 107 108 111 112 139 140 141 142 143 144 145 157 168 169
PIZQ                 : 55 56 102 103 105 106 107 108 111 112 139 140 141 142 143 144 145 157 168 169
PRINT                : 102 103
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 139 139 140 140 141 141 142 142
RESTA                : 179
RETURN               : 
SET                  : 69 201
SETFROM              : 
STRING               : 81 82 116 160
STRINGR              : 62 71 96 192
SUMA                 : 165 178
SWITCH               : 
VAR                  : 99 128 129 196
VARIABLE             : 47 48 49 50 58 59 61 71 73 75 77 79 93 94 95 96 97 98 99 101 114 123 124 125 126 127 128 129 130 131 133 134 134 135 139 140 141 142 147 149 150 150 151 161 168 169 171
WHILE                : 143 144 145
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 139 140 141 142
asignacionSimple     : 100 103 106
comparacionBool      : 35 36 138 154 159
comparadorMat        : 132 133 134 135 148 149 150 151
expListBool          : 79 80 92
expListDouble        : 75 76 86
expListInt           : 73 74 84
expListNum           : 77 78 89 90
expListString        : 71 72 82
expresion            : 98 99 101 102 105 117
expresionBool        : 9 10 97 107 108 111 112 122 143 144 145 157 158 158 159
expresionBoolFor     : 11 12 139 140 141 142
expresionDouble      : 5 6 94 95 121 124 125 127 129 131 132 133 148 149 176
expresionIndexString : 163
expresionInt         : 3 4 93 120 123 126 128 130 172
expresionLista       : 51 52
expresionListaTipos  : 60
expresionNewList     : 53 54 59
expresionString      : 7 8 96 119 165
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 107 108 109 110 111 112 139 140 141 142 143 144 145 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 137 153
objeto               : 155 156
objetoList           : 58 59 70
operadorLogico       : 158 159
operadorMat          : 117 172 176
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 164
sentenciaWhile       : 13 14 15 16
valor                : 117 118 155 156
valorBool            : 136 152
valorDouble          : 132 135 148 151 176 177
valorInt             : 172 173 175
valorString          : 165 166 167

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 55


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 56


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 57


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 58


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 59
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 65
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 64
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 66


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 67
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 68
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 69
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 70
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 71


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 72


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 73


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (153) expresionBool -> negacionBool .
    (137) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 74
    AND             reduce using rule 153 (expresionBool -> negacionBool .)
    OR              reduce using rule 153 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 153 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 137 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (154) expresionBool -> comparacionBool .
    (138) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 75
    AND             reduce using rule 154 (expresionBool -> comparacionBool .)
    OR              reduce using rule 154 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 154 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 138 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 76
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 77
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 78
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 79
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (164) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 80
    SUMA            reduce using rule 164 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 164 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 164 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (149) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (150) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (133) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (134) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (168) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) asignacionSimple -> VARIABLE . IGUAL expresion
    (171) valorInt -> VARIABLE .
    (161) valorString -> VARIABLE .
    (147) valorBool -> VARIABLE .
    (114) valor -> VARIABLE .
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 161 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 161 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 147 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 81
    DRESTA          shift and go to state 82
    FUNCIONSUBSTRING shift and go to state 84
    IGUAL           shift and go to state 85
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 161 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 161 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 147 (valorBool -> VARIABLE .)
    AND             reduce using rule 147 (valorBool -> VARIABLE .)
    OR              reduce using rule 147 (valorBool -> VARIABLE .)
    IS              reduce using rule 114 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 114 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! SUMA            [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 161 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 83

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 92


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 93


state 23

    (93) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 94


state 24

    (94) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 95


state 25

    (95) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 96


state 26

    (96) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 97


state 27

    (97) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 98


state 28

    (98) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 99


state 29

    (99) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 100


state 30

    (100) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 100 (asignacion -> asignacionSimple .)


state 31

    (172) expresionInt -> valorInt . operadorMat expresionInt
    (173) expresionInt -> valorInt .
    (175) valorDouble -> valorInt .
    (178) operadorMat -> . SUMA
    (179) operadorMat -> . RESTA
    (180) operadorMat -> . MULTI
    (181) operadorMat -> . DIV
    (182) operadorMat -> . DIVENTERO
    (183) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 173 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 173 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 173 (expresionInt -> valorInt .)
    PDER            reduce using rule 173 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 175 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 175 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 175 (valorDouble -> valorInt .)
    MENOR           reduce using rule 175 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 175 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 175 (valorDouble -> valorInt .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

  ! SUMA            [ reduce using rule 175 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 175 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 175 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 175 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 175 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 175 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 175 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 175 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 101

state 32

    (176) expresionDouble -> valorDouble . operadorMat expresionDouble
    (177) expresionDouble -> valorDouble .
    (148) expresionBool -> valorDouble . comparadorMat expresionDouble
    (151) expresionBool -> valorDouble . comparadorMat VARIABLE
    (132) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (135) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (178) operadorMat -> . SUMA
    (179) operadorMat -> . RESTA
    (180) operadorMat -> . MULTI
    (181) operadorMat -> . DIV
    (182) operadorMat -> . DIVENTERO
    (183) operadorMat -> . MOD
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 177 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    operadorMat                    shift and go to state 108
    comparadorMat                  shift and go to state 109

state 33

    (165) expresionString -> valorString . SUMA expresionString
    (166) expresionString -> valorString .
    (167) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 110
    PUNTOYCOMA      reduce using rule 166 (expresionString -> valorString .)
    PDER            reduce using rule 166 (expresionString -> valorString .)
    CIZQ            shift and go to state 111


state 34

    (152) expresionBool -> valorBool .
    (136) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 136 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 152 (expresionBool -> valorBool .)
    OR              reduce using rule 152 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 136 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 152 (expresionBool -> valorBool .) ]


state 35

    (155) expresionBool -> valor . IS objeto
    (156) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 112
    ISNEGADO        shift and go to state 113


state 36

    (143) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 114


state 37

    (145) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 115


state 38

    (107) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (108) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 116


state 39

    (109) sentenciaElse -> ELSE . final
    (110) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 118
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 117
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 40

    (102) imprimir -> PRINT . PIZQ expresion PDER
    (103) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 119


state 41

    (104) funcionStdin -> FUNCIONSTDIN .
    (162) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 104 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 104 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 162 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 162 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 162 (valorString -> FUNCIONSTDIN .) ]


state 42

    (105) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (106) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 120


state 43

    (157) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 121


state 44

    (111) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 122


state 45

    (139) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 123


state 46

    (170) valorInt -> ENTERO .
    (113) valor -> ENTERO .

    SUMA            reduce using rule 170 (valorInt -> ENTERO .)
    RESTA           reduce using rule 170 (valorInt -> ENTERO .)
    MULTI           reduce using rule 170 (valorInt -> ENTERO .)
    DIV             reduce using rule 170 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 170 (valorInt -> ENTERO .)
    MOD             reduce using rule 170 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 170 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 170 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 170 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 170 (valorInt -> ENTERO .)
    MENOR           reduce using rule 170 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 170 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 170 (valorInt -> ENTERO .)
    IS              reduce using rule 113 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 113 (valor -> ENTERO .)


state 47

    (58) expresionLista -> LIST . MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> LIST . MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionListaTipos -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (73) expresionListaTipos -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (75) expresionListaTipos -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (77) expresionListaTipos -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionListaTipos -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER

    MENOR           shift and go to state 124


state 48

    (60) expresionLista -> expresionListaTipos .

    PUNTOYCOMA      reduce using rule 60 (expresionLista -> expresionListaTipos .)


state 49

    (55) expresionNewList -> NEWLIST . PIZQ PDER
    (56) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 125


state 50

    (57) expresionNewList -> CIZQ . CDER
    (72) expresionListaTipos -> CIZQ . expListString CDER
    (74) expresionListaTipos -> CIZQ . expListInt CDER
    (76) expresionListaTipos -> CIZQ . expListDouble CDER
    (78) expresionListaTipos -> CIZQ . expListNum CDER
    (80) expresionListaTipos -> CIZQ . expListBool CDER
    (81) expListString -> . STRING
    (82) expListString -> . STRING COMA expListString
    (83) expListInt -> . ENTERO
    (84) expListInt -> . ENTERO COMA expListInt
    (85) expListDouble -> . DOUBLE
    (86) expListDouble -> . DOUBLE COMA expListDouble
    (87) expListNum -> . ENTERO
    (88) expListNum -> . DOUBLE
    (89) expListNum -> . ENTERO COMA expListNum
    (90) expListNum -> . DOUBLE COMA expListNum
    (91) expListBool -> . BOOL
    (92) expListBool -> . BOOL COMA expListBool

    CDER            shift and go to state 126
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135

    expListString                  shift and go to state 127
    expListInt                     shift and go to state 128
    expListDouble                  shift and go to state 129
    expListNum                     shift and go to state 130
    expListBool                    shift and go to state 131

state 51

    (174) valorDouble -> DOUBLE .
    (115) valor -> DOUBLE .

    SUMA            reduce using rule 174 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 174 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 174 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 174 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 174 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 174 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 174 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 174 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 174 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 174 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 174 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 174 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 174 (valorDouble -> DOUBLE .)
    IS              reduce using rule 115 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 115 (valor -> DOUBLE .)


state 52

    (160) valorString -> STRING .
    (116) valor -> STRING .

    SUMA            reduce using rule 160 (valorString -> STRING .)
    CIZQ            reduce using rule 160 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 160 (valorString -> STRING .)
    IS              reduce using rule 116 (valor -> STRING .)
    ISNEGADO        reduce using rule 116 (valor -> STRING .)


state 53

    (163) valorString -> expresionIndexString .

    SUMA            reduce using rule 163 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 163 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 163 (valorString -> expresionIndexString .)
    PDER            reduce using rule 163 (valorString -> expresionIndexString .)


state 54

    (146) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 146 (valorBool -> BOOL .)
    AND             reduce using rule 146 (valorBool -> BOOL .)
    OR              reduce using rule 146 (valorBool -> BOOL .)
    PDER            reduce using rule 146 (valorBool -> BOOL .)


state 55

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 136
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 56

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 137
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 57

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 138
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 58

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 139
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 59

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 140
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 60

    (158) comparacionBool -> expresionBool operadorLogico . expresionBool
    (159) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 141
    comparacionBool                shift and go to state 142
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    valor                          shift and go to state 35
    valorInt                       shift and go to state 147

state 61

    (190) operadorLogico -> AND .

    VARIABLE        reduce using rule 190 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 190 (operadorLogico -> AND .)
    BOOL            reduce using rule 190 (operadorLogico -> AND .)
    NOT             reduce using rule 190 (operadorLogico -> AND .)
    ENTERO          reduce using rule 190 (operadorLogico -> AND .)
    STRING          reduce using rule 190 (operadorLogico -> AND .)


state 62

    (191) operadorLogico -> OR .

    VARIABLE        reduce using rule 191 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 191 (operadorLogico -> OR .)
    BOOL            reduce using rule 191 (operadorLogico -> OR .)
    NOT             reduce using rule 191 (operadorLogico -> OR .)
    ENTERO          reduce using rule 191 (operadorLogico -> OR .)
    STRING          reduce using rule 191 (operadorLogico -> OR .)


state 63

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 150
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 64

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 65

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 151
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 66

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 152
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 67

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 153
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 68

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 69

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 154
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 70

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 71

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 155
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 72

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 156
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 73

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 157
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 74

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 158
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 75

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 159
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 76

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 160
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 77

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 78

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 161
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 79

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 80

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 162
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 81

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 163


state 82

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 164


state 83

    (149) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (150) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (133) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (134) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 165
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    expresionDouble                shift and go to state 166
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 84

    (168) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (169) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 170


state 85

    (101) asignacionSimple -> VARIABLE IGUAL . expresion
    (117) expresion -> . valor operadorMat expresion
    (118) expresion -> . valor
    (119) expresion -> . expresionString
    (120) expresion -> . expresionInt
    (121) expresion -> . expresionDouble
    (122) expresion -> . expresionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 43

    expresion                      shift and go to state 172
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 33
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 86

    (184) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 184 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 184 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 184 (comparadorMat -> DIGUAL .)


state 87

    (185) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 185 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 185 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 185 (comparadorMat -> NOIGUAL .)


state 88

    (186) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 186 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 186 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 186 (comparadorMat -> MAYOR .)


state 89

    (187) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 187 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 187 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 187 (comparadorMat -> MENOR .)


state 90

    (188) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 188 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 188 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 188 (comparadorMat -> MAYIGUAL .)


state 91

    (189) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 189 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 189 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 189 (comparadorMat -> MENIGUAL .)


state 92

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 184
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 93

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 185
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 94

    (93) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 186


state 95

    (94) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 187


state 96

    (95) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 188


state 97

    (96) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 189


state 98

    (97) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 190


state 99

    (98) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 191


state 100

    (99) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 192


state 101

    (172) expresionInt -> valorInt operadorMat . expresionInt
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    valorInt                       shift and go to state 193
    expresionInt                   shift and go to state 194

state 102

    (178) operadorMat -> SUMA .

    ENTERO          reduce using rule 178 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 178 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 178 (operadorMat -> SUMA .)
    STRING          reduce using rule 178 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 178 (operadorMat -> SUMA .)
    BOOL            reduce using rule 178 (operadorMat -> SUMA .)
    NOT             reduce using rule 178 (operadorMat -> SUMA .)


state 103

    (179) operadorMat -> RESTA .

    ENTERO          reduce using rule 179 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 179 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 179 (operadorMat -> RESTA .)
    STRING          reduce using rule 179 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 179 (operadorMat -> RESTA .)
    BOOL            reduce using rule 179 (operadorMat -> RESTA .)
    NOT             reduce using rule 179 (operadorMat -> RESTA .)


state 104

    (180) operadorMat -> MULTI .

    ENTERO          reduce using rule 180 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 180 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 180 (operadorMat -> MULTI .)
    STRING          reduce using rule 180 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 180 (operadorMat -> MULTI .)
    BOOL            reduce using rule 180 (operadorMat -> MULTI .)
    NOT             reduce using rule 180 (operadorMat -> MULTI .)


state 105

    (181) operadorMat -> DIV .

    ENTERO          reduce using rule 181 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 181 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 181 (operadorMat -> DIV .)
    STRING          reduce using rule 181 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 181 (operadorMat -> DIV .)
    BOOL            reduce using rule 181 (operadorMat -> DIV .)
    NOT             reduce using rule 181 (operadorMat -> DIV .)


state 106

    (182) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 182 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 182 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 182 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 182 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 182 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 182 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 182 (operadorMat -> DIVENTERO .)


state 107

    (183) operadorMat -> MOD .

    ENTERO          reduce using rule 183 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 183 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 183 (operadorMat -> MOD .)
    STRING          reduce using rule 183 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 183 (operadorMat -> MOD .)
    BOOL            reduce using rule 183 (operadorMat -> MOD .)
    NOT             reduce using rule 183 (operadorMat -> MOD .)


state 108

    (176) expresionDouble -> valorDouble operadorMat . expresionDouble
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 196
    valorInt                       shift and go to state 147

state 109

    (148) expresionBool -> valorDouble comparadorMat . expresionDouble
    (151) expresionBool -> valorDouble comparadorMat . VARIABLE
    (132) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (135) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 198
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 197
    valorInt                       shift and go to state 147

state 110

    (165) expresionString -> valorString SUMA . expresionString
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 200
    VARIABLE        shift and go to state 201
    FUNCIONSTDIN    shift and go to state 182

    valorString                    shift and go to state 33
    expresionString                shift and go to state 199
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 111

    (167) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 202


state 112

    (155) expresionBool -> valor IS . objeto
    (192) objeto -> . STRINGR
    (193) objeto -> . INT
    (194) objeto -> . DOUBLER
    (195) objeto -> . NUM
    (196) objeto -> . VAR
    (197) objeto -> . DYNAMIC
    (198) objeto -> . LIST
    (199) objeto -> . BOOL
    (200) objeto -> . MAP
    (201) objeto -> . SET

    STRINGR         shift and go to state 204
    INT             shift and go to state 205
    DOUBLER         shift and go to state 206
    NUM             shift and go to state 207
    VAR             shift and go to state 208
    DYNAMIC         shift and go to state 209
    LIST            shift and go to state 210
    BOOL            shift and go to state 211
    MAP             shift and go to state 212
    SET             shift and go to state 213

    objeto                         shift and go to state 203

state 113

    (156) expresionBool -> valor ISNEGADO . objeto
    (192) objeto -> . STRINGR
    (193) objeto -> . INT
    (194) objeto -> . DOUBLER
    (195) objeto -> . NUM
    (196) objeto -> . VAR
    (197) objeto -> . DYNAMIC
    (198) objeto -> . LIST
    (199) objeto -> . BOOL
    (200) objeto -> . MAP
    (201) objeto -> . SET

    STRINGR         shift and go to state 204
    INT             shift and go to state 205
    DOUBLER         shift and go to state 206
    NUM             shift and go to state 207
    VAR             shift and go to state 208
    DYNAMIC         shift and go to state 209
    LIST            shift and go to state 210
    BOOL            shift and go to state 211
    MAP             shift and go to state 212
    SET             shift and go to state 213

    objeto                         shift and go to state 214

state 114

    (143) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 215
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 35
    valorInt                       shift and go to state 147

state 115

    (145) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 216
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 116

    (107) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (108) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 217
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 35
    valorInt                       shift and go to state 147

state 117

    (109) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 109 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 109 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 109 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 109 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 109 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 109 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 109 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 109 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 109 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 109 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 109 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 109 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 109 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 109 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 109 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 109 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 109 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 109 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 109 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 109 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 109 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 109 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 109 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 109 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 109 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 109 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 109 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 109 (sentenciaElse -> ELSE final .)


state 118

    (110) sentenciaElse -> ELSE LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 218
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 119

    (102) imprimir -> PRINT PIZQ . expresion PDER
    (103) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (117) expresion -> . valor operadorMat expresion
    (118) expresion -> . valor
    (119) expresion -> . expresionString
    (120) expresion -> . expresionInt
    (121) expresion -> . expresionDouble
    (122) expresion -> . expresionBool
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 221
    ENTERO          shift and go to state 148
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 43

    expresion                      shift and go to state 219
    asignacionSimple               shift and go to state 220
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 33
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 120

    (105) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (106) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (117) expresion -> . valor operadorMat expresion
    (118) expresion -> . valor
    (119) expresion -> . expresionString
    (120) expresion -> . expresionInt
    (121) expresion -> . expresionDouble
    (122) expresion -> . expresionBool
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 221
    ENTERO          shift and go to state 148
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 43

    expresion                      shift and go to state 222
    asignacionSimple               shift and go to state 223
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 33
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 121

    (157) negacionBool -> NOT PIZQ . expresionBool PDER
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 224
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 35
    valorInt                       shift and go to state 147

state 122

    (111) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (112) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 225
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 35
    valorInt                       shift and go to state 147

state 123

    (139) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (123) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (124) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (125) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (126) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (127) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (128) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (129) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (130) asignacionFor -> . VARIABLE IGUAL expresionInt
    (131) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 228
    DOUBLER         shift and go to state 229
    NUM             shift and go to state 230
    DYNAMIC         shift and go to state 231
    VAR             shift and go to state 232
    VARIABLE        shift and go to state 227

    asignacionFor                  shift and go to state 226

state 124

    (58) expresionLista -> LIST MENOR . objetoList MAYOR VARIABLE
    (59) expresionLista -> LIST MENOR . objetoList MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionListaTipos -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (73) expresionListaTipos -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (75) expresionListaTipos -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (77) expresionListaTipos -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionListaTipos -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (61) objetoList -> . VARIABLE
    (62) objetoList -> . STRINGR
    (63) objetoList -> . INT
    (64) objetoList -> . DOUBLER
    (65) objetoList -> . NUM
    (66) objetoList -> . BOOLR
    (67) objetoList -> . DYNAMIC
    (68) objetoList -> . MAP
    (69) objetoList -> . SET
    (70) objetoList -> . LIST MENOR objetoList MAYOR

    STRINGR         shift and go to state 236
    INT             shift and go to state 237
    DOUBLER         shift and go to state 238
    NUM             shift and go to state 239
    BOOLR           shift and go to state 240
    VARIABLE        shift and go to state 235
    DYNAMIC         shift and go to state 241
    MAP             shift and go to state 242
    SET             shift and go to state 243
    LIST            shift and go to state 233

    objetoList                     shift and go to state 234

state 125

    (55) expresionNewList -> NEWLIST PIZQ . PDER
    (56) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 244
    ENTERO          shift and go to state 245


state 126

    (57) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 57 (expresionNewList -> CIZQ CDER .)


state 127

    (72) expresionListaTipos -> CIZQ expListString . CDER

    CDER            shift and go to state 246


state 128

    (74) expresionListaTipos -> CIZQ expListInt . CDER

    CDER            shift and go to state 247


state 129

    (76) expresionListaTipos -> CIZQ expListDouble . CDER

    CDER            shift and go to state 248


state 130

    (78) expresionListaTipos -> CIZQ expListNum . CDER

    CDER            shift and go to state 249


state 131

    (80) expresionListaTipos -> CIZQ expListBool . CDER

    CDER            shift and go to state 250


state 132

    (81) expListString -> STRING .
    (82) expListString -> STRING . COMA expListString

    CDER            reduce using rule 81 (expListString -> STRING .)
    COMA            shift and go to state 251


state 133

    (83) expListInt -> ENTERO .
    (84) expListInt -> ENTERO . COMA expListInt
    (87) expListNum -> ENTERO .
    (89) expListNum -> ENTERO . COMA expListNum

  ! reduce/reduce conflict for CDER resolved using rule 83 (expListInt -> ENTERO .)
    CDER            reduce using rule 83 (expListInt -> ENTERO .)
    COMA            shift and go to state 252

  ! CDER            [ reduce using rule 87 (expListNum -> ENTERO .) ]


state 134

    (85) expListDouble -> DOUBLE .
    (86) expListDouble -> DOUBLE . COMA expListDouble
    (88) expListNum -> DOUBLE .
    (90) expListNum -> DOUBLE . COMA expListNum

  ! reduce/reduce conflict for CDER resolved using rule 85 (expListDouble -> DOUBLE .)
    CDER            reduce using rule 85 (expListDouble -> DOUBLE .)
    COMA            shift and go to state 253

  ! CDER            [ reduce using rule 88 (expListNum -> DOUBLE .) ]


state 135

    (91) expListBool -> BOOL .
    (92) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 91 (expListBool -> BOOL .)
    COMA            shift and go to state 254


state 136

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 137

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 138

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 139

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 140

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 141

    (158) comparacionBool -> expresionBool operadorLogico expresionBool .
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 158 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 158 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! AND             [ reduce using rule 158 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 158 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 60

state 142

    (159) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (154) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 154 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 154 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 154 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 154 (expresionBool -> comparacionBool .)
    AND             reduce using rule 154 (expresionBool -> comparacionBool .)
    OR              reduce using rule 154 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 154 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 154 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 159 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 159 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 159 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 159 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 143

    (148) expresionBool -> valorDouble . comparadorMat expresionDouble
    (151) expresionBool -> valorDouble . comparadorMat VARIABLE
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    comparadorMat                  shift and go to state 255

state 144

    (149) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (150) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (147) valorBool -> VARIABLE .
    (114) valor -> VARIABLE .
    (171) valorInt -> VARIABLE .
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 147 (valorBool -> VARIABLE .)
    OR              reduce using rule 147 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 147 (valorBool -> VARIABLE .)
    PDER            reduce using rule 147 (valorBool -> VARIABLE .)
    IS              reduce using rule 114 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 114 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! DIGUAL          [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 256

state 145

    (152) expresionBool -> valorBool .

    AND             reduce using rule 152 (expresionBool -> valorBool .)
    OR              reduce using rule 152 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 152 (expresionBool -> valorBool .)
    PDER            reduce using rule 152 (expresionBool -> valorBool .)


state 146

    (153) expresionBool -> negacionBool .

    AND             reduce using rule 153 (expresionBool -> negacionBool .)
    OR              reduce using rule 153 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 153 (expresionBool -> negacionBool .)
    PDER            reduce using rule 153 (expresionBool -> negacionBool .)


state 147

    (175) valorDouble -> valorInt .

    DIGUAL          reduce using rule 175 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 175 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 175 (valorDouble -> valorInt .)
    MENOR           reduce using rule 175 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 175 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 175 (valorDouble -> valorInt .)
    SUMA            reduce using rule 175 (valorDouble -> valorInt .)
    RESTA           reduce using rule 175 (valorDouble -> valorInt .)
    MULTI           reduce using rule 175 (valorDouble -> valorInt .)
    DIV             reduce using rule 175 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 175 (valorDouble -> valorInt .)
    MOD             reduce using rule 175 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 175 (valorDouble -> valorInt .)
    AND             reduce using rule 175 (valorDouble -> valorInt .)
    OR              reduce using rule 175 (valorDouble -> valorInt .)
    PDER            reduce using rule 175 (valorDouble -> valorInt .)


state 148

    (113) valor -> ENTERO .
    (170) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 113 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 113 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 113 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 113 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 113 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 113 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 113 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 113 (valor -> ENTERO .)
    IS              reduce using rule 113 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 113 (valor -> ENTERO .)
    SUMA            reduce using rule 113 (valor -> ENTERO .)
    RESTA           reduce using rule 113 (valor -> ENTERO .)
    MULTI           reduce using rule 113 (valor -> ENTERO .)
    DIV             reduce using rule 113 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 113 (valor -> ENTERO .)
    MOD             reduce using rule 113 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 113 (valor -> ENTERO .)
    PDER            reduce using rule 113 (valor -> ENTERO .)
    DIGUAL          reduce using rule 170 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 170 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 170 (valorInt -> ENTERO .)
    MENOR           reduce using rule 170 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 170 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 170 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 170 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 170 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 170 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 170 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 170 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 170 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 170 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 170 (valorInt -> ENTERO .) ]


state 149

    (116) valor -> STRING .

    IS              reduce using rule 116 (valor -> STRING .)
    ISNEGADO        reduce using rule 116 (valor -> STRING .)


state 150

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 151

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 152

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 153

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 154

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 155

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 156

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 157

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 158

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 159

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 160

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 161

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 162

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 163

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 257
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 164

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 258
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 165

    (150) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (134) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (171) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 134 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 134 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 134 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 171 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 171 (valorInt -> VARIABLE .) ]


state 166

    (149) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (133) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 133 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 133 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 167

    (176) expresionDouble -> valorDouble . operadorMat expresionDouble
    (177) expresionDouble -> valorDouble .
    (178) operadorMat -> . SUMA
    (179) operadorMat -> . RESTA
    (180) operadorMat -> . MULTI
    (181) operadorMat -> . DIV
    (182) operadorMat -> . DIVENTERO
    (183) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 177 (expresionDouble -> valorDouble .)
    AND             reduce using rule 177 (expresionDouble -> valorDouble .)
    OR              reduce using rule 177 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 177 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

    operadorMat                    shift and go to state 108

state 168

    (174) valorDouble -> DOUBLE .

    SUMA            reduce using rule 174 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 174 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 174 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 174 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 174 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 174 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 174 (valorDouble -> DOUBLE .)
    AND             reduce using rule 174 (valorDouble -> DOUBLE .)
    OR              reduce using rule 174 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 174 (valorDouble -> DOUBLE .)


state 169

    (170) valorInt -> ENTERO .

    SUMA            reduce using rule 170 (valorInt -> ENTERO .)
    RESTA           reduce using rule 170 (valorInt -> ENTERO .)
    MULTI           reduce using rule 170 (valorInt -> ENTERO .)
    DIV             reduce using rule 170 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 170 (valorInt -> ENTERO .)
    MOD             reduce using rule 170 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 170 (valorInt -> ENTERO .)
    AND             reduce using rule 170 (valorInt -> ENTERO .)
    OR              reduce using rule 170 (valorInt -> ENTERO .)
    PDER            reduce using rule 170 (valorInt -> ENTERO .)


state 170

    (168) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (169) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 259


state 171

    (114) valor -> VARIABLE .
    (149) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (150) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (161) valorString -> VARIABLE .
    (171) valorInt -> VARIABLE .
    (147) valorBool -> VARIABLE .
    (168) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 114 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 114 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 114 (valor -> VARIABLE .)
    SUMA            reduce using rule 114 (valor -> VARIABLE .)
    RESTA           reduce using rule 114 (valor -> VARIABLE .)
    MULTI           reduce using rule 114 (valor -> VARIABLE .)
    DIV             reduce using rule 114 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 114 (valor -> VARIABLE .)
    MOD             reduce using rule 114 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 114 (valor -> VARIABLE .)
    PDER            reduce using rule 114 (valor -> VARIABLE .)
    CIZQ            reduce using rule 161 (valorString -> VARIABLE .)
    AND             reduce using rule 147 (valorBool -> VARIABLE .)
    OR              reduce using rule 147 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! SUMA            [ reduce using rule 161 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 161 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 161 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 147 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 147 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 256

state 172

    (101) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 101 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 101 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 173

    (117) expresion -> valor . operadorMat expresion
    (118) expresion -> valor .
    (155) expresionBool -> valor . IS objeto
    (156) expresionBool -> valor . ISNEGADO objeto
    (178) operadorMat -> . SUMA
    (179) operadorMat -> . RESTA
    (180) operadorMat -> . MULTI
    (181) operadorMat -> . DIV
    (182) operadorMat -> . DIVENTERO
    (183) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 118 (expresion -> valor .)
    PDER            reduce using rule 118 (expresion -> valor .)
    IS              shift and go to state 112
    ISNEGADO        shift and go to state 113
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

    operadorMat                    shift and go to state 260

state 174

    (119) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 119 (expresion -> expresionString .)
    PDER            reduce using rule 119 (expresion -> expresionString .)


state 175

    (120) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 120 (expresion -> expresionInt .)
    PDER            reduce using rule 120 (expresion -> expresionInt .)


state 176

    (121) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 121 (expresion -> expresionDouble .)
    PDER            reduce using rule 121 (expresion -> expresionDouble .)


state 177

    (122) expresion -> expresionBool .
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 122 (expresion -> expresionBool .)
    PDER            reduce using rule 122 (expresion -> expresionBool .)
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 178

    (115) valor -> DOUBLE .
    (174) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 115 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 115 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 115 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 115 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 115 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 115 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 115 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 115 (valor -> DOUBLE .)
    IS              reduce using rule 115 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 115 (valor -> DOUBLE .)
    SUMA            reduce using rule 115 (valor -> DOUBLE .)
    RESTA           reduce using rule 115 (valor -> DOUBLE .)
    MULTI           reduce using rule 115 (valor -> DOUBLE .)
    DIV             reduce using rule 115 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 115 (valor -> DOUBLE .)
    MOD             reduce using rule 115 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 115 (valor -> DOUBLE .)
    PDER            reduce using rule 115 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 174 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 174 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 174 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 174 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 174 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 174 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 174 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 174 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 174 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 174 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 174 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 174 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 174 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 174 (valorDouble -> DOUBLE .) ]


state 179

    (116) valor -> STRING .
    (160) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 116 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 116 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 116 (valor -> STRING .)
    IS              reduce using rule 116 (valor -> STRING .)
    ISNEGADO        reduce using rule 116 (valor -> STRING .)
    SUMA            reduce using rule 116 (valor -> STRING .)
    RESTA           reduce using rule 116 (valor -> STRING .)
    MULTI           reduce using rule 116 (valor -> STRING .)
    DIV             reduce using rule 116 (valor -> STRING .)
    DIVENTERO       reduce using rule 116 (valor -> STRING .)
    MOD             reduce using rule 116 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 116 (valor -> STRING .)
    PDER            reduce using rule 116 (valor -> STRING .)
    CIZQ            reduce using rule 160 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 160 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 160 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 160 (valorString -> STRING .) ]


state 180

    (176) expresionDouble -> valorDouble . operadorMat expresionDouble
    (177) expresionDouble -> valorDouble .
    (148) expresionBool -> valorDouble . comparadorMat expresionDouble
    (151) expresionBool -> valorDouble . comparadorMat VARIABLE
    (178) operadorMat -> . SUMA
    (179) operadorMat -> . RESTA
    (180) operadorMat -> . MULTI
    (181) operadorMat -> . DIV
    (182) operadorMat -> . DIVENTERO
    (183) operadorMat -> . MOD
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 177 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 177 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    operadorMat                    shift and go to state 108
    comparadorMat                  shift and go to state 255

state 181

    (154) expresionBool -> comparacionBool .

    AND             reduce using rule 154 (expresionBool -> comparacionBool .)
    OR              reduce using rule 154 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 154 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 154 (expresionBool -> comparacionBool .)


state 182

    (162) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 162 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 162 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 162 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 162 (valorString -> FUNCIONSTDIN .)


state 183

    (164) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 164 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 164 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 164 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 164 (valorString -> sentenciaSubstring .)


state 184

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 185

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 186

    (93) asignacion -> INT VARIABLE IGUAL . expresionInt
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionInt                   shift and go to state 261
    valorInt                       shift and go to state 193

state 187

    (94) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 262
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 188

    (95) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 263
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 189

    (96) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 200
    VARIABLE        shift and go to state 201
    FUNCIONSTDIN    shift and go to state 182

    expresionString                shift and go to state 264
    valorString                    shift and go to state 33
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 190

    (97) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 265
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 35
    valorInt                       shift and go to state 147

state 191

    (98) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (117) expresion -> . valor operadorMat expresion
    (118) expresion -> . valor
    (119) expresion -> . expresionString
    (120) expresion -> . expresionInt
    (121) expresion -> . expresionDouble
    (122) expresion -> . expresionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 43

    expresion                      shift and go to state 266
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 33
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 192

    (99) asignacion -> VAR VARIABLE IGUAL . expresion
    (117) expresion -> . valor operadorMat expresion
    (118) expresion -> . valor
    (119) expresion -> . expresionString
    (120) expresion -> . expresionInt
    (121) expresion -> . expresionDouble
    (122) expresion -> . expresionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 43

    expresion                      shift and go to state 267
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 33
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 193

    (172) expresionInt -> valorInt . operadorMat expresionInt
    (173) expresionInt -> valorInt .
    (178) operadorMat -> . SUMA
    (179) operadorMat -> . RESTA
    (180) operadorMat -> . MULTI
    (181) operadorMat -> . DIV
    (182) operadorMat -> . DIVENTERO
    (183) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 173 (expresionInt -> valorInt .)
    PDER            reduce using rule 173 (expresionInt -> valorInt .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

    operadorMat                    shift and go to state 101

state 194

    (172) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 172 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 172 (expresionInt -> valorInt operadorMat expresionInt .)


state 195

    (171) valorInt -> VARIABLE .

    SUMA            reduce using rule 171 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 171 (valorInt -> VARIABLE .)
    PDER            reduce using rule 171 (valorInt -> VARIABLE .)
    AND             reduce using rule 171 (valorInt -> VARIABLE .)
    OR              reduce using rule 171 (valorInt -> VARIABLE .)


state 196

    (176) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 176 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 176 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 176 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 176 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 197

    (148) expresionBool -> valorDouble comparadorMat expresionDouble .
    (132) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 132 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 132 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 198

    (151) expresionBool -> valorDouble comparadorMat VARIABLE .
    (135) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (171) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 135 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 135 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 135 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 171 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 171 (valorInt -> VARIABLE .) ]


state 199

    (165) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 165 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 165 (expresionString -> valorString SUMA expresionString .)


state 200

    (160) valorString -> STRING .

    SUMA            reduce using rule 160 (valorString -> STRING .)
    CIZQ            reduce using rule 160 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 160 (valorString -> STRING .)
    PDER            reduce using rule 160 (valorString -> STRING .)


state 201

    (161) valorString -> VARIABLE .
    (168) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 161 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 161 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 161 (valorString -> VARIABLE .)
    PDER            reduce using rule 161 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84


state 202

    (167) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 268


state 203

    (155) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 155 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 155 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 155 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 155 (expresionBool -> valor IS objeto .)


state 204

    (192) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 192 (objeto -> STRINGR .)
    AND             reduce using rule 192 (objeto -> STRINGR .)
    OR              reduce using rule 192 (objeto -> STRINGR .)
    PDER            reduce using rule 192 (objeto -> STRINGR .)


state 205

    (193) objeto -> INT .

    PUNTOYCOMA      reduce using rule 193 (objeto -> INT .)
    AND             reduce using rule 193 (objeto -> INT .)
    OR              reduce using rule 193 (objeto -> INT .)
    PDER            reduce using rule 193 (objeto -> INT .)


state 206

    (194) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 194 (objeto -> DOUBLER .)
    AND             reduce using rule 194 (objeto -> DOUBLER .)
    OR              reduce using rule 194 (objeto -> DOUBLER .)
    PDER            reduce using rule 194 (objeto -> DOUBLER .)


state 207

    (195) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 195 (objeto -> NUM .)
    AND             reduce using rule 195 (objeto -> NUM .)
    OR              reduce using rule 195 (objeto -> NUM .)
    PDER            reduce using rule 195 (objeto -> NUM .)


state 208

    (196) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 196 (objeto -> VAR .)
    AND             reduce using rule 196 (objeto -> VAR .)
    OR              reduce using rule 196 (objeto -> VAR .)
    PDER            reduce using rule 196 (objeto -> VAR .)


state 209

    (197) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 197 (objeto -> DYNAMIC .)
    AND             reduce using rule 197 (objeto -> DYNAMIC .)
    OR              reduce using rule 197 (objeto -> DYNAMIC .)
    PDER            reduce using rule 197 (objeto -> DYNAMIC .)


state 210

    (198) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 198 (objeto -> LIST .)
    AND             reduce using rule 198 (objeto -> LIST .)
    OR              reduce using rule 198 (objeto -> LIST .)
    PDER            reduce using rule 198 (objeto -> LIST .)


state 211

    (199) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 199 (objeto -> BOOL .)
    AND             reduce using rule 199 (objeto -> BOOL .)
    OR              reduce using rule 199 (objeto -> BOOL .)
    PDER            reduce using rule 199 (objeto -> BOOL .)


state 212

    (200) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 200 (objeto -> MAP .)
    AND             reduce using rule 200 (objeto -> MAP .)
    OR              reduce using rule 200 (objeto -> MAP .)
    PDER            reduce using rule 200 (objeto -> MAP .)


state 213

    (201) objeto -> SET .

    PUNTOYCOMA      reduce using rule 201 (objeto -> SET .)
    AND             reduce using rule 201 (objeto -> SET .)
    OR              reduce using rule 201 (objeto -> SET .)
    PDER            reduce using rule 201 (objeto -> SET .)


state 214

    (156) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 156 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 156 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 156 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 156 (expresionBool -> valor ISNEGADO objeto .)


state 215

    (143) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (144) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PDER            shift and go to state 269
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 216

    (145) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 270


state 217

    (107) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (108) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PDER            shift and go to state 271
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 218

    (110) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 272


state 219

    (102) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 273


state 220

    (103) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 274


state 221

    (101) asignacionSimple -> VARIABLE . IGUAL expresion
    (114) valor -> VARIABLE .
    (149) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (150) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (161) valorString -> VARIABLE .
    (171) valorInt -> VARIABLE .
    (147) valorBool -> VARIABLE .
    (168) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 114 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 114 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 85
    IS              reduce using rule 114 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 114 (valor -> VARIABLE .)
    SUMA            reduce using rule 114 (valor -> VARIABLE .)
    RESTA           reduce using rule 114 (valor -> VARIABLE .)
    MULTI           reduce using rule 114 (valor -> VARIABLE .)
    DIV             reduce using rule 114 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 114 (valor -> VARIABLE .)
    MOD             reduce using rule 114 (valor -> VARIABLE .)
    PDER            reduce using rule 114 (valor -> VARIABLE .)
    CIZQ            reduce using rule 161 (valorString -> VARIABLE .)
    AND             reduce using rule 147 (valorBool -> VARIABLE .)
    OR              reduce using rule 147 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! SUMA            [ reduce using rule 161 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 161 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 147 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 256

state 222

    (105) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 275


state 223

    (106) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 276


state 224

    (157) negacionBool -> NOT PIZQ expresionBool . PDER
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PDER            shift and go to state 277
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 225

    (111) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (112) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PDER            shift and go to state 278
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 226

    (139) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 279


state 227

    (130) asignacionFor -> VARIABLE . IGUAL expresionInt
    (131) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 280


state 228

    (123) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 281


state 229

    (124) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 282


state 230

    (125) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 283


state 231

    (126) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (127) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 284


state 232

    (128) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (129) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 285


state 233

    (70) objetoList -> LIST . MENOR objetoList MAYOR

    MENOR           shift and go to state 286


state 234

    (58) expresionLista -> LIST MENOR objetoList . MAYOR VARIABLE
    (59) expresionLista -> LIST MENOR objetoList . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 287


state 235

    (61) objetoList -> VARIABLE .

    MAYOR           reduce using rule 61 (objetoList -> VARIABLE .)


state 236

    (71) expresionListaTipos -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (62) objetoList -> STRINGR .

  ! shift/reduce conflict for MAYOR resolved as shift
    MAYOR           shift and go to state 288

  ! MAYOR           [ reduce using rule 62 (objetoList -> STRINGR .) ]


state 237

    (73) expresionListaTipos -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (63) objetoList -> INT .

  ! shift/reduce conflict for MAYOR resolved as shift
    MAYOR           shift and go to state 289

  ! MAYOR           [ reduce using rule 63 (objetoList -> INT .) ]


state 238

    (75) expresionListaTipos -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (64) objetoList -> DOUBLER .

  ! shift/reduce conflict for MAYOR resolved as shift
    MAYOR           shift and go to state 290

  ! MAYOR           [ reduce using rule 64 (objetoList -> DOUBLER .) ]


state 239

    (77) expresionListaTipos -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (65) objetoList -> NUM .

  ! shift/reduce conflict for MAYOR resolved as shift
    MAYOR           shift and go to state 291

  ! MAYOR           [ reduce using rule 65 (objetoList -> NUM .) ]


state 240

    (79) expresionListaTipos -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (66) objetoList -> BOOLR .

  ! shift/reduce conflict for MAYOR resolved as shift
    MAYOR           shift and go to state 292

  ! MAYOR           [ reduce using rule 66 (objetoList -> BOOLR .) ]


state 241

    (67) objetoList -> DYNAMIC .

    MAYOR           reduce using rule 67 (objetoList -> DYNAMIC .)


state 242

    (68) objetoList -> MAP .

    MAYOR           reduce using rule 68 (objetoList -> MAP .)


state 243

    (69) objetoList -> SET .

    MAYOR           reduce using rule 69 (objetoList -> SET .)


state 244

    (55) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 55 (expresionNewList -> NEWLIST PIZQ PDER .)


state 245

    (56) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 293


state 246

    (72) expresionListaTipos -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 72 (expresionListaTipos -> CIZQ expListString CDER .)


state 247

    (74) expresionListaTipos -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 74 (expresionListaTipos -> CIZQ expListInt CDER .)


state 248

    (76) expresionListaTipos -> CIZQ expListDouble CDER .

    PUNTOYCOMA      reduce using rule 76 (expresionListaTipos -> CIZQ expListDouble CDER .)


state 249

    (78) expresionListaTipos -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 78 (expresionListaTipos -> CIZQ expListNum CDER .)


state 250

    (80) expresionListaTipos -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 80 (expresionListaTipos -> CIZQ expListBool CDER .)


state 251

    (82) expListString -> STRING COMA . expListString
    (81) expListString -> . STRING
    (82) expListString -> . STRING COMA expListString

    STRING          shift and go to state 132

    expListString                  shift and go to state 294

state 252

    (84) expListInt -> ENTERO COMA . expListInt
    (89) expListNum -> ENTERO COMA . expListNum
    (83) expListInt -> . ENTERO
    (84) expListInt -> . ENTERO COMA expListInt
    (87) expListNum -> . ENTERO
    (88) expListNum -> . DOUBLE
    (89) expListNum -> . ENTERO COMA expListNum
    (90) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 297

    expListInt                     shift and go to state 295
    expListNum                     shift and go to state 296

state 253

    (86) expListDouble -> DOUBLE COMA . expListDouble
    (90) expListNum -> DOUBLE COMA . expListNum
    (85) expListDouble -> . DOUBLE
    (86) expListDouble -> . DOUBLE COMA expListDouble
    (87) expListNum -> . ENTERO
    (88) expListNum -> . DOUBLE
    (89) expListNum -> . ENTERO COMA expListNum
    (90) expListNum -> . DOUBLE COMA expListNum

    DOUBLE          shift and go to state 134
    ENTERO          shift and go to state 300

    expListDouble                  shift and go to state 298
    expListNum                     shift and go to state 299

state 254

    (92) expListBool -> BOOL COMA . expListBool
    (91) expListBool -> . BOOL
    (92) expListBool -> . BOOL COMA expListBool

    BOOL            shift and go to state 135

    expListBool                    shift and go to state 301

state 255

    (148) expresionBool -> valorDouble comparadorMat . expresionDouble
    (151) expresionBool -> valorDouble comparadorMat . VARIABLE
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 303
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 302
    valorInt                       shift and go to state 147

state 256

    (149) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (150) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 304
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    expresionDouble                shift and go to state 305
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 257

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 258

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 259

    (168) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (169) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 306
    COMA            shift and go to state 307


state 260

    (117) expresion -> valor operadorMat . expresion
    (117) expresion -> . valor operadorMat expresion
    (118) expresion -> . valor
    (119) expresion -> . expresionString
    (120) expresion -> . expresionInt
    (121) expresion -> . expresionDouble
    (122) expresion -> . expresionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 43

    valor                          shift and go to state 173
    expresion                      shift and go to state 308
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 33
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 261

    (93) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 93 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 262

    (94) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 94 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 263

    (95) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 95 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 264

    (96) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 96 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 265

    (97) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 97 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 266

    (98) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 98 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 267

    (99) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 99 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 268

    (167) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 167 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 167 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 167 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 167 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 269

    (143) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (144) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 309
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 310
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 270

    (145) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 311


state 271

    (107) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (108) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 313
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 312
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 272

    (110) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 110 (sentenciaElse -> ELSE LIZQ final LDER .)


state 273

    (102) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 102 (imprimir -> PRINT PIZQ expresion PDER .)


state 274

    (103) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 103 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 275

    (105) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 105 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 276

    (106) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 106 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 277

    (157) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 157 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 157 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 157 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 157 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 278

    (111) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (112) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 315
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 314
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 279

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING

    VARIABLE        shift and go to state 317
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 46
    STRING          shift and go to state 149

    expresionBoolFor               shift and go to state 316
    valorDouble                    shift and go to state 318
    valorBool                      shift and go to state 319
    negacionBool                   shift and go to state 320
    comparacionBool                shift and go to state 321
    valorInt                       shift and go to state 147
    expresionBool                  shift and go to state 322
    valor                          shift and go to state 35

state 280

    (130) asignacionFor -> VARIABLE IGUAL . expresionInt
    (131) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195
    DOUBLE          shift and go to state 168

    expresionInt                   shift and go to state 323
    expresionDouble                shift and go to state 324
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 167

state 281

    (123) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 325


state 282

    (124) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 326


state 283

    (125) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 327


state 284

    (126) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (127) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 328


state 285

    (128) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (129) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 329


state 286

    (70) objetoList -> LIST MENOR . objetoList MAYOR
    (61) objetoList -> . VARIABLE
    (62) objetoList -> . STRINGR
    (63) objetoList -> . INT
    (64) objetoList -> . DOUBLER
    (65) objetoList -> . NUM
    (66) objetoList -> . BOOLR
    (67) objetoList -> . DYNAMIC
    (68) objetoList -> . MAP
    (69) objetoList -> . SET
    (70) objetoList -> . LIST MENOR objetoList MAYOR

    VARIABLE        shift and go to state 235
    STRINGR         shift and go to state 331
    INT             shift and go to state 332
    DOUBLER         shift and go to state 333
    NUM             shift and go to state 334
    BOOLR           shift and go to state 335
    DYNAMIC         shift and go to state 241
    MAP             shift and go to state 242
    SET             shift and go to state 243
    LIST            shift and go to state 233

    objetoList                     shift and go to state 330

state 287

    (58) expresionLista -> LIST MENOR objetoList MAYOR . VARIABLE
    (59) expresionLista -> LIST MENOR objetoList MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 336


state 288

    (71) expresionListaTipos -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER

    VARIABLE        shift and go to state 337


state 289

    (73) expresionListaTipos -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER

    VARIABLE        shift and go to state 338


state 290

    (75) expresionListaTipos -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListDouble CDER

    VARIABLE        shift and go to state 339


state 291

    (77) expresionListaTipos -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER

    VARIABLE        shift and go to state 340


state 292

    (79) expresionListaTipos -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER

    VARIABLE        shift and go to state 341


state 293

    (56) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 56 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 294

    (82) expListString -> STRING COMA expListString .

    CDER            reduce using rule 82 (expListString -> STRING COMA expListString .)


state 295

    (84) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 84 (expListInt -> ENTERO COMA expListInt .)


state 296

    (89) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 89 (expListNum -> ENTERO COMA expListNum .)


state 297

    (88) expListNum -> DOUBLE .
    (90) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 88 (expListNum -> DOUBLE .)
    COMA            shift and go to state 342


state 298

    (86) expListDouble -> DOUBLE COMA expListDouble .

    CDER            reduce using rule 86 (expListDouble -> DOUBLE COMA expListDouble .)


state 299

    (90) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 90 (expListNum -> DOUBLE COMA expListNum .)


state 300

    (87) expListNum -> ENTERO .
    (89) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 87 (expListNum -> ENTERO .)
    COMA            shift and go to state 343


state 301

    (92) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 92 (expListBool -> BOOL COMA expListBool .)


state 302

    (148) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 303

    (151) expresionBool -> valorDouble comparadorMat VARIABLE .
    (171) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 171 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 171 (valorInt -> VARIABLE .) ]


state 304

    (150) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (171) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 171 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 171 (valorInt -> VARIABLE .) ]


state 305

    (149) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 306

    (168) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 168 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 168 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 168 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 168 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 307

    (169) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 344


state 308

    (117) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 117 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 117 (expresion -> valor operadorMat expresion .)


state 309

    (143) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 345
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 310

    (144) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 144 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 311

    (145) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 346


state 312

    (107) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 107 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 313

    (108) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 347
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 314

    (111) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 111 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 315

    (112) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 348
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 316

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 349


state 317

    (133) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (134) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (147) valorBool -> VARIABLE .
    (171) valorInt -> VARIABLE .
    (149) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (150) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (114) valor -> VARIABLE .
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 147 (valorBool -> VARIABLE .)
    AND             reduce using rule 147 (valorBool -> VARIABLE .)
    OR              reduce using rule 147 (valorBool -> VARIABLE .)
    IS              reduce using rule 114 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 114 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! DIGUAL          [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 171 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 350

state 318

    (132) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (135) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (148) expresionBool -> valorDouble . comparadorMat expresionDouble
    (151) expresionBool -> valorDouble . comparadorMat VARIABLE
    (184) comparadorMat -> . DIGUAL
    (185) comparadorMat -> . NOIGUAL
    (186) comparadorMat -> . MAYOR
    (187) comparadorMat -> . MENOR
    (188) comparadorMat -> . MAYIGUAL
    (189) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    comparadorMat                  shift and go to state 351

state 319

    (136) expresionBoolFor -> valorBool .
    (152) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 136 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 152 (expresionBool -> valorBool .)
    OR              reduce using rule 152 (expresionBool -> valorBool .)


state 320

    (137) expresionBoolFor -> negacionBool .
    (153) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 137 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 153 (expresionBool -> negacionBool .)
    OR              reduce using rule 153 (expresionBool -> negacionBool .)


state 321

    (138) expresionBoolFor -> comparacionBool .
    (154) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 138 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 154 (expresionBool -> comparacionBool .)
    OR              reduce using rule 154 (expresionBool -> comparacionBool .)


state 322

    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 323

    (130) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 130 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 324

    (131) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 131 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 325

    (123) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionInt                   shift and go to state 352
    valorInt                       shift and go to state 193

state 326

    (124) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 353
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 327

    (125) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 354
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 328

    (126) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (127) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195
    DOUBLE          shift and go to state 168

    expresionInt                   shift and go to state 355
    expresionDouble                shift and go to state 356
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 167

state 329

    (128) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (129) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195
    DOUBLE          shift and go to state 168

    expresionInt                   shift and go to state 357
    expresionDouble                shift and go to state 358
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 167

state 330

    (70) objetoList -> LIST MENOR objetoList . MAYOR

    MAYOR           shift and go to state 359


state 331

    (62) objetoList -> STRINGR .

    MAYOR           reduce using rule 62 (objetoList -> STRINGR .)


state 332

    (63) objetoList -> INT .

    MAYOR           reduce using rule 63 (objetoList -> INT .)


state 333

    (64) objetoList -> DOUBLER .

    MAYOR           reduce using rule 64 (objetoList -> DOUBLER .)


state 334

    (65) objetoList -> NUM .

    MAYOR           reduce using rule 65 (objetoList -> NUM .)


state 335

    (66) objetoList -> BOOLR .

    MAYOR           reduce using rule 66 (objetoList -> BOOLR .)


state 336

    (58) expresionLista -> LIST MENOR objetoList MAYOR VARIABLE .
    (59) expresionLista -> LIST MENOR objetoList MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 58 (expresionLista -> LIST MENOR objetoList MAYOR VARIABLE .)
    IGUAL           shift and go to state 360


state 337

    (71) expresionListaTipos -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER

    IGUAL           shift and go to state 361


state 338

    (73) expresionListaTipos -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER

    IGUAL           shift and go to state 362


state 339

    (75) expresionListaTipos -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListDouble CDER

    IGUAL           shift and go to state 363


state 340

    (77) expresionListaTipos -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER

    IGUAL           shift and go to state 364


state 341

    (79) expresionListaTipos -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER

    IGUAL           shift and go to state 365


state 342

    (90) expListNum -> DOUBLE COMA . expListNum
    (87) expListNum -> . ENTERO
    (88) expListNum -> . DOUBLE
    (89) expListNum -> . ENTERO COMA expListNum
    (90) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 300
    DOUBLE          shift and go to state 297

    expListNum                     shift and go to state 299

state 343

    (89) expListNum -> ENTERO COMA . expListNum
    (87) expListNum -> . ENTERO
    (88) expListNum -> . DOUBLE
    (89) expListNum -> . ENTERO COMA expListNum
    (90) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 300
    DOUBLE          shift and go to state 297

    expListNum                     shift and go to state 296

state 344

    (169) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 366


state 345

    (143) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 367


state 346

    (145) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 43
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 368
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 35
    valorInt                       shift and go to state 147

state 347

    (108) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 369


state 348

    (112) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 370


state 349

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 371


state 350

    (133) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (134) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (149) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (150) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 372
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    expresionDouble                shift and go to state 373
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 351

    (132) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (135) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (148) expresionBool -> valorDouble comparadorMat . expresionDouble
    (151) expresionBool -> valorDouble comparadorMat . VARIABLE
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 375
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 374
    valorInt                       shift and go to state 147

state 352

    (123) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 123 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 353

    (124) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 124 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 354

    (125) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 125 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 355

    (126) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 126 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 356

    (127) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 127 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 357

    (128) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 128 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 358

    (129) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 129 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 359

    (70) objetoList -> LIST MENOR objetoList MAYOR .

    MAYOR           reduce using rule 70 (objetoList -> LIST MENOR objetoList MAYOR .)


state 360

    (59) expresionLista -> LIST MENOR objetoList MAYOR VARIABLE IGUAL . expresionNewList
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER

    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 377

    expresionNewList               shift and go to state 376

state 361

    (71) expresionListaTipos -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER

    CIZQ            shift and go to state 378


state 362

    (73) expresionListaTipos -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER

    CIZQ            shift and go to state 379


state 363

    (75) expresionListaTipos -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListDouble CDER

    CIZQ            shift and go to state 380


state 364

    (77) expresionListaTipos -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER

    CIZQ            shift and go to state 381


state 365

    (79) expresionListaTipos -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER

    CIZQ            shift and go to state 382


state 366

    (169) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 169 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 169 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 169 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 169 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 367

    (143) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 143 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 368

    (145) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (158) comparacionBool -> expresionBool . operadorLogico expresionBool
    (159) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (190) operadorLogico -> . AND
    (191) operadorLogico -> . OR

    PDER            shift and go to state 383
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 369

    (108) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 108 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 370

    (112) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 112 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 371

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 384
    DRESTA          shift and go to state 385


state 372

    (134) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (150) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (171) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 134 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 134 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 150 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 171 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 171 (valorInt -> VARIABLE .) ]


state 373

    (133) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (149) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 133 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 149 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 374

    (132) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (148) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 132 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 148 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 375

    (135) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (151) expresionBool -> valorDouble comparadorMat VARIABLE .
    (171) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 135 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 135 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 151 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 171 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 171 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 171 (valorInt -> VARIABLE .)
    DIV             reduce using rule 171 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 171 (valorInt -> VARIABLE .)
    MOD             reduce using rule 171 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 171 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 171 (valorInt -> VARIABLE .) ]


state 376

    (59) expresionLista -> LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 59 (expresionLista -> LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList .)


state 377

    (57) expresionNewList -> CIZQ . CDER

    CDER            shift and go to state 126


state 378

    (71) expresionListaTipos -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (81) expListString -> . STRING
    (82) expListString -> . STRING COMA expListString

    STRING          shift and go to state 132

    expListString                  shift and go to state 386

state 379

    (73) expresionListaTipos -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (83) expListInt -> . ENTERO
    (84) expListInt -> . ENTERO COMA expListInt

    ENTERO          shift and go to state 388

    expListInt                     shift and go to state 387

state 380

    (75) expresionListaTipos -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListDouble CDER
    (85) expListDouble -> . DOUBLE
    (86) expListDouble -> . DOUBLE COMA expListDouble

    DOUBLE          shift and go to state 390

    expListDouble                  shift and go to state 389

state 381

    (77) expresionListaTipos -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (87) expListNum -> . ENTERO
    (88) expListNum -> . DOUBLE
    (89) expListNum -> . ENTERO COMA expListNum
    (90) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 300
    DOUBLE          shift and go to state 297

    expListNum                     shift and go to state 391

state 382

    (79) expresionListaTipos -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (91) expListBool -> . BOOL
    (92) expListBool -> . BOOL COMA expListBool

    BOOL            shift and go to state 135

    expListBool                    shift and go to state 392

state 383

    (145) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 145 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 384

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 393


state 385

    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 394


state 386

    (71) expresionListaTipos -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 395


state 387

    (73) expresionListaTipos -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 396


state 388

    (83) expListInt -> ENTERO .
    (84) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 83 (expListInt -> ENTERO .)
    COMA            shift and go to state 397


state 389

    (75) expresionListaTipos -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble . CDER

    CDER            shift and go to state 398


state 390

    (85) expListDouble -> DOUBLE .
    (86) expListDouble -> DOUBLE . COMA expListDouble

    CDER            reduce using rule 85 (expListDouble -> DOUBLE .)
    COMA            shift and go to state 399


state 391

    (77) expresionListaTipos -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 400


state 392

    (79) expresionListaTipos -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 401


state 393

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (140) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 402
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 403
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 394

    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (142) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 404
    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 405
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 395

    (71) expresionListaTipos -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 71 (expresionListaTipos -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 396

    (73) expresionListaTipos -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 73 (expresionListaTipos -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 397

    (84) expListInt -> ENTERO COMA . expListInt
    (83) expListInt -> . ENTERO
    (84) expListInt -> . ENTERO COMA expListInt

    ENTERO          shift and go to state 388

    expListInt                     shift and go to state 295

state 398

    (75) expresionListaTipos -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER .

    PUNTOYCOMA      reduce using rule 75 (expresionListaTipos -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER .)


state 399

    (86) expListDouble -> DOUBLE COMA . expListDouble
    (85) expListDouble -> . DOUBLE
    (86) expListDouble -> . DOUBLE COMA expListDouble

    DOUBLE          shift and go to state 390

    expListDouble                  shift and go to state 298

state 400

    (77) expresionListaTipos -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 77 (expresionListaTipos -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 401

    (79) expresionListaTipos -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 79 (expresionListaTipos -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 402

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 406
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 403

    (140) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 140 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 404

    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (93) asignacion -> . INT VARIABLE IGUAL expresionInt
    (94) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (95) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (96) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (97) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (98) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (99) asignacion -> . VAR VARIABLE IGUAL expresion
    (100) asignacion -> . asignacionSimple
    (172) expresionInt -> . valorInt operadorMat expresionInt
    (173) expresionInt -> . valorInt
    (176) expresionDouble -> . valorDouble operadorMat expresionDouble
    (177) expresionDouble -> . valorDouble
    (165) expresionString -> . valorString SUMA expresionString
    (166) expresionString -> . valorString
    (148) expresionBool -> . valorDouble comparadorMat expresionDouble
    (149) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (150) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (151) expresionBool -> . valorDouble comparadorMat VARIABLE
    (152) expresionBool -> . valorBool
    (153) expresionBool -> . negacionBool
    (154) expresionBool -> . comparacionBool
    (155) expresionBool -> . valor IS objeto
    (156) expresionBool -> . valor ISNEGADO objeto
    (132) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (133) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (134) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (135) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (136) expresionBoolFor -> . valorBool
    (137) expresionBoolFor -> . negacionBool
    (138) expresionBoolFor -> . comparacionBool
    (143) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (144) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (145) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (107) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (108) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (109) sentenciaElse -> . ELSE final
    (110) sentenciaElse -> . ELSE LIZQ final LDER
    (102) imprimir -> . PRINT PIZQ expresion PDER
    (103) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (104) funcionStdin -> . FUNCIONSTDIN
    (105) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (106) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (157) negacionBool -> . NOT PIZQ expresionBool PDER
    (158) comparacionBool -> . expresionBool operadorLogico expresionBool
    (159) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (112) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (139) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (140) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (141) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (142) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (168) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (169) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (58) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE
    (59) expresionLista -> . LIST MENOR objetoList MAYOR VARIABLE IGUAL expresionNewList
    (60) expresionLista -> . expresionListaTipos
    (55) expresionNewList -> . NEWLIST PIZQ PDER
    (56) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (57) expresionNewList -> . CIZQ CDER
    (101) asignacionSimple -> . VARIABLE IGUAL expresion
    (170) valorInt -> . ENTERO
    (171) valorInt -> . VARIABLE
    (174) valorDouble -> . DOUBLE
    (175) valorDouble -> . valorInt
    (160) valorString -> . STRING
    (161) valorString -> . VARIABLE
    (162) valorString -> . FUNCIONSTDIN
    (163) valorString -> . expresionIndexString
    (164) valorString -> . sentenciaSubstring
    (146) valorBool -> . BOOL
    (147) valorBool -> . VARIABLE
    (113) valor -> . ENTERO
    (114) valor -> . VARIABLE
    (115) valor -> . DOUBLE
    (116) valor -> . STRING
    (71) expresionListaTipos -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionListaTipos -> . CIZQ expListString CDER
    (73) expresionListaTipos -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (74) expresionListaTipos -> . CIZQ expListInt CDER
    (75) expresionListaTipos -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListDouble CDER
    (76) expresionListaTipos -> . CIZQ expListDouble CDER
    (77) expresionListaTipos -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionListaTipos -> . CIZQ expListNum CDER
    (79) expresionListaTipos -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (80) expresionListaTipos -> . CIZQ expListBool CDER
    (167) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 23
    DOUBLER         shift and go to state 24
    NUM             shift and go to state 25
    STRINGR         shift and go to state 26
    BOOLR           shift and go to state 27
    DYNAMIC         shift and go to state 28
    VAR             shift and go to state 29
    WHILE           shift and go to state 36
    DO              shift and go to state 37
    IF              shift and go to state 38
    ELSE            shift and go to state 39
    PRINT           shift and go to state 40
    FUNCIONSTDIN    shift and go to state 41
    FUNCIONSTDOUT   shift and go to state 42
    NOT             shift and go to state 43
    ELSEIF          shift and go to state 44
    FOR             shift and go to state 45
    LIST            shift and go to state 47
    NEWLIST         shift and go to state 49
    CIZQ            shift and go to state 50
    ENTERO          shift and go to state 46
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 407
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 30
    valorInt                       shift and go to state 31
    valorDouble                    shift and go to state 32
    valorString                    shift and go to state 33
    valorBool                      shift and go to state 34
    valor                          shift and go to state 35
    expresionListaTipos            shift and go to state 48
    expresionIndexString           shift and go to state 53

state 405

    (142) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 142 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 406

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 408


state 407

    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 409


state 408

    (139) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 139 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 409

    (141) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 141 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 31 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 31 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 31 resolved as shift
WARNING: shift/reduce conflict for DIV in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 31 resolved as shift
WARNING: shift/reduce conflict for MOD in state 31 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 55 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 55 resolved as shift
WARNING: shift/reduce conflict for NUM in state 55 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 55 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 55 resolved as shift
WARNING: shift/reduce conflict for VAR in state 55 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 55 resolved as shift
WARNING: shift/reduce conflict for DO in state 55 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 55 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT in state 55 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 55 resolved as shift
WARNING: shift/reduce conflict for FOR in state 55 resolved as shift
WARNING: shift/reduce conflict for LIST in state 55 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 55 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 55 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 55 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 56 resolved as shift
WARNING: shift/reduce conflict for INT in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 56 resolved as shift
WARNING: shift/reduce conflict for NUM in state 56 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 56 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 56 resolved as shift
WARNING: shift/reduce conflict for VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 56 resolved as shift
WARNING: shift/reduce conflict for DO in state 56 resolved as shift
WARNING: shift/reduce conflict for IF in state 56 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 56 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 56 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 56 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 56 resolved as shift
WARNING: shift/reduce conflict for NOT in state 56 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 56 resolved as shift
WARNING: shift/reduce conflict for FOR in state 56 resolved as shift
WARNING: shift/reduce conflict for LIST in state 56 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 56 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 56 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 56 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 57 resolved as shift
WARNING: shift/reduce conflict for NUM in state 57 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 57 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for DO in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for LIST in state 57 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 57 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 58 resolved as shift
WARNING: shift/reduce conflict for NUM in state 58 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 58 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 58 resolved as shift
WARNING: shift/reduce conflict for VAR in state 58 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 58 resolved as shift
WARNING: shift/reduce conflict for DO in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 58 resolved as shift
WARNING: shift/reduce conflict for FOR in state 58 resolved as shift
WARNING: shift/reduce conflict for LIST in state 58 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 58 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 58 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 58 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 59 resolved as shift
WARNING: shift/reduce conflict for NUM in state 59 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 59 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 59 resolved as shift
WARNING: shift/reduce conflict for VAR in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for LIST in state 59 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 59 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for LIST in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 65 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 66 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for LIST in state 66 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 66 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 67 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for LIST in state 67 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 67 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for INT in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 69 resolved as shift
WARNING: shift/reduce conflict for NUM in state 69 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 69 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 69 resolved as shift
WARNING: shift/reduce conflict for VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for DO in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 69 resolved as shift
WARNING: shift/reduce conflict for FOR in state 69 resolved as shift
WARNING: shift/reduce conflict for LIST in state 69 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 69 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 69 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 69 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 72 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 72 resolved as shift
WARNING: shift/reduce conflict for DO in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 72 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 72 resolved as shift
WARNING: shift/reduce conflict for FOR in state 72 resolved as shift
WARNING: shift/reduce conflict for LIST in state 72 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 72 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 75 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 75 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 75 resolved as shift
WARNING: shift/reduce conflict for FOR in state 75 resolved as shift
WARNING: shift/reduce conflict for LIST in state 75 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 75 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 92 resolved as shift
WARNING: shift/reduce conflict for INT in state 92 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 92 resolved as shift
WARNING: shift/reduce conflict for NUM in state 92 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 92 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 92 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 92 resolved as shift
WARNING: shift/reduce conflict for VAR in state 92 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 92 resolved as shift
WARNING: shift/reduce conflict for DO in state 92 resolved as shift
WARNING: shift/reduce conflict for IF in state 92 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 92 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 92 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 92 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 92 resolved as shift
WARNING: shift/reduce conflict for NOT in state 92 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 92 resolved as shift
WARNING: shift/reduce conflict for FOR in state 92 resolved as shift
WARNING: shift/reduce conflict for LIST in state 92 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 92 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 92 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 92 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 92 resolved as shift
WARNING: shift/reduce conflict for STRING in state 92 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 92 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 93 resolved as shift
WARNING: shift/reduce conflict for INT in state 93 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 93 resolved as shift
WARNING: shift/reduce conflict for NUM in state 93 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 93 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 93 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 93 resolved as shift
WARNING: shift/reduce conflict for VAR in state 93 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 93 resolved as shift
WARNING: shift/reduce conflict for DO in state 93 resolved as shift
WARNING: shift/reduce conflict for IF in state 93 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 93 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 93 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 93 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 93 resolved as shift
WARNING: shift/reduce conflict for NOT in state 93 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 93 resolved as shift
WARNING: shift/reduce conflict for FOR in state 93 resolved as shift
WARNING: shift/reduce conflict for LIST in state 93 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 93 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 93 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 93 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING in state 93 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 144 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 163 resolved as shift
WARNING: shift/reduce conflict for INT in state 163 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 163 resolved as shift
WARNING: shift/reduce conflict for NUM in state 163 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 163 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 163 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 163 resolved as shift
WARNING: shift/reduce conflict for VAR in state 163 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 163 resolved as shift
WARNING: shift/reduce conflict for DO in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 163 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 163 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 163 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 163 resolved as shift
WARNING: shift/reduce conflict for NOT in state 163 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 163 resolved as shift
WARNING: shift/reduce conflict for FOR in state 163 resolved as shift
WARNING: shift/reduce conflict for LIST in state 163 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 163 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 163 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 163 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 163 resolved as shift
WARNING: shift/reduce conflict for STRING in state 163 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 163 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 164 resolved as shift
WARNING: shift/reduce conflict for INT in state 164 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 164 resolved as shift
WARNING: shift/reduce conflict for NUM in state 164 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 164 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 164 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 164 resolved as shift
WARNING: shift/reduce conflict for VAR in state 164 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 164 resolved as shift
WARNING: shift/reduce conflict for DO in state 164 resolved as shift
WARNING: shift/reduce conflict for IF in state 164 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 164 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 164 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 164 resolved as shift
WARNING: shift/reduce conflict for NOT in state 164 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 164 resolved as shift
WARNING: shift/reduce conflict for FOR in state 164 resolved as shift
WARNING: shift/reduce conflict for LIST in state 164 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 164 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 164 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 164 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 164 resolved as shift
WARNING: shift/reduce conflict for STRING in state 164 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 164 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 221 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 221 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 236 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 237 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 238 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 239 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 240 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 317 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 317 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 317 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 317 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 317 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 317 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 31 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 31
WARNING: reduce/reduce conflict in state 34 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 34
WARNING: reduce/reduce conflict in state 41 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 41
WARNING: reduce/reduce conflict in state 133 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (expListDouble -> DOUBLE)
WARNING: rejected rule (expListNum -> DOUBLE) in state 134
WARNING: reduce/reduce conflict in state 142 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 142
WARNING: reduce/reduce conflict in state 148 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 148
WARNING: reduce/reduce conflict in state 165 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 165
WARNING: reduce/reduce conflict in state 166 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 166
WARNING: reduce/reduce conflict in state 171 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 171
WARNING: reduce/reduce conflict in state 171 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 171
WARNING: reduce/reduce conflict in state 171 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 171
WARNING: reduce/reduce conflict in state 178 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 178
WARNING: reduce/reduce conflict in state 179 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 179
WARNING: reduce/reduce conflict in state 197 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 198
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 221
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 221
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 221
WARNING: reduce/reduce conflict in state 303 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 303
WARNING: reduce/reduce conflict in state 304 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 304
WARNING: reduce/reduce conflict in state 372 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 372
WARNING: reduce/reduce conflict in state 372 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 372
WARNING: reduce/reduce conflict in state 375 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 375
WARNING: reduce/reduce conflict in state 375 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 375
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
