Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    ELSEIF
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDIN
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    IS
    ISNEGADO
    LIST
    MAP
    NOT
    OR
    RETURN
    SET
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    algoritmo -> asignacion PUNTOYCOMA
Rule 29    algoritmo -> expresionInt PUNTOYCOMA
Rule 30    algoritmo -> expresionDouble PUNTOYCOMA
Rule 31    algoritmo -> expresionString PUNTOYCOMA
Rule 32    algoritmo -> expresionBool PUNTOYCOMA
Rule 33    algoritmo -> expresion
Rule 34    algoritmo -> sentenciaWhile
Rule 35    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 36    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 37    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 38    algoritmo -> sentenciaIf
Rule 39    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 40    algoritmo -> sentenciaElse
Rule 41    algoritmo -> imprimir PUNTOYCOMA
Rule 42    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 43    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 44    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 45    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 46    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 47    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 48    asignacion -> VAR VARIABLE IGUAL expresion
Rule 49    asignacion -> VARIABLE IGUAL expresion
Rule 50    imprimir -> PRINT PIZQ expresion PDER
Rule 51    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 52    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 53    sentenciaElse -> ELSE algoritmo
Rule 54    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 55    valor -> ENTERO
Rule 56    valor -> VARIABLE
Rule 57    valor -> DOUBLE
Rule 58    valor -> STRING
Rule 59    expresion -> valor operadorMat expresion
Rule 60    expresion -> valor
Rule 61    expresion -> expresionString
Rule 62    expresion -> expresionInt
Rule 63    expresion -> expresionDouble
Rule 64    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 65    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 66    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 67    valorBool -> BOOL
Rule 68    valorBool -> VARIABLE
Rule 69    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 70    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 71    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 72    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 73    expresionBool -> valorBool
Rule 74    valorString -> STRING
Rule 75    valorString -> VARIABLE
Rule 76    expresionString -> valorString operadorMat expresionString
Rule 77    expresionString -> valorString
Rule 78    valorInt -> ENTERO
Rule 79    valorInt -> VARIABLE
Rule 80    expresionInt -> valorInt operadorMat expresionInt
Rule 81    expresionInt -> valorInt
Rule 82    valorDouble -> DOUBLE
Rule 83    valorDouble -> valorInt
Rule 84    expresionDouble -> valorDouble operadorMat expresionDouble
Rule 85    expresionDouble -> valorDouble
Rule 86    operadorMat -> SUMA
Rule 87    operadorMat -> RESTA
Rule 88    operadorMat -> MULTI
Rule 89    operadorMat -> DIV
Rule 90    operadorMat -> DIVENTERO
Rule 91    operadorMat -> MOD
Rule 92    comparadorMat -> DIGUAL
Rule 93    comparadorMat -> NOIGUAL
Rule 94    comparadorMat -> MAYOR
Rule 95    comparadorMat -> MENOR
Rule 96    comparadorMat -> MAYIGUAL
Rule 97    comparadorMat -> MENIGUAL

Terminals, with rules where they appear

AND                  : 
AS                   : 
BOOL                 : 67
BOOLR                : 46
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 92
DIV                  : 89
DIVENTERO            : 90
DO                   : 66
DOSPUNTOS            : 
DOUBLE               : 57 82
DOUBLER              : 43
DRESTA               : 
DSUMA                : 
DYNAMIC              : 47
ELSE                 : 53 54
ELSEIF               : 
ENTERO               : 55 78
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 51 52
IGUAL                : 42 43 44 45 46 47 48 49
INT                  : 42
IS                   : 
ISNEGADO             : 
LDER                 : 52 54 64 66
LIST                 : 
LIZQ                 : 52 54 64 66
MAP                  : 
MAYIGUAL             : 96
MAYOR                : 94
MENIGUAL             : 97
MENOR                : 95
MOD                  : 91
MULTI                : 88
NOIGUAL              : 93
NOT                  : 
NUM                  : 44
OR                   : 
PDER                 : 50 51 52 64 65 66
PIZQ                 : 50 51 52 64 65 66
PRINT                : 50
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 35 36 37 39 41
RESTA                : 87
RETURN               : 
SET                  : 
STRING               : 58 74
STRINGR              : 45
SUMA                 : 86
SWITCH               : 
VAR                  : 48
VARIABLE             : 42 43 44 45 46 47 48 49 56 68 70 71 71 72 75 79
WHILE                : 64 65 66
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 51 52 53 54 64 65 66
asignacion           : 3 4 28
comparadorMat        : 69 70 71 72
expresion            : 33 47 48 49 50 59
expresionBool        : 11 12 32 46 51 52 64 65 66
expresionDouble      : 7 8 30 43 44 63 69 70 84
expresionInt         : 5 6 29 42 62 80
expresionString      : 9 10 31 45 61 76
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 0
imprimir             : 27 41
operadorMat          : 59 76 80 84
sentenciaDoWhile     : 17 18 36
sentenciaElse        : 23 24 25 26 39 40
sentenciaIf          : 19 20 21 22 37 38
sentenciaWhile       : 13 14 15 16 34 35
valor                : 59 60
valorBool            : 73
valorDouble          : 69 72 84 85
valorInt             : 80 81 83
valorString          : 76 77

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 36


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (28) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 37


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (29) algoritmo -> expresionInt . PUNTOYCOMA
    (62) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 38

  ! PUNTOYCOMA      [ reduce using rule 62 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (30) algoritmo -> expresionDouble . PUNTOYCOMA
    (63) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 39

  ! PUNTOYCOMA      [ reduce using rule 63 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (31) algoritmo -> expresionString . PUNTOYCOMA
    (61) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 40

  ! PUNTOYCOMA      [ reduce using rule 61 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (32) algoritmo -> expresionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 41


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (34) algoritmo -> sentenciaWhile .
    (35) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 43
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

  ! PUNTOYCOMA      [ reduce using rule 34 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 42
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (36) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 44


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (37) algoritmo -> sentenciaIf . PUNTOYCOMA
    (38) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 45
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

  ! PUNTOYCOMA      [ reduce using rule 38 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 46
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (39) algoritmo -> sentenciaElse . PUNTOYCOMA
    (40) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 47
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

  ! PUNTOYCOMA      [ reduce using rule 40 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 48
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (41) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 49


state 13

    (33) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 33 (algoritmo -> expresion .)
    INT             reduce using rule 33 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 33 (algoritmo -> expresion .)
    NUM             reduce using rule 33 (algoritmo -> expresion .)
    STRINGR         reduce using rule 33 (algoritmo -> expresion .)
    BOOLR           reduce using rule 33 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 33 (algoritmo -> expresion .)
    VAR             reduce using rule 33 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 33 (algoritmo -> expresion .)
    WHILE           reduce using rule 33 (algoritmo -> expresion .)
    DO              reduce using rule 33 (algoritmo -> expresion .)
    IF              reduce using rule 33 (algoritmo -> expresion .)
    ELSE            reduce using rule 33 (algoritmo -> expresion .)
    PRINT           reduce using rule 33 (algoritmo -> expresion .)
    ENTERO          reduce using rule 33 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 33 (algoritmo -> expresion .)
    STRING          reduce using rule 33 (algoritmo -> expresion .)
    BOOL            reduce using rule 33 (algoritmo -> expresion .)
    $end            reduce using rule 33 (algoritmo -> expresion .)
    LDER            reduce using rule 33 (algoritmo -> expresion .)


state 14

    (42) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 50


state 15

    (49) asignacion -> VARIABLE . IGUAL expresion
    (70) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (71) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (79) valorInt -> VARIABLE .
    (75) valorString -> VARIABLE .
    (68) valorBool -> VARIABLE .
    (56) valor -> VARIABLE .
    (92) comparadorMat -> . DIGUAL
    (93) comparadorMat -> . NOIGUAL
    (94) comparadorMat -> . MAYOR
    (95) comparadorMat -> . MENOR
    (96) comparadorMat -> . MAYIGUAL
    (97) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 75 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 68 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 56 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 51
    SUMA            reduce using rule 56 (valor -> VARIABLE .)
    RESTA           reduce using rule 56 (valor -> VARIABLE .)
    MULTI           reduce using rule 56 (valor -> VARIABLE .)
    DIV             reduce using rule 56 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 56 (valor -> VARIABLE .)
    MOD             reduce using rule 56 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 56 (valor -> VARIABLE .)
    INT             reduce using rule 56 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 56 (valor -> VARIABLE .)
    NUM             reduce using rule 56 (valor -> VARIABLE .)
    STRINGR         reduce using rule 56 (valor -> VARIABLE .)
    BOOLR           reduce using rule 56 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 56 (valor -> VARIABLE .)
    VAR             reduce using rule 56 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 56 (valor -> VARIABLE .)
    WHILE           reduce using rule 56 (valor -> VARIABLE .)
    DO              reduce using rule 56 (valor -> VARIABLE .)
    IF              reduce using rule 56 (valor -> VARIABLE .)
    ELSE            reduce using rule 56 (valor -> VARIABLE .)
    PRINT           reduce using rule 56 (valor -> VARIABLE .)
    ENTERO          reduce using rule 56 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 56 (valor -> VARIABLE .)
    STRING          reduce using rule 56 (valor -> VARIABLE .)
    BOOL            reduce using rule 56 (valor -> VARIABLE .)
    $end            reduce using rule 56 (valor -> VARIABLE .)
    LDER            reduce using rule 56 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 53
    NOIGUAL         shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR           shift and go to state 56
    MAYIGUAL        shift and go to state 57
    MENIGUAL        shift and go to state 58

  ! SUMA            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 68 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 52

state 16

    (43) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 59


state 17

    (44) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 60


state 18

    (45) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 61


state 19

    (46) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 62


state 20

    (47) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 63


state 21

    (48) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 64


state 22

    (80) expresionInt -> valorInt . operadorMat expresionInt
    (81) expresionInt -> valorInt .
    (83) valorDouble -> valorInt .
    (86) operadorMat -> . SUMA
    (87) operadorMat -> . RESTA
    (88) operadorMat -> . MULTI
    (89) operadorMat -> . DIV
    (90) operadorMat -> . DIVENTERO
    (91) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PRINT resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 81 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 81 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 81 (expresionInt -> valorInt .)
    INT             reduce using rule 81 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 81 (expresionInt -> valorInt .)
    NUM             reduce using rule 81 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 81 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 81 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 81 (expresionInt -> valorInt .)
    VAR             reduce using rule 81 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 81 (expresionInt -> valorInt .)
    WHILE           reduce using rule 81 (expresionInt -> valorInt .)
    DO              reduce using rule 81 (expresionInt -> valorInt .)
    IF              reduce using rule 81 (expresionInt -> valorInt .)
    ELSE            reduce using rule 81 (expresionInt -> valorInt .)
    PRINT           reduce using rule 81 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 81 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 81 (expresionInt -> valorInt .)
    STRING          reduce using rule 81 (expresionInt -> valorInt .)
    BOOL            reduce using rule 81 (expresionInt -> valorInt .)
    $end            reduce using rule 81 (expresionInt -> valorInt .)
    LDER            reduce using rule 81 (expresionInt -> valorInt .)
    PDER            reduce using rule 81 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 83 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 83 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 83 (valorDouble -> valorInt .)
    MENOR           reduce using rule 83 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 83 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 83 (valorDouble -> valorInt .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULTI           shift and go to state 68
    DIV             shift and go to state 69
    DIVENTERO       shift and go to state 70
    MOD             shift and go to state 71

  ! SUMA            [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! PRINT           [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 83 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 83 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 65

state 23

    (84) expresionDouble -> valorDouble . operadorMat expresionDouble
    (85) expresionDouble -> valorDouble .
    (69) expresionBool -> valorDouble . comparadorMat expresionDouble
    (72) expresionBool -> valorDouble . comparadorMat VARIABLE
    (86) operadorMat -> . SUMA
    (87) operadorMat -> . RESTA
    (88) operadorMat -> . MULTI
    (89) operadorMat -> . DIV
    (90) operadorMat -> . DIVENTERO
    (91) operadorMat -> . MOD
    (92) comparadorMat -> . DIGUAL
    (93) comparadorMat -> . NOIGUAL
    (94) comparadorMat -> . MAYOR
    (95) comparadorMat -> . MENOR
    (96) comparadorMat -> . MAYIGUAL
    (97) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 85 (expresionDouble -> valorDouble .)
    INT             reduce using rule 85 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 85 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 85 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 85 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 85 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 85 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 85 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 85 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 85 (expresionDouble -> valorDouble .)
    DO              reduce using rule 85 (expresionDouble -> valorDouble .)
    IF              reduce using rule 85 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 85 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 85 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 85 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 85 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 85 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 85 (expresionDouble -> valorDouble .)
    $end            reduce using rule 85 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 85 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULTI           shift and go to state 68
    DIV             shift and go to state 69
    DIVENTERO       shift and go to state 70
    MOD             shift and go to state 71
    DIGUAL          shift and go to state 53
    NOIGUAL         shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR           shift and go to state 56
    MAYIGUAL        shift and go to state 57
    MENIGUAL        shift and go to state 58

    operadorMat                    shift and go to state 72
    comparadorMat                  shift and go to state 73

state 24

    (76) expresionString -> valorString . operadorMat expresionString
    (77) expresionString -> valorString .
    (86) operadorMat -> . SUMA
    (87) operadorMat -> . RESTA
    (88) operadorMat -> . MULTI
    (89) operadorMat -> . DIV
    (90) operadorMat -> . DIVENTERO
    (91) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 77 (expresionString -> valorString .)
    INT             reduce using rule 77 (expresionString -> valorString .)
    DOUBLER         reduce using rule 77 (expresionString -> valorString .)
    NUM             reduce using rule 77 (expresionString -> valorString .)
    STRINGR         reduce using rule 77 (expresionString -> valorString .)
    BOOLR           reduce using rule 77 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 77 (expresionString -> valorString .)
    VAR             reduce using rule 77 (expresionString -> valorString .)
    VARIABLE        reduce using rule 77 (expresionString -> valorString .)
    WHILE           reduce using rule 77 (expresionString -> valorString .)
    DO              reduce using rule 77 (expresionString -> valorString .)
    IF              reduce using rule 77 (expresionString -> valorString .)
    ELSE            reduce using rule 77 (expresionString -> valorString .)
    PRINT           reduce using rule 77 (expresionString -> valorString .)
    ENTERO          reduce using rule 77 (expresionString -> valorString .)
    DOUBLE          reduce using rule 77 (expresionString -> valorString .)
    STRING          reduce using rule 77 (expresionString -> valorString .)
    BOOL            reduce using rule 77 (expresionString -> valorString .)
    $end            reduce using rule 77 (expresionString -> valorString .)
    LDER            reduce using rule 77 (expresionString -> valorString .)
    PDER            reduce using rule 77 (expresionString -> valorString .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULTI           shift and go to state 68
    DIV             shift and go to state 69
    DIVENTERO       shift and go to state 70
    MOD             shift and go to state 71

    operadorMat                    shift and go to state 74

state 25

    (73) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 73 (expresionBool -> valorBool .)
    PDER            reduce using rule 73 (expresionBool -> valorBool .)


state 26

    (64) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 75


state 27

    (66) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 76


state 28

    (51) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 77


state 29

    (53) sentenciaElse -> ELSE . algoritmo
    (54) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    LIZQ            shift and go to state 79
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    algoritmo                      shift and go to state 78
    asignacion                     shift and go to state 80
    expresionInt                   shift and go to state 81
    expresionDouble                shift and go to state 82
    expresionString                shift and go to state 83
    expresionBool                  shift and go to state 84
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 85
    sentenciaDoWhile               shift and go to state 86
    sentenciaIf                    shift and go to state 87
    sentenciaElse                  shift and go to state 88
    imprimir                       shift and go to state 89
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 30

    (50) imprimir -> PRINT . PIZQ expresion PDER

    PIZQ            shift and go to state 90


state 31

    (59) expresion -> valor . operadorMat expresion
    (60) expresion -> valor .
    (86) operadorMat -> . SUMA
    (87) operadorMat -> . RESTA
    (88) operadorMat -> . MULTI
    (89) operadorMat -> . DIV
    (90) operadorMat -> . DIVENTERO
    (91) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 60 (expresion -> valor .)
    INT             reduce using rule 60 (expresion -> valor .)
    DOUBLER         reduce using rule 60 (expresion -> valor .)
    NUM             reduce using rule 60 (expresion -> valor .)
    STRINGR         reduce using rule 60 (expresion -> valor .)
    BOOLR           reduce using rule 60 (expresion -> valor .)
    DYNAMIC         reduce using rule 60 (expresion -> valor .)
    VAR             reduce using rule 60 (expresion -> valor .)
    VARIABLE        reduce using rule 60 (expresion -> valor .)
    WHILE           reduce using rule 60 (expresion -> valor .)
    DO              reduce using rule 60 (expresion -> valor .)
    IF              reduce using rule 60 (expresion -> valor .)
    ELSE            reduce using rule 60 (expresion -> valor .)
    PRINT           reduce using rule 60 (expresion -> valor .)
    ENTERO          reduce using rule 60 (expresion -> valor .)
    DOUBLE          reduce using rule 60 (expresion -> valor .)
    STRING          reduce using rule 60 (expresion -> valor .)
    BOOL            reduce using rule 60 (expresion -> valor .)
    $end            reduce using rule 60 (expresion -> valor .)
    LDER            reduce using rule 60 (expresion -> valor .)
    PDER            reduce using rule 60 (expresion -> valor .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULTI           shift and go to state 68
    DIV             shift and go to state 69
    DIVENTERO       shift and go to state 70
    MOD             shift and go to state 71

    operadorMat                    shift and go to state 91

state 32

    (78) valorInt -> ENTERO .
    (55) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 55 (valor -> ENTERO .)
    DIGUAL          reduce using rule 78 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 78 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 78 (valorInt -> ENTERO .)
    MENOR           reduce using rule 78 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 78 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 78 (valorInt -> ENTERO .)
    SUMA            reduce using rule 55 (valor -> ENTERO .)
    RESTA           reduce using rule 55 (valor -> ENTERO .)
    MULTI           reduce using rule 55 (valor -> ENTERO .)
    DIV             reduce using rule 55 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 55 (valor -> ENTERO .)
    MOD             reduce using rule 55 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 55 (valor -> ENTERO .)
    INT             reduce using rule 55 (valor -> ENTERO .)
    DOUBLER         reduce using rule 55 (valor -> ENTERO .)
    NUM             reduce using rule 55 (valor -> ENTERO .)
    STRINGR         reduce using rule 55 (valor -> ENTERO .)
    BOOLR           reduce using rule 55 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 55 (valor -> ENTERO .)
    VAR             reduce using rule 55 (valor -> ENTERO .)
    VARIABLE        reduce using rule 55 (valor -> ENTERO .)
    WHILE           reduce using rule 55 (valor -> ENTERO .)
    DO              reduce using rule 55 (valor -> ENTERO .)
    IF              reduce using rule 55 (valor -> ENTERO .)
    ELSE            reduce using rule 55 (valor -> ENTERO .)
    PRINT           reduce using rule 55 (valor -> ENTERO .)
    ENTERO          reduce using rule 55 (valor -> ENTERO .)
    DOUBLE          reduce using rule 55 (valor -> ENTERO .)
    STRING          reduce using rule 55 (valor -> ENTERO .)
    BOOL            reduce using rule 55 (valor -> ENTERO .)
    $end            reduce using rule 55 (valor -> ENTERO .)
    LDER            reduce using rule 55 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 78 (valorInt -> ENTERO .) ]


state 33

    (82) valorDouble -> DOUBLE .
    (57) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 57 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 82 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 82 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 82 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 82 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 82 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 82 (valorDouble -> DOUBLE .)
    SUMA            reduce using rule 57 (valor -> DOUBLE .)
    RESTA           reduce using rule 57 (valor -> DOUBLE .)
    MULTI           reduce using rule 57 (valor -> DOUBLE .)
    DIV             reduce using rule 57 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 57 (valor -> DOUBLE .)
    MOD             reduce using rule 57 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 57 (valor -> DOUBLE .)
    INT             reduce using rule 57 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 57 (valor -> DOUBLE .)
    NUM             reduce using rule 57 (valor -> DOUBLE .)
    STRINGR         reduce using rule 57 (valor -> DOUBLE .)
    BOOLR           reduce using rule 57 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 57 (valor -> DOUBLE .)
    VAR             reduce using rule 57 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 57 (valor -> DOUBLE .)
    WHILE           reduce using rule 57 (valor -> DOUBLE .)
    DO              reduce using rule 57 (valor -> DOUBLE .)
    IF              reduce using rule 57 (valor -> DOUBLE .)
    ELSE            reduce using rule 57 (valor -> DOUBLE .)
    PRINT           reduce using rule 57 (valor -> DOUBLE .)
    ENTERO          reduce using rule 57 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 57 (valor -> DOUBLE .)
    STRING          reduce using rule 57 (valor -> DOUBLE .)
    BOOL            reduce using rule 57 (valor -> DOUBLE .)
    $end            reduce using rule 57 (valor -> DOUBLE .)
    LDER            reduce using rule 57 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]


state 34

    (74) valorString -> STRING .
    (58) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 58 (valor -> STRING .)
    SUMA            reduce using rule 58 (valor -> STRING .)
    RESTA           reduce using rule 58 (valor -> STRING .)
    MULTI           reduce using rule 58 (valor -> STRING .)
    DIV             reduce using rule 58 (valor -> STRING .)
    DIVENTERO       reduce using rule 58 (valor -> STRING .)
    MOD             reduce using rule 58 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 58 (valor -> STRING .)
    INT             reduce using rule 58 (valor -> STRING .)
    DOUBLER         reduce using rule 58 (valor -> STRING .)
    NUM             reduce using rule 58 (valor -> STRING .)
    STRINGR         reduce using rule 58 (valor -> STRING .)
    BOOLR           reduce using rule 58 (valor -> STRING .)
    DYNAMIC         reduce using rule 58 (valor -> STRING .)
    VAR             reduce using rule 58 (valor -> STRING .)
    VARIABLE        reduce using rule 58 (valor -> STRING .)
    WHILE           reduce using rule 58 (valor -> STRING .)
    DO              reduce using rule 58 (valor -> STRING .)
    IF              reduce using rule 58 (valor -> STRING .)
    ELSE            reduce using rule 58 (valor -> STRING .)
    PRINT           reduce using rule 58 (valor -> STRING .)
    ENTERO          reduce using rule 58 (valor -> STRING .)
    DOUBLE          reduce using rule 58 (valor -> STRING .)
    STRING          reduce using rule 58 (valor -> STRING .)
    BOOL            reduce using rule 58 (valor -> STRING .)
    $end            reduce using rule 58 (valor -> STRING .)
    LDER            reduce using rule 58 (valor -> STRING .)

  ! SUMA            [ reduce using rule 74 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 74 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 74 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 74 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 74 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 74 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 74 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 74 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 74 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 74 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 74 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 74 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 74 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 74 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 74 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 74 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 74 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 74 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 74 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 74 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 74 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 74 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 74 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 74 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 74 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 74 (valorString -> STRING .) ]


state 35

    (67) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 67 (valorBool -> BOOL .)
    PDER            reduce using rule 67 (valorBool -> BOOL .)


state 36

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    algoritmo                      shift and go to state 2
    final                          shift and go to state 92
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 37

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (28) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    asignacion                     shift and go to state 3
    final                          shift and go to state 93
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 38

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (29) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionInt                   shift and go to state 4
    final                          shift and go to state 94
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 39

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (30) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionDouble                shift and go to state 5
    final                          shift and go to state 95
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 40

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (31) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionString                shift and go to state 6
    final                          shift and go to state 96
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 41

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (32) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionBool                  shift and go to state 7
    final                          shift and go to state 97
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 42

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 43

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (35) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 98
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 44

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (36) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 99
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 45

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (37) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 100
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 46

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 47

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (39) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 101
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    expresion                      shift and go to state 13
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 48

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 49

    (27) final -> imprimir PUNTOYCOMA .
    (41) algoritmo -> imprimir PUNTOYCOMA .

    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)


state 50

    (42) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 102


state 51

    (49) asignacion -> VARIABLE IGUAL . expresion
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt

    ENTERO          shift and go to state 108
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 109
    STRING          shift and go to state 110

    expresion                      shift and go to state 104
    valor                          shift and go to state 31
    expresionString                shift and go to state 105
    expresionInt                   shift and go to state 106
    expresionDouble                shift and go to state 107
    valorString                    shift and go to state 24
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 111

state 52

    (70) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (71) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 112
    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116

    expresionDouble                shift and go to state 113
    valorDouble                    shift and go to state 111
    valorInt                       shift and go to state 115

state 53

    (92) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 92 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 92 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 92 (comparadorMat -> DIGUAL .)


state 54

    (93) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 93 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 93 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 93 (comparadorMat -> NOIGUAL .)


state 55

    (94) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 94 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 94 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 94 (comparadorMat -> MAYOR .)


state 56

    (95) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 95 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 95 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 95 (comparadorMat -> MENOR .)


state 57

    (96) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 96 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 96 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 96 (comparadorMat -> MAYIGUAL .)


state 58

    (97) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 97 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 97 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 97 (comparadorMat -> MENIGUAL .)


state 59

    (43) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 117


state 60

    (44) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 118


state 61

    (45) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 119


state 62

    (46) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 120


state 63

    (47) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 121


state 64

    (48) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 122


state 65

    (80) expresionInt -> valorInt operadorMat . expresionInt
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 125

    valorInt                       shift and go to state 123
    expresionInt                   shift and go to state 124

state 66

    (86) operadorMat -> SUMA .

    ENTERO          reduce using rule 86 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 86 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 86 (operadorMat -> SUMA .)
    STRING          reduce using rule 86 (operadorMat -> SUMA .)


state 67

    (87) operadorMat -> RESTA .

    ENTERO          reduce using rule 87 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 87 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 87 (operadorMat -> RESTA .)
    STRING          reduce using rule 87 (operadorMat -> RESTA .)


state 68

    (88) operadorMat -> MULTI .

    ENTERO          reduce using rule 88 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 88 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 88 (operadorMat -> MULTI .)
    STRING          reduce using rule 88 (operadorMat -> MULTI .)


state 69

    (89) operadorMat -> DIV .

    ENTERO          reduce using rule 89 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 89 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 89 (operadorMat -> DIV .)
    STRING          reduce using rule 89 (operadorMat -> DIV .)


state 70

    (90) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 90 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 90 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 90 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 90 (operadorMat -> DIVENTERO .)


state 71

    (91) operadorMat -> MOD .

    ENTERO          reduce using rule 91 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 91 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 91 (operadorMat -> MOD .)
    STRING          reduce using rule 91 (operadorMat -> MOD .)


state 72

    (84) expresionDouble -> valorDouble operadorMat . expresionDouble
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 125

    valorDouble                    shift and go to state 111
    expresionDouble                shift and go to state 126
    valorInt                       shift and go to state 115

state 73

    (69) expresionBool -> valorDouble comparadorMat . expresionDouble
    (72) expresionBool -> valorDouble comparadorMat . VARIABLE
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 128
    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116

    valorDouble                    shift and go to state 111
    expresionDouble                shift and go to state 127
    valorInt                       shift and go to state 115

state 74

    (76) expresionString -> valorString operadorMat . expresionString
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE

    STRING          shift and go to state 130
    VARIABLE        shift and go to state 131

    valorString                    shift and go to state 24
    expresionString                shift and go to state 129

state 75

    (64) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 35
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 132
    valorDouble                    shift and go to state 133
    valorBool                      shift and go to state 25
    valorInt                       shift and go to state 115

state 76

    (66) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    algoritmo                      shift and go to state 135
    expresionBool                  shift and go to state 84
    asignacion                     shift and go to state 80
    expresionInt                   shift and go to state 81
    expresionDouble                shift and go to state 82
    expresionString                shift and go to state 83
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 85
    sentenciaDoWhile               shift and go to state 86
    sentenciaIf                    shift and go to state 87
    sentenciaElse                  shift and go to state 88
    imprimir                       shift and go to state 89
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 77

    (51) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (52) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 35
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 136
    valorDouble                    shift and go to state 133
    valorBool                      shift and go to state 25
    valorInt                       shift and go to state 115

state 78

    (53) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    PRINT           reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 53 (sentenciaElse -> ELSE algoritmo .)


state 79

    (54) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    algoritmo                      shift and go to state 137
    asignacion                     shift and go to state 80
    expresionInt                   shift and go to state 81
    expresionDouble                shift and go to state 82
    expresionString                shift and go to state 83
    expresionBool                  shift and go to state 84
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 85
    sentenciaDoWhile               shift and go to state 86
    sentenciaIf                    shift and go to state 87
    sentenciaElse                  shift and go to state 88
    imprimir                       shift and go to state 89
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 80

    (28) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 138


state 81

    (29) algoritmo -> expresionInt . PUNTOYCOMA
    (62) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 139
    INT             reduce using rule 62 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 62 (expresion -> expresionInt .)
    NUM             reduce using rule 62 (expresion -> expresionInt .)
    STRINGR         reduce using rule 62 (expresion -> expresionInt .)
    BOOLR           reduce using rule 62 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 62 (expresion -> expresionInt .)
    VAR             reduce using rule 62 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 62 (expresion -> expresionInt .)
    WHILE           reduce using rule 62 (expresion -> expresionInt .)
    DO              reduce using rule 62 (expresion -> expresionInt .)
    IF              reduce using rule 62 (expresion -> expresionInt .)
    ELSE            reduce using rule 62 (expresion -> expresionInt .)
    PRINT           reduce using rule 62 (expresion -> expresionInt .)
    ENTERO          reduce using rule 62 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 62 (expresion -> expresionInt .)
    STRING          reduce using rule 62 (expresion -> expresionInt .)
    BOOL            reduce using rule 62 (expresion -> expresionInt .)
    $end            reduce using rule 62 (expresion -> expresionInt .)
    LDER            reduce using rule 62 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 62 (expresion -> expresionInt .) ]


state 82

    (30) algoritmo -> expresionDouble . PUNTOYCOMA
    (63) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 140
    INT             reduce using rule 63 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 63 (expresion -> expresionDouble .)
    NUM             reduce using rule 63 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 63 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 63 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 63 (expresion -> expresionDouble .)
    VAR             reduce using rule 63 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 63 (expresion -> expresionDouble .)
    WHILE           reduce using rule 63 (expresion -> expresionDouble .)
    DO              reduce using rule 63 (expresion -> expresionDouble .)
    IF              reduce using rule 63 (expresion -> expresionDouble .)
    ELSE            reduce using rule 63 (expresion -> expresionDouble .)
    PRINT           reduce using rule 63 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 63 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 63 (expresion -> expresionDouble .)
    STRING          reduce using rule 63 (expresion -> expresionDouble .)
    BOOL            reduce using rule 63 (expresion -> expresionDouble .)
    $end            reduce using rule 63 (expresion -> expresionDouble .)
    LDER            reduce using rule 63 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 63 (expresion -> expresionDouble .) ]


state 83

    (31) algoritmo -> expresionString . PUNTOYCOMA
    (61) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 141
    INT             reduce using rule 61 (expresion -> expresionString .)
    DOUBLER         reduce using rule 61 (expresion -> expresionString .)
    NUM             reduce using rule 61 (expresion -> expresionString .)
    STRINGR         reduce using rule 61 (expresion -> expresionString .)
    BOOLR           reduce using rule 61 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 61 (expresion -> expresionString .)
    VAR             reduce using rule 61 (expresion -> expresionString .)
    VARIABLE        reduce using rule 61 (expresion -> expresionString .)
    WHILE           reduce using rule 61 (expresion -> expresionString .)
    DO              reduce using rule 61 (expresion -> expresionString .)
    IF              reduce using rule 61 (expresion -> expresionString .)
    ELSE            reduce using rule 61 (expresion -> expresionString .)
    PRINT           reduce using rule 61 (expresion -> expresionString .)
    ENTERO          reduce using rule 61 (expresion -> expresionString .)
    DOUBLE          reduce using rule 61 (expresion -> expresionString .)
    STRING          reduce using rule 61 (expresion -> expresionString .)
    BOOL            reduce using rule 61 (expresion -> expresionString .)
    $end            reduce using rule 61 (expresion -> expresionString .)
    LDER            reduce using rule 61 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 61 (expresion -> expresionString .) ]


state 84

    (32) algoritmo -> expresionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 142


state 85

    (34) algoritmo -> sentenciaWhile .
    (35) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 34 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 34 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 34 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 34 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 34 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 34 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 34 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 34 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    PRINT           reduce using rule 34 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 34 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 34 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 34 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 34 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 143

  ! PUNTOYCOMA      [ reduce using rule 34 (algoritmo -> sentenciaWhile .) ]


state 86

    (36) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 144


state 87

    (37) algoritmo -> sentenciaIf . PUNTOYCOMA
    (38) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 145
    INT             reduce using rule 38 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 38 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 38 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 38 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 38 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 38 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 38 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 38 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 38 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 38 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 38 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 38 (algoritmo -> sentenciaIf .)
    PRINT           reduce using rule 38 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 38 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 38 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 38 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 38 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 38 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 38 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 38 (algoritmo -> sentenciaIf .) ]


state 88

    (39) algoritmo -> sentenciaElse . PUNTOYCOMA
    (40) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 146
    INT             reduce using rule 40 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 40 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 40 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 40 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 40 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 40 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 40 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 40 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 40 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 40 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 40 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 40 (algoritmo -> sentenciaElse .)
    PRINT           reduce using rule 40 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 40 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 40 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 40 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 40 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 40 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 40 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 40 (algoritmo -> sentenciaElse .) ]


state 89

    (41) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 147


state 90

    (50) imprimir -> PRINT PIZQ . expresion PDER
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt

    ENTERO          shift and go to state 108
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 109
    STRING          shift and go to state 110

    expresion                      shift and go to state 148
    valor                          shift and go to state 31
    expresionString                shift and go to state 105
    expresionInt                   shift and go to state 106
    expresionDouble                shift and go to state 107
    valorString                    shift and go to state 24
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 111

state 91

    (59) expresion -> valor operadorMat . expresion
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt

    ENTERO          shift and go to state 108
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 109
    STRING          shift and go to state 110

    valor                          shift and go to state 31
    expresion                      shift and go to state 149
    expresionString                shift and go to state 105
    expresionInt                   shift and go to state 106
    expresionDouble                shift and go to state 107
    valorString                    shift and go to state 24
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 111

state 92

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 93

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 94

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 95

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 96

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 97

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 98

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 99

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 100

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 101

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 102

    (42) asignacion -> INT VARIABLE IGUAL . expresionInt
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 125

    expresionInt                   shift and go to state 150
    valorInt                       shift and go to state 123

state 103

    (56) valor -> VARIABLE .
    (75) valorString -> VARIABLE .
    (79) valorInt -> VARIABLE .

  ! reduce/reduce conflict for SUMA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 56 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 56 (valor -> VARIABLE .)
    SUMA            reduce using rule 56 (valor -> VARIABLE .)
    RESTA           reduce using rule 56 (valor -> VARIABLE .)
    MULTI           reduce using rule 56 (valor -> VARIABLE .)
    DIV             reduce using rule 56 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 56 (valor -> VARIABLE .)
    MOD             reduce using rule 56 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 56 (valor -> VARIABLE .)
    PDER            reduce using rule 56 (valor -> VARIABLE .)
    INT             reduce using rule 56 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 56 (valor -> VARIABLE .)
    NUM             reduce using rule 56 (valor -> VARIABLE .)
    STRINGR         reduce using rule 56 (valor -> VARIABLE .)
    BOOLR           reduce using rule 56 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 56 (valor -> VARIABLE .)
    VAR             reduce using rule 56 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 56 (valor -> VARIABLE .)
    WHILE           reduce using rule 56 (valor -> VARIABLE .)
    DO              reduce using rule 56 (valor -> VARIABLE .)
    IF              reduce using rule 56 (valor -> VARIABLE .)
    ELSE            reduce using rule 56 (valor -> VARIABLE .)
    PRINT           reduce using rule 56 (valor -> VARIABLE .)
    ENTERO          reduce using rule 56 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 56 (valor -> VARIABLE .)
    STRING          reduce using rule 56 (valor -> VARIABLE .)
    BOOL            reduce using rule 56 (valor -> VARIABLE .)
    $end            reduce using rule 56 (valor -> VARIABLE .)
    LDER            reduce using rule 56 (valor -> VARIABLE .)

  ! SUMA            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 75 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 79 (valorInt -> VARIABLE .) ]


state 104

    (49) asignacion -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 49 (asignacion -> VARIABLE IGUAL expresion .)


state 105

    (61) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 61 (expresion -> expresionString .)
    PDER            reduce using rule 61 (expresion -> expresionString .)
    INT             reduce using rule 61 (expresion -> expresionString .)
    DOUBLER         reduce using rule 61 (expresion -> expresionString .)
    NUM             reduce using rule 61 (expresion -> expresionString .)
    STRINGR         reduce using rule 61 (expresion -> expresionString .)
    BOOLR           reduce using rule 61 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 61 (expresion -> expresionString .)
    VAR             reduce using rule 61 (expresion -> expresionString .)
    VARIABLE        reduce using rule 61 (expresion -> expresionString .)
    WHILE           reduce using rule 61 (expresion -> expresionString .)
    DO              reduce using rule 61 (expresion -> expresionString .)
    IF              reduce using rule 61 (expresion -> expresionString .)
    ELSE            reduce using rule 61 (expresion -> expresionString .)
    PRINT           reduce using rule 61 (expresion -> expresionString .)
    ENTERO          reduce using rule 61 (expresion -> expresionString .)
    DOUBLE          reduce using rule 61 (expresion -> expresionString .)
    STRING          reduce using rule 61 (expresion -> expresionString .)
    BOOL            reduce using rule 61 (expresion -> expresionString .)
    $end            reduce using rule 61 (expresion -> expresionString .)
    LDER            reduce using rule 61 (expresion -> expresionString .)


state 106

    (62) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 62 (expresion -> expresionInt .)
    PDER            reduce using rule 62 (expresion -> expresionInt .)
    INT             reduce using rule 62 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 62 (expresion -> expresionInt .)
    NUM             reduce using rule 62 (expresion -> expresionInt .)
    STRINGR         reduce using rule 62 (expresion -> expresionInt .)
    BOOLR           reduce using rule 62 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 62 (expresion -> expresionInt .)
    VAR             reduce using rule 62 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 62 (expresion -> expresionInt .)
    WHILE           reduce using rule 62 (expresion -> expresionInt .)
    DO              reduce using rule 62 (expresion -> expresionInt .)
    IF              reduce using rule 62 (expresion -> expresionInt .)
    ELSE            reduce using rule 62 (expresion -> expresionInt .)
    PRINT           reduce using rule 62 (expresion -> expresionInt .)
    ENTERO          reduce using rule 62 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 62 (expresion -> expresionInt .)
    STRING          reduce using rule 62 (expresion -> expresionInt .)
    BOOL            reduce using rule 62 (expresion -> expresionInt .)
    $end            reduce using rule 62 (expresion -> expresionInt .)
    LDER            reduce using rule 62 (expresion -> expresionInt .)


state 107

    (63) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 63 (expresion -> expresionDouble .)
    PDER            reduce using rule 63 (expresion -> expresionDouble .)
    INT             reduce using rule 63 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 63 (expresion -> expresionDouble .)
    NUM             reduce using rule 63 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 63 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 63 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 63 (expresion -> expresionDouble .)
    VAR             reduce using rule 63 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 63 (expresion -> expresionDouble .)
    WHILE           reduce using rule 63 (expresion -> expresionDouble .)
    DO              reduce using rule 63 (expresion -> expresionDouble .)
    IF              reduce using rule 63 (expresion -> expresionDouble .)
    ELSE            reduce using rule 63 (expresion -> expresionDouble .)
    PRINT           reduce using rule 63 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 63 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 63 (expresion -> expresionDouble .)
    STRING          reduce using rule 63 (expresion -> expresionDouble .)
    BOOL            reduce using rule 63 (expresion -> expresionDouble .)
    $end            reduce using rule 63 (expresion -> expresionDouble .)
    LDER            reduce using rule 63 (expresion -> expresionDouble .)


state 108

    (55) valor -> ENTERO .
    (78) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 55 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 55 (valor -> ENTERO .)
    SUMA            reduce using rule 55 (valor -> ENTERO .)
    RESTA           reduce using rule 55 (valor -> ENTERO .)
    MULTI           reduce using rule 55 (valor -> ENTERO .)
    DIV             reduce using rule 55 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 55 (valor -> ENTERO .)
    MOD             reduce using rule 55 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 55 (valor -> ENTERO .)
    PDER            reduce using rule 55 (valor -> ENTERO .)
    INT             reduce using rule 55 (valor -> ENTERO .)
    DOUBLER         reduce using rule 55 (valor -> ENTERO .)
    NUM             reduce using rule 55 (valor -> ENTERO .)
    STRINGR         reduce using rule 55 (valor -> ENTERO .)
    BOOLR           reduce using rule 55 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 55 (valor -> ENTERO .)
    VAR             reduce using rule 55 (valor -> ENTERO .)
    VARIABLE        reduce using rule 55 (valor -> ENTERO .)
    WHILE           reduce using rule 55 (valor -> ENTERO .)
    DO              reduce using rule 55 (valor -> ENTERO .)
    IF              reduce using rule 55 (valor -> ENTERO .)
    ELSE            reduce using rule 55 (valor -> ENTERO .)
    PRINT           reduce using rule 55 (valor -> ENTERO .)
    ENTERO          reduce using rule 55 (valor -> ENTERO .)
    DOUBLE          reduce using rule 55 (valor -> ENTERO .)
    STRING          reduce using rule 55 (valor -> ENTERO .)
    BOOL            reduce using rule 55 (valor -> ENTERO .)
    $end            reduce using rule 55 (valor -> ENTERO .)
    LDER            reduce using rule 55 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 78 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 78 (valorInt -> ENTERO .) ]


state 109

    (57) valor -> DOUBLE .
    (82) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 57 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 57 (valor -> DOUBLE .)
    SUMA            reduce using rule 57 (valor -> DOUBLE .)
    RESTA           reduce using rule 57 (valor -> DOUBLE .)
    MULTI           reduce using rule 57 (valor -> DOUBLE .)
    DIV             reduce using rule 57 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 57 (valor -> DOUBLE .)
    MOD             reduce using rule 57 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 57 (valor -> DOUBLE .)
    PDER            reduce using rule 57 (valor -> DOUBLE .)
    INT             reduce using rule 57 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 57 (valor -> DOUBLE .)
    NUM             reduce using rule 57 (valor -> DOUBLE .)
    STRINGR         reduce using rule 57 (valor -> DOUBLE .)
    BOOLR           reduce using rule 57 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 57 (valor -> DOUBLE .)
    VAR             reduce using rule 57 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 57 (valor -> DOUBLE .)
    WHILE           reduce using rule 57 (valor -> DOUBLE .)
    DO              reduce using rule 57 (valor -> DOUBLE .)
    IF              reduce using rule 57 (valor -> DOUBLE .)
    ELSE            reduce using rule 57 (valor -> DOUBLE .)
    PRINT           reduce using rule 57 (valor -> DOUBLE .)
    ENTERO          reduce using rule 57 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 57 (valor -> DOUBLE .)
    STRING          reduce using rule 57 (valor -> DOUBLE .)
    BOOL            reduce using rule 57 (valor -> DOUBLE .)
    $end            reduce using rule 57 (valor -> DOUBLE .)
    LDER            reduce using rule 57 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 82 (valorDouble -> DOUBLE .) ]


state 110

    (58) valor -> STRING .
    (74) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 58 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 58 (valor -> STRING .)
    SUMA            reduce using rule 58 (valor -> STRING .)
    RESTA           reduce using rule 58 (valor -> STRING .)
    MULTI           reduce using rule 58 (valor -> STRING .)
    DIV             reduce using rule 58 (valor -> STRING .)
    DIVENTERO       reduce using rule 58 (valor -> STRING .)
    MOD             reduce using rule 58 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 58 (valor -> STRING .)
    PDER            reduce using rule 58 (valor -> STRING .)
    INT             reduce using rule 58 (valor -> STRING .)
    DOUBLER         reduce using rule 58 (valor -> STRING .)
    NUM             reduce using rule 58 (valor -> STRING .)
    STRINGR         reduce using rule 58 (valor -> STRING .)
    BOOLR           reduce using rule 58 (valor -> STRING .)
    DYNAMIC         reduce using rule 58 (valor -> STRING .)
    VAR             reduce using rule 58 (valor -> STRING .)
    VARIABLE        reduce using rule 58 (valor -> STRING .)
    WHILE           reduce using rule 58 (valor -> STRING .)
    DO              reduce using rule 58 (valor -> STRING .)
    IF              reduce using rule 58 (valor -> STRING .)
    ELSE            reduce using rule 58 (valor -> STRING .)
    PRINT           reduce using rule 58 (valor -> STRING .)
    ENTERO          reduce using rule 58 (valor -> STRING .)
    DOUBLE          reduce using rule 58 (valor -> STRING .)
    STRING          reduce using rule 58 (valor -> STRING .)
    BOOL            reduce using rule 58 (valor -> STRING .)
    $end            reduce using rule 58 (valor -> STRING .)
    LDER            reduce using rule 58 (valor -> STRING .)

  ! SUMA            [ reduce using rule 74 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 74 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 74 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 74 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 74 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 74 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 74 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 74 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 74 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 74 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 74 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 74 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 74 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 74 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 74 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 74 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 74 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 74 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 74 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 74 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 74 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 74 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 74 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 74 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 74 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 74 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 74 (valorString -> STRING .) ]


state 111

    (84) expresionDouble -> valorDouble . operadorMat expresionDouble
    (85) expresionDouble -> valorDouble .
    (86) operadorMat -> . SUMA
    (87) operadorMat -> . RESTA
    (88) operadorMat -> . MULTI
    (89) operadorMat -> . DIV
    (90) operadorMat -> . DIVENTERO
    (91) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 85 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 85 (expresionDouble -> valorDouble .)
    INT             reduce using rule 85 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 85 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 85 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 85 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 85 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 85 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 85 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 85 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 85 (expresionDouble -> valorDouble .)
    DO              reduce using rule 85 (expresionDouble -> valorDouble .)
    IF              reduce using rule 85 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 85 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 85 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 85 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 85 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 85 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 85 (expresionDouble -> valorDouble .)
    $end            reduce using rule 85 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 85 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULTI           shift and go to state 68
    DIV             shift and go to state 69
    DIVENTERO       shift and go to state 70
    MOD             shift and go to state 71

    operadorMat                    shift and go to state 72

state 112

    (71) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (79) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 71 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 71 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 71 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 71 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 79 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 79 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 79 (valorInt -> VARIABLE .)
    DIV             reduce using rule 79 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 79 (valorInt -> VARIABLE .)
    MOD             reduce using rule 79 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 79 (valorInt -> VARIABLE .) ]


state 113

    (70) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 70 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 70 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 114

    (82) valorDouble -> DOUBLE .

    SUMA            reduce using rule 82 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 82 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 82 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 82 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 82 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 82 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 82 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 82 (valorDouble -> DOUBLE .)
    INT             reduce using rule 82 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 82 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 82 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 82 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 82 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 82 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 82 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 82 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 82 (valorDouble -> DOUBLE .)
    DO              reduce using rule 82 (valorDouble -> DOUBLE .)
    IF              reduce using rule 82 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 82 (valorDouble -> DOUBLE .)
    PRINT           reduce using rule 82 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 82 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 82 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 82 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 82 (valorDouble -> DOUBLE .)
    $end            reduce using rule 82 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 82 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 82 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 82 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 82 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 82 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 82 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 82 (valorDouble -> DOUBLE .)


state 115

    (83) valorDouble -> valorInt .

    SUMA            reduce using rule 83 (valorDouble -> valorInt .)
    RESTA           reduce using rule 83 (valorDouble -> valorInt .)
    MULTI           reduce using rule 83 (valorDouble -> valorInt .)
    DIV             reduce using rule 83 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 83 (valorDouble -> valorInt .)
    MOD             reduce using rule 83 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 83 (valorDouble -> valorInt .)
    PDER            reduce using rule 83 (valorDouble -> valorInt .)
    INT             reduce using rule 83 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 83 (valorDouble -> valorInt .)
    NUM             reduce using rule 83 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 83 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 83 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 83 (valorDouble -> valorInt .)
    VAR             reduce using rule 83 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 83 (valorDouble -> valorInt .)
    WHILE           reduce using rule 83 (valorDouble -> valorInt .)
    DO              reduce using rule 83 (valorDouble -> valorInt .)
    IF              reduce using rule 83 (valorDouble -> valorInt .)
    ELSE            reduce using rule 83 (valorDouble -> valorInt .)
    PRINT           reduce using rule 83 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 83 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 83 (valorDouble -> valorInt .)
    STRING          reduce using rule 83 (valorDouble -> valorInt .)
    BOOL            reduce using rule 83 (valorDouble -> valorInt .)
    $end            reduce using rule 83 (valorDouble -> valorInt .)
    LDER            reduce using rule 83 (valorDouble -> valorInt .)
    DIGUAL          reduce using rule 83 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 83 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 83 (valorDouble -> valorInt .)
    MENOR           reduce using rule 83 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 83 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 83 (valorDouble -> valorInt .)


state 116

    (78) valorInt -> ENTERO .

    SUMA            reduce using rule 78 (valorInt -> ENTERO .)
    RESTA           reduce using rule 78 (valorInt -> ENTERO .)
    MULTI           reduce using rule 78 (valorInt -> ENTERO .)
    DIV             reduce using rule 78 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 78 (valorInt -> ENTERO .)
    MOD             reduce using rule 78 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 78 (valorInt -> ENTERO .)
    PDER            reduce using rule 78 (valorInt -> ENTERO .)
    INT             reduce using rule 78 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 78 (valorInt -> ENTERO .)
    NUM             reduce using rule 78 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 78 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 78 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 78 (valorInt -> ENTERO .)
    VAR             reduce using rule 78 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 78 (valorInt -> ENTERO .)
    WHILE           reduce using rule 78 (valorInt -> ENTERO .)
    DO              reduce using rule 78 (valorInt -> ENTERO .)
    IF              reduce using rule 78 (valorInt -> ENTERO .)
    ELSE            reduce using rule 78 (valorInt -> ENTERO .)
    PRINT           reduce using rule 78 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 78 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 78 (valorInt -> ENTERO .)
    STRING          reduce using rule 78 (valorInt -> ENTERO .)
    BOOL            reduce using rule 78 (valorInt -> ENTERO .)
    $end            reduce using rule 78 (valorInt -> ENTERO .)
    LDER            reduce using rule 78 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 78 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 78 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 78 (valorInt -> ENTERO .)
    MENOR           reduce using rule 78 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 78 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 78 (valorInt -> ENTERO .)


state 117

    (43) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 125

    expresionDouble                shift and go to state 151
    valorDouble                    shift and go to state 111
    valorInt                       shift and go to state 115

state 118

    (44) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 114
    ENTERO          shift and go to state 116
    VARIABLE        shift and go to state 125

    expresionDouble                shift and go to state 152
    valorDouble                    shift and go to state 111
    valorInt                       shift and go to state 115

state 119

    (45) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE

    STRING          shift and go to state 130
    VARIABLE        shift and go to state 131

    expresionString                shift and go to state 153
    valorString                    shift and go to state 24

state 120

    (46) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 35
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 154
    valorDouble                    shift and go to state 133
    valorBool                      shift and go to state 25
    valorInt                       shift and go to state 115

state 121

    (47) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt

    ENTERO          shift and go to state 108
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 109
    STRING          shift and go to state 110

    expresion                      shift and go to state 155
    valor                          shift and go to state 31
    expresionString                shift and go to state 105
    expresionInt                   shift and go to state 106
    expresionDouble                shift and go to state 107
    valorString                    shift and go to state 24
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 111

state 122

    (48) asignacion -> VAR VARIABLE IGUAL . expresion
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt

    ENTERO          shift and go to state 108
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 109
    STRING          shift and go to state 110

    expresion                      shift and go to state 156
    valor                          shift and go to state 31
    expresionString                shift and go to state 105
    expresionInt                   shift and go to state 106
    expresionDouble                shift and go to state 107
    valorString                    shift and go to state 24
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 111

state 123

    (80) expresionInt -> valorInt . operadorMat expresionInt
    (81) expresionInt -> valorInt .
    (86) operadorMat -> . SUMA
    (87) operadorMat -> . RESTA
    (88) operadorMat -> . MULTI
    (89) operadorMat -> . DIV
    (90) operadorMat -> . DIVENTERO
    (91) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 81 (expresionInt -> valorInt .)
    INT             reduce using rule 81 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 81 (expresionInt -> valorInt .)
    NUM             reduce using rule 81 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 81 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 81 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 81 (expresionInt -> valorInt .)
    VAR             reduce using rule 81 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 81 (expresionInt -> valorInt .)
    WHILE           reduce using rule 81 (expresionInt -> valorInt .)
    DO              reduce using rule 81 (expresionInt -> valorInt .)
    IF              reduce using rule 81 (expresionInt -> valorInt .)
    ELSE            reduce using rule 81 (expresionInt -> valorInt .)
    PRINT           reduce using rule 81 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 81 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 81 (expresionInt -> valorInt .)
    STRING          reduce using rule 81 (expresionInt -> valorInt .)
    BOOL            reduce using rule 81 (expresionInt -> valorInt .)
    $end            reduce using rule 81 (expresionInt -> valorInt .)
    LDER            reduce using rule 81 (expresionInt -> valorInt .)
    PDER            reduce using rule 81 (expresionInt -> valorInt .)
    SUMA            shift and go to state 66
    RESTA           shift and go to state 67
    MULTI           shift and go to state 68
    DIV             shift and go to state 69
    DIVENTERO       shift and go to state 70
    MOD             shift and go to state 71

    operadorMat                    shift and go to state 65

state 124

    (80) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    PRINT           reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 80 (expresionInt -> valorInt operadorMat expresionInt .)


state 125

    (79) valorInt -> VARIABLE .

    SUMA            reduce using rule 79 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 79 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 79 (valorInt -> VARIABLE .)
    DIV             reduce using rule 79 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 79 (valorInt -> VARIABLE .)
    MOD             reduce using rule 79 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 79 (valorInt -> VARIABLE .)
    INT             reduce using rule 79 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 79 (valorInt -> VARIABLE .)
    NUM             reduce using rule 79 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 79 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 79 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 79 (valorInt -> VARIABLE .)
    VAR             reduce using rule 79 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 79 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 79 (valorInt -> VARIABLE .)
    DO              reduce using rule 79 (valorInt -> VARIABLE .)
    IF              reduce using rule 79 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 79 (valorInt -> VARIABLE .)
    PRINT           reduce using rule 79 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 79 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 79 (valorInt -> VARIABLE .)
    STRING          reduce using rule 79 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 79 (valorInt -> VARIABLE .)
    $end            reduce using rule 79 (valorInt -> VARIABLE .)
    LDER            reduce using rule 79 (valorInt -> VARIABLE .)
    PDER            reduce using rule 79 (valorInt -> VARIABLE .)


state 126

    (84) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PRINT           reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 84 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 127

    (69) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 69 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 69 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 128

    (72) expresionBool -> valorDouble comparadorMat VARIABLE .
    (79) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 72 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 72 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 72 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 72 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 79 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 79 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 79 (valorInt -> VARIABLE .)
    DIV             reduce using rule 79 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 79 (valorInt -> VARIABLE .)
    MOD             reduce using rule 79 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 79 (valorInt -> VARIABLE .) ]


state 129

    (76) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    INT             reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    DOUBLER         reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    NUM             reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    STRINGR         reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    BOOLR           reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    DYNAMIC         reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    VAR             reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    VARIABLE        reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    WHILE           reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    DO              reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    IF              reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    ELSE            reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    PRINT           reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    ENTERO          reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    DOUBLE          reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    STRING          reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    BOOL            reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)
    PDER            reduce using rule 76 (expresionString -> valorString operadorMat expresionString .)


state 130

    (74) valorString -> STRING .

    SUMA            reduce using rule 74 (valorString -> STRING .)
    RESTA           reduce using rule 74 (valorString -> STRING .)
    MULTI           reduce using rule 74 (valorString -> STRING .)
    DIV             reduce using rule 74 (valorString -> STRING .)
    DIVENTERO       reduce using rule 74 (valorString -> STRING .)
    MOD             reduce using rule 74 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 74 (valorString -> STRING .)
    INT             reduce using rule 74 (valorString -> STRING .)
    DOUBLER         reduce using rule 74 (valorString -> STRING .)
    NUM             reduce using rule 74 (valorString -> STRING .)
    STRINGR         reduce using rule 74 (valorString -> STRING .)
    BOOLR           reduce using rule 74 (valorString -> STRING .)
    DYNAMIC         reduce using rule 74 (valorString -> STRING .)
    VAR             reduce using rule 74 (valorString -> STRING .)
    VARIABLE        reduce using rule 74 (valorString -> STRING .)
    WHILE           reduce using rule 74 (valorString -> STRING .)
    DO              reduce using rule 74 (valorString -> STRING .)
    IF              reduce using rule 74 (valorString -> STRING .)
    ELSE            reduce using rule 74 (valorString -> STRING .)
    PRINT           reduce using rule 74 (valorString -> STRING .)
    ENTERO          reduce using rule 74 (valorString -> STRING .)
    DOUBLE          reduce using rule 74 (valorString -> STRING .)
    STRING          reduce using rule 74 (valorString -> STRING .)
    BOOL            reduce using rule 74 (valorString -> STRING .)
    $end            reduce using rule 74 (valorString -> STRING .)
    LDER            reduce using rule 74 (valorString -> STRING .)
    PDER            reduce using rule 74 (valorString -> STRING .)


state 131

    (75) valorString -> VARIABLE .

    SUMA            reduce using rule 75 (valorString -> VARIABLE .)
    RESTA           reduce using rule 75 (valorString -> VARIABLE .)
    MULTI           reduce using rule 75 (valorString -> VARIABLE .)
    DIV             reduce using rule 75 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 75 (valorString -> VARIABLE .)
    MOD             reduce using rule 75 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (valorString -> VARIABLE .)
    INT             reduce using rule 75 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 75 (valorString -> VARIABLE .)
    NUM             reduce using rule 75 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 75 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 75 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 75 (valorString -> VARIABLE .)
    VAR             reduce using rule 75 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 75 (valorString -> VARIABLE .)
    WHILE           reduce using rule 75 (valorString -> VARIABLE .)
    DO              reduce using rule 75 (valorString -> VARIABLE .)
    IF              reduce using rule 75 (valorString -> VARIABLE .)
    ELSE            reduce using rule 75 (valorString -> VARIABLE .)
    PRINT           reduce using rule 75 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 75 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 75 (valorString -> VARIABLE .)
    STRING          reduce using rule 75 (valorString -> VARIABLE .)
    BOOL            reduce using rule 75 (valorString -> VARIABLE .)
    $end            reduce using rule 75 (valorString -> VARIABLE .)
    LDER            reduce using rule 75 (valorString -> VARIABLE .)
    PDER            reduce using rule 75 (valorString -> VARIABLE .)


state 132

    (64) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo

    PDER            shift and go to state 157


state 133

    (69) expresionBool -> valorDouble . comparadorMat expresionDouble
    (72) expresionBool -> valorDouble . comparadorMat VARIABLE
    (92) comparadorMat -> . DIGUAL
    (93) comparadorMat -> . NOIGUAL
    (94) comparadorMat -> . MAYOR
    (95) comparadorMat -> . MENOR
    (96) comparadorMat -> . MAYIGUAL
    (97) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 53
    NOIGUAL         shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR           shift and go to state 56
    MAYIGUAL        shift and go to state 57
    MENIGUAL        shift and go to state 58

    comparadorMat                  shift and go to state 73

state 134

    (70) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (71) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (68) valorBool -> VARIABLE .
    (79) valorInt -> VARIABLE .
    (92) comparadorMat -> . DIGUAL
    (93) comparadorMat -> . NOIGUAL
    (94) comparadorMat -> . MAYOR
    (95) comparadorMat -> . MENOR
    (96) comparadorMat -> . MAYIGUAL
    (97) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PDER            reduce using rule 68 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 68 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 53
    NOIGUAL         shift and go to state 54
    MAYOR           shift and go to state 55
    MENOR           shift and go to state 56
    MAYIGUAL        shift and go to state 57
    MENIGUAL        shift and go to state 58

  ! DIGUAL          [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 79 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 79 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 52

state 135

    (66) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 158


state 136

    (51) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (52) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER

    PDER            shift and go to state 159


state 137

    (54) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 160


state 138

    (28) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    PRINT           reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 28 (algoritmo -> asignacion PUNTOYCOMA .)


state 139

    (29) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    PRINT           reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 29 (algoritmo -> expresionInt PUNTOYCOMA .)


state 140

    (30) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PRINT           reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 30 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 141

    (31) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    PRINT           reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 31 (algoritmo -> expresionString PUNTOYCOMA .)


state 142

    (32) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    PRINT           reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 32 (algoritmo -> expresionBool PUNTOYCOMA .)


state 143

    (35) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PRINT           reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 35 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 144

    (36) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PRINT           reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 36 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 145

    (37) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PRINT           reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 37 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 146

    (39) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    PRINT           reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 39 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 147

    (41) algoritmo -> imprimir PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLER         reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    NUM             reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    STRINGR         reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOLR           reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DYNAMIC         reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    VAR             reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    VARIABLE        reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DO              reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    PRINT           reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    ENTERO          reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLE          reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    STRING          reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOL            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 41 (algoritmo -> imprimir PUNTOYCOMA .)


state 148

    (50) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 161


state 149

    (59) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 59 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 59 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 59 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 59 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 59 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 59 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 59 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 59 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 59 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 59 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 59 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 59 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 59 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 59 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 59 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 59 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 59 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 59 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 59 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 59 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 59 (expresion -> valor operadorMat expresion .)


state 150

    (42) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 42 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 151

    (43) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 43 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 152

    (44) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 44 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 153

    (45) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 45 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 154

    (46) asignacion -> BOOLR VARIABLE IGUAL expresionBool .

    PUNTOYCOMA      reduce using rule 46 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)


state 155

    (47) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 47 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 156

    (48) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 157

    (64) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (65) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    LIZQ            shift and go to state 162
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionBool                  shift and go to state 84
    algoritmo                      shift and go to state 163
    asignacion                     shift and go to state 80
    expresionInt                   shift and go to state 81
    expresionDouble                shift and go to state 82
    expresionString                shift and go to state 83
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 85
    sentenciaDoWhile               shift and go to state 86
    sentenciaIf                    shift and go to state 87
    sentenciaElse                  shift and go to state 88
    imprimir                       shift and go to state 89
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 158

    (66) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 164


state 159

    (51) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (52) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    LIZQ            shift and go to state 166
    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionBool                  shift and go to state 84
    algoritmo                      shift and go to state 165
    asignacion                     shift and go to state 80
    expresionInt                   shift and go to state 81
    expresionDouble                shift and go to state 82
    expresionString                shift and go to state 83
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 85
    sentenciaDoWhile               shift and go to state 86
    sentenciaIf                    shift and go to state 87
    sentenciaElse                  shift and go to state 88
    imprimir                       shift and go to state 89
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 160

    (54) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    PRINT           reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 54 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 161

    (50) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 50 (imprimir -> PRINT PIZQ expresion PDER .)


state 162

    (64) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionBool                  shift and go to state 84
    algoritmo                      shift and go to state 167
    asignacion                     shift and go to state 80
    expresionInt                   shift and go to state 81
    expresionDouble                shift and go to state 82
    expresionString                shift and go to state 83
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 85
    sentenciaDoWhile               shift and go to state 86
    sentenciaIf                    shift and go to state 87
    sentenciaElse                  shift and go to state 88
    imprimir                       shift and go to state 89
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 163

    (65) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 65 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 164

    (66) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 168


state 165

    (51) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 51 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 166

    (52) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (28) algoritmo -> . asignacion PUNTOYCOMA
    (29) algoritmo -> . expresionInt PUNTOYCOMA
    (30) algoritmo -> . expresionDouble PUNTOYCOMA
    (31) algoritmo -> . expresionString PUNTOYCOMA
    (32) algoritmo -> . expresionBool PUNTOYCOMA
    (33) algoritmo -> . expresion
    (34) algoritmo -> . sentenciaWhile
    (35) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf PUNTOYCOMA
    (38) algoritmo -> . sentenciaIf
    (39) algoritmo -> . sentenciaElse PUNTOYCOMA
    (40) algoritmo -> . sentenciaElse
    (41) algoritmo -> . imprimir PUNTOYCOMA
    (42) asignacion -> . INT VARIABLE IGUAL expresionInt
    (43) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (44) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (45) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (46) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (47) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (48) asignacion -> . VAR VARIABLE IGUAL expresion
    (49) asignacion -> . VARIABLE IGUAL expresion
    (80) expresionInt -> . valorInt operadorMat expresionInt
    (81) expresionInt -> . valorInt
    (84) expresionDouble -> . valorDouble operadorMat expresionDouble
    (85) expresionDouble -> . valorDouble
    (76) expresionString -> . valorString operadorMat expresionString
    (77) expresionString -> . valorString
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (59) expresion -> . valor operadorMat expresion
    (60) expresion -> . valor
    (61) expresion -> . expresionString
    (62) expresion -> . expresionInt
    (63) expresion -> . expresionDouble
    (64) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (65) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (66) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (51) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (52) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (53) sentenciaElse -> . ELSE algoritmo
    (54) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (74) valorString -> . STRING
    (75) valorString -> . VARIABLE
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (55) valor -> . ENTERO
    (56) valor -> . VARIABLE
    (57) valor -> . DOUBLE
    (58) valor -> . STRING

    INT             shift and go to state 14
    DOUBLER         shift and go to state 16
    NUM             shift and go to state 17
    STRINGR         shift and go to state 18
    BOOLR           shift and go to state 19
    DYNAMIC         shift and go to state 20
    VAR             shift and go to state 21
    VARIABLE        shift and go to state 15
    WHILE           shift and go to state 26
    DO              shift and go to state 27
    IF              shift and go to state 28
    ELSE            shift and go to state 29
    PRINT           shift and go to state 30
    ENTERO          shift and go to state 32
    DOUBLE          shift and go to state 33
    STRING          shift and go to state 34
    BOOL            shift and go to state 35

    expresionBool                  shift and go to state 84
    algoritmo                      shift and go to state 169
    asignacion                     shift and go to state 80
    expresionInt                   shift and go to state 81
    expresionDouble                shift and go to state 82
    expresionString                shift and go to state 83
    expresion                      shift and go to state 13
    sentenciaWhile                 shift and go to state 85
    sentenciaDoWhile               shift and go to state 86
    sentenciaIf                    shift and go to state 87
    sentenciaElse                  shift and go to state 88
    imprimir                       shift and go to state 89
    valorInt                       shift and go to state 22
    valorDouble                    shift and go to state 23
    valorString                    shift and go to state 24
    valorBool                      shift and go to state 25
    valor                          shift and go to state 31

state 167

    (64) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 170


state 168

    (66) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (69) expresionBool -> . valorDouble comparadorMat expresionDouble
    (70) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (71) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (72) expresionBool -> . valorDouble comparadorMat VARIABLE
    (73) expresionBool -> . valorBool
    (82) valorDouble -> . DOUBLE
    (83) valorDouble -> . valorInt
    (67) valorBool -> . BOOL
    (68) valorBool -> . VARIABLE
    (78) valorInt -> . ENTERO
    (79) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 114
    BOOL            shift and go to state 35
    ENTERO          shift and go to state 116

    expresionBool                  shift and go to state 171
    valorDouble                    shift and go to state 133
    valorBool                      shift and go to state 25
    valorInt                       shift and go to state 115

state 169

    (52) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 172


state 170

    (64) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 64 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 171

    (66) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER

    PDER            shift and go to state 173


state 172

    (52) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 52 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 173

    (66) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 66 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 15 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 15 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 22 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 22 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 22 resolved as shift
WARNING: shift/reduce conflict for DIV in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 22 resolved as shift
WARNING: shift/reduce conflict for MOD in state 22 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 81 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 82 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 83 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 85 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 87 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 88 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 134 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 134 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 134 resolved as shift
WARNING: reduce/reduce conflict in state 15 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 15 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 15 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 15
WARNING: reduce/reduce conflict in state 22 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 22
WARNING: reduce/reduce conflict in state 32 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 32
WARNING: reduce/reduce conflict in state 33 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 33
WARNING: reduce/reduce conflict in state 34 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 34
WARNING: reduce/reduce conflict in state 103 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 103
WARNING: reduce/reduce conflict in state 103 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 103
WARNING: reduce/reduce conflict in state 108 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 108
WARNING: reduce/reduce conflict in state 109 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 109
WARNING: reduce/reduce conflict in state 110 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 110
WARNING: reduce/reduce conflict in state 112 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 112
WARNING: reduce/reduce conflict in state 128 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 128
