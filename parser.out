Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    COMILLAD
    COMILLAS
    FLECHA
    FUNCIONARR
    RETURN

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> imprimir PUNTOYCOMA
Rule 24    final -> imprimir PUNTOYCOMA final
Rule 25    final -> funcionStdin PUNTOYCOMA
Rule 26    final -> funcionStdin PUNTOYCOMA final
Rule 27    final -> funcionStdout PUNTOYCOMA
Rule 28    final -> funcionStdout PUNTOYCOMA final
Rule 29    final -> negacionBool PUNTOYCOMA
Rule 30    final -> negacionBool PUNTOYCOMA final
Rule 31    final -> comparacionBool PUNTOYCOMA final
Rule 32    final -> comparacionBool PUNTOYCOMA
Rule 33    final -> sentenciaFor PUNTOYCOMA final
Rule 34    final -> sentenciaFor PUNTOYCOMA
Rule 35    final -> sentenciaFor final
Rule 36    final -> sentenciaFor
Rule 37    final -> sentenciaSubstring PUNTOYCOMA final
Rule 38    final -> sentenciaSubstring PUNTOYCOMA
Rule 39    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 40    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 41    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 42    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 43    final -> expresionLista PUNTOYCOMA
Rule 44    final -> expresionLista PUNTOYCOMA final
Rule 45    final -> expresionNewList PUNTOYCOMA
Rule 46    final -> expresionNewList PUNTOYCOMA final
Rule 47    final -> expresionSet PUNTOYCOMA
Rule 48    final -> expresionSet PUNTOYCOMA final
Rule 49    final -> expresionMap PUNTOYCOMA
Rule 50    final -> expresionMap PUNTOYCOMA final
Rule 51    final -> expresionSwitch
Rule 52    final -> expresionSwitch PUNTOYCOMA
Rule 53    final -> expresionSwitch PUNTOYCOMA final
Rule 54    final -> declaracionSimple PUNTOYCOMA
Rule 55    final -> declaracionSimple PUNTOYCOMA final
Rule 56    expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
Rule 57    cases -> caseString
Rule 58    cases -> caseInt
Rule 59    cases -> caseBool
Rule 60    caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
Rule 61    caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
Rule 62    caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
Rule 63    caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
Rule 64    caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
Rule 65    caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool
Rule 66    expresionMap -> MAP VARIABLE
Rule 67    expresionMap -> MAP VARIABLE IGUAL LIZQ LDER
Rule 68    expresionMap -> LIZQ LDER
Rule 69    expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER
Rule 70    expresionMap -> LIZQ expMap LDER
Rule 71    expMap -> claveValor DOSPUNTOS claveValor
Rule 72    expMap -> claveValor DOSPUNTOS claveValor COMA expMap
Rule 73    claveValor -> VARIABLE
Rule 74    claveValor -> STRING
Rule 75    claveValor -> ENTERO
Rule 76    claveValor -> DOUBLE
Rule 77    claveValor -> BOOL
Rule 78    claveValor -> CIZQ expListDynamic CDER
Rule 79    claveValor -> CIZQ expListSet CDER
Rule 80    claveValor -> expresionNewList
Rule 81    claveValor -> SETFROM PIZQ CIZQ CDER PDER
Rule 82    claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 83    claveValor -> LIZQ LDER
Rule 84    claveValor -> LIZQ expMap LDER
Rule 85    expresionSet -> SET VARIABLE
Rule 86    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 87    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 88    expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 89    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 90    expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 91    expresionNewList -> NEWLIST PIZQ PDER
Rule 92    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 93    expresionNewList -> CIZQ CDER
Rule 94    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 95    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 96    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 97    expresionLista -> CIZQ expListString CDER
Rule 98    expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 99    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 100   expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 101   expresionLista -> CIZQ expListInt CDER
Rule 102   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 103   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 104   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 105   expresionLista -> CIZQ expListNum CDER
Rule 106   expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 107   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 108   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 109   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 110   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 111   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 112   expresionLista -> CIZQ expListBool CDER
Rule 113   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 114   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 115   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 116   expresionLista -> CIZQ expListDynamic CDER
Rule 117   expresionLista -> LIST MENOR SET MAYOR VARIABLE
Rule 118   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
Rule 119   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
Rule 120   expresionLista -> CIZQ expListSet CDER
Rule 121   expresionLista -> LIST MENOR MAP MAYOR VARIABLE
Rule 122   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
Rule 123   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
Rule 124   expresionLista -> CIZQ expListMap CDER
Rule 125   expresionLista -> VARIABLE CIZQ ENTERO CDER
Rule 126   expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 127   expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
Rule 128   expListString -> STRING
Rule 129   expListString -> STRING COMA expListString
Rule 130   expListString -> VARIABLE
Rule 131   expListString -> VARIABLE COMA expListString
Rule 132   expListInt -> ENTERO
Rule 133   expListInt -> ENTERO COMA expListInt
Rule 134   expListInt -> VARIABLE
Rule 135   expListInt -> VARIABLE COMA expListInt
Rule 136   expListNum -> ENTERO
Rule 137   expListNum -> DOUBLE
Rule 138   expListNum -> ENTERO COMA expListNum
Rule 139   expListNum -> DOUBLE COMA expListNum
Rule 140   expListNum -> VARIABLE
Rule 141   expListNum -> VARIABLE COMA expListNum
Rule 142   expListBool -> BOOL
Rule 143   expListBool -> BOOL COMA expListBool
Rule 144   expListBool -> VARIABLE
Rule 145   expListBool -> VARIABLE COMA expListBool
Rule 146   expListDynamic -> STRING
Rule 147   expListDynamic -> ENTERO
Rule 148   expListDynamic -> DOUBLE
Rule 149   expListDynamic -> BOOL
Rule 150   expListDynamic -> STRING COMA expListDynamic
Rule 151   expListDynamic -> ENTERO COMA expListDynamic
Rule 152   expListDynamic -> DOUBLE COMA expListDynamic
Rule 153   expListDynamic -> BOOL COMA expListDynamic
Rule 154   expListDynamic -> VARIABLE
Rule 155   expListDynamic -> VARIABLE COMA expListDynamic
Rule 156   expListSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 157   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 158   expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet
Rule 159   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
Rule 160   expListSet -> VARIABLE
Rule 161   expListSet -> VARIABLE COMA expListSet
Rule 162   expListMap -> LIZQ LDER
Rule 163   expListMap -> LIZQ expMap LDER
Rule 164   expListMap -> LIZQ LDER COMA expListMap
Rule 165   expListMap -> LIZQ expMap LDER COMA expListMap
Rule 166   expListMap -> VARIABLE
Rule 167   expListMap -> VARIABLE COMA expListMap
Rule 168   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 169   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 170   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 171   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 172   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 173   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 174   asignacion -> VAR VARIABLE IGUAL expresion
Rule 175   asignacion -> asignacionSimple
Rule 176   asignacionSimple -> VARIABLE IGUAL expresion
Rule 177   declaracionSimple -> STRINGR VARIABLE
Rule 178   declaracionSimple -> INT VARIABLE
Rule 179   declaracionSimple -> DOUBLER VARIABLE
Rule 180   declaracionSimple -> NUM VARIABLE
Rule 181   declaracionSimple -> VAR VARIABLE
Rule 182   declaracionSimple -> DYNAMIC VARIABLE
Rule 183   declaracionSimple -> BOOL VARIABLE
Rule 184   imprimir -> PRINT PIZQ expresion PDER
Rule 185   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 186   funcionStdin -> FUNCIONSTDIN
Rule 187   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 188   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 189   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 190   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 191   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
Rule 192   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
Rule 193   sentenciasElseIf -> sentenciaElseIf
Rule 194   sentenciasElseIf -> sentenciaElseIf sentenciasElseIf
Rule 195   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 196   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 197   sentenciaElse -> ELSE final
Rule 198   sentenciaElse -> ELSE LIZQ final LDER
Rule 199   valor -> ENTERO
Rule 200   valor -> VARIABLE
Rule 201   valor -> DOUBLE
Rule 202   valor -> STRING
Rule 203   expresion -> valor operadorMat expresion
Rule 204   expresion -> valor
Rule 205   expresion -> expresionString
Rule 206   expresion -> expresionInt
Rule 207   expresion -> expresionDouble
Rule 208   expresion -> expresionBool
Rule 209   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 210   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 211   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 212   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 213   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 214   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 215   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 216   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 217   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 218   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 219   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 220   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 221   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 222   expresionBoolFor -> valorBool
Rule 223   expresionBoolFor -> negacionBool
Rule 224   expresionBoolFor -> comparacionBool
Rule 225   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 226   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 227   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 228   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 229   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 230   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 231   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 232   valorBool -> BOOL
Rule 233   valorBool -> VARIABLE
Rule 234   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 235   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 236   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 237   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 238   expresionBool -> valorBool
Rule 239   expresionBool -> negacionBool
Rule 240   expresionBool -> comparacionBool
Rule 241   expresionBool -> valor IS objeto
Rule 242   expresionBool -> valor ISNEGADO objeto
Rule 243   negacionBool -> NOT PIZQ expresionBool PDER
Rule 244   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 245   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 246   valorString -> STRING
Rule 247   valorString -> VARIABLE
Rule 248   valorString -> FUNCIONSTDIN
Rule 249   valorString -> expresionIndexString
Rule 250   valorString -> sentenciaSubstring
Rule 251   valorString -> STRING CIZQ ENTERO CDER
Rule 252   expresionString -> valorString SUMA expresionString
Rule 253   expresionString -> valorString
Rule 254   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 255   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 256   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 257   valorInt -> ENTERO
Rule 258   valorInt -> VARIABLE
Rule 259   expresionInt -> valorInt operadorMat expresionInt
Rule 260   expresionInt -> valorInt
Rule 261   valorDouble -> DOUBLE
Rule 262   valorDouble -> valorInt
Rule 263   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 264   expresionDouble -> valorDouble
Rule 265   operadorMat -> SUMA
Rule 266   operadorMat -> RESTA
Rule 267   operadorMat -> MULTI
Rule 268   operadorMat -> DIV
Rule 269   operadorMat -> DIVENTERO
Rule 270   operadorMat -> MOD
Rule 271   comparadorMat -> DIGUAL
Rule 272   comparadorMat -> NOIGUAL
Rule 273   comparadorMat -> MAYOR
Rule 274   comparadorMat -> MENOR
Rule 275   comparadorMat -> MAYIGUAL
Rule 276   comparadorMat -> MENIGUAL
Rule 277   operadorLogico -> AND
Rule 278   operadorLogico -> OR
Rule 279   objeto -> STRINGR
Rule 280   objeto -> INT
Rule 281   objeto -> DOUBLER
Rule 282   objeto -> NUM
Rule 283   objeto -> VAR
Rule 284   objeto -> DYNAMIC
Rule 285   objeto -> LIST
Rule 286   objeto -> BOOLR
Rule 287   objeto -> MAP
Rule 288   objeto -> SET

Terminals, with rules where they appear

AND                  : 277
AS                   : 
BOOL                 : 64 65 77 142 143 149 153 183 232
BOOLR                : 109 110 111 172 286
BREAK                : 60 61 62 63 64 65
CASE                 : 60 61 62 63 64 65
CDER                 : 78 79 81 82 86 87 88 89 93 95 97 99 101 103 105 107 110 112 114 116 118 120 122 124 125 156 157 158 159 251 254
CIZQ                 : 78 79 81 82 86 87 88 89 93 95 97 99 101 103 105 107 110 112 114 116 118 120 122 124 125 156 157 158 159 251 254
COMA                 : 72 127 129 131 133 135 138 139 141 143 145 150 151 152 153 155 158 159 161 164 165 167 256
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 271
DIV                  : 268
DIVENTERO            : 269
DO                   : 231
DOSPUNTOS            : 60 61 62 63 64 65 71 72
DOUBLE               : 76 137 139 148 152 201 261
DOUBLER              : 102 103 104 169 179 210 281
DRESTA               : 41 42 227 228
DSUMA                : 39 40 225 226
DYNAMIC              : 113 114 115 173 182 212 213 284
ELSE                 : 197 198
ELSEIF               : 195 196
ENTERO               : 62 63 75 90 92 125 126 127 127 132 133 136 138 147 151 199 251 254 255 256 256 257
FLECHA               : 
FOR                  : 225 226 227 228
FUNCIONARR           : 
FUNCIONRANGE         : 127
FUNCIONSTDIN         : 186 248
FUNCIONSTDOUT        : 187 188
FUNCIONSUBSTRING     : 255 256
FUNCIONTAKE          : 90 126
IF                   : 189 190 191 192
IGUAL                : 67 69 87 89 95 96 99 100 103 104 107 108 110 111 114 115 118 119 122 123 168 169 170 171 172 173 174 176 209 210 211 212 213 214 215 216 217
INT                  : 98 99 100 168 178 209 280
IS                   : 241
ISNEGADO             : 242
LDER                 : 56 67 68 69 70 83 84 162 163 164 165 190 191 192 196 198 225 227 229 231
LIST                 : 94 95 96 98 99 100 102 103 104 106 107 108 109 110 111 113 114 115 117 118 119 121 122 123 285
LIZQ                 : 56 67 68 69 70 83 84 162 163 164 165 190 191 192 196 198 225 227 229 231
MAP                  : 66 67 69 121 122 123 287
MAYIGUAL             : 275
MAYOR                : 94 95 96 98 99 100 102 103 104 106 107 108 109 110 111 113 114 115 117 118 119 121 122 123 273
MENIGUAL             : 276
MENOR                : 94 95 96 98 99 100 102 103 104 106 107 108 109 110 111 113 114 115 117 118 119 121 122 123 274
MOD                  : 270
MULTI                : 267
NEWLIST              : 91 92
NOIGUAL              : 272
NOT                  : 243
NUM                  : 106 107 108 170 180 211 282
OR                   : 278
PDER                 : 56 81 82 86 87 88 89 90 91 92 126 127 156 157 158 159 184 185 187 188 189 190 191 192 195 196 225 226 227 228 229 230 231 243 255 256
PIZQ                 : 56 81 82 86 87 88 89 90 91 92 126 127 156 157 158 159 184 185 187 188 189 190 191 192 195 196 225 226 227 228 229 230 231 243 255 256
PRINT                : 184 185
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 25 26 27 28 29 30 31 32 33 34 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 53 54 55 60 61 62 63 64 65 225 225 226 226 227 227 228 228
RESTA                : 266
RETURN               : 
SET                  : 85 87 89 117 118 119 288
SETFROM              : 81 82 86 87 88 89 156 157 158 159
STRING               : 60 61 74 128 129 146 150 202 246 251
STRINGR              : 94 95 96 171 177 279
SUMA                 : 252 265
SWITCH               : 56
VAR                  : 174 181 214 215 283
VARIABLE             : 39 40 41 42 56 66 67 69 73 85 87 89 90 94 95 96 98 99 100 102 103 104 106 107 108 109 110 111 113 114 115 117 118 119 121 122 123 125 126 127 130 131 134 135 140 141 144 145 154 155 160 161 166 167 168 169 170 171 172 173 174 176 177 178 179 180 181 182 183 200 209 210 211 212 213 214 215 216 217 219 220 220 221 225 226 227 228 233 235 236 236 237 247 255 256 258
WHILE                : 229 230 231
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 225 226 227 228
asignacionSimple     : 175 185 188
caseBool             : 59 65
caseInt              : 58 63
caseString           : 57 61
cases                : 56
claveValor           : 71 71 72 72
comparacionBool      : 31 32 224 240 245
comparadorMat        : 218 219 220 221 234 235 236 237
declaracionSimple    : 54 55
expListBool          : 110 112 143 145
expListDynamic       : 78 82 88 89 114 116 150 151 152 153 155 157 159
expListInt           : 99 101 133 135
expListMap           : 122 124 164 165 167
expListNum           : 103 105 107 138 139 141
expListSet           : 79 118 120 158 159 161
expListString        : 95 97 129 131
expMap               : 69 70 72 84 163 165
expresion            : 173 174 176 184 187 203
expresionBool        : 9 10 172 189 190 191 192 195 196 208 229 230 231 243 244 244 245
expresionBoolFor     : 11 12 225 226 227 228
expresionDouble      : 5 6 169 170 207 210 211 213 215 217 218 219 234 235 263
expresionIndexString : 249
expresionInt         : 3 4 168 206 209 212 214 216 259
expresionLista       : 43 44
expresionMap         : 49 50
expresionNewList     : 45 46 80 96 100 104 108 111 115 119 123
expresionSet         : 47 48
expresionString      : 7 8 171 205 252
expresionSwitch      : 51 52 53
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 31 33 35 37 39 41 44 46 48 50 53 55 60 61 62 63 64 65 189 190 191 192 195 196 197 198 225 226 227 228 229 230 231 0
funcionStdin         : 25 26
funcionStdout        : 27 28
imprimir             : 23 24
negacionBool         : 29 30 223 239
objeto               : 241 242
operadorLogico       : 244 245
operadorMat          : 203 259 263
sentenciaDoWhile     : 17 18
sentenciaElse        : 192
sentenciaElseIf      : 193 194
sentenciaFor         : 33 34 35 36
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 37 38 250
sentenciaWhile       : 13 14 15 16
sentenciasElseIf     : 191 192 194
valor                : 203 204 241 242
valorBool            : 222 238
valorDouble          : 218 221 234 237 263 264
valorInt             : 259 260 262
valorString          : 252 253 254

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 59


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 60


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 61


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 62


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 63
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 67


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    BREAK           reduce using rule 13 (final -> sentenciaWhile .)
    ELSEIF          reduce using rule 13 (final -> sentenciaWhile .)
    ELSE            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 69
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! MAP             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SWITCH          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 68
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 70


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    PUNTOYCOMA      shift and go to state 71
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    BREAK           reduce using rule 21 (final -> sentenciaIf .)
    ELSEIF          reduce using rule 21 (final -> sentenciaIf .)
    ELSE            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! MAP             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SWITCH          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 72
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 11

    (23) final -> imprimir . PUNTOYCOMA
    (24) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 73


state 12

    (25) final -> funcionStdin . PUNTOYCOMA
    (26) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 74


state 13

    (27) final -> funcionStdout . PUNTOYCOMA
    (28) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 75


state 14

    (29) final -> negacionBool . PUNTOYCOMA
    (30) final -> negacionBool . PUNTOYCOMA final
    (239) expresionBool -> negacionBool .
    (223) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 76
    AND             reduce using rule 239 (expresionBool -> negacionBool .)
    OR              reduce using rule 239 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 239 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 223 (expresionBoolFor -> negacionBool .) ]


state 15

    (31) final -> comparacionBool . PUNTOYCOMA final
    (32) final -> comparacionBool . PUNTOYCOMA
    (240) expresionBool -> comparacionBool .
    (224) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 77
    AND             reduce using rule 240 (expresionBool -> comparacionBool .)
    OR              reduce using rule 240 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 240 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 224 (expresionBoolFor -> comparacionBool .) ]


state 16

    (33) final -> sentenciaFor . PUNTOYCOMA final
    (34) final -> sentenciaFor . PUNTOYCOMA
    (35) final -> sentenciaFor . final
    (36) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    PUNTOYCOMA      shift and go to state 78
    $end            reduce using rule 36 (final -> sentenciaFor .)
    LDER            reduce using rule 36 (final -> sentenciaFor .)
    BREAK           reduce using rule 36 (final -> sentenciaFor .)
    ELSEIF          reduce using rule 36 (final -> sentenciaFor .)
    ELSE            reduce using rule 36 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! PUNTOYCOMA      [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! MAP             [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! LIZQ            [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! SWITCH          [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 36 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 16
    final                          shift and go to state 79
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 17

    (37) final -> sentenciaSubstring . PUNTOYCOMA final
    (38) final -> sentenciaSubstring . PUNTOYCOMA
    (250) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 80
    SUMA            reduce using rule 250 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 250 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 250 (valorString -> sentenciaSubstring .) ]


state 18

    (39) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (40) final -> VARIABLE . DSUMA PUNTOYCOMA
    (41) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (42) final -> VARIABLE . DRESTA PUNTOYCOMA
    (235) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (236) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (219) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (255) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (125) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (126) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (90) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (176) asignacionSimple -> VARIABLE . IGUAL expresion
    (258) valorInt -> VARIABLE .
    (247) valorString -> VARIABLE .
    (233) valorBool -> VARIABLE .
    (200) valor -> VARIABLE .
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 247 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 247 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 233 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 81
    DRESTA          shift and go to state 82
    FUNCIONSUBSTRING shift and go to state 84
    CIZQ            shift and go to state 85
    FUNCIONTAKE     shift and go to state 86
    FUNCIONRANGE    shift and go to state 87
    IGUAL           shift and go to state 88
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 247 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 233 (valorBool -> VARIABLE .)
    AND             reduce using rule 233 (valorBool -> VARIABLE .)
    OR              reduce using rule 233 (valorBool -> VARIABLE .)
    IS              reduce using rule 200 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 200 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

  ! SUMA            [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 247 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 247 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 83

state 19

    (43) final -> expresionLista . PUNTOYCOMA
    (44) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 95


state 20

    (45) final -> expresionNewList . PUNTOYCOMA
    (46) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 96


state 21

    (47) final -> expresionSet . PUNTOYCOMA
    (48) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 97


state 22

    (49) final -> expresionMap . PUNTOYCOMA
    (50) final -> expresionMap . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 98


state 23

    (51) final -> expresionSwitch .
    (52) final -> expresionSwitch . PUNTOYCOMA
    (53) final -> expresionSwitch . PUNTOYCOMA final

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 51 (final -> expresionSwitch .)
    LDER            reduce using rule 51 (final -> expresionSwitch .)
    VARIABLE        reduce using rule 51 (final -> expresionSwitch .)
    INT             reduce using rule 51 (final -> expresionSwitch .)
    DOUBLER         reduce using rule 51 (final -> expresionSwitch .)
    NUM             reduce using rule 51 (final -> expresionSwitch .)
    STRINGR         reduce using rule 51 (final -> expresionSwitch .)
    BOOLR           reduce using rule 51 (final -> expresionSwitch .)
    DYNAMIC         reduce using rule 51 (final -> expresionSwitch .)
    VAR             reduce using rule 51 (final -> expresionSwitch .)
    WHILE           reduce using rule 51 (final -> expresionSwitch .)
    DO              reduce using rule 51 (final -> expresionSwitch .)
    IF              reduce using rule 51 (final -> expresionSwitch .)
    PRINT           reduce using rule 51 (final -> expresionSwitch .)
    FUNCIONSTDIN    reduce using rule 51 (final -> expresionSwitch .)
    FUNCIONSTDOUT   reduce using rule 51 (final -> expresionSwitch .)
    NOT             reduce using rule 51 (final -> expresionSwitch .)
    FOR             reduce using rule 51 (final -> expresionSwitch .)
    LIST            reduce using rule 51 (final -> expresionSwitch .)
    CIZQ            reduce using rule 51 (final -> expresionSwitch .)
    NEWLIST         reduce using rule 51 (final -> expresionSwitch .)
    SET             reduce using rule 51 (final -> expresionSwitch .)
    SETFROM         reduce using rule 51 (final -> expresionSwitch .)
    MAP             reduce using rule 51 (final -> expresionSwitch .)
    LIZQ            reduce using rule 51 (final -> expresionSwitch .)
    SWITCH          reduce using rule 51 (final -> expresionSwitch .)
    BOOL            reduce using rule 51 (final -> expresionSwitch .)
    ENTERO          reduce using rule 51 (final -> expresionSwitch .)
    DOUBLE          reduce using rule 51 (final -> expresionSwitch .)
    STRING          reduce using rule 51 (final -> expresionSwitch .)
    BREAK           reduce using rule 51 (final -> expresionSwitch .)
    ELSEIF          reduce using rule 51 (final -> expresionSwitch .)
    ELSE            reduce using rule 51 (final -> expresionSwitch .)
    PUNTOYCOMA      shift and go to state 99

  ! PUNTOYCOMA      [ reduce using rule 51 (final -> expresionSwitch .) ]


state 24

    (54) final -> declaracionSimple . PUNTOYCOMA
    (55) final -> declaracionSimple . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 100


state 25

    (168) asignacion -> INT . VARIABLE IGUAL expresionInt
    (178) declaracionSimple -> INT . VARIABLE

    VARIABLE        shift and go to state 101


state 26

    (169) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble
    (179) declaracionSimple -> DOUBLER . VARIABLE

    VARIABLE        shift and go to state 102


state 27

    (170) asignacion -> NUM . VARIABLE IGUAL expresionDouble
    (180) declaracionSimple -> NUM . VARIABLE

    VARIABLE        shift and go to state 103


state 28

    (171) asignacion -> STRINGR . VARIABLE IGUAL expresionString
    (177) declaracionSimple -> STRINGR . VARIABLE

    VARIABLE        shift and go to state 104


state 29

    (172) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 105


state 30

    (173) asignacion -> DYNAMIC . VARIABLE IGUAL expresion
    (182) declaracionSimple -> DYNAMIC . VARIABLE

    VARIABLE        shift and go to state 106


state 31

    (174) asignacion -> VAR . VARIABLE IGUAL expresion
    (181) declaracionSimple -> VAR . VARIABLE

    VARIABLE        shift and go to state 107


state 32

    (175) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 175 (asignacion -> asignacionSimple .)


state 33

    (259) expresionInt -> valorInt . operadorMat expresionInt
    (260) expresionInt -> valorInt .
    (262) valorDouble -> valorInt .
    (265) operadorMat -> . SUMA
    (266) operadorMat -> . RESTA
    (267) operadorMat -> . MULTI
    (268) operadorMat -> . DIV
    (269) operadorMat -> . DIVENTERO
    (270) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 260 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 260 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 260 (expresionInt -> valorInt .)
    PDER            reduce using rule 260 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 262 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 262 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 262 (valorDouble -> valorInt .)
    MENOR           reduce using rule 262 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 262 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 262 (valorDouble -> valorInt .)
    SUMA            shift and go to state 109
    RESTA           shift and go to state 110
    MULTI           shift and go to state 111
    DIV             shift and go to state 112
    DIVENTERO       shift and go to state 113
    MOD             shift and go to state 114

  ! SUMA            [ reduce using rule 262 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 262 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 262 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 262 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 262 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 262 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 262 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 262 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 108

state 34

    (263) expresionDouble -> valorDouble . operadorMat expresionDouble
    (264) expresionDouble -> valorDouble .
    (234) expresionBool -> valorDouble . comparadorMat expresionDouble
    (237) expresionBool -> valorDouble . comparadorMat VARIABLE
    (218) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (221) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (265) operadorMat -> . SUMA
    (266) operadorMat -> . RESTA
    (267) operadorMat -> . MULTI
    (268) operadorMat -> . DIV
    (269) operadorMat -> . DIVENTERO
    (270) operadorMat -> . MOD
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 264 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 109
    RESTA           shift and go to state 110
    MULTI           shift and go to state 111
    DIV             shift and go to state 112
    DIVENTERO       shift and go to state 113
    MOD             shift and go to state 114
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

    operadorMat                    shift and go to state 115
    comparadorMat                  shift and go to state 116

state 35

    (252) expresionString -> valorString . SUMA expresionString
    (253) expresionString -> valorString .
    (254) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 117
    PUNTOYCOMA      reduce using rule 253 (expresionString -> valorString .)
    PDER            reduce using rule 253 (expresionString -> valorString .)
    CIZQ            shift and go to state 118


state 36

    (238) expresionBool -> valorBool .
    (222) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 222 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 238 (expresionBool -> valorBool .)
    OR              reduce using rule 238 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 222 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 238 (expresionBool -> valorBool .) ]


state 37

    (241) expresionBool -> valor . IS objeto
    (242) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 119
    ISNEGADO        shift and go to state 120


state 38

    (229) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 121


state 39

    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 123
    VARIABLE        shift and go to state 126
    STRING          shift and go to state 127
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 129
    BOOL            shift and go to state 130
    CIZQ            shift and go to state 131
    SETFROM         shift and go to state 133
    LIZQ            shift and go to state 122
    NEWLIST         shift and go to state 52

    expMap                         shift and go to state 124
    claveValor                     shift and go to state 125
    expresionNewList               shift and go to state 132

state 40

    (231) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 134


state 41

    (189) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (190) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse

    PIZQ            shift and go to state 135


state 42

    (184) imprimir -> PRINT . PIZQ expresion PDER
    (185) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 136


state 43

    (186) funcionStdin -> FUNCIONSTDIN .
    (248) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 186 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 186 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 248 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 248 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 248 (valorString -> FUNCIONSTDIN .) ]


state 44

    (187) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (188) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 137


state 45

    (243) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 138


state 46

    (225) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 139


state 47

    (257) valorInt -> ENTERO .
    (199) valor -> ENTERO .

    SUMA            reduce using rule 257 (valorInt -> ENTERO .)
    RESTA           reduce using rule 257 (valorInt -> ENTERO .)
    MULTI           reduce using rule 257 (valorInt -> ENTERO .)
    DIV             reduce using rule 257 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 257 (valorInt -> ENTERO .)
    MOD             reduce using rule 257 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 257 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 257 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 257 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 257 (valorInt -> ENTERO .)
    MENOR           reduce using rule 257 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 257 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 257 (valorInt -> ENTERO .)
    IS              reduce using rule 199 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 199 (valor -> ENTERO .)


state 48

    (94) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (98) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (99) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (113) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> LIST . MENOR SET MAYOR VARIABLE
    (118) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 140


state 49

    (97) expresionLista -> CIZQ . expListString CDER
    (101) expresionLista -> CIZQ . expListInt CDER
    (105) expresionLista -> CIZQ . expListNum CDER
    (112) expresionLista -> CIZQ . expListBool CDER
    (116) expresionLista -> CIZQ . expListDynamic CDER
    (120) expresionLista -> CIZQ . expListSet CDER
    (124) expresionLista -> CIZQ . expListMap CDER
    (93) expresionNewList -> CIZQ . CDER
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet
    (162) expListMap -> . LIZQ LDER
    (163) expListMap -> . LIZQ expMap LDER
    (164) expListMap -> . LIZQ LDER COMA expListMap
    (165) expListMap -> . LIZQ expMap LDER COMA expListMap
    (166) expListMap -> . VARIABLE
    (167) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 142
    STRING          shift and go to state 149
    VARIABLE        shift and go to state 150
    ENTERO          shift and go to state 151
    DOUBLE          shift and go to state 152
    BOOL            shift and go to state 153
    SETFROM         shift and go to state 154
    LIZQ            shift and go to state 155

    expListString                  shift and go to state 141
    expListInt                     shift and go to state 143
    expListNum                     shift and go to state 144
    expListBool                    shift and go to state 145
    expListDynamic                 shift and go to state 146
    expListSet                     shift and go to state 147
    expListMap                     shift and go to state 148

state 50

    (85) expresionSet -> SET . VARIABLE
    (87) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (89) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 156


state 51

    (66) expresionMap -> MAP . VARIABLE
    (67) expresionMap -> MAP . VARIABLE IGUAL LIZQ LDER
    (69) expresionMap -> MAP . VARIABLE IGUAL LIZQ expMap LDER

    VARIABLE        shift and go to state 157


state 52

    (91) expresionNewList -> NEWLIST . PIZQ PDER
    (92) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 158


state 53

    (86) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (88) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 159


state 54

    (56) expresionSwitch -> SWITCH . PIZQ VARIABLE PDER LIZQ cases LDER

    PIZQ            shift and go to state 160


state 55

    (183) declaracionSimple -> BOOL . VARIABLE
    (232) valorBool -> BOOL .

    VARIABLE        shift and go to state 161
    PUNTOYCOMA      reduce using rule 232 (valorBool -> BOOL .)
    AND             reduce using rule 232 (valorBool -> BOOL .)
    OR              reduce using rule 232 (valorBool -> BOOL .)


state 56

    (261) valorDouble -> DOUBLE .
    (201) valor -> DOUBLE .

    SUMA            reduce using rule 261 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 261 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 261 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 261 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 261 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 261 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 261 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 261 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 261 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 261 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 261 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 261 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 261 (valorDouble -> DOUBLE .)
    IS              reduce using rule 201 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 201 (valor -> DOUBLE .)


state 57

    (246) valorString -> STRING .
    (251) valorString -> STRING . CIZQ ENTERO CDER
    (202) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 246 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 246 (valorString -> STRING .)
    CIZQ            shift and go to state 162
    IS              reduce using rule 202 (valor -> STRING .)
    ISNEGADO        reduce using rule 202 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 246 (valorString -> STRING .) ]


state 58

    (249) valorString -> expresionIndexString .

    SUMA            reduce using rule 249 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 249 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 249 (valorString -> expresionIndexString .)
    PDER            reduce using rule 249 (valorString -> expresionIndexString .)


state 59

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    BREAK           reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    ELSEIF          reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 163
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 60

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    BREAK           reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    ELSEIF          reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 164
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 61

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    BREAK           reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    ELSEIF          reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 165
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 62

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    BREAK           reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    ELSEIF          reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 166
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 63

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    BREAK           reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 167
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 64

    (244) comparacionBool -> expresionBool operadorLogico . expresionBool
    (245) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 176
    STRING          shift and go to state 177

    expresionBool                  shift and go to state 168
    comparacionBool                shift and go to state 169
    valorDouble                    shift and go to state 170
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    valor                          shift and go to state 37
    valorInt                       shift and go to state 174

state 65

    (277) operadorLogico -> AND .

    VARIABLE        reduce using rule 277 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 277 (operadorLogico -> AND .)
    BOOL            reduce using rule 277 (operadorLogico -> AND .)
    NOT             reduce using rule 277 (operadorLogico -> AND .)
    ENTERO          reduce using rule 277 (operadorLogico -> AND .)
    STRING          reduce using rule 277 (operadorLogico -> AND .)


state 66

    (278) operadorLogico -> OR .

    VARIABLE        reduce using rule 278 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 278 (operadorLogico -> OR .)
    BOOL            reduce using rule 278 (operadorLogico -> OR .)
    NOT             reduce using rule 278 (operadorLogico -> OR .)
    ENTERO          reduce using rule 278 (operadorLogico -> OR .)
    STRING          reduce using rule 278 (operadorLogico -> OR .)


state 67

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    BREAK           reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    ELSEIF          reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    ELSE            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 178
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 68

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    MAP             reduce using rule 14 (final -> sentenciaWhile final .)
    LIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    SWITCH          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BREAK           reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)


state 69

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    BREAK           reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 179
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 70

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    BREAK           reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 180
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 71

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    BREAK           reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    ELSEIF          reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 181
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 72

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    MAP             reduce using rule 22 (final -> sentenciaIf final .)
    LIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    SWITCH          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BREAK           reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)


state 73

    (23) final -> imprimir PUNTOYCOMA .
    (24) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 23 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> imprimir PUNTOYCOMA .)
    BREAK           reduce using rule 23 (final -> imprimir PUNTOYCOMA .)
    ELSEIF          reduce using rule 23 (final -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 23 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 11
    final                          shift and go to state 182
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 74

    (25) final -> funcionStdin PUNTOYCOMA .
    (26) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .)
    BREAK           reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .)
    ELSEIF          reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .)
    ELSE            reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 25 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 12
    final                          shift and go to state 183
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 75

    (27) final -> funcionStdout PUNTOYCOMA .
    (28) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .)
    BREAK           reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .)
    ELSEIF          reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .)
    ELSE            reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 13
    final                          shift and go to state 184
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 76

    (29) final -> negacionBool PUNTOYCOMA .
    (30) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    BREAK           reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 14
    final                          shift and go to state 185
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 77

    (31) final -> comparacionBool PUNTOYCOMA . final
    (32) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .)
    BREAK           reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 15
    final                          shift and go to state 186
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 78

    (33) final -> sentenciaFor PUNTOYCOMA . final
    (34) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .)
    BREAK           reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .)
    ELSEIF          reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .)
    ELSE            reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 34 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 16
    final                          shift and go to state 187
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 79

    (35) final -> sentenciaFor final .

    $end            reduce using rule 35 (final -> sentenciaFor final .)
    LDER            reduce using rule 35 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 35 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 35 (final -> sentenciaFor final .)
    INT             reduce using rule 35 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 35 (final -> sentenciaFor final .)
    NUM             reduce using rule 35 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 35 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 35 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 35 (final -> sentenciaFor final .)
    VAR             reduce using rule 35 (final -> sentenciaFor final .)
    WHILE           reduce using rule 35 (final -> sentenciaFor final .)
    DO              reduce using rule 35 (final -> sentenciaFor final .)
    IF              reduce using rule 35 (final -> sentenciaFor final .)
    PRINT           reduce using rule 35 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> sentenciaFor final .)
    NOT             reduce using rule 35 (final -> sentenciaFor final .)
    FOR             reduce using rule 35 (final -> sentenciaFor final .)
    LIST            reduce using rule 35 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 35 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 35 (final -> sentenciaFor final .)
    SET             reduce using rule 35 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 35 (final -> sentenciaFor final .)
    MAP             reduce using rule 35 (final -> sentenciaFor final .)
    LIZQ            reduce using rule 35 (final -> sentenciaFor final .)
    SWITCH          reduce using rule 35 (final -> sentenciaFor final .)
    BOOL            reduce using rule 35 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 35 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 35 (final -> sentenciaFor final .)
    STRING          reduce using rule 35 (final -> sentenciaFor final .)
    BREAK           reduce using rule 35 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 35 (final -> sentenciaFor final .)
    ELSE            reduce using rule 35 (final -> sentenciaFor final .)


state 80

    (37) final -> sentenciaSubstring PUNTOYCOMA . final
    (38) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .)
    BREAK           reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .)
    ELSEIF          reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .)
    ELSE            reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 38 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 17
    final                          shift and go to state 188
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 81

    (39) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (40) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 189


state 82

    (41) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (42) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 190


state 83

    (235) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (236) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (219) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (220) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 191
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    expresionDouble                shift and go to state 192
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 174

state 84

    (255) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (256) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 196


state 85

    (125) expresionLista -> VARIABLE CIZQ . ENTERO CDER

    ENTERO          shift and go to state 197


state 86

    (126) expresionLista -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER
    (90) expresionSet -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER

    PIZQ            shift and go to state 198


state 87

    (127) expresionLista -> VARIABLE FUNCIONRANGE . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 199


state 88

    (176) asignacionSimple -> VARIABLE IGUAL . expresion
    (203) expresion -> . valor operadorMat expresion
    (204) expresion -> . valor
    (205) expresion -> . expresionString
    (206) expresion -> . expresionInt
    (207) expresion -> . expresionDouble
    (208) expresion -> . expresionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 176
    VARIABLE        shift and go to state 200
    DOUBLE          shift and go to state 207
    STRING          shift and go to state 208
    FUNCIONSTDIN    shift and go to state 211
    BOOL            shift and go to state 175
    NOT             shift and go to state 45

    expresion                      shift and go to state 201
    valor                          shift and go to state 202
    expresionString                shift and go to state 203
    expresionInt                   shift and go to state 204
    expresionDouble                shift and go to state 205
    expresionBool                  shift and go to state 206
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 209
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 89

    (271) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 271 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 271 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 271 (comparadorMat -> DIGUAL .)


state 90

    (272) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 272 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 272 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 272 (comparadorMat -> NOIGUAL .)


state 91

    (273) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 273 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 273 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 273 (comparadorMat -> MAYOR .)


state 92

    (274) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 274 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 274 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 274 (comparadorMat -> MENOR .)


state 93

    (275) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 275 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 275 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 275 (comparadorMat -> MAYIGUAL .)


state 94

    (276) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 276 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 276 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 276 (comparadorMat -> MENIGUAL .)


state 95

    (43) final -> expresionLista PUNTOYCOMA .
    (44) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 43 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 43 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 43 (final -> expresionLista PUNTOYCOMA .)
    BREAK           reduce using rule 43 (final -> expresionLista PUNTOYCOMA .)
    ELSEIF          reduce using rule 43 (final -> expresionLista PUNTOYCOMA .)
    ELSE            reduce using rule 43 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 43 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 19
    final                          shift and go to state 213
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 96

    (45) final -> expresionNewList PUNTOYCOMA .
    (46) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .)
    BREAK           reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .)
    ELSEIF          reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .)
    ELSE            reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 45 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 20
    final                          shift and go to state 214
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 97

    (47) final -> expresionSet PUNTOYCOMA .
    (48) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 47 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 47 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 47 (final -> expresionSet PUNTOYCOMA .)
    BREAK           reduce using rule 47 (final -> expresionSet PUNTOYCOMA .)
    ELSEIF          reduce using rule 47 (final -> expresionSet PUNTOYCOMA .)
    ELSE            reduce using rule 47 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 47 (final -> expresionSet PUNTOYCOMA .) ]

    expresionSet                   shift and go to state 21
    final                          shift and go to state 215
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 98

    (49) final -> expresionMap PUNTOYCOMA .
    (50) final -> expresionMap PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 49 (final -> expresionMap PUNTOYCOMA .)
    LDER            reduce using rule 49 (final -> expresionMap PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 49 (final -> expresionMap PUNTOYCOMA .)
    BREAK           reduce using rule 49 (final -> expresionMap PUNTOYCOMA .)
    ELSEIF          reduce using rule 49 (final -> expresionMap PUNTOYCOMA .)
    ELSE            reduce using rule 49 (final -> expresionMap PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 49 (final -> expresionMap PUNTOYCOMA .) ]

    expresionMap                   shift and go to state 22
    final                          shift and go to state 216
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 99

    (52) final -> expresionSwitch PUNTOYCOMA .
    (53) final -> expresionSwitch PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .)
    LDER            reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .)
    BREAK           reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .)
    ELSEIF          reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .)
    ELSE            reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 52 (final -> expresionSwitch PUNTOYCOMA .) ]

    expresionSwitch                shift and go to state 23
    final                          shift and go to state 217
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 100

    (54) final -> declaracionSimple PUNTOYCOMA .
    (55) final -> declaracionSimple PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .)
    LDER            reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .)
    BREAK           reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .)
    ELSEIF          reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .)
    ELSE            reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 54 (final -> declaracionSimple PUNTOYCOMA .) ]

    declaracionSimple              shift and go to state 24
    final                          shift and go to state 218
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 101

    (168) asignacion -> INT VARIABLE . IGUAL expresionInt
    (178) declaracionSimple -> INT VARIABLE .

    IGUAL           shift and go to state 219
    PUNTOYCOMA      reduce using rule 178 (declaracionSimple -> INT VARIABLE .)


state 102

    (169) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble
    (179) declaracionSimple -> DOUBLER VARIABLE .

    IGUAL           shift and go to state 220
    PUNTOYCOMA      reduce using rule 179 (declaracionSimple -> DOUBLER VARIABLE .)


state 103

    (170) asignacion -> NUM VARIABLE . IGUAL expresionDouble
    (180) declaracionSimple -> NUM VARIABLE .

    IGUAL           shift and go to state 221
    PUNTOYCOMA      reduce using rule 180 (declaracionSimple -> NUM VARIABLE .)


state 104

    (171) asignacion -> STRINGR VARIABLE . IGUAL expresionString
    (177) declaracionSimple -> STRINGR VARIABLE .

    IGUAL           shift and go to state 222
    PUNTOYCOMA      reduce using rule 177 (declaracionSimple -> STRINGR VARIABLE .)


state 105

    (172) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 223


state 106

    (173) asignacion -> DYNAMIC VARIABLE . IGUAL expresion
    (182) declaracionSimple -> DYNAMIC VARIABLE .

    IGUAL           shift and go to state 224
    PUNTOYCOMA      reduce using rule 182 (declaracionSimple -> DYNAMIC VARIABLE .)


state 107

    (174) asignacion -> VAR VARIABLE . IGUAL expresion
    (181) declaracionSimple -> VAR VARIABLE .

    IGUAL           shift and go to state 225
    PUNTOYCOMA      reduce using rule 181 (declaracionSimple -> VAR VARIABLE .)


state 108

    (259) expresionInt -> valorInt operadorMat . expresionInt
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    valorInt                       shift and go to state 226
    expresionInt                   shift and go to state 227

state 109

    (265) operadorMat -> SUMA .

    ENTERO          reduce using rule 265 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 265 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 265 (operadorMat -> SUMA .)
    STRING          reduce using rule 265 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 265 (operadorMat -> SUMA .)
    BOOL            reduce using rule 265 (operadorMat -> SUMA .)
    NOT             reduce using rule 265 (operadorMat -> SUMA .)


state 110

    (266) operadorMat -> RESTA .

    ENTERO          reduce using rule 266 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 266 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 266 (operadorMat -> RESTA .)
    STRING          reduce using rule 266 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 266 (operadorMat -> RESTA .)
    BOOL            reduce using rule 266 (operadorMat -> RESTA .)
    NOT             reduce using rule 266 (operadorMat -> RESTA .)


state 111

    (267) operadorMat -> MULTI .

    ENTERO          reduce using rule 267 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 267 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 267 (operadorMat -> MULTI .)
    STRING          reduce using rule 267 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 267 (operadorMat -> MULTI .)
    BOOL            reduce using rule 267 (operadorMat -> MULTI .)
    NOT             reduce using rule 267 (operadorMat -> MULTI .)


state 112

    (268) operadorMat -> DIV .

    ENTERO          reduce using rule 268 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 268 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 268 (operadorMat -> DIV .)
    STRING          reduce using rule 268 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 268 (operadorMat -> DIV .)
    BOOL            reduce using rule 268 (operadorMat -> DIV .)
    NOT             reduce using rule 268 (operadorMat -> DIV .)


state 113

    (269) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 269 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 269 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 269 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 269 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 269 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 269 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 269 (operadorMat -> DIVENTERO .)


state 114

    (270) operadorMat -> MOD .

    ENTERO          reduce using rule 270 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 270 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 270 (operadorMat -> MOD .)
    STRING          reduce using rule 270 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 270 (operadorMat -> MOD .)
    BOOL            reduce using rule 270 (operadorMat -> MOD .)
    NOT             reduce using rule 270 (operadorMat -> MOD .)


state 115

    (263) expresionDouble -> valorDouble operadorMat . expresionDouble
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 229
    valorInt                       shift and go to state 174

state 116

    (234) expresionBool -> valorDouble comparadorMat . expresionDouble
    (237) expresionBool -> valorDouble comparadorMat . VARIABLE
    (218) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (221) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 231
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 230
    valorInt                       shift and go to state 174

state 117

    (252) expresionString -> valorString SUMA . expresionString
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 233
    VARIABLE        shift and go to state 234
    FUNCIONSTDIN    shift and go to state 211

    valorString                    shift and go to state 35
    expresionString                shift and go to state 232
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 118

    (254) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 235


state 119

    (241) expresionBool -> valor IS . objeto
    (279) objeto -> . STRINGR
    (280) objeto -> . INT
    (281) objeto -> . DOUBLER
    (282) objeto -> . NUM
    (283) objeto -> . VAR
    (284) objeto -> . DYNAMIC
    (285) objeto -> . LIST
    (286) objeto -> . BOOLR
    (287) objeto -> . MAP
    (288) objeto -> . SET

    STRINGR         shift and go to state 237
    INT             shift and go to state 238
    DOUBLER         shift and go to state 239
    NUM             shift and go to state 240
    VAR             shift and go to state 241
    DYNAMIC         shift and go to state 242
    LIST            shift and go to state 243
    BOOLR           shift and go to state 244
    MAP             shift and go to state 245
    SET             shift and go to state 246

    objeto                         shift and go to state 236

state 120

    (242) expresionBool -> valor ISNEGADO . objeto
    (279) objeto -> . STRINGR
    (280) objeto -> . INT
    (281) objeto -> . DOUBLER
    (282) objeto -> . NUM
    (283) objeto -> . VAR
    (284) objeto -> . DYNAMIC
    (285) objeto -> . LIST
    (286) objeto -> . BOOLR
    (287) objeto -> . MAP
    (288) objeto -> . SET

    STRINGR         shift and go to state 237
    INT             shift and go to state 238
    DOUBLER         shift and go to state 239
    NUM             shift and go to state 240
    VAR             shift and go to state 241
    DYNAMIC         shift and go to state 242
    LIST            shift and go to state 243
    BOOLR           shift and go to state 244
    MAP             shift and go to state 245
    SET             shift and go to state 246

    objeto                         shift and go to state 247

state 121

    (229) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 176
    STRING          shift and go to state 177

    expresionBool                  shift and go to state 248
    valorDouble                    shift and go to state 170
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    valor                          shift and go to state 37
    valorInt                       shift and go to state 174

state 122

    (83) claveValor -> LIZQ . LDER
    (84) claveValor -> LIZQ . expMap LDER
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 249
    VARIABLE        shift and go to state 126
    STRING          shift and go to state 127
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 129
    BOOL            shift and go to state 130
    CIZQ            shift and go to state 131
    SETFROM         shift and go to state 133
    LIZQ            shift and go to state 122
    NEWLIST         shift and go to state 52

    expMap                         shift and go to state 250
    claveValor                     shift and go to state 125
    expresionNewList               shift and go to state 132

state 123

    (68) expresionMap -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 68 (expresionMap -> LIZQ LDER .)


state 124

    (70) expresionMap -> LIZQ expMap . LDER

    LDER            shift and go to state 251


state 125

    (71) expMap -> claveValor . DOSPUNTOS claveValor
    (72) expMap -> claveValor . DOSPUNTOS claveValor COMA expMap

    DOSPUNTOS       shift and go to state 252


state 126

    (73) claveValor -> VARIABLE .

    DOSPUNTOS       reduce using rule 73 (claveValor -> VARIABLE .)
    COMA            reduce using rule 73 (claveValor -> VARIABLE .)
    LDER            reduce using rule 73 (claveValor -> VARIABLE .)


state 127

    (74) claveValor -> STRING .

    DOSPUNTOS       reduce using rule 74 (claveValor -> STRING .)
    COMA            reduce using rule 74 (claveValor -> STRING .)
    LDER            reduce using rule 74 (claveValor -> STRING .)


state 128

    (75) claveValor -> ENTERO .

    DOSPUNTOS       reduce using rule 75 (claveValor -> ENTERO .)
    COMA            reduce using rule 75 (claveValor -> ENTERO .)
    LDER            reduce using rule 75 (claveValor -> ENTERO .)


state 129

    (76) claveValor -> DOUBLE .

    DOSPUNTOS       reduce using rule 76 (claveValor -> DOUBLE .)
    COMA            reduce using rule 76 (claveValor -> DOUBLE .)
    LDER            reduce using rule 76 (claveValor -> DOUBLE .)


state 130

    (77) claveValor -> BOOL .

    DOSPUNTOS       reduce using rule 77 (claveValor -> BOOL .)
    COMA            reduce using rule 77 (claveValor -> BOOL .)
    LDER            reduce using rule 77 (claveValor -> BOOL .)


state 131

    (78) claveValor -> CIZQ . expListDynamic CDER
    (79) claveValor -> CIZQ . expListSet CDER
    (93) expresionNewList -> CIZQ . CDER
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 142
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 259
    SETFROM         shift and go to state 154

    expListDynamic                 shift and go to state 253
    expListSet                     shift and go to state 254

state 132

    (80) claveValor -> expresionNewList .

    DOSPUNTOS       reduce using rule 80 (claveValor -> expresionNewList .)
    COMA            reduce using rule 80 (claveValor -> expresionNewList .)
    LDER            reduce using rule 80 (claveValor -> expresionNewList .)


state 133

    (81) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (82) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 260


state 134

    (231) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    final                          shift and go to state 261
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 135

    (189) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (190) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 176
    STRING          shift and go to state 177

    expresionBool                  shift and go to state 262
    valorDouble                    shift and go to state 170
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    valor                          shift and go to state 37
    valorInt                       shift and go to state 174

state 136

    (184) imprimir -> PRINT PIZQ . expresion PDER
    (185) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (203) expresion -> . valor operadorMat expresion
    (204) expresion -> . valor
    (205) expresion -> . expresionString
    (206) expresion -> . expresionInt
    (207) expresion -> . expresionDouble
    (208) expresion -> . expresionBool
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 265
    ENTERO          shift and go to state 176
    DOUBLE          shift and go to state 207
    STRING          shift and go to state 208
    FUNCIONSTDIN    shift and go to state 211
    BOOL            shift and go to state 175
    NOT             shift and go to state 45

    expresion                      shift and go to state 263
    asignacionSimple               shift and go to state 264
    valor                          shift and go to state 202
    expresionString                shift and go to state 203
    expresionInt                   shift and go to state 204
    expresionDouble                shift and go to state 205
    expresionBool                  shift and go to state 206
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 209
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 137

    (187) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (188) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (203) expresion -> . valor operadorMat expresion
    (204) expresion -> . valor
    (205) expresion -> . expresionString
    (206) expresion -> . expresionInt
    (207) expresion -> . expresionDouble
    (208) expresion -> . expresionBool
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 265
    ENTERO          shift and go to state 176
    DOUBLE          shift and go to state 207
    STRING          shift and go to state 208
    FUNCIONSTDIN    shift and go to state 211
    BOOL            shift and go to state 175
    NOT             shift and go to state 45

    expresion                      shift and go to state 266
    asignacionSimple               shift and go to state 267
    valor                          shift and go to state 202
    expresionString                shift and go to state 203
    expresionInt                   shift and go to state 204
    expresionDouble                shift and go to state 205
    expresionBool                  shift and go to state 206
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 209
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 138

    (243) negacionBool -> NOT PIZQ . expresionBool PDER
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 176
    STRING          shift and go to state 177

    expresionBool                  shift and go to state 268
    valorDouble                    shift and go to state 170
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    valor                          shift and go to state 37
    valorInt                       shift and go to state 174

state 139

    (225) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (209) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (210) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (211) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (212) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (213) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (214) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (215) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (216) asignacionFor -> . VARIABLE IGUAL expresionInt
    (217) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 271
    DOUBLER         shift and go to state 272
    NUM             shift and go to state 273
    DYNAMIC         shift and go to state 274
    VAR             shift and go to state 275
    VARIABLE        shift and go to state 270

    asignacionFor                  shift and go to state 269

state 140

    (94) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (95) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (98) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (99) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (102) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (103) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (106) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (107) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (110) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (113) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (117) expresionLista -> LIST MENOR . SET MAYOR VARIABLE
    (118) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL expresionNewList
    (121) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE
    (122) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 276
    INT             shift and go to state 277
    DOUBLER         shift and go to state 278
    NUM             shift and go to state 279
    BOOLR           shift and go to state 280
    DYNAMIC         shift and go to state 281
    SET             shift and go to state 282
    MAP             shift and go to state 283


state 141

    (97) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 284


state 142

    (93) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 93 (expresionNewList -> CIZQ CDER .)
    DOSPUNTOS       reduce using rule 93 (expresionNewList -> CIZQ CDER .)
    COMA            reduce using rule 93 (expresionNewList -> CIZQ CDER .)
    LDER            reduce using rule 93 (expresionNewList -> CIZQ CDER .)


state 143

    (101) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 285


state 144

    (105) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 286


state 145

    (112) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 287


state 146

    (116) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 288


state 147

    (120) expresionLista -> CIZQ expListSet . CDER

    CDER            shift and go to state 289


state 148

    (124) expresionLista -> CIZQ expListMap . CDER

    CDER            shift and go to state 290


state 149

    (128) expListString -> STRING .
    (129) expListString -> STRING . COMA expListString
    (146) expListDynamic -> STRING .
    (150) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 128 (expListString -> STRING .)
    CDER            reduce using rule 128 (expListString -> STRING .)
    COMA            shift and go to state 291

  ! CDER            [ reduce using rule 146 (expListDynamic -> STRING .) ]


state 150

    (130) expListString -> VARIABLE .
    (131) expListString -> VARIABLE . COMA expListString
    (134) expListInt -> VARIABLE .
    (135) expListInt -> VARIABLE . COMA expListInt
    (140) expListNum -> VARIABLE .
    (141) expListNum -> VARIABLE . COMA expListNum
    (144) expListBool -> VARIABLE .
    (145) expListBool -> VARIABLE . COMA expListBool
    (154) expListDynamic -> VARIABLE .
    (155) expListDynamic -> VARIABLE . COMA expListDynamic
    (160) expListSet -> VARIABLE .
    (161) expListSet -> VARIABLE . COMA expListSet
    (166) expListMap -> VARIABLE .
    (167) expListMap -> VARIABLE . COMA expListMap

  ! reduce/reduce conflict for CDER resolved using rule 130 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 130 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 130 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 130 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 130 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 130 (expListString -> VARIABLE .)
    CDER            reduce using rule 130 (expListString -> VARIABLE .)
    COMA            shift and go to state 292

  ! CDER            [ reduce using rule 134 (expListInt -> VARIABLE .) ]
  ! CDER            [ reduce using rule 140 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 144 (expListBool -> VARIABLE .) ]
  ! CDER            [ reduce using rule 154 (expListDynamic -> VARIABLE .) ]
  ! CDER            [ reduce using rule 160 (expListSet -> VARIABLE .) ]
  ! CDER            [ reduce using rule 166 (expListMap -> VARIABLE .) ]


state 151

    (132) expListInt -> ENTERO .
    (133) expListInt -> ENTERO . COMA expListInt
    (136) expListNum -> ENTERO .
    (138) expListNum -> ENTERO . COMA expListNum
    (147) expListDynamic -> ENTERO .
    (151) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 132 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 132 (expListInt -> ENTERO .)
    CDER            reduce using rule 132 (expListInt -> ENTERO .)
    COMA            shift and go to state 293

  ! CDER            [ reduce using rule 136 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 147 (expListDynamic -> ENTERO .) ]


state 152

    (137) expListNum -> DOUBLE .
    (139) expListNum -> DOUBLE . COMA expListNum
    (148) expListDynamic -> DOUBLE .
    (152) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 137 (expListNum -> DOUBLE .)
    CDER            reduce using rule 137 (expListNum -> DOUBLE .)
    COMA            shift and go to state 294

  ! CDER            [ reduce using rule 148 (expListDynamic -> DOUBLE .) ]


state 153

    (142) expListBool -> BOOL .
    (143) expListBool -> BOOL . COMA expListBool
    (149) expListDynamic -> BOOL .
    (153) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 142 (expListBool -> BOOL .)
    CDER            reduce using rule 142 (expListBool -> BOOL .)
    COMA            shift and go to state 295

  ! CDER            [ reduce using rule 149 (expListDynamic -> BOOL .) ]


state 154

    (156) expListSet -> SETFROM . PIZQ CIZQ CDER PDER
    (157) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> SETFROM . PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER COMA expListSet

    PIZQ            shift and go to state 296


state 155

    (162) expListMap -> LIZQ . LDER
    (163) expListMap -> LIZQ . expMap LDER
    (164) expListMap -> LIZQ . LDER COMA expListMap
    (165) expListMap -> LIZQ . expMap LDER COMA expListMap
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 297
    VARIABLE        shift and go to state 126
    STRING          shift and go to state 127
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 129
    BOOL            shift and go to state 130
    CIZQ            shift and go to state 131
    SETFROM         shift and go to state 133
    LIZQ            shift and go to state 122
    NEWLIST         shift and go to state 52

    expMap                         shift and go to state 298
    claveValor                     shift and go to state 125
    expresionNewList               shift and go to state 132

state 156

    (85) expresionSet -> SET VARIABLE .
    (87) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (89) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 85 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 299


state 157

    (66) expresionMap -> MAP VARIABLE .
    (67) expresionMap -> MAP VARIABLE . IGUAL LIZQ LDER
    (69) expresionMap -> MAP VARIABLE . IGUAL LIZQ expMap LDER

    PUNTOYCOMA      reduce using rule 66 (expresionMap -> MAP VARIABLE .)
    IGUAL           shift and go to state 300


state 158

    (91) expresionNewList -> NEWLIST PIZQ . PDER
    (92) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 301
    ENTERO          shift and go to state 302


state 159

    (86) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (88) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 303


state 160

    (56) expresionSwitch -> SWITCH PIZQ . VARIABLE PDER LIZQ cases LDER

    VARIABLE        shift and go to state 304


state 161

    (183) declaracionSimple -> BOOL VARIABLE .

    PUNTOYCOMA      reduce using rule 183 (declaracionSimple -> BOOL VARIABLE .)


state 162

    (251) valorString -> STRING CIZQ . ENTERO CDER

    ENTERO          shift and go to state 305


state 163

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    MAP             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SWITCH          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BREAK           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 164

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    MAP             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SWITCH          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BREAK           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 165

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    MAP             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SWITCH          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BREAK           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 166

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    MAP             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SWITCH          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BREAK           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 167

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    MAP             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 168

    (244) comparacionBool -> expresionBool operadorLogico expresionBool .
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 244 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 244 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! AND             [ reduce using rule 244 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 244 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 64

state 169

    (245) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (240) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 240 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 240 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 240 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 240 (expresionBool -> comparacionBool .)
    AND             reduce using rule 240 (expresionBool -> comparacionBool .)
    OR              reduce using rule 240 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 240 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 240 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 245 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 245 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 245 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 245 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 170

    (234) expresionBool -> valorDouble . comparadorMat expresionDouble
    (237) expresionBool -> valorDouble . comparadorMat VARIABLE
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

    comparadorMat                  shift and go to state 306

state 171

    (235) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (236) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (233) valorBool -> VARIABLE .
    (200) valor -> VARIABLE .
    (258) valorInt -> VARIABLE .
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 233 (valorBool -> VARIABLE .)
    OR              reduce using rule 233 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 233 (valorBool -> VARIABLE .)
    PDER            reduce using rule 233 (valorBool -> VARIABLE .)
    IS              reduce using rule 200 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 200 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

  ! DIGUAL          [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 307

state 172

    (238) expresionBool -> valorBool .

    AND             reduce using rule 238 (expresionBool -> valorBool .)
    OR              reduce using rule 238 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 238 (expresionBool -> valorBool .)
    PDER            reduce using rule 238 (expresionBool -> valorBool .)


state 173

    (239) expresionBool -> negacionBool .

    AND             reduce using rule 239 (expresionBool -> negacionBool .)
    OR              reduce using rule 239 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 239 (expresionBool -> negacionBool .)
    PDER            reduce using rule 239 (expresionBool -> negacionBool .)


state 174

    (262) valorDouble -> valorInt .

    DIGUAL          reduce using rule 262 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 262 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 262 (valorDouble -> valorInt .)
    MENOR           reduce using rule 262 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 262 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 262 (valorDouble -> valorInt .)
    SUMA            reduce using rule 262 (valorDouble -> valorInt .)
    RESTA           reduce using rule 262 (valorDouble -> valorInt .)
    MULTI           reduce using rule 262 (valorDouble -> valorInt .)
    DIV             reduce using rule 262 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 262 (valorDouble -> valorInt .)
    MOD             reduce using rule 262 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 262 (valorDouble -> valorInt .)
    AND             reduce using rule 262 (valorDouble -> valorInt .)
    OR              reduce using rule 262 (valorDouble -> valorInt .)
    PDER            reduce using rule 262 (valorDouble -> valorInt .)


state 175

    (232) valorBool -> BOOL .

    AND             reduce using rule 232 (valorBool -> BOOL .)
    OR              reduce using rule 232 (valorBool -> BOOL .)
    PUNTOYCOMA      reduce using rule 232 (valorBool -> BOOL .)
    PDER            reduce using rule 232 (valorBool -> BOOL .)


state 176

    (199) valor -> ENTERO .
    (257) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 199 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 199 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 199 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 199 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 199 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 199 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 199 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 199 (valor -> ENTERO .)
    IS              reduce using rule 199 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 199 (valor -> ENTERO .)
    SUMA            reduce using rule 199 (valor -> ENTERO .)
    RESTA           reduce using rule 199 (valor -> ENTERO .)
    MULTI           reduce using rule 199 (valor -> ENTERO .)
    DIV             reduce using rule 199 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 199 (valor -> ENTERO .)
    MOD             reduce using rule 199 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 199 (valor -> ENTERO .)
    PDER            reduce using rule 199 (valor -> ENTERO .)
    DIGUAL          reduce using rule 257 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 257 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 257 (valorInt -> ENTERO .)
    MENOR           reduce using rule 257 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 257 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 257 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 257 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 257 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 257 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 257 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 257 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 257 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 257 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 257 (valorInt -> ENTERO .) ]


state 177

    (202) valor -> STRING .

    IS              reduce using rule 202 (valor -> STRING .)
    ISNEGADO        reduce using rule 202 (valor -> STRING .)


state 178

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    MAP             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BREAK           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 179

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    MAP             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BREAK           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 180

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    MAP             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BREAK           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 181

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    MAP             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SWITCH          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BREAK           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 182

    (24) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    MAP             reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    LIZQ            reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    SWITCH          reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    BREAK           reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> imprimir PUNTOYCOMA final .)


state 183

    (26) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    MAP             reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    LIZQ            reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    SWITCH          reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    BREAK           reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 26 (final -> funcionStdin PUNTOYCOMA final .)


state 184

    (28) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    MAP             reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    LIZQ            reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    SWITCH          reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    BREAK           reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> funcionStdout PUNTOYCOMA final .)


state 185

    (30) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)


state 186

    (31) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 31 (final -> comparacionBool PUNTOYCOMA final .)


state 187

    (33) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    MAP             reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    BREAK           reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 33 (final -> sentenciaFor PUNTOYCOMA final .)


state 188

    (37) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    MAP             reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIZQ            reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SWITCH          reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BREAK           reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 189

    (39) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (40) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    BREAK           reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    ELSEIF          reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    ELSE            reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 40 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 308
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 190

    (41) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (42) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    BREAK           reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    ELSEIF          reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    ELSE            reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

  ! VARIABLE        [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 309
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 191

    (236) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (220) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (258) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 220 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 220 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 220 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 258 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 258 (valorInt -> VARIABLE .) ]


state 192

    (235) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (219) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 219 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 219 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 193

    (263) expresionDouble -> valorDouble . operadorMat expresionDouble
    (264) expresionDouble -> valorDouble .
    (265) operadorMat -> . SUMA
    (266) operadorMat -> . RESTA
    (267) operadorMat -> . MULTI
    (268) operadorMat -> . DIV
    (269) operadorMat -> . DIVENTERO
    (270) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 264 (expresionDouble -> valorDouble .)
    AND             reduce using rule 264 (expresionDouble -> valorDouble .)
    OR              reduce using rule 264 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 264 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 109
    RESTA           shift and go to state 110
    MULTI           shift and go to state 111
    DIV             shift and go to state 112
    DIVENTERO       shift and go to state 113
    MOD             shift and go to state 114

    operadorMat                    shift and go to state 115

state 194

    (261) valorDouble -> DOUBLE .

    SUMA            reduce using rule 261 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 261 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 261 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 261 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 261 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 261 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 261 (valorDouble -> DOUBLE .)
    AND             reduce using rule 261 (valorDouble -> DOUBLE .)
    OR              reduce using rule 261 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 261 (valorDouble -> DOUBLE .)


state 195

    (257) valorInt -> ENTERO .

    SUMA            reduce using rule 257 (valorInt -> ENTERO .)
    RESTA           reduce using rule 257 (valorInt -> ENTERO .)
    MULTI           reduce using rule 257 (valorInt -> ENTERO .)
    DIV             reduce using rule 257 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 257 (valorInt -> ENTERO .)
    MOD             reduce using rule 257 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 257 (valorInt -> ENTERO .)
    AND             reduce using rule 257 (valorInt -> ENTERO .)
    OR              reduce using rule 257 (valorInt -> ENTERO .)
    PDER            reduce using rule 257 (valorInt -> ENTERO .)


state 196

    (255) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (256) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 310


state 197

    (125) expresionLista -> VARIABLE CIZQ ENTERO . CDER

    CDER            shift and go to state 311


state 198

    (126) expresionLista -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER
    (90) expresionSet -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER

    ENTERO          shift and go to state 312


state 199

    (127) expresionLista -> VARIABLE FUNCIONRANGE PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 313


state 200

    (200) valor -> VARIABLE .
    (235) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (236) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (247) valorString -> VARIABLE .
    (258) valorInt -> VARIABLE .
    (233) valorBool -> VARIABLE .
    (255) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 200 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 200 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 200 (valor -> VARIABLE .)
    SUMA            reduce using rule 200 (valor -> VARIABLE .)
    RESTA           reduce using rule 200 (valor -> VARIABLE .)
    MULTI           reduce using rule 200 (valor -> VARIABLE .)
    DIV             reduce using rule 200 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 200 (valor -> VARIABLE .)
    MOD             reduce using rule 200 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 200 (valor -> VARIABLE .)
    PDER            reduce using rule 200 (valor -> VARIABLE .)
    CIZQ            reduce using rule 247 (valorString -> VARIABLE .)
    AND             reduce using rule 233 (valorBool -> VARIABLE .)
    OR              reduce using rule 233 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

  ! SUMA            [ reduce using rule 247 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 247 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 247 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 233 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 233 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 307

state 201

    (176) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 176 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 176 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 202

    (203) expresion -> valor . operadorMat expresion
    (204) expresion -> valor .
    (241) expresionBool -> valor . IS objeto
    (242) expresionBool -> valor . ISNEGADO objeto
    (265) operadorMat -> . SUMA
    (266) operadorMat -> . RESTA
    (267) operadorMat -> . MULTI
    (268) operadorMat -> . DIV
    (269) operadorMat -> . DIVENTERO
    (270) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 204 (expresion -> valor .)
    PDER            reduce using rule 204 (expresion -> valor .)
    IS              shift and go to state 119
    ISNEGADO        shift and go to state 120
    SUMA            shift and go to state 109
    RESTA           shift and go to state 110
    MULTI           shift and go to state 111
    DIV             shift and go to state 112
    DIVENTERO       shift and go to state 113
    MOD             shift and go to state 114

    operadorMat                    shift and go to state 314

state 203

    (205) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 205 (expresion -> expresionString .)
    PDER            reduce using rule 205 (expresion -> expresionString .)


state 204

    (206) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 206 (expresion -> expresionInt .)
    PDER            reduce using rule 206 (expresion -> expresionInt .)


state 205

    (207) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 207 (expresion -> expresionDouble .)
    PDER            reduce using rule 207 (expresion -> expresionDouble .)


state 206

    (208) expresion -> expresionBool .
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 208 (expresion -> expresionBool .)
    PDER            reduce using rule 208 (expresion -> expresionBool .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 207

    (201) valor -> DOUBLE .
    (261) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 201 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 201 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 201 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 201 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 201 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 201 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 201 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 201 (valor -> DOUBLE .)
    IS              reduce using rule 201 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 201 (valor -> DOUBLE .)
    SUMA            reduce using rule 201 (valor -> DOUBLE .)
    RESTA           reduce using rule 201 (valor -> DOUBLE .)
    MULTI           reduce using rule 201 (valor -> DOUBLE .)
    DIV             reduce using rule 201 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 201 (valor -> DOUBLE .)
    MOD             reduce using rule 201 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 201 (valor -> DOUBLE .)
    PDER            reduce using rule 201 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 261 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 261 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 261 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 261 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 261 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 261 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 261 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 261 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 261 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 261 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 261 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 261 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 261 (valorDouble -> DOUBLE .) ]


state 208

    (202) valor -> STRING .
    (246) valorString -> STRING .
    (251) valorString -> STRING . CIZQ ENTERO CDER

  ! reduce/reduce conflict for SUMA resolved using rule 202 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 202 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 202 (valor -> STRING .)
  ! shift/reduce conflict for CIZQ resolved as shift
    IS              reduce using rule 202 (valor -> STRING .)
    ISNEGADO        reduce using rule 202 (valor -> STRING .)
    SUMA            reduce using rule 202 (valor -> STRING .)
    RESTA           reduce using rule 202 (valor -> STRING .)
    MULTI           reduce using rule 202 (valor -> STRING .)
    DIV             reduce using rule 202 (valor -> STRING .)
    DIVENTERO       reduce using rule 202 (valor -> STRING .)
    MOD             reduce using rule 202 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 202 (valor -> STRING .)
    PDER            reduce using rule 202 (valor -> STRING .)
    CIZQ            shift and go to state 162

  ! SUMA            [ reduce using rule 246 (valorString -> STRING .) ]
  ! CIZQ            [ reduce using rule 246 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 246 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 246 (valorString -> STRING .) ]


state 209

    (263) expresionDouble -> valorDouble . operadorMat expresionDouble
    (264) expresionDouble -> valorDouble .
    (234) expresionBool -> valorDouble . comparadorMat expresionDouble
    (237) expresionBool -> valorDouble . comparadorMat VARIABLE
    (265) operadorMat -> . SUMA
    (266) operadorMat -> . RESTA
    (267) operadorMat -> . MULTI
    (268) operadorMat -> . DIV
    (269) operadorMat -> . DIVENTERO
    (270) operadorMat -> . MOD
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 264 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 264 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 109
    RESTA           shift and go to state 110
    MULTI           shift and go to state 111
    DIV             shift and go to state 112
    DIVENTERO       shift and go to state 113
    MOD             shift and go to state 114
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

    operadorMat                    shift and go to state 115
    comparadorMat                  shift and go to state 306

state 210

    (240) expresionBool -> comparacionBool .

    AND             reduce using rule 240 (expresionBool -> comparacionBool .)
    OR              reduce using rule 240 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 240 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 240 (expresionBool -> comparacionBool .)


state 211

    (248) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 248 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 248 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 248 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 248 (valorString -> FUNCIONSTDIN .)


state 212

    (250) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 250 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 250 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 250 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 250 (valorString -> sentenciaSubstring .)


state 213

    (44) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    MAP             reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    LIZQ            reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    SWITCH          reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    BREAK           reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 44 (final -> expresionLista PUNTOYCOMA final .)


state 214

    (46) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    MAP             reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    LIZQ            reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    SWITCH          reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    BREAK           reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 46 (final -> expresionNewList PUNTOYCOMA final .)


state 215

    (48) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    MAP             reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    LIZQ            reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    SWITCH          reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    BREAK           reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 48 (final -> expresionSet PUNTOYCOMA final .)


state 216

    (50) final -> expresionMap PUNTOYCOMA final .

    $end            reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    LDER            reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    VARIABLE        reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    INT             reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLER         reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    NUM             reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    STRINGR         reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    BOOLR           reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    VAR             reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    WHILE           reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    DO              reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    IF              reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    PRINT           reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    NOT             reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    FOR             reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    LIST            reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    CIZQ            reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    NEWLIST         reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    SET             reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    SETFROM         reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    MAP             reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    LIZQ            reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    SWITCH          reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    BOOL            reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    ENTERO          reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLE          reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    STRING          reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    BREAK           reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    ELSEIF          reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)
    ELSE            reduce using rule 50 (final -> expresionMap PUNTOYCOMA final .)


state 217

    (53) final -> expresionSwitch PUNTOYCOMA final .

    $end            reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    LDER            reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    VARIABLE        reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    INT             reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    DOUBLER         reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    NUM             reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    STRINGR         reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    BOOLR           reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    VAR             reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    WHILE           reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    DO              reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    IF              reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    PRINT           reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    NOT             reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    FOR             reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    LIST            reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    CIZQ            reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    NEWLIST         reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    SET             reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    SETFROM         reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    MAP             reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    LIZQ            reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    SWITCH          reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    BOOL            reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    ENTERO          reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    DOUBLE          reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    STRING          reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    BREAK           reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    ELSEIF          reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)
    ELSE            reduce using rule 53 (final -> expresionSwitch PUNTOYCOMA final .)


state 218

    (55) final -> declaracionSimple PUNTOYCOMA final .

    $end            reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    LDER            reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    VARIABLE        reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    INT             reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    DOUBLER         reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    NUM             reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    STRINGR         reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    BOOLR           reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    VAR             reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    WHILE           reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    DO              reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    IF              reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    PRINT           reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    NOT             reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    FOR             reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    LIST            reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    CIZQ            reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    NEWLIST         reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    SET             reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    SETFROM         reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    MAP             reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    LIZQ            reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    SWITCH          reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    BOOL            reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    ENTERO          reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    DOUBLE          reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    STRING          reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    BREAK           reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    ELSEIF          reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)
    ELSE            reduce using rule 55 (final -> declaracionSimple PUNTOYCOMA final .)


state 219

    (168) asignacion -> INT VARIABLE IGUAL . expresionInt
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    expresionInt                   shift and go to state 315
    valorInt                       shift and go to state 226

state 220

    (169) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    expresionDouble                shift and go to state 316
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 174

state 221

    (170) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    expresionDouble                shift and go to state 317
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 174

state 222

    (171) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 233
    VARIABLE        shift and go to state 234
    FUNCIONSTDIN    shift and go to state 211

    expresionString                shift and go to state 318
    valorString                    shift and go to state 35
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 223

    (172) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 176
    STRING          shift and go to state 177

    expresionBool                  shift and go to state 319
    valorDouble                    shift and go to state 170
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    valor                          shift and go to state 37
    valorInt                       shift and go to state 174

state 224

    (173) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (203) expresion -> . valor operadorMat expresion
    (204) expresion -> . valor
    (205) expresion -> . expresionString
    (206) expresion -> . expresionInt
    (207) expresion -> . expresionDouble
    (208) expresion -> . expresionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 176
    VARIABLE        shift and go to state 200
    DOUBLE          shift and go to state 207
    STRING          shift and go to state 208
    FUNCIONSTDIN    shift and go to state 211
    BOOL            shift and go to state 175
    NOT             shift and go to state 45

    expresion                      shift and go to state 320
    valor                          shift and go to state 202
    expresionString                shift and go to state 203
    expresionInt                   shift and go to state 204
    expresionDouble                shift and go to state 205
    expresionBool                  shift and go to state 206
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 209
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 225

    (174) asignacion -> VAR VARIABLE IGUAL . expresion
    (203) expresion -> . valor operadorMat expresion
    (204) expresion -> . valor
    (205) expresion -> . expresionString
    (206) expresion -> . expresionInt
    (207) expresion -> . expresionDouble
    (208) expresion -> . expresionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 176
    VARIABLE        shift and go to state 200
    DOUBLE          shift and go to state 207
    STRING          shift and go to state 208
    FUNCIONSTDIN    shift and go to state 211
    BOOL            shift and go to state 175
    NOT             shift and go to state 45

    expresion                      shift and go to state 321
    valor                          shift and go to state 202
    expresionString                shift and go to state 203
    expresionInt                   shift and go to state 204
    expresionDouble                shift and go to state 205
    expresionBool                  shift and go to state 206
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 209
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 226

    (259) expresionInt -> valorInt . operadorMat expresionInt
    (260) expresionInt -> valorInt .
    (265) operadorMat -> . SUMA
    (266) operadorMat -> . RESTA
    (267) operadorMat -> . MULTI
    (268) operadorMat -> . DIV
    (269) operadorMat -> . DIVENTERO
    (270) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 260 (expresionInt -> valorInt .)
    PDER            reduce using rule 260 (expresionInt -> valorInt .)
    SUMA            shift and go to state 109
    RESTA           shift and go to state 110
    MULTI           shift and go to state 111
    DIV             shift and go to state 112
    DIVENTERO       shift and go to state 113
    MOD             shift and go to state 114

    operadorMat                    shift and go to state 108

state 227

    (259) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 259 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 259 (expresionInt -> valorInt operadorMat expresionInt .)


state 228

    (258) valorInt -> VARIABLE .

    SUMA            reduce using rule 258 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 258 (valorInt -> VARIABLE .)
    PDER            reduce using rule 258 (valorInt -> VARIABLE .)
    AND             reduce using rule 258 (valorInt -> VARIABLE .)
    OR              reduce using rule 258 (valorInt -> VARIABLE .)


state 229

    (263) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 263 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 263 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 263 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 263 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 230

    (234) expresionBool -> valorDouble comparadorMat expresionDouble .
    (218) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 218 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 218 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 231

    (237) expresionBool -> valorDouble comparadorMat VARIABLE .
    (221) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (258) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 221 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 221 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 221 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 258 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 258 (valorInt -> VARIABLE .) ]


state 232

    (252) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 252 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 252 (expresionString -> valorString SUMA expresionString .)


state 233

    (246) valorString -> STRING .
    (251) valorString -> STRING . CIZQ ENTERO CDER

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 246 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 246 (valorString -> STRING .)
    PDER            reduce using rule 246 (valorString -> STRING .)
    CIZQ            shift and go to state 162

  ! CIZQ            [ reduce using rule 246 (valorString -> STRING .) ]


state 234

    (247) valorString -> VARIABLE .
    (255) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 247 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 247 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 247 (valorString -> VARIABLE .)
    PDER            reduce using rule 247 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84


state 235

    (254) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 322


state 236

    (241) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 241 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 241 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 241 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 241 (expresionBool -> valor IS objeto .)


state 237

    (279) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 279 (objeto -> STRINGR .)
    AND             reduce using rule 279 (objeto -> STRINGR .)
    OR              reduce using rule 279 (objeto -> STRINGR .)
    PDER            reduce using rule 279 (objeto -> STRINGR .)


state 238

    (280) objeto -> INT .

    PUNTOYCOMA      reduce using rule 280 (objeto -> INT .)
    AND             reduce using rule 280 (objeto -> INT .)
    OR              reduce using rule 280 (objeto -> INT .)
    PDER            reduce using rule 280 (objeto -> INT .)


state 239

    (281) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 281 (objeto -> DOUBLER .)
    AND             reduce using rule 281 (objeto -> DOUBLER .)
    OR              reduce using rule 281 (objeto -> DOUBLER .)
    PDER            reduce using rule 281 (objeto -> DOUBLER .)


state 240

    (282) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 282 (objeto -> NUM .)
    AND             reduce using rule 282 (objeto -> NUM .)
    OR              reduce using rule 282 (objeto -> NUM .)
    PDER            reduce using rule 282 (objeto -> NUM .)


state 241

    (283) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 283 (objeto -> VAR .)
    AND             reduce using rule 283 (objeto -> VAR .)
    OR              reduce using rule 283 (objeto -> VAR .)
    PDER            reduce using rule 283 (objeto -> VAR .)


state 242

    (284) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 284 (objeto -> DYNAMIC .)
    AND             reduce using rule 284 (objeto -> DYNAMIC .)
    OR              reduce using rule 284 (objeto -> DYNAMIC .)
    PDER            reduce using rule 284 (objeto -> DYNAMIC .)


state 243

    (285) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 285 (objeto -> LIST .)
    AND             reduce using rule 285 (objeto -> LIST .)
    OR              reduce using rule 285 (objeto -> LIST .)
    PDER            reduce using rule 285 (objeto -> LIST .)


state 244

    (286) objeto -> BOOLR .

    PUNTOYCOMA      reduce using rule 286 (objeto -> BOOLR .)
    AND             reduce using rule 286 (objeto -> BOOLR .)
    OR              reduce using rule 286 (objeto -> BOOLR .)
    PDER            reduce using rule 286 (objeto -> BOOLR .)


state 245

    (287) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 287 (objeto -> MAP .)
    AND             reduce using rule 287 (objeto -> MAP .)
    OR              reduce using rule 287 (objeto -> MAP .)
    PDER            reduce using rule 287 (objeto -> MAP .)


state 246

    (288) objeto -> SET .

    PUNTOYCOMA      reduce using rule 288 (objeto -> SET .)
    AND             reduce using rule 288 (objeto -> SET .)
    OR              reduce using rule 288 (objeto -> SET .)
    PDER            reduce using rule 288 (objeto -> SET .)


state 247

    (242) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 242 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 242 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 242 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 242 (expresionBool -> valor ISNEGADO objeto .)


state 248

    (229) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (230) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PDER            shift and go to state 323
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 249

    (83) claveValor -> LIZQ LDER .

    DOSPUNTOS       reduce using rule 83 (claveValor -> LIZQ LDER .)
    COMA            reduce using rule 83 (claveValor -> LIZQ LDER .)
    LDER            reduce using rule 83 (claveValor -> LIZQ LDER .)


state 250

    (84) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 324


state 251

    (70) expresionMap -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 70 (expresionMap -> LIZQ expMap LDER .)


state 252

    (71) expMap -> claveValor DOSPUNTOS . claveValor
    (72) expMap -> claveValor DOSPUNTOS . claveValor COMA expMap
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 126
    STRING          shift and go to state 127
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 129
    BOOL            shift and go to state 130
    CIZQ            shift and go to state 131
    SETFROM         shift and go to state 133
    LIZQ            shift and go to state 122
    NEWLIST         shift and go to state 52

    claveValor                     shift and go to state 325
    expresionNewList               shift and go to state 132

state 253

    (78) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 326


state 254

    (79) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 327


state 255

    (146) expListDynamic -> STRING .
    (150) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 146 (expListDynamic -> STRING .)
    COMA            shift and go to state 328


state 256

    (147) expListDynamic -> ENTERO .
    (151) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 147 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 329


state 257

    (148) expListDynamic -> DOUBLE .
    (152) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 148 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 330


state 258

    (149) expListDynamic -> BOOL .
    (153) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 149 (expListDynamic -> BOOL .)
    COMA            shift and go to state 331


state 259

    (154) expListDynamic -> VARIABLE .
    (155) expListDynamic -> VARIABLE . COMA expListDynamic
    (160) expListSet -> VARIABLE .
    (161) expListSet -> VARIABLE . COMA expListSet

  ! reduce/reduce conflict for CDER resolved using rule 154 (expListDynamic -> VARIABLE .)
    CDER            reduce using rule 154 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 332

  ! CDER            [ reduce using rule 160 (expListSet -> VARIABLE .) ]


state 260

    (81) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (82) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 333


state 261

    (231) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 334


state 262

    (189) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (190) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (191) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PDER            shift and go to state 335
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 263

    (184) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 336


state 264

    (185) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 337


state 265

    (176) asignacionSimple -> VARIABLE . IGUAL expresion
    (200) valor -> VARIABLE .
    (235) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (236) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (247) valorString -> VARIABLE .
    (258) valorInt -> VARIABLE .
    (233) valorBool -> VARIABLE .
    (255) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 200 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 200 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 88
    IS              reduce using rule 200 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 200 (valor -> VARIABLE .)
    SUMA            reduce using rule 200 (valor -> VARIABLE .)
    RESTA           reduce using rule 200 (valor -> VARIABLE .)
    MULTI           reduce using rule 200 (valor -> VARIABLE .)
    DIV             reduce using rule 200 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 200 (valor -> VARIABLE .)
    MOD             reduce using rule 200 (valor -> VARIABLE .)
    PDER            reduce using rule 200 (valor -> VARIABLE .)
    CIZQ            reduce using rule 247 (valorString -> VARIABLE .)
    AND             reduce using rule 233 (valorBool -> VARIABLE .)
    OR              reduce using rule 233 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

  ! SUMA            [ reduce using rule 247 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 247 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 233 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 307

state 266

    (187) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 338


state 267

    (188) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 339


state 268

    (243) negacionBool -> NOT PIZQ expresionBool . PDER
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PDER            shift and go to state 340
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 269

    (225) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 341


state 270

    (216) asignacionFor -> VARIABLE . IGUAL expresionInt
    (217) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 342


state 271

    (209) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 343


state 272

    (210) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 344


state 273

    (211) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 345


state 274

    (212) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (213) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 346


state 275

    (214) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (215) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 347


state 276

    (94) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (95) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 348


state 277

    (98) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (99) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 349


state 278

    (102) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (103) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 350


state 279

    (106) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (107) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 351


state 280

    (109) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (110) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 352


state 281

    (113) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (114) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 353


state 282

    (117) expresionLista -> LIST MENOR SET . MAYOR VARIABLE
    (118) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 354


state 283

    (121) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE
    (122) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 355


state 284

    (97) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 97 (expresionLista -> CIZQ expListString CDER .)


state 285

    (101) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 101 (expresionLista -> CIZQ expListInt CDER .)


state 286

    (105) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 105 (expresionLista -> CIZQ expListNum CDER .)


state 287

    (112) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 112 (expresionLista -> CIZQ expListBool CDER .)


state 288

    (116) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 116 (expresionLista -> CIZQ expListDynamic CDER .)


state 289

    (120) expresionLista -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 120 (expresionLista -> CIZQ expListSet CDER .)


state 290

    (124) expresionLista -> CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 124 (expresionLista -> CIZQ expListMap CDER .)


state 291

    (129) expListString -> STRING COMA . expListString
    (150) expListDynamic -> STRING COMA . expListDynamic
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 149
    VARIABLE        shift and go to state 358
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258

    expListString                  shift and go to state 356
    expListDynamic                 shift and go to state 357

state 292

    (131) expListString -> VARIABLE COMA . expListString
    (135) expListInt -> VARIABLE COMA . expListInt
    (141) expListNum -> VARIABLE COMA . expListNum
    (145) expListBool -> VARIABLE COMA . expListBool
    (155) expListDynamic -> VARIABLE COMA . expListDynamic
    (161) expListSet -> VARIABLE COMA . expListSet
    (167) expListMap -> VARIABLE COMA . expListMap
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet
    (162) expListMap -> . LIZQ LDER
    (163) expListMap -> . LIZQ expMap LDER
    (164) expListMap -> . LIZQ LDER COMA expListMap
    (165) expListMap -> . LIZQ expMap LDER COMA expListMap
    (166) expListMap -> . VARIABLE
    (167) expListMap -> . VARIABLE COMA expListMap

    STRING          shift and go to state 149
    VARIABLE        shift and go to state 150
    ENTERO          shift and go to state 151
    DOUBLE          shift and go to state 152
    BOOL            shift and go to state 153
    SETFROM         shift and go to state 154
    LIZQ            shift and go to state 155

    expListString                  shift and go to state 359
    expListInt                     shift and go to state 360
    expListNum                     shift and go to state 361
    expListBool                    shift and go to state 362
    expListDynamic                 shift and go to state 363
    expListSet                     shift and go to state 364
    expListMap                     shift and go to state 365

state 293

    (133) expListInt -> ENTERO COMA . expListInt
    (138) expListNum -> ENTERO COMA . expListNum
    (151) expListDynamic -> ENTERO COMA . expListDynamic
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 151
    VARIABLE        shift and go to state 369
    DOUBLE          shift and go to state 152
    STRING          shift and go to state 255
    BOOL            shift and go to state 258

    expListInt                     shift and go to state 366
    expListNum                     shift and go to state 367
    expListDynamic                 shift and go to state 368

state 294

    (139) expListNum -> DOUBLE COMA . expListNum
    (152) expListDynamic -> DOUBLE COMA . expListDynamic
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 372
    DOUBLE          shift and go to state 152
    VARIABLE        shift and go to state 373
    STRING          shift and go to state 255
    BOOL            shift and go to state 258

    expListNum                     shift and go to state 370
    expListDynamic                 shift and go to state 371

state 295

    (143) expListBool -> BOOL COMA . expListBool
    (153) expListDynamic -> BOOL COMA . expListDynamic
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 153
    VARIABLE        shift and go to state 376
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257

    expListBool                    shift and go to state 374
    expListDynamic                 shift and go to state 375

state 296

    (156) expListSet -> SETFROM PIZQ . CIZQ CDER PDER
    (157) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (158) expListSet -> SETFROM PIZQ . CIZQ CDER PDER COMA expListSet
    (159) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER COMA expListSet

    CIZQ            shift and go to state 377


state 297

    (162) expListMap -> LIZQ LDER .
    (164) expListMap -> LIZQ LDER . COMA expListMap

    CDER            reduce using rule 162 (expListMap -> LIZQ LDER .)
    COMA            shift and go to state 378


state 298

    (163) expListMap -> LIZQ expMap . LDER
    (165) expListMap -> LIZQ expMap . LDER COMA expListMap

    LDER            shift and go to state 379


state 299

    (87) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (89) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 380


state 300

    (67) expresionMap -> MAP VARIABLE IGUAL . LIZQ LDER
    (69) expresionMap -> MAP VARIABLE IGUAL . LIZQ expMap LDER

    LIZQ            shift and go to state 381


state 301

    (91) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 91 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOSPUNTOS       reduce using rule 91 (expresionNewList -> NEWLIST PIZQ PDER .)
    COMA            reduce using rule 91 (expresionNewList -> NEWLIST PIZQ PDER .)
    LDER            reduce using rule 91 (expresionNewList -> NEWLIST PIZQ PDER .)


state 302

    (92) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 382


state 303

    (86) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (88) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 383
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 384

state 304

    (56) expresionSwitch -> SWITCH PIZQ VARIABLE . PDER LIZQ cases LDER

    PDER            shift and go to state 386


state 305

    (251) valorString -> STRING CIZQ ENTERO . CDER

    CDER            shift and go to state 387


state 306

    (234) expresionBool -> valorDouble comparadorMat . expresionDouble
    (237) expresionBool -> valorDouble comparadorMat . VARIABLE
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 389
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 388
    valorInt                       shift and go to state 174

state 307

    (235) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (236) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 390
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    expresionDouble                shift and go to state 391
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 174

state 308

    (39) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    MAP             reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIZQ            reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SWITCH          reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BREAK           reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 39 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 309

    (41) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    MAP             reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIZQ            reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SWITCH          reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BREAK           reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 310

    (255) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (256) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 392
    COMA            shift and go to state 393


state 311

    (125) expresionLista -> VARIABLE CIZQ ENTERO CDER .

    PUNTOYCOMA      reduce using rule 125 (expresionLista -> VARIABLE CIZQ ENTERO CDER .)


state 312

    (126) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER
    (90) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER

    PDER            shift and go to state 394


state 313

    (127) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO . COMA ENTERO PDER

    COMA            shift and go to state 395


state 314

    (203) expresion -> valor operadorMat . expresion
    (203) expresion -> . valor operadorMat expresion
    (204) expresion -> . valor
    (205) expresion -> . expresionString
    (206) expresion -> . expresionInt
    (207) expresion -> . expresionDouble
    (208) expresion -> . expresionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 176
    VARIABLE        shift and go to state 200
    DOUBLE          shift and go to state 207
    STRING          shift and go to state 208
    FUNCIONSTDIN    shift and go to state 211
    BOOL            shift and go to state 175
    NOT             shift and go to state 45

    valor                          shift and go to state 202
    expresion                      shift and go to state 396
    expresionString                shift and go to state 203
    expresionInt                   shift and go to state 204
    expresionDouble                shift and go to state 205
    expresionBool                  shift and go to state 206
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 209
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 212

state 315

    (168) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 168 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 316

    (169) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 169 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 317

    (170) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 170 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 318

    (171) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 171 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 319

    (172) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 172 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 320

    (173) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 173 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 321

    (174) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 174 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 322

    (254) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 254 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 254 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 254 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 254 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 323

    (229) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (230) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 397
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    expresionBool                  shift and go to state 6
    final                          shift and go to state 398
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 324

    (84) claveValor -> LIZQ expMap LDER .

    DOSPUNTOS       reduce using rule 84 (claveValor -> LIZQ expMap LDER .)
    COMA            reduce using rule 84 (claveValor -> LIZQ expMap LDER .)
    LDER            reduce using rule 84 (claveValor -> LIZQ expMap LDER .)


state 325

    (71) expMap -> claveValor DOSPUNTOS claveValor .
    (72) expMap -> claveValor DOSPUNTOS claveValor . COMA expMap

    LDER            reduce using rule 71 (expMap -> claveValor DOSPUNTOS claveValor .)
    COMA            shift and go to state 399


state 326

    (78) claveValor -> CIZQ expListDynamic CDER .

    DOSPUNTOS       reduce using rule 78 (claveValor -> CIZQ expListDynamic CDER .)
    COMA            reduce using rule 78 (claveValor -> CIZQ expListDynamic CDER .)
    LDER            reduce using rule 78 (claveValor -> CIZQ expListDynamic CDER .)


state 327

    (79) claveValor -> CIZQ expListSet CDER .

    DOSPUNTOS       reduce using rule 79 (claveValor -> CIZQ expListSet CDER .)
    COMA            reduce using rule 79 (claveValor -> CIZQ expListSet CDER .)
    LDER            reduce using rule 79 (claveValor -> CIZQ expListSet CDER .)


state 328

    (150) expListDynamic -> STRING COMA . expListDynamic
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 357

state 329

    (151) expListDynamic -> ENTERO COMA . expListDynamic
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 368

state 330

    (152) expListDynamic -> DOUBLE COMA . expListDynamic
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 371

state 331

    (153) expListDynamic -> BOOL COMA . expListDynamic
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 375

state 332

    (155) expListDynamic -> VARIABLE COMA . expListDynamic
    (161) expListSet -> VARIABLE COMA . expListSet
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet

    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 259
    SETFROM         shift and go to state 154

    expListDynamic                 shift and go to state 363
    expListSet                     shift and go to state 364

state 333

    (81) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (82) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 400
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 401

state 334

    (231) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 402


state 335

    (189) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (190) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (191) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER sentenciasElseIf sentenciaElse
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 404
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    expresionBool                  shift and go to state 6
    final                          shift and go to state 403
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 336

    (184) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 184 (imprimir -> PRINT PIZQ expresion PDER .)


state 337

    (185) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 185 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 338

    (187) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 187 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 339

    (188) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 188 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 340

    (243) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 243 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 243 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 243 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 243 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 341

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING

    VARIABLE        shift and go to state 406
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 47
    STRING          shift and go to state 177

    expresionBoolFor               shift and go to state 405
    valorDouble                    shift and go to state 407
    valorBool                      shift and go to state 408
    negacionBool                   shift and go to state 409
    comparacionBool                shift and go to state 410
    valorInt                       shift and go to state 174
    expresionBool                  shift and go to state 411
    valor                          shift and go to state 37

state 342

    (216) asignacionFor -> VARIABLE IGUAL . expresionInt
    (217) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228
    DOUBLE          shift and go to state 194

    expresionInt                   shift and go to state 412
    expresionDouble                shift and go to state 413
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 193

state 343

    (209) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 414


state 344

    (210) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 415


state 345

    (211) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 416


state 346

    (212) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (213) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 417


state 347

    (214) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (215) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 418


state 348

    (94) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (95) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 419


state 349

    (98) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (99) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 420


state 350

    (102) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (103) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 421


state 351

    (106) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (107) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 422


state 352

    (109) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (110) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 423


state 353

    (113) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (114) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 424


state 354

    (117) expresionLista -> LIST MENOR SET MAYOR . VARIABLE
    (118) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 425


state 355

    (121) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE
    (122) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 426


state 356

    (129) expListString -> STRING COMA expListString .

    CDER            reduce using rule 129 (expListString -> STRING COMA expListString .)


state 357

    (150) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 150 (expListDynamic -> STRING COMA expListDynamic .)


state 358

    (130) expListString -> VARIABLE .
    (131) expListString -> VARIABLE . COMA expListString
    (154) expListDynamic -> VARIABLE .
    (155) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 130 (expListString -> VARIABLE .)
    CDER            reduce using rule 130 (expListString -> VARIABLE .)
    COMA            shift and go to state 427

  ! CDER            [ reduce using rule 154 (expListDynamic -> VARIABLE .) ]


state 359

    (131) expListString -> VARIABLE COMA expListString .

    CDER            reduce using rule 131 (expListString -> VARIABLE COMA expListString .)


state 360

    (135) expListInt -> VARIABLE COMA expListInt .

    CDER            reduce using rule 135 (expListInt -> VARIABLE COMA expListInt .)


state 361

    (141) expListNum -> VARIABLE COMA expListNum .

    CDER            reduce using rule 141 (expListNum -> VARIABLE COMA expListNum .)


state 362

    (145) expListBool -> VARIABLE COMA expListBool .

    CDER            reduce using rule 145 (expListBool -> VARIABLE COMA expListBool .)


state 363

    (155) expListDynamic -> VARIABLE COMA expListDynamic .

    CDER            reduce using rule 155 (expListDynamic -> VARIABLE COMA expListDynamic .)


state 364

    (161) expListSet -> VARIABLE COMA expListSet .

    CDER            reduce using rule 161 (expListSet -> VARIABLE COMA expListSet .)


state 365

    (167) expListMap -> VARIABLE COMA expListMap .

    CDER            reduce using rule 167 (expListMap -> VARIABLE COMA expListMap .)


state 366

    (133) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 133 (expListInt -> ENTERO COMA expListInt .)


state 367

    (138) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 138 (expListNum -> ENTERO COMA expListNum .)


state 368

    (151) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 151 (expListDynamic -> ENTERO COMA expListDynamic .)


state 369

    (134) expListInt -> VARIABLE .
    (135) expListInt -> VARIABLE . COMA expListInt
    (140) expListNum -> VARIABLE .
    (141) expListNum -> VARIABLE . COMA expListNum
    (154) expListDynamic -> VARIABLE .
    (155) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 134 (expListInt -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 134 (expListInt -> VARIABLE .)
    CDER            reduce using rule 134 (expListInt -> VARIABLE .)
    COMA            shift and go to state 428

  ! CDER            [ reduce using rule 140 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 154 (expListDynamic -> VARIABLE .) ]


state 370

    (139) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 139 (expListNum -> DOUBLE COMA expListNum .)


state 371

    (152) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 152 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 372

    (136) expListNum -> ENTERO .
    (138) expListNum -> ENTERO . COMA expListNum
    (147) expListDynamic -> ENTERO .
    (151) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 136 (expListNum -> ENTERO .)
    CDER            reduce using rule 136 (expListNum -> ENTERO .)
    COMA            shift and go to state 429

  ! CDER            [ reduce using rule 147 (expListDynamic -> ENTERO .) ]


state 373

    (140) expListNum -> VARIABLE .
    (141) expListNum -> VARIABLE . COMA expListNum
    (154) expListDynamic -> VARIABLE .
    (155) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 140 (expListNum -> VARIABLE .)
    CDER            reduce using rule 140 (expListNum -> VARIABLE .)
    COMA            shift and go to state 430

  ! CDER            [ reduce using rule 154 (expListDynamic -> VARIABLE .) ]


state 374

    (143) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 143 (expListBool -> BOOL COMA expListBool .)


state 375

    (153) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 153 (expListDynamic -> BOOL COMA expListDynamic .)


state 376

    (144) expListBool -> VARIABLE .
    (145) expListBool -> VARIABLE . COMA expListBool
    (154) expListDynamic -> VARIABLE .
    (155) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 144 (expListBool -> VARIABLE .)
    CDER            reduce using rule 144 (expListBool -> VARIABLE .)
    COMA            shift and go to state 431

  ! CDER            [ reduce using rule 154 (expListDynamic -> VARIABLE .) ]


state 377

    (156) expListSet -> SETFROM PIZQ CIZQ . CDER PDER
    (157) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (158) expListSet -> SETFROM PIZQ CIZQ . CDER PDER COMA expListSet
    (159) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER COMA expListSet
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 432
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 433

state 378

    (164) expListMap -> LIZQ LDER COMA . expListMap
    (162) expListMap -> . LIZQ LDER
    (163) expListMap -> . LIZQ expMap LDER
    (164) expListMap -> . LIZQ LDER COMA expListMap
    (165) expListMap -> . LIZQ expMap LDER COMA expListMap
    (166) expListMap -> . VARIABLE
    (167) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 155
    VARIABLE        shift and go to state 435

    expListMap                     shift and go to state 434

state 379

    (163) expListMap -> LIZQ expMap LDER .
    (165) expListMap -> LIZQ expMap LDER . COMA expListMap

    CDER            reduce using rule 163 (expListMap -> LIZQ expMap LDER .)
    COMA            shift and go to state 436


state 380

    (87) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (89) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 437


state 381

    (67) expresionMap -> MAP VARIABLE IGUAL LIZQ . LDER
    (69) expresionMap -> MAP VARIABLE IGUAL LIZQ . expMap LDER
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 438
    VARIABLE        shift and go to state 126
    STRING          shift and go to state 127
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 129
    BOOL            shift and go to state 130
    CIZQ            shift and go to state 131
    SETFROM         shift and go to state 133
    LIZQ            shift and go to state 122
    NEWLIST         shift and go to state 52

    expMap                         shift and go to state 439
    claveValor                     shift and go to state 125
    expresionNewList               shift and go to state 132

state 382

    (92) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 92 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOSPUNTOS       reduce using rule 92 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    COMA            reduce using rule 92 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LDER            reduce using rule 92 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 383

    (86) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 440


state 384

    (88) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 441


state 385

    (154) expListDynamic -> VARIABLE .
    (155) expListDynamic -> VARIABLE . COMA expListDynamic

    CDER            reduce using rule 154 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 442


state 386

    (56) expresionSwitch -> SWITCH PIZQ VARIABLE PDER . LIZQ cases LDER

    LIZQ            shift and go to state 443


state 387

    (251) valorString -> STRING CIZQ ENTERO CDER .

    SUMA            reduce using rule 251 (valorString -> STRING CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 251 (valorString -> STRING CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 251 (valorString -> STRING CIZQ ENTERO CDER .)
    PDER            reduce using rule 251 (valorString -> STRING CIZQ ENTERO CDER .)


state 388

    (234) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 389

    (237) expresionBool -> valorDouble comparadorMat VARIABLE .
    (258) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 258 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 258 (valorInt -> VARIABLE .) ]


state 390

    (236) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (258) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 258 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 258 (valorInt -> VARIABLE .) ]


state 391

    (235) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 392

    (255) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 255 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 255 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 255 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 255 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 393

    (256) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 444


state 394

    (126) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .
    (90) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 90 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)
    PUNTOYCOMA      reduce using rule 90 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)

  ! PUNTOYCOMA      [ reduce using rule 126 (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .) ]


state 395

    (127) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 445


state 396

    (203) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 203 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 203 (expresion -> valor operadorMat expresion .)


state 397

    (229) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 123
    VARIABLE        shift and go to state 448
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 451
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 452
    MAP             shift and go to state 51
    LIZQ            shift and go to state 446
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 453
    STRING          shift and go to state 454
    ENTERO          shift and go to state 450
    DOUBLE          shift and go to state 455

    expresionBool                  shift and go to state 6
    final                          shift and go to state 447
    expMap                         shift and go to state 124
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 449
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    claveValor                     shift and go to state 125
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 398

    (230) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    MAP             reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 230 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 399

    (72) expMap -> claveValor DOSPUNTOS claveValor COMA . expMap
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 126
    STRING          shift and go to state 127
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 129
    BOOL            shift and go to state 130
    CIZQ            shift and go to state 131
    SETFROM         shift and go to state 133
    LIZQ            shift and go to state 122
    NEWLIST         shift and go to state 52

    claveValor                     shift and go to state 125
    expMap                         shift and go to state 456
    expresionNewList               shift and go to state 132

state 400

    (81) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 457


state 401

    (82) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 458


state 402

    (231) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 459


state 403

    (189) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 189 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 404

    (190) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (191) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER sentenciasElseIf
    (192) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER sentenciasElseIf sentenciaElse
    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 123
    VARIABLE        shift and go to state 448
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 451
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 452
    MAP             shift and go to state 51
    LIZQ            shift and go to state 446
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 453
    STRING          shift and go to state 454
    ENTERO          shift and go to state 450
    DOUBLE          shift and go to state 455

    expresionBool                  shift and go to state 6
    final                          shift and go to state 460
    expMap                         shift and go to state 124
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 449
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    claveValor                     shift and go to state 125
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 405

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 461


state 406

    (219) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (233) valorBool -> VARIABLE .
    (258) valorInt -> VARIABLE .
    (235) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (236) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (200) valor -> VARIABLE .
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 233 (valorBool -> VARIABLE .)
    AND             reduce using rule 233 (valorBool -> VARIABLE .)
    OR              reduce using rule 233 (valorBool -> VARIABLE .)
    IS              reduce using rule 200 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 200 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

  ! DIGUAL          [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 462

state 407

    (218) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (221) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (234) expresionBool -> valorDouble . comparadorMat expresionDouble
    (237) expresionBool -> valorDouble . comparadorMat VARIABLE
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

    comparadorMat                  shift and go to state 463

state 408

    (222) expresionBoolFor -> valorBool .
    (238) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 222 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 238 (expresionBool -> valorBool .)
    OR              reduce using rule 238 (expresionBool -> valorBool .)


state 409

    (223) expresionBoolFor -> negacionBool .
    (239) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 223 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 239 (expresionBool -> negacionBool .)
    OR              reduce using rule 239 (expresionBool -> negacionBool .)


state 410

    (224) expresionBoolFor -> comparacionBool .
    (240) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 224 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 240 (expresionBool -> comparacionBool .)
    OR              reduce using rule 240 (expresionBool -> comparacionBool .)


state 411

    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 412

    (216) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 216 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 413

    (217) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 217 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 414

    (209) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    expresionInt                   shift and go to state 464
    valorInt                       shift and go to state 226

state 415

    (210) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    expresionDouble                shift and go to state 465
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 174

state 416

    (211) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228

    expresionDouble                shift and go to state 466
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 174

state 417

    (212) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (213) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228
    DOUBLE          shift and go to state 194

    expresionInt                   shift and go to state 467
    expresionDouble                shift and go to state 468
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 193

state 418

    (214) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (215) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 228
    DOUBLE          shift and go to state 194

    expresionInt                   shift and go to state 469
    expresionDouble                shift and go to state 470
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 193

state 419

    (94) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (95) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (96) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 94 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 471


state 420

    (98) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (99) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (100) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 98 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 472


state 421

    (102) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (103) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (104) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 102 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 473


state 422

    (106) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (107) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (108) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 106 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 474


state 423

    (109) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (110) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (111) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 109 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 475


state 424

    (113) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (114) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 113 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 476


state 425

    (117) expresionLista -> LIST MENOR SET MAYOR VARIABLE .
    (118) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL CIZQ expListSet CDER
    (119) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 117 (expresionLista -> LIST MENOR SET MAYOR VARIABLE .)
    IGUAL           shift and go to state 477


state 426

    (121) expresionLista -> LIST MENOR MAP MAYOR VARIABLE .
    (122) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL CIZQ expListMap CDER
    (123) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 121 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE .)
    IGUAL           shift and go to state 478


state 427

    (131) expListString -> VARIABLE COMA . expListString
    (155) expListDynamic -> VARIABLE COMA . expListDynamic
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 149
    VARIABLE        shift and go to state 358
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258

    expListString                  shift and go to state 359
    expListDynamic                 shift and go to state 363

state 428

    (135) expListInt -> VARIABLE COMA . expListInt
    (141) expListNum -> VARIABLE COMA . expListNum
    (155) expListDynamic -> VARIABLE COMA . expListDynamic
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 151
    VARIABLE        shift and go to state 369
    DOUBLE          shift and go to state 152
    STRING          shift and go to state 255
    BOOL            shift and go to state 258

    expListInt                     shift and go to state 360
    expListNum                     shift and go to state 361
    expListDynamic                 shift and go to state 363

state 429

    (138) expListNum -> ENTERO COMA . expListNum
    (151) expListDynamic -> ENTERO COMA . expListDynamic
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 372
    DOUBLE          shift and go to state 152
    VARIABLE        shift and go to state 373
    STRING          shift and go to state 255
    BOOL            shift and go to state 258

    expListNum                     shift and go to state 367
    expListDynamic                 shift and go to state 368

state 430

    (141) expListNum -> VARIABLE COMA . expListNum
    (155) expListDynamic -> VARIABLE COMA . expListDynamic
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 372
    DOUBLE          shift and go to state 152
    VARIABLE        shift and go to state 373
    STRING          shift and go to state 255
    BOOL            shift and go to state 258

    expListNum                     shift and go to state 361
    expListDynamic                 shift and go to state 363

state 431

    (145) expListBool -> VARIABLE COMA . expListBool
    (155) expListDynamic -> VARIABLE COMA . expListDynamic
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 153
    VARIABLE        shift and go to state 376
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257

    expListBool                    shift and go to state 362
    expListDynamic                 shift and go to state 363

state 432

    (156) expListSet -> SETFROM PIZQ CIZQ CDER . PDER
    (158) expListSet -> SETFROM PIZQ CIZQ CDER . PDER COMA expListSet

    PDER            shift and go to state 479


state 433

    (157) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (159) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER COMA expListSet

    CDER            shift and go to state 480


state 434

    (164) expListMap -> LIZQ LDER COMA expListMap .

    CDER            reduce using rule 164 (expListMap -> LIZQ LDER COMA expListMap .)


state 435

    (166) expListMap -> VARIABLE .
    (167) expListMap -> VARIABLE . COMA expListMap

    CDER            reduce using rule 166 (expListMap -> VARIABLE .)
    COMA            shift and go to state 481


state 436

    (165) expListMap -> LIZQ expMap LDER COMA . expListMap
    (162) expListMap -> . LIZQ LDER
    (163) expListMap -> . LIZQ expMap LDER
    (164) expListMap -> . LIZQ LDER COMA expListMap
    (165) expListMap -> . LIZQ expMap LDER COMA expListMap
    (166) expListMap -> . VARIABLE
    (167) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 155
    VARIABLE        shift and go to state 435

    expListMap                     shift and go to state 482

state 437

    (87) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (89) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 483


state 438

    (67) expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .

    PUNTOYCOMA      reduce using rule 67 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)


state 439

    (69) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap . LDER

    LDER            shift and go to state 484


state 440

    (86) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 86 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 441

    (88) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 485


state 442

    (155) expListDynamic -> VARIABLE COMA . expListDynamic
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 363

state 443

    (56) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ . cases LDER
    (57) cases -> . caseString
    (58) cases -> . caseInt
    (59) cases -> . caseBool
    (60) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (61) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
    (62) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (63) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
    (64) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (65) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    CASE            shift and go to state 490

    cases                          shift and go to state 486
    caseString                     shift and go to state 487
    caseInt                        shift and go to state 488
    caseBool                       shift and go to state 489

state 444

    (256) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 491


state 445

    (127) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 492


state 446

    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (83) claveValor -> LIZQ . LDER
    (84) claveValor -> LIZQ . expMap LDER
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 493
    VARIABLE        shift and go to state 126
    STRING          shift and go to state 127
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 129
    BOOL            shift and go to state 130
    CIZQ            shift and go to state 131
    SETFROM         shift and go to state 133
    LIZQ            shift and go to state 122
    NEWLIST         shift and go to state 52

    expMap                         shift and go to state 494
    claveValor                     shift and go to state 125
    expresionNewList               shift and go to state 132

state 447

    (229) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 495


state 448

    (39) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (40) final -> VARIABLE . DSUMA PUNTOYCOMA
    (41) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (42) final -> VARIABLE . DRESTA PUNTOYCOMA
    (235) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (236) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (219) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (255) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (125) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (126) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (90) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (73) claveValor -> VARIABLE .
    (176) asignacionSimple -> VARIABLE . IGUAL expresion
    (258) valorInt -> VARIABLE .
    (247) valorString -> VARIABLE .
    (233) valorBool -> VARIABLE .
    (200) valor -> VARIABLE .
    (271) comparadorMat -> . DIGUAL
    (272) comparadorMat -> . NOIGUAL
    (273) comparadorMat -> . MAYOR
    (274) comparadorMat -> . MENOR
    (275) comparadorMat -> . MAYIGUAL
    (276) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 247 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 247 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 233 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 81
    DRESTA          shift and go to state 82
    FUNCIONSUBSTRING shift and go to state 84
    CIZQ            shift and go to state 85
    FUNCIONTAKE     shift and go to state 86
    FUNCIONRANGE    shift and go to state 87
    DOSPUNTOS       reduce using rule 73 (claveValor -> VARIABLE .)
    IGUAL           shift and go to state 88
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 247 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 233 (valorBool -> VARIABLE .)
    AND             reduce using rule 233 (valorBool -> VARIABLE .)
    OR              reduce using rule 233 (valorBool -> VARIABLE .)
    IS              reduce using rule 200 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 200 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 89
    NOIGUAL         shift and go to state 90
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 92
    MAYIGUAL        shift and go to state 93
    MENIGUAL        shift and go to state 94

  ! SUMA            [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 247 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 247 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 83

state 449

    (45) final -> expresionNewList . PUNTOYCOMA
    (46) final -> expresionNewList . PUNTOYCOMA final
    (80) claveValor -> expresionNewList .

    PUNTOYCOMA      shift and go to state 96
    DOSPUNTOS       reduce using rule 80 (claveValor -> expresionNewList .)


state 450

    (75) claveValor -> ENTERO .
    (257) valorInt -> ENTERO .
    (199) valor -> ENTERO .

    DOSPUNTOS       reduce using rule 75 (claveValor -> ENTERO .)
    SUMA            reduce using rule 257 (valorInt -> ENTERO .)
    RESTA           reduce using rule 257 (valorInt -> ENTERO .)
    MULTI           reduce using rule 257 (valorInt -> ENTERO .)
    DIV             reduce using rule 257 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 257 (valorInt -> ENTERO .)
    MOD             reduce using rule 257 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 257 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 257 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 257 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 257 (valorInt -> ENTERO .)
    MENOR           reduce using rule 257 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 257 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 257 (valorInt -> ENTERO .)
    IS              reduce using rule 199 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 199 (valor -> ENTERO .)


state 451

    (97) expresionLista -> CIZQ . expListString CDER
    (101) expresionLista -> CIZQ . expListInt CDER
    (105) expresionLista -> CIZQ . expListNum CDER
    (112) expresionLista -> CIZQ . expListBool CDER
    (116) expresionLista -> CIZQ . expListDynamic CDER
    (120) expresionLista -> CIZQ . expListSet CDER
    (124) expresionLista -> CIZQ . expListMap CDER
    (93) expresionNewList -> CIZQ . CDER
    (78) claveValor -> CIZQ . expListDynamic CDER
    (79) claveValor -> CIZQ . expListSet CDER
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet
    (162) expListMap -> . LIZQ LDER
    (163) expListMap -> . LIZQ expMap LDER
    (164) expListMap -> . LIZQ LDER COMA expListMap
    (165) expListMap -> . LIZQ expMap LDER COMA expListMap
    (166) expListMap -> . VARIABLE
    (167) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 142
    STRING          shift and go to state 149
    VARIABLE        shift and go to state 150
    ENTERO          shift and go to state 151
    DOUBLE          shift and go to state 152
    BOOL            shift and go to state 153
    SETFROM         shift and go to state 154
    LIZQ            shift and go to state 155

    expListString                  shift and go to state 141
    expListInt                     shift and go to state 143
    expListNum                     shift and go to state 144
    expListBool                    shift and go to state 145
    expListDynamic                 shift and go to state 496
    expListSet                     shift and go to state 497
    expListMap                     shift and go to state 148

state 452

    (86) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (88) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (81) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (82) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 498


state 453

    (183) declaracionSimple -> BOOL . VARIABLE
    (77) claveValor -> BOOL .
    (232) valorBool -> BOOL .

    VARIABLE        shift and go to state 161
    DOSPUNTOS       reduce using rule 77 (claveValor -> BOOL .)
    PUNTOYCOMA      reduce using rule 232 (valorBool -> BOOL .)
    AND             reduce using rule 232 (valorBool -> BOOL .)
    OR              reduce using rule 232 (valorBool -> BOOL .)


state 454

    (74) claveValor -> STRING .
    (246) valorString -> STRING .
    (251) valorString -> STRING . CIZQ ENTERO CDER
    (202) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    DOSPUNTOS       reduce using rule 74 (claveValor -> STRING .)
    SUMA            reduce using rule 246 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 246 (valorString -> STRING .)
    CIZQ            shift and go to state 162
    IS              reduce using rule 202 (valor -> STRING .)
    ISNEGADO        reduce using rule 202 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 246 (valorString -> STRING .) ]


state 455

    (76) claveValor -> DOUBLE .
    (261) valorDouble -> DOUBLE .
    (201) valor -> DOUBLE .

    DOSPUNTOS       reduce using rule 76 (claveValor -> DOUBLE .)
    SUMA            reduce using rule 261 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 261 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 261 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 261 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 261 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 261 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 261 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 261 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 261 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 261 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 261 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 261 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 261 (valorDouble -> DOUBLE .)
    IS              reduce using rule 201 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 201 (valor -> DOUBLE .)


state 456

    (72) expMap -> claveValor DOSPUNTOS claveValor COMA expMap .

    LDER            reduce using rule 72 (expMap -> claveValor DOSPUNTOS claveValor COMA expMap .)


state 457

    (81) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    DOSPUNTOS       reduce using rule 81 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            reduce using rule 81 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    LDER            reduce using rule 81 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 458

    (82) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 499


state 459

    (231) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 176
    STRING          shift and go to state 177

    expresionBool                  shift and go to state 500
    valorDouble                    shift and go to state 170
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    valor                          shift and go to state 37
    valorInt                       shift and go to state 174

state 460

    (190) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER
    (191) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER sentenciasElseIf
    (192) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER sentenciasElseIf sentenciaElse

    LDER            shift and go to state 501


state 461

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 502


state 462

    (219) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (220) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (235) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (236) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 503
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    expresionDouble                shift and go to state 504
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 174

state 463

    (218) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (221) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (234) expresionBool -> valorDouble comparadorMat . expresionDouble
    (237) expresionBool -> valorDouble comparadorMat . VARIABLE
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 506
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 505
    valorInt                       shift and go to state 174

state 464

    (209) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 209 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 465

    (210) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 210 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 466

    (211) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 211 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 467

    (212) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 212 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 468

    (213) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 213 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 469

    (214) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 214 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 470

    (215) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 215 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 471

    (95) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (96) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 507
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 508

state 472

    (99) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (100) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 509
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 510

state 473

    (103) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (104) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 511
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 512

state 474

    (107) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (108) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 513
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 514

state 475

    (110) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (111) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 515
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 516

state 476

    (114) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (115) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 517
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 518

state 477

    (118) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . CIZQ expListSet CDER
    (119) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 519
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 520

state 478

    (122) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . CIZQ expListMap CDER
    (123) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . expresionNewList
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 521
    NEWLIST         shift and go to state 52

    expresionNewList               shift and go to state 522

state 479

    (156) expListSet -> SETFROM PIZQ CIZQ CDER PDER .
    (158) expListSet -> SETFROM PIZQ CIZQ CDER PDER . COMA expListSet

    CDER            reduce using rule 156 (expListSet -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            shift and go to state 523


state 480

    (157) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (159) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER COMA expListSet

    PDER            shift and go to state 524


state 481

    (167) expListMap -> VARIABLE COMA . expListMap
    (162) expListMap -> . LIZQ LDER
    (163) expListMap -> . LIZQ expMap LDER
    (164) expListMap -> . LIZQ LDER COMA expListMap
    (165) expListMap -> . LIZQ expMap LDER COMA expListMap
    (166) expListMap -> . VARIABLE
    (167) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 155
    VARIABLE        shift and go to state 435

    expListMap                     shift and go to state 365

state 482

    (165) expListMap -> LIZQ expMap LDER COMA expListMap .

    CDER            reduce using rule 165 (expListMap -> LIZQ expMap LDER COMA expListMap .)


state 483

    (87) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (89) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 525
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 526

state 484

    (69) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 69 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)


state 485

    (88) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 88 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 486

    (56) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases . LDER

    LDER            shift and go to state 527


state 487

    (57) cases -> caseString .

    LDER            reduce using rule 57 (cases -> caseString .)


state 488

    (58) cases -> caseInt .

    LDER            reduce using rule 58 (cases -> caseInt .)


state 489

    (59) cases -> caseBool .

    LDER            reduce using rule 59 (cases -> caseBool .)


state 490

    (60) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (61) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
    (62) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (63) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
    (64) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (65) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    STRING          shift and go to state 528
    ENTERO          shift and go to state 529
    BOOL            shift and go to state 530


state 491

    (256) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 256 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 256 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 256 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 256 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 492

    (127) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 127 (expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .)


state 493

    (68) expresionMap -> LIZQ LDER .
    (83) claveValor -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 68 (expresionMap -> LIZQ LDER .)
    DOSPUNTOS       reduce using rule 83 (claveValor -> LIZQ LDER .)


state 494

    (70) expresionMap -> LIZQ expMap . LDER
    (84) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 531


state 495

    (229) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 229 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 496

    (116) expresionLista -> CIZQ expListDynamic . CDER
    (78) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 532


state 497

    (120) expresionLista -> CIZQ expListSet . CDER
    (79) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 533


state 498

    (86) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (88) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (81) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (82) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 534


state 499

    (82) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    DOSPUNTOS       reduce using rule 82 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            reduce using rule 82 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    LDER            reduce using rule 82 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 500

    (231) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PDER            shift and go to state 535
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 501

    (190) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .
    (191) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER . sentenciasElseIf
    (192) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER . sentenciasElseIf sentenciaElse
    (193) sentenciasElseIf -> . sentenciaElseIf
    (194) sentenciasElseIf -> . sentenciaElseIf sentenciasElseIf
    (195) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (196) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER

  ! shift/reduce conflict for ELSEIF resolved as shift
    PUNTOYCOMA      reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          shift and go to state 538

  ! ELSEIF          [ reduce using rule 190 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .) ]

    sentenciasElseIf               shift and go to state 536
    sentenciaElseIf                shift and go to state 537

state 502

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 539
    DRESTA          shift and go to state 540


state 503

    (220) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (236) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (258) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 220 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 220 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 236 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 258 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 258 (valorInt -> VARIABLE .) ]


state 504

    (219) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (235) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 219 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 235 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 505

    (218) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (234) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 218 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 234 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 506

    (221) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (237) expresionBool -> valorDouble comparadorMat VARIABLE .
    (258) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 221 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 221 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 237 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 258 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 258 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 258 (valorInt -> VARIABLE .)
    DIV             reduce using rule 258 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 258 (valorInt -> VARIABLE .)
    MOD             reduce using rule 258 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 258 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 258 (valorInt -> VARIABLE .) ]


state 507

    (95) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (93) expresionNewList -> CIZQ . CDER
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString

    CDER            shift and go to state 142
    STRING          shift and go to state 543
    VARIABLE        shift and go to state 541

    expListString                  shift and go to state 542

state 508

    (96) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 96 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 509

    (99) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (93) expresionNewList -> CIZQ . CDER
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt

    CDER            shift and go to state 142
    ENTERO          shift and go to state 546
    VARIABLE        shift and go to state 544

    expListInt                     shift and go to state 545

state 510

    (100) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 100 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 511

    (103) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (93) expresionNewList -> CIZQ . CDER
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 142
    ENTERO          shift and go to state 549
    DOUBLE          shift and go to state 550
    VARIABLE        shift and go to state 547

    expListNum                     shift and go to state 548

state 512

    (104) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 104 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 513

    (107) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (93) expresionNewList -> CIZQ . CDER
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 142
    ENTERO          shift and go to state 549
    DOUBLE          shift and go to state 550
    VARIABLE        shift and go to state 547

    expListNum                     shift and go to state 551

state 514

    (108) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 108 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 515

    (110) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (93) expresionNewList -> CIZQ . CDER
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool

    CDER            shift and go to state 142
    BOOL            shift and go to state 554
    VARIABLE        shift and go to state 552

    expListBool                    shift and go to state 553

state 516

    (111) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 517

    (114) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (93) expresionNewList -> CIZQ . CDER
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 142
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 555

state 518

    (115) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 115 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 519

    (118) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ . expListSet CDER
    (93) expresionNewList -> CIZQ . CDER
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 142
    SETFROM         shift and go to state 154
    VARIABLE        shift and go to state 556

    expListSet                     shift and go to state 557

state 520

    (119) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 119 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .)


state 521

    (122) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ . expListMap CDER
    (93) expresionNewList -> CIZQ . CDER
    (162) expListMap -> . LIZQ LDER
    (163) expListMap -> . LIZQ expMap LDER
    (164) expListMap -> . LIZQ LDER COMA expListMap
    (165) expListMap -> . LIZQ expMap LDER COMA expListMap
    (166) expListMap -> . VARIABLE
    (167) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 142
    LIZQ            shift and go to state 155
    VARIABLE        shift and go to state 435

    expListMap                     shift and go to state 558

state 522

    (123) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 123 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .)


state 523

    (158) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA . expListSet
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 154
    VARIABLE        shift and go to state 556

    expListSet                     shift and go to state 559

state 524

    (157) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (159) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER . COMA expListSet

    CDER            reduce using rule 157 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            shift and go to state 560


state 525

    (87) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 561


state 526

    (89) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 562


state 527

    (56) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .

    PUNTOYCOMA      reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    $end            reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    LDER            reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    VARIABLE        reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    INT             reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    DOUBLER         reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    NUM             reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    STRINGR         reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    BOOLR           reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    DYNAMIC         reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    VAR             reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    WHILE           reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    DO              reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    IF              reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    PRINT           reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    FUNCIONSTDIN    reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    FUNCIONSTDOUT   reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    NOT             reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    FOR             reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    LIST            reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    CIZQ            reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    NEWLIST         reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    SET             reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    SETFROM         reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    MAP             reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    LIZQ            reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    SWITCH          reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    BOOL            reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    ENTERO          reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    DOUBLE          reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    STRING          reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    BREAK           reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    ELSEIF          reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)
    ELSE            reduce using rule 56 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)


state 528

    (60) caseString -> CASE STRING . DOSPUNTOS final BREAK PUNTOYCOMA
    (61) caseString -> CASE STRING . DOSPUNTOS final BREAK PUNTOYCOMA caseString

    DOSPUNTOS       shift and go to state 563


state 529

    (62) caseInt -> CASE ENTERO . DOSPUNTOS final BREAK PUNTOYCOMA
    (63) caseInt -> CASE ENTERO . DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    DOSPUNTOS       shift and go to state 564


state 530

    (64) caseBool -> CASE BOOL . DOSPUNTOS final BREAK PUNTOYCOMA
    (65) caseBool -> CASE BOOL . DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    DOSPUNTOS       shift and go to state 565


state 531

    (70) expresionMap -> LIZQ expMap LDER .
    (84) claveValor -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 70 (expresionMap -> LIZQ expMap LDER .)
    DOSPUNTOS       reduce using rule 84 (claveValor -> LIZQ expMap LDER .)


state 532

    (116) expresionLista -> CIZQ expListDynamic CDER .
    (78) claveValor -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 116 (expresionLista -> CIZQ expListDynamic CDER .)
    DOSPUNTOS       reduce using rule 78 (claveValor -> CIZQ expListDynamic CDER .)


state 533

    (120) expresionLista -> CIZQ expListSet CDER .
    (79) claveValor -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 120 (expresionLista -> CIZQ expListSet CDER .)
    DOSPUNTOS       reduce using rule 79 (claveValor -> CIZQ expListSet CDER .)


state 534

    (86) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (88) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (81) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (82) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (146) expListDynamic -> . STRING
    (147) expListDynamic -> . ENTERO
    (148) expListDynamic -> . DOUBLE
    (149) expListDynamic -> . BOOL
    (150) expListDynamic -> . STRING COMA expListDynamic
    (151) expListDynamic -> . ENTERO COMA expListDynamic
    (152) expListDynamic -> . DOUBLE COMA expListDynamic
    (153) expListDynamic -> . BOOL COMA expListDynamic
    (154) expListDynamic -> . VARIABLE
    (155) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 566
    STRING          shift and go to state 255
    ENTERO          shift and go to state 256
    DOUBLE          shift and go to state 257
    BOOL            shift and go to state 258
    VARIABLE        shift and go to state 385

    expListDynamic                 shift and go to state 567

state 535

    (231) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 231 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 536

    (191) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .
    (192) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf . sentenciaElse
    (197) sentenciaElse -> . ELSE final
    (198) sentenciaElse -> . ELSE LIZQ final LDER

  ! shift/reduce conflict for ELSE resolved as shift
    PUNTOYCOMA      reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    VARIABLE        reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    INT             reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    DOUBLER         reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    NUM             reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    STRINGR         reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    BOOLR           reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    DYNAMIC         reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    VAR             reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    WHILE           reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    DO              reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    IF              reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    PRINT           reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    FUNCIONSTDIN    reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    FUNCIONSTDOUT   reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    NOT             reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    FOR             reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    LIST            reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    CIZQ            reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    NEWLIST         reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    SET             reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    SETFROM         reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    MAP             reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    LIZQ            reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    SWITCH          reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    BOOL            reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    ENTERO          reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    DOUBLE          reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    STRING          reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    $end            reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    LDER            reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    BREAK           reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    ELSEIF          reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .)
    ELSE            shift and go to state 569

  ! ELSE            [ reduce using rule 191 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf .) ]

    sentenciaElse                  shift and go to state 568

state 537

    (193) sentenciasElseIf -> sentenciaElseIf .
    (194) sentenciasElseIf -> sentenciaElseIf . sentenciasElseIf
    (193) sentenciasElseIf -> . sentenciaElseIf
    (194) sentenciasElseIf -> . sentenciaElseIf sentenciasElseIf
    (195) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (196) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER

  ! shift/reduce conflict for ELSEIF resolved as shift
    $end            reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    LDER            reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    PUNTOYCOMA      reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    VARIABLE        reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    INT             reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    DOUBLER         reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    NUM             reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    STRINGR         reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    BOOLR           reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    DYNAMIC         reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    VAR             reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    WHILE           reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    DO              reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    IF              reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    PRINT           reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    FUNCIONSTDIN    reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    FUNCIONSTDOUT   reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    NOT             reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    FOR             reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    LIST            reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    CIZQ            reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    NEWLIST         reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    SET             reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    SETFROM         reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    MAP             reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    LIZQ            reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    SWITCH          reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    BOOL            reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    ENTERO          reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    DOUBLE          reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    STRING          reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    BREAK           reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    ELSE            reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .)
    ELSEIF          shift and go to state 538

  ! ELSEIF          [ reduce using rule 193 (sentenciasElseIf -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 537
    sentenciasElseIf               shift and go to state 570

state 538

    (195) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (196) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 571


state 539

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 572


state 540

    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 573


state 541

    (130) expListString -> VARIABLE .
    (131) expListString -> VARIABLE . COMA expListString

    CDER            reduce using rule 130 (expListString -> VARIABLE .)
    COMA            shift and go to state 574


state 542

    (95) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 575


state 543

    (128) expListString -> STRING .
    (129) expListString -> STRING . COMA expListString

    CDER            reduce using rule 128 (expListString -> STRING .)
    COMA            shift and go to state 576


state 544

    (134) expListInt -> VARIABLE .
    (135) expListInt -> VARIABLE . COMA expListInt

    CDER            reduce using rule 134 (expListInt -> VARIABLE .)
    COMA            shift and go to state 577


state 545

    (99) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 578


state 546

    (132) expListInt -> ENTERO .
    (133) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 132 (expListInt -> ENTERO .)
    COMA            shift and go to state 579


state 547

    (140) expListNum -> VARIABLE .
    (141) expListNum -> VARIABLE . COMA expListNum

    CDER            reduce using rule 140 (expListNum -> VARIABLE .)
    COMA            shift and go to state 580


state 548

    (103) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 581


state 549

    (136) expListNum -> ENTERO .
    (138) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 136 (expListNum -> ENTERO .)
    COMA            shift and go to state 582


state 550

    (137) expListNum -> DOUBLE .
    (139) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 137 (expListNum -> DOUBLE .)
    COMA            shift and go to state 583


state 551

    (107) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 584


state 552

    (144) expListBool -> VARIABLE .
    (145) expListBool -> VARIABLE . COMA expListBool

    CDER            reduce using rule 144 (expListBool -> VARIABLE .)
    COMA            shift and go to state 585


state 553

    (110) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 586


state 554

    (142) expListBool -> BOOL .
    (143) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 142 (expListBool -> BOOL .)
    COMA            shift and go to state 587


state 555

    (114) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 588


state 556

    (160) expListSet -> VARIABLE .
    (161) expListSet -> VARIABLE . COMA expListSet

    CDER            reduce using rule 160 (expListSet -> VARIABLE .)
    COMA            shift and go to state 589


state 557

    (118) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet . CDER

    CDER            shift and go to state 590


state 558

    (122) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap . CDER

    CDER            shift and go to state 591


state 559

    (158) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .

    CDER            reduce using rule 158 (expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .)


state 560

    (159) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA . expListSet
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 154
    VARIABLE        shift and go to state 556

    expListSet                     shift and go to state 592

state 561

    (87) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 87 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 562

    (89) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 593


state 563

    (60) caseString -> CASE STRING DOSPUNTOS . final BREAK PUNTOYCOMA
    (61) caseString -> CASE STRING DOSPUNTOS . final BREAK PUNTOYCOMA caseString
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    final                          shift and go to state 594
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 564

    (62) caseInt -> CASE ENTERO DOSPUNTOS . final BREAK PUNTOYCOMA
    (63) caseInt -> CASE ENTERO DOSPUNTOS . final BREAK PUNTOYCOMA caseInt
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    final                          shift and go to state 595
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 565

    (64) caseBool -> CASE BOOL DOSPUNTOS . final BREAK PUNTOYCOMA
    (65) caseBool -> CASE BOOL DOSPUNTOS . final BREAK PUNTOYCOMA caseBool
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    LIZQ            shift and go to state 39
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    final                          shift and go to state 596
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 566

    (86) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER
    (81) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 597


state 567

    (88) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (82) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 598


state 568

    (192) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .

    PUNTOYCOMA      reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    VARIABLE        reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    INT             reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    DOUBLER         reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    NUM             reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    STRINGR         reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    BOOLR           reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    DYNAMIC         reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    VAR             reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    WHILE           reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    DO              reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    IF              reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    PRINT           reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    FUNCIONSTDIN    reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    FUNCIONSTDOUT   reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    NOT             reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    FOR             reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    LIST            reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    CIZQ            reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    NEWLIST         reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    SET             reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    SETFROM         reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    MAP             reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    LIZQ            reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    SWITCH          reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    BOOL            reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    ENTERO          reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    DOUBLE          reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    STRING          reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    $end            reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    LDER            reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    BREAK           reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    ELSEIF          reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)
    ELSE            reduce using rule 192 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse .)


state 569

    (197) sentenciaElse -> ELSE . final
    (198) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 600
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    final                          shift and go to state 599
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 570

    (194) sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .

    $end            reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    LDER            reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    PUNTOYCOMA      reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    VARIABLE        reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    INT             reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    DOUBLER         reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    NUM             reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    STRINGR         reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    BOOLR           reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    DYNAMIC         reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    VAR             reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    WHILE           reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    DO              reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    IF              reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    PRINT           reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    FUNCIONSTDIN    reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    FUNCIONSTDOUT   reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    NOT             reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    FOR             reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    LIST            reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    CIZQ            reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    NEWLIST         reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    SET             reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    SETFROM         reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    MAP             reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    LIZQ            reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    SWITCH          reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    BOOL            reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    ENTERO          reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    DOUBLE          reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    STRING          reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    BREAK           reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    ELSEIF          reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)
    ELSE            reduce using rule 194 (sentenciasElseIf -> sentenciaElseIf sentenciasElseIf .)


state 571

    (195) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (196) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 175
    NOT             shift and go to state 45
    ENTERO          shift and go to state 176
    STRING          shift and go to state 177

    expresionBool                  shift and go to state 601
    valorDouble                    shift and go to state 170
    valorBool                      shift and go to state 172
    negacionBool                   shift and go to state 173
    comparacionBool                shift and go to state 210
    valor                          shift and go to state 37
    valorInt                       shift and go to state 174

state 572

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (226) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 602
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 603
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 573

    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 604
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 605
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 574

    (131) expListString -> VARIABLE COMA . expListString
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 543
    VARIABLE        shift and go to state 541

    expListString                  shift and go to state 359

state 575

    (95) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 95 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 576

    (129) expListString -> STRING COMA . expListString
    (128) expListString -> . STRING
    (129) expListString -> . STRING COMA expListString
    (130) expListString -> . VARIABLE
    (131) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 543
    VARIABLE        shift and go to state 541

    expListString                  shift and go to state 356

state 577

    (135) expListInt -> VARIABLE COMA . expListInt
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 546
    VARIABLE        shift and go to state 544

    expListInt                     shift and go to state 360

state 578

    (99) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 99 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 579

    (133) expListInt -> ENTERO COMA . expListInt
    (132) expListInt -> . ENTERO
    (133) expListInt -> . ENTERO COMA expListInt
    (134) expListInt -> . VARIABLE
    (135) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 546
    VARIABLE        shift and go to state 544

    expListInt                     shift and go to state 366

state 580

    (141) expListNum -> VARIABLE COMA . expListNum
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 549
    DOUBLE          shift and go to state 550
    VARIABLE        shift and go to state 547

    expListNum                     shift and go to state 361

state 581

    (103) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 103 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 582

    (138) expListNum -> ENTERO COMA . expListNum
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 549
    DOUBLE          shift and go to state 550
    VARIABLE        shift and go to state 547

    expListNum                     shift and go to state 367

state 583

    (139) expListNum -> DOUBLE COMA . expListNum
    (136) expListNum -> . ENTERO
    (137) expListNum -> . DOUBLE
    (138) expListNum -> . ENTERO COMA expListNum
    (139) expListNum -> . DOUBLE COMA expListNum
    (140) expListNum -> . VARIABLE
    (141) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 549
    DOUBLE          shift and go to state 550
    VARIABLE        shift and go to state 547

    expListNum                     shift and go to state 370

state 584

    (107) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 107 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 585

    (145) expListBool -> VARIABLE COMA . expListBool
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 554
    VARIABLE        shift and go to state 552

    expListBool                    shift and go to state 362

state 586

    (110) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 110 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 587

    (143) expListBool -> BOOL COMA . expListBool
    (142) expListBool -> . BOOL
    (143) expListBool -> . BOOL COMA expListBool
    (144) expListBool -> . VARIABLE
    (145) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 554
    VARIABLE        shift and go to state 552

    expListBool                    shift and go to state 374

state 588

    (114) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 114 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 589

    (161) expListSet -> VARIABLE COMA . expListSet
    (156) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (157) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (158) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (159) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (160) expListSet -> . VARIABLE
    (161) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 154
    VARIABLE        shift and go to state 556

    expListSet                     shift and go to state 364

state 590

    (118) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 118 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .)


state 591

    (122) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 122 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .)


state 592

    (159) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .

    CDER            reduce using rule 159 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .)


state 593

    (89) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 89 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 594

    (60) caseString -> CASE STRING DOSPUNTOS final . BREAK PUNTOYCOMA
    (61) caseString -> CASE STRING DOSPUNTOS final . BREAK PUNTOYCOMA caseString

    BREAK           shift and go to state 606


state 595

    (62) caseInt -> CASE ENTERO DOSPUNTOS final . BREAK PUNTOYCOMA
    (63) caseInt -> CASE ENTERO DOSPUNTOS final . BREAK PUNTOYCOMA caseInt

    BREAK           shift and go to state 607


state 596

    (64) caseBool -> CASE BOOL DOSPUNTOS final . BREAK PUNTOYCOMA
    (65) caseBool -> CASE BOOL DOSPUNTOS final . BREAK PUNTOYCOMA caseBool

    BREAK           shift and go to state 608


state 597

    (86) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .
    (81) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 86 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)
    DOSPUNTOS       reduce using rule 81 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 598

    (88) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (82) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 609


state 599

    (197) sentenciaElse -> ELSE final .

    $end            reduce using rule 197 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 197 (sentenciaElse -> ELSE final .)
    PUNTOYCOMA      reduce using rule 197 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 197 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 197 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 197 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 197 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 197 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 197 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 197 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 197 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 197 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 197 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 197 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 197 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 197 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 197 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 197 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 197 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 197 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 197 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 197 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 197 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 197 (sentenciaElse -> ELSE final .)
    MAP             reduce using rule 197 (sentenciaElse -> ELSE final .)
    LIZQ            reduce using rule 197 (sentenciaElse -> ELSE final .)
    SWITCH          reduce using rule 197 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 197 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 197 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 197 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 197 (sentenciaElse -> ELSE final .)
    BREAK           reduce using rule 197 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 197 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 197 (sentenciaElse -> ELSE final .)


state 600

    (198) sentenciaElse -> ELSE LIZQ . final LDER
    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 123
    VARIABLE        shift and go to state 448
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 451
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 452
    MAP             shift and go to state 51
    LIZQ            shift and go to state 446
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 453
    STRING          shift and go to state 454
    ENTERO          shift and go to state 450
    DOUBLE          shift and go to state 455

    final                          shift and go to state 610
    expMap                         shift and go to state 124
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 449
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    claveValor                     shift and go to state 125
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 601

    (195) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (196) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (244) comparacionBool -> expresionBool . operadorLogico expresionBool
    (245) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (277) operadorLogico -> . AND
    (278) operadorLogico -> . OR

    PDER            shift and go to state 611
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadorLogico                 shift and go to state 64

state 602

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 123
    VARIABLE        shift and go to state 448
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 451
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 452
    MAP             shift and go to state 51
    LIZQ            shift and go to state 446
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 453
    STRING          shift and go to state 454
    ENTERO          shift and go to state 450
    DOUBLE          shift and go to state 455

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 612
    expMap                         shift and go to state 124
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 449
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    claveValor                     shift and go to state 125
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 603

    (226) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    MAP             reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIZQ            reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SWITCH          reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BREAK           reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 226 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 604

    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 123
    VARIABLE        shift and go to state 448
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 451
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 452
    MAP             shift and go to state 51
    LIZQ            shift and go to state 446
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 453
    STRING          shift and go to state 454
    ENTERO          shift and go to state 450
    DOUBLE          shift and go to state 455

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 613
    expMap                         shift and go to state 124
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 449
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    claveValor                     shift and go to state 125
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 605

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    MAP             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIZQ            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SWITCH          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BREAK           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 606

    (60) caseString -> CASE STRING DOSPUNTOS final BREAK . PUNTOYCOMA
    (61) caseString -> CASE STRING DOSPUNTOS final BREAK . PUNTOYCOMA caseString

    PUNTOYCOMA      shift and go to state 614


state 607

    (62) caseInt -> CASE ENTERO DOSPUNTOS final BREAK . PUNTOYCOMA
    (63) caseInt -> CASE ENTERO DOSPUNTOS final BREAK . PUNTOYCOMA caseInt

    PUNTOYCOMA      shift and go to state 615


state 608

    (64) caseBool -> CASE BOOL DOSPUNTOS final BREAK . PUNTOYCOMA
    (65) caseBool -> CASE BOOL DOSPUNTOS final BREAK . PUNTOYCOMA caseBool

    PUNTOYCOMA      shift and go to state 616


state 609

    (88) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (82) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 88 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    DOSPUNTOS       reduce using rule 82 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 610

    (198) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 617


state 611

    (195) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (196) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 619
    VARIABLE        shift and go to state 18
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 53
    MAP             shift and go to state 51
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 55
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57

    expresionBool                  shift and go to state 6
    final                          shift and go to state 618
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 20
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 612

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 620


state 613

    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 621


state 614

    (60) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA .
    (61) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA . caseString
    (60) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (61) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString

    LDER            reduce using rule 60 (caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 622

    caseString                     shift and go to state 623

state 615

    (62) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA .
    (63) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA . caseInt
    (62) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (63) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    LDER            reduce using rule 62 (caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 624

    caseInt                        shift and go to state 625

state 616

    (64) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA .
    (65) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA . caseBool
    (64) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (65) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    LDER            reduce using rule 64 (caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 626

    caseBool                       shift and go to state 627

state 617

    (198) sentenciaElse -> ELSE LIZQ final LDER .

    $end            reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    PUNTOYCOMA      reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    MAP             reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIZQ            reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    SWITCH          reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    BREAK           reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 198 (sentenciaElse -> ELSE LIZQ final LDER .)


state 618

    (195) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    $end            reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PUNTOYCOMA      reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 195 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 619

    (196) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (68) expresionMap -> LIZQ . LDER
    (70) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . imprimir PUNTOYCOMA
    (24) final -> . imprimir PUNTOYCOMA final
    (25) final -> . funcionStdin PUNTOYCOMA
    (26) final -> . funcionStdin PUNTOYCOMA final
    (27) final -> . funcionStdout PUNTOYCOMA
    (28) final -> . funcionStdout PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool PUNTOYCOMA final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) final -> . sentenciaFor PUNTOYCOMA final
    (34) final -> . sentenciaFor PUNTOYCOMA
    (35) final -> . sentenciaFor final
    (36) final -> . sentenciaFor
    (37) final -> . sentenciaSubstring PUNTOYCOMA final
    (38) final -> . sentenciaSubstring PUNTOYCOMA
    (39) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (40) final -> . VARIABLE DSUMA PUNTOYCOMA
    (41) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (42) final -> . VARIABLE DRESTA PUNTOYCOMA
    (43) final -> . expresionLista PUNTOYCOMA
    (44) final -> . expresionLista PUNTOYCOMA final
    (45) final -> . expresionNewList PUNTOYCOMA
    (46) final -> . expresionNewList PUNTOYCOMA final
    (47) final -> . expresionSet PUNTOYCOMA
    (48) final -> . expresionSet PUNTOYCOMA final
    (49) final -> . expresionMap PUNTOYCOMA
    (50) final -> . expresionMap PUNTOYCOMA final
    (51) final -> . expresionSwitch
    (52) final -> . expresionSwitch PUNTOYCOMA
    (53) final -> . expresionSwitch PUNTOYCOMA final
    (54) final -> . declaracionSimple PUNTOYCOMA
    (55) final -> . declaracionSimple PUNTOYCOMA final
    (71) expMap -> . claveValor DOSPUNTOS claveValor
    (72) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (168) asignacion -> . INT VARIABLE IGUAL expresionInt
    (169) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (170) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (171) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (172) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (173) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (174) asignacion -> . VAR VARIABLE IGUAL expresion
    (175) asignacion -> . asignacionSimple
    (259) expresionInt -> . valorInt operadorMat expresionInt
    (260) expresionInt -> . valorInt
    (263) expresionDouble -> . valorDouble operadorMat expresionDouble
    (264) expresionDouble -> . valorDouble
    (252) expresionString -> . valorString SUMA expresionString
    (253) expresionString -> . valorString
    (234) expresionBool -> . valorDouble comparadorMat expresionDouble
    (235) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (236) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat VARIABLE
    (238) expresionBool -> . valorBool
    (239) expresionBool -> . negacionBool
    (240) expresionBool -> . comparacionBool
    (241) expresionBool -> . valor IS objeto
    (242) expresionBool -> . valor ISNEGADO objeto
    (218) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (219) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (222) expresionBoolFor -> . valorBool
    (223) expresionBoolFor -> . negacionBool
    (224) expresionBoolFor -> . comparacionBool
    (229) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (230) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (231) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (189) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (190) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (191) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf
    (192) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse
    (184) imprimir -> . PRINT PIZQ expresion PDER
    (185) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (186) funcionStdin -> . FUNCIONSTDIN
    (187) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (188) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (243) negacionBool -> . NOT PIZQ expresionBool PDER
    (244) comparacionBool -> . expresionBool operadorLogico expresionBool
    (245) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (225) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (226) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (227) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (255) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (256) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (94) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (95) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (96) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> . CIZQ expListString CDER
    (98) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (99) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (100) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> . CIZQ expListInt CDER
    (102) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (103) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (104) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> . CIZQ expListNum CDER
    (106) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (107) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (108) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (111) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListBool CDER
    (113) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (115) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . CIZQ expListDynamic CDER
    (117) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (118) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (119) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> . CIZQ expListSet CDER
    (121) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (122) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (123) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> . CIZQ expListMap CDER
    (125) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (126) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (127) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (91) expresionNewList -> . NEWLIST PIZQ PDER
    (92) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (93) expresionNewList -> . CIZQ CDER
    (85) expresionSet -> . SET VARIABLE
    (86) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (87) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (88) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (89) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (66) expresionMap -> . MAP VARIABLE
    (67) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (68) expresionMap -> . LIZQ LDER
    (69) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (70) expresionMap -> . LIZQ expMap LDER
    (56) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (177) declaracionSimple -> . STRINGR VARIABLE
    (178) declaracionSimple -> . INT VARIABLE
    (179) declaracionSimple -> . DOUBLER VARIABLE
    (180) declaracionSimple -> . NUM VARIABLE
    (181) declaracionSimple -> . VAR VARIABLE
    (182) declaracionSimple -> . DYNAMIC VARIABLE
    (183) declaracionSimple -> . BOOL VARIABLE
    (73) claveValor -> . VARIABLE
    (74) claveValor -> . STRING
    (75) claveValor -> . ENTERO
    (76) claveValor -> . DOUBLE
    (77) claveValor -> . BOOL
    (78) claveValor -> . CIZQ expListDynamic CDER
    (79) claveValor -> . CIZQ expListSet CDER
    (80) claveValor -> . expresionNewList
    (81) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (82) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (83) claveValor -> . LIZQ LDER
    (84) claveValor -> . LIZQ expMap LDER
    (176) asignacionSimple -> . VARIABLE IGUAL expresion
    (257) valorInt -> . ENTERO
    (258) valorInt -> . VARIABLE
    (261) valorDouble -> . DOUBLE
    (262) valorDouble -> . valorInt
    (246) valorString -> . STRING
    (247) valorString -> . VARIABLE
    (248) valorString -> . FUNCIONSTDIN
    (249) valorString -> . expresionIndexString
    (250) valorString -> . sentenciaSubstring
    (251) valorString -> . STRING CIZQ ENTERO CDER
    (232) valorBool -> . BOOL
    (233) valorBool -> . VARIABLE
    (199) valor -> . ENTERO
    (200) valor -> . VARIABLE
    (201) valor -> . DOUBLE
    (202) valor -> . STRING
    (254) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 123
    VARIABLE        shift and go to state 448
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    PRINT           shift and go to state 42
    FUNCIONSTDIN    shift and go to state 43
    FUNCIONSTDOUT   shift and go to state 44
    NOT             shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 451
    NEWLIST         shift and go to state 52
    SET             shift and go to state 50
    SETFROM         shift and go to state 452
    MAP             shift and go to state 51
    LIZQ            shift and go to state 446
    SWITCH          shift and go to state 54
    BOOL            shift and go to state 453
    STRING          shift and go to state 454
    ENTERO          shift and go to state 450
    DOUBLE          shift and go to state 455

    expresionBool                  shift and go to state 6
    final                          shift and go to state 628
    expMap                         shift and go to state 124
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaFor                   shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    expresionLista                 shift and go to state 19
    expresionNewList               shift and go to state 449
    expresionSet                   shift and go to state 21
    expresionMap                   shift and go to state 22
    expresionSwitch                shift and go to state 23
    declaracionSimple              shift and go to state 24
    claveValor                     shift and go to state 125
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 620

    (225) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    MAP             reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BREAK           reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 225 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 621

    (227) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    MAP             reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BREAK           reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 227 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)


state 622

    (60) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (61) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString

    STRING          shift and go to state 528


state 623

    (61) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString .

    LDER            reduce using rule 61 (caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString .)


state 624

    (62) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (63) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    ENTERO          shift and go to state 529


state 625

    (63) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt .

    LDER            reduce using rule 63 (caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt .)


state 626

    (64) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (65) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    BOOL            shift and go to state 530


state 627

    (65) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool .

    LDER            reduce using rule 65 (caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool .)


state 628

    (196) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 629


state 629

    (196) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    $end            reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PUNTOYCOMA      reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 196 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for MAP in state 8 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for MAP in state 10 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 14 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 14 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 16 resolved as shift
WARNING: shift/reduce conflict for INT in state 16 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 16 resolved as shift
WARNING: shift/reduce conflict for NUM in state 16 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 16 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 16 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 16 resolved as shift
WARNING: shift/reduce conflict for DO in state 16 resolved as shift
WARNING: shift/reduce conflict for IF in state 16 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 16 resolved as shift
WARNING: shift/reduce conflict for NOT in state 16 resolved as shift
WARNING: shift/reduce conflict for FOR in state 16 resolved as shift
WARNING: shift/reduce conflict for LIST in state 16 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 16 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 16 resolved as shift
WARNING: shift/reduce conflict for SET in state 16 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 16 resolved as shift
WARNING: shift/reduce conflict for MAP in state 16 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 16 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 16 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 16 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 16 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 18 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 18 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 23 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 33 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 33 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 33 resolved as shift
WARNING: shift/reduce conflict for DIV in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 33 resolved as shift
WARNING: shift/reduce conflict for MOD in state 33 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 59 resolved as shift
WARNING: shift/reduce conflict for NUM in state 59 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 59 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 59 resolved as shift
WARNING: shift/reduce conflict for VAR in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for LIST in state 59 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 59 resolved as shift
WARNING: shift/reduce conflict for SET in state 59 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 59 resolved as shift
WARNING: shift/reduce conflict for MAP in state 59 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 60 resolved as shift
WARNING: shift/reduce conflict for INT in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 60 resolved as shift
WARNING: shift/reduce conflict for NUM in state 60 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 60 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for DO in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 60 resolved as shift
WARNING: shift/reduce conflict for NOT in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for LIST in state 60 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 60 resolved as shift
WARNING: shift/reduce conflict for SET in state 60 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 60 resolved as shift
WARNING: shift/reduce conflict for MAP in state 60 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 60 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING in state 60 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for INT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 61 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for DO in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for LIST in state 61 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 61 resolved as shift
WARNING: shift/reduce conflict for SET in state 61 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 61 resolved as shift
WARNING: shift/reduce conflict for MAP in state 61 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 61 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for INT in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 62 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for DO in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for FOR in state 62 resolved as shift
WARNING: shift/reduce conflict for LIST in state 62 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 62 resolved as shift
WARNING: shift/reduce conflict for SET in state 62 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 62 resolved as shift
WARNING: shift/reduce conflict for MAP in state 62 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for SET in state 63 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 63 resolved as shift
WARNING: shift/reduce conflict for MAP in state 63 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 67 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for LIST in state 67 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 67 resolved as shift
WARNING: shift/reduce conflict for SET in state 67 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 67 resolved as shift
WARNING: shift/reduce conflict for MAP in state 67 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for INT in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 69 resolved as shift
WARNING: shift/reduce conflict for NUM in state 69 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 69 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 69 resolved as shift
WARNING: shift/reduce conflict for VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for DO in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for FOR in state 69 resolved as shift
WARNING: shift/reduce conflict for LIST in state 69 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 69 resolved as shift
WARNING: shift/reduce conflict for SET in state 69 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 69 resolved as shift
WARNING: shift/reduce conflict for MAP in state 69 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 69 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 69 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING in state 69 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for INT in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 70 resolved as shift
WARNING: shift/reduce conflict for NUM in state 70 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 70 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 70 resolved as shift
WARNING: shift/reduce conflict for VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for FOR in state 70 resolved as shift
WARNING: shift/reduce conflict for LIST in state 70 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 70 resolved as shift
WARNING: shift/reduce conflict for SET in state 70 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 70 resolved as shift
WARNING: shift/reduce conflict for MAP in state 70 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 70 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING in state 70 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for SET in state 71 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 71 resolved as shift
WARNING: shift/reduce conflict for MAP in state 71 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for SET in state 73 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 73 resolved as shift
WARNING: shift/reduce conflict for MAP in state 73 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for MAP in state 74 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 75 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT in state 75 resolved as shift
WARNING: shift/reduce conflict for FOR in state 75 resolved as shift
WARNING: shift/reduce conflict for LIST in state 75 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 75 resolved as shift
WARNING: shift/reduce conflict for SET in state 75 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 75 resolved as shift
WARNING: shift/reduce conflict for MAP in state 75 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 75 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for SET in state 76 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 76 resolved as shift
WARNING: shift/reduce conflict for MAP in state 76 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for INT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 77 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for DO in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 77 resolved as shift
WARNING: shift/reduce conflict for NOT in state 77 resolved as shift
WARNING: shift/reduce conflict for FOR in state 77 resolved as shift
WARNING: shift/reduce conflict for LIST in state 77 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 77 resolved as shift
WARNING: shift/reduce conflict for SET in state 77 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 77 resolved as shift
WARNING: shift/reduce conflict for MAP in state 77 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 77 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for SET in state 78 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 78 resolved as shift
WARNING: shift/reduce conflict for MAP in state 78 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for MAP in state 80 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 95 resolved as shift
WARNING: shift/reduce conflict for INT in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 95 resolved as shift
WARNING: shift/reduce conflict for NUM in state 95 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 95 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 95 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 95 resolved as shift
WARNING: shift/reduce conflict for VAR in state 95 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 95 resolved as shift
WARNING: shift/reduce conflict for DO in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 95 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 95 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 95 resolved as shift
WARNING: shift/reduce conflict for NOT in state 95 resolved as shift
WARNING: shift/reduce conflict for FOR in state 95 resolved as shift
WARNING: shift/reduce conflict for LIST in state 95 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 95 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 95 resolved as shift
WARNING: shift/reduce conflict for SET in state 95 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 95 resolved as shift
WARNING: shift/reduce conflict for MAP in state 95 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 95 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 95 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 95 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 95 resolved as shift
WARNING: shift/reduce conflict for STRING in state 95 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 96 resolved as shift
WARNING: shift/reduce conflict for INT in state 96 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 96 resolved as shift
WARNING: shift/reduce conflict for NUM in state 96 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 96 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 96 resolved as shift
WARNING: shift/reduce conflict for VAR in state 96 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 96 resolved as shift
WARNING: shift/reduce conflict for DO in state 96 resolved as shift
WARNING: shift/reduce conflict for IF in state 96 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 96 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 96 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 96 resolved as shift
WARNING: shift/reduce conflict for NOT in state 96 resolved as shift
WARNING: shift/reduce conflict for FOR in state 96 resolved as shift
WARNING: shift/reduce conflict for LIST in state 96 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 96 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 96 resolved as shift
WARNING: shift/reduce conflict for SET in state 96 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 96 resolved as shift
WARNING: shift/reduce conflict for MAP in state 96 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 96 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 96 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 96 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 96 resolved as shift
WARNING: shift/reduce conflict for STRING in state 96 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 97 resolved as shift
WARNING: shift/reduce conflict for INT in state 97 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 97 resolved as shift
WARNING: shift/reduce conflict for NUM in state 97 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 97 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 97 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 97 resolved as shift
WARNING: shift/reduce conflict for VAR in state 97 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 97 resolved as shift
WARNING: shift/reduce conflict for DO in state 97 resolved as shift
WARNING: shift/reduce conflict for IF in state 97 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 97 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 97 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 97 resolved as shift
WARNING: shift/reduce conflict for NOT in state 97 resolved as shift
WARNING: shift/reduce conflict for FOR in state 97 resolved as shift
WARNING: shift/reduce conflict for LIST in state 97 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 97 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 97 resolved as shift
WARNING: shift/reduce conflict for SET in state 97 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 97 resolved as shift
WARNING: shift/reduce conflict for MAP in state 97 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 97 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 97 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 97 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 97 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 97 resolved as shift
WARNING: shift/reduce conflict for STRING in state 97 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 98 resolved as shift
WARNING: shift/reduce conflict for INT in state 98 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 98 resolved as shift
WARNING: shift/reduce conflict for NUM in state 98 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 98 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 98 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 98 resolved as shift
WARNING: shift/reduce conflict for VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 98 resolved as shift
WARNING: shift/reduce conflict for DO in state 98 resolved as shift
WARNING: shift/reduce conflict for IF in state 98 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 98 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 98 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT in state 98 resolved as shift
WARNING: shift/reduce conflict for FOR in state 98 resolved as shift
WARNING: shift/reduce conflict for LIST in state 98 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 98 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 98 resolved as shift
WARNING: shift/reduce conflict for SET in state 98 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 98 resolved as shift
WARNING: shift/reduce conflict for MAP in state 98 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 98 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 98 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 98 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 98 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 98 resolved as shift
WARNING: shift/reduce conflict for STRING in state 98 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 99 resolved as shift
WARNING: shift/reduce conflict for INT in state 99 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 99 resolved as shift
WARNING: shift/reduce conflict for NUM in state 99 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 99 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 99 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 99 resolved as shift
WARNING: shift/reduce conflict for VAR in state 99 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 99 resolved as shift
WARNING: shift/reduce conflict for DO in state 99 resolved as shift
WARNING: shift/reduce conflict for IF in state 99 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 99 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 99 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 99 resolved as shift
WARNING: shift/reduce conflict for NOT in state 99 resolved as shift
WARNING: shift/reduce conflict for FOR in state 99 resolved as shift
WARNING: shift/reduce conflict for LIST in state 99 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 99 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 99 resolved as shift
WARNING: shift/reduce conflict for SET in state 99 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 99 resolved as shift
WARNING: shift/reduce conflict for MAP in state 99 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 99 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 99 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 99 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 99 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 99 resolved as shift
WARNING: shift/reduce conflict for STRING in state 99 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 100 resolved as shift
WARNING: shift/reduce conflict for INT in state 100 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 100 resolved as shift
WARNING: shift/reduce conflict for NUM in state 100 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 100 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 100 resolved as shift
WARNING: shift/reduce conflict for VAR in state 100 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 100 resolved as shift
WARNING: shift/reduce conflict for DO in state 100 resolved as shift
WARNING: shift/reduce conflict for IF in state 100 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 100 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 100 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 100 resolved as shift
WARNING: shift/reduce conflict for NOT in state 100 resolved as shift
WARNING: shift/reduce conflict for FOR in state 100 resolved as shift
WARNING: shift/reduce conflict for LIST in state 100 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 100 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 100 resolved as shift
WARNING: shift/reduce conflict for SET in state 100 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 100 resolved as shift
WARNING: shift/reduce conflict for MAP in state 100 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 100 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 100 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 100 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 100 resolved as shift
WARNING: shift/reduce conflict for STRING in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 168 resolved as shift
WARNING: shift/reduce conflict for OR in state 168 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 189 resolved as shift
WARNING: shift/reduce conflict for INT in state 189 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 189 resolved as shift
WARNING: shift/reduce conflict for NUM in state 189 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 189 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 189 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 189 resolved as shift
WARNING: shift/reduce conflict for VAR in state 189 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 189 resolved as shift
WARNING: shift/reduce conflict for DO in state 189 resolved as shift
WARNING: shift/reduce conflict for IF in state 189 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 189 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 189 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 189 resolved as shift
WARNING: shift/reduce conflict for NOT in state 189 resolved as shift
WARNING: shift/reduce conflict for FOR in state 189 resolved as shift
WARNING: shift/reduce conflict for LIST in state 189 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 189 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 189 resolved as shift
WARNING: shift/reduce conflict for SET in state 189 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 189 resolved as shift
WARNING: shift/reduce conflict for MAP in state 189 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 189 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 189 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 189 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 189 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 189 resolved as shift
WARNING: shift/reduce conflict for STRING in state 189 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 190 resolved as shift
WARNING: shift/reduce conflict for INT in state 190 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 190 resolved as shift
WARNING: shift/reduce conflict for NUM in state 190 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 190 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 190 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 190 resolved as shift
WARNING: shift/reduce conflict for VAR in state 190 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 190 resolved as shift
WARNING: shift/reduce conflict for DO in state 190 resolved as shift
WARNING: shift/reduce conflict for IF in state 190 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 190 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 190 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 190 resolved as shift
WARNING: shift/reduce conflict for NOT in state 190 resolved as shift
WARNING: shift/reduce conflict for FOR in state 190 resolved as shift
WARNING: shift/reduce conflict for LIST in state 190 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 190 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 190 resolved as shift
WARNING: shift/reduce conflict for SET in state 190 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 190 resolved as shift
WARNING: shift/reduce conflict for MAP in state 190 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 190 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 190 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 190 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 190 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 190 resolved as shift
WARNING: shift/reduce conflict for STRING in state 190 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 200 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 200 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 200 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 200 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 200 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 200 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 208 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 233 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 265 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 265 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 265 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 265 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 265 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 265 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 406 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 406 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 406 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 406 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 406 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 406 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 448 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 448 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 448 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 448 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 448 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 448 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 448 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 454 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 501 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 536 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 537 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 18
WARNING: reduce/reduce conflict in state 18 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 18
WARNING: reduce/reduce conflict in state 33 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 33
WARNING: reduce/reduce conflict in state 36 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 36
WARNING: reduce/reduce conflict in state 43 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 43
WARNING: reduce/reduce conflict in state 149 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 149
WARNING: reduce/reduce conflict in state 150 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListInt -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListBool -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListMap -> VARIABLE) in state 150
WARNING: reduce/reduce conflict in state 151 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 151
WARNING: reduce/reduce conflict in state 151 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 151
WARNING: reduce/reduce conflict in state 152 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 153
WARNING: reduce/reduce conflict in state 169 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 169
WARNING: reduce/reduce conflict in state 176 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 176
WARNING: reduce/reduce conflict in state 191 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 191
WARNING: reduce/reduce conflict in state 191 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 191
WARNING: reduce/reduce conflict in state 191 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 191
WARNING: reduce/reduce conflict in state 192 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 192
WARNING: reduce/reduce conflict in state 200 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 200
WARNING: reduce/reduce conflict in state 200 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 200
WARNING: reduce/reduce conflict in state 200 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 200
WARNING: reduce/reduce conflict in state 207 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 207
WARNING: reduce/reduce conflict in state 208 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 208
WARNING: reduce/reduce conflict in state 230 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 230
WARNING: reduce/reduce conflict in state 231 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 231
WARNING: reduce/reduce conflict in state 259 resolved using rule (expListDynamic -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 259
WARNING: reduce/reduce conflict in state 265 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 265
WARNING: reduce/reduce conflict in state 265 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 265
WARNING: reduce/reduce conflict in state 265 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 265
WARNING: reduce/reduce conflict in state 358 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 358
WARNING: reduce/reduce conflict in state 369 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 369
WARNING: reduce/reduce conflict in state 369 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 369
WARNING: reduce/reduce conflict in state 372 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 372
WARNING: reduce/reduce conflict in state 373 resolved using rule (expListNum -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 373
WARNING: reduce/reduce conflict in state 376 resolved using rule (expListBool -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 376
WARNING: reduce/reduce conflict in state 389 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 389
WARNING: reduce/reduce conflict in state 390 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 390
WARNING: reduce/reduce conflict in state 394 resolved using rule (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER)
WARNING: rejected rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) in state 394
WARNING: reduce/reduce conflict in state 448 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 448
WARNING: reduce/reduce conflict in state 448 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 448
WARNING: reduce/reduce conflict in state 503 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 503
WARNING: reduce/reduce conflict in state 503 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 503
WARNING: reduce/reduce conflict in state 506 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 506
WARNING: reduce/reduce conflict in state 506 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 506
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
WARNING: Rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) is never reduced
