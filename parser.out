Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    ELSE
    ELSEIF
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDIN
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    IF
    IS
    ISNEGADO
    LIST
    MAP
    NOT
    OR
    PRINT
    RETURN
    SET
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionDouble PUNTOYCOMA
Rule 5     final -> expresionString PUNTOYCOMA
Rule 6     final -> expresionBool PUNTOYCOMA
Rule 7     final -> sentenciaWhile
Rule 8     final -> sentenciaWhile PUNTOYCOMA
Rule 9     final -> sentenciaDoWhile PUNTOYCOMA
Rule 10    algoritmo -> asignacion PUNTOYCOMA
Rule 11    algoritmo -> expresionInt PUNTOYCOMA
Rule 12    algoritmo -> expresionDouble PUNTOYCOMA
Rule 13    algoritmo -> expresionString PUNTOYCOMA
Rule 14    algoritmo -> expresionBool PUNTOYCOMA
Rule 15    algoritmo -> expresion
Rule 16    algoritmo -> sentenciaWhile
Rule 17    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 18    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 19    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 20    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 21    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 22    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 23    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 24    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 25    asignacion -> VAR VARIABLE IGUAL expresion
Rule 26    valor -> ENTERO
Rule 27    valor -> VARIABLE
Rule 28    valor -> DOUBLE
Rule 29    valor -> STRING
Rule 30    expresion -> valor operadorMat expresion
Rule 31    expresion -> valor
Rule 32    expresion -> expresionString
Rule 33    expresion -> expresionInt
Rule 34    expresion -> expresionDouble
Rule 35    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 36    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 37    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 38    valorBool -> BOOL
Rule 39    valorBool -> VARIABLE
Rule 40    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 41    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 42    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 43    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 44    expresionBool -> valorBool
Rule 45    valorString -> STRING
Rule 46    valorString -> VARIABLE
Rule 47    expresionString -> valorString operadorMat expresionString
Rule 48    expresionString -> valorString
Rule 49    valorInt -> ENTERO
Rule 50    valorInt -> VARIABLE
Rule 51    expresionInt -> valorInt operadorMat expresionInt
Rule 52    expresionInt -> valorInt
Rule 53    valorDouble -> DOUBLE
Rule 54    valorDouble -> valorInt
Rule 55    expresionDouble -> valorDouble operadorMat expresionDouble
Rule 56    expresionDouble -> valorDouble
Rule 57    operadorMat -> SUMA
Rule 58    operadorMat -> RESTA
Rule 59    operadorMat -> MULTI
Rule 60    operadorMat -> DIV
Rule 61    operadorMat -> DIVENTERO
Rule 62    operadorMat -> MOD
Rule 63    comparadorMat -> DIGUAL
Rule 64    comparadorMat -> NOIGUAL
Rule 65    comparadorMat -> MAYOR
Rule 66    comparadorMat -> MENOR
Rule 67    comparadorMat -> MAYIGUAL
Rule 68    comparadorMat -> MENIGUAL

Terminals, with rules where they appear

AND                  : 
AS                   : 
BOOL                 : 38
BOOLR                : 23
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 63
DIV                  : 60
DIVENTERO            : 61
DO                   : 37
DOSPUNTOS            : 
DOUBLE               : 28 53
DOUBLER              : 20
DRESTA               : 
DSUMA                : 
DYNAMIC              : 24
ELSE                 : 
ELSEIF               : 
ENTERO               : 26 49
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 
IGUAL                : 19 20 21 22 23 24 25
INT                  : 19
IS                   : 
ISNEGADO             : 
LDER                 : 35 37
LIST                 : 
LIZQ                 : 35 37
MAP                  : 
MAYIGUAL             : 67
MAYOR                : 65
MENIGUAL             : 68
MENOR                : 66
MOD                  : 62
MULTI                : 59
NOIGUAL              : 64
NOT                  : 
NUM                  : 21
OR                   : 
PDER                 : 35 36 37
PIZQ                 : 35 36 37
PRINT                : 
PUNTOYCOMA           : 1 2 3 4 5 6 8 9 10 11 12 13 14 17 18
RESTA                : 58
RETURN               : 
SET                  : 
STRING               : 29 45
STRINGR              : 22
SUMA                 : 57
SWITCH               : 
VAR                  : 25
VARIABLE             : 19 20 21 22 23 24 25 27 39 41 42 42 43 46 50
WHILE                : 35 36 37
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 35 36 37
asignacion           : 2 10
comparadorMat        : 40 41 42 43
expresion            : 15 24 25 30
expresionBool        : 6 14 23 35 36 37
expresionDouble      : 4 12 20 21 34 40 41 55
expresionInt         : 3 11 19 33 51
expresionString      : 5 13 22 32 47
final                : 0
operadorMat          : 30 47 51 55
sentenciaDoWhile     : 9 18
sentenciaWhile       : 7 8 16 17
valor                : 30 31
valorBool            : 44
valorDouble          : 40 43 55 56
valorInt             : 51 52 54
valorString          : 47 48

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionDouble PUNTOYCOMA
    (5) final -> . expresionString PUNTOYCOMA
    (6) final -> . expresionBool PUNTOYCOMA
    (7) final -> . sentenciaWhile
    (8) final -> . sentenciaWhile PUNTOYCOMA
    (9) final -> . sentenciaDoWhile PUNTOYCOMA
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresionInt PUNTOYCOMA
    (12) algoritmo -> . expresionDouble PUNTOYCOMA
    (13) algoritmo -> . expresionString PUNTOYCOMA
    (14) algoritmo -> . expresionBool PUNTOYCOMA
    (15) algoritmo -> . expresion
    (16) algoritmo -> . sentenciaWhile
    (17) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (18) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (19) asignacion -> . INT VARIABLE IGUAL expresionInt
    (20) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (21) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (22) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (23) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (24) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (25) asignacion -> . VAR VARIABLE IGUAL expresion
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (40) expresionBool -> . valorDouble comparadorMat expresionDouble
    (41) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (42) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (43) expresionBool -> . valorDouble comparadorMat VARIABLE
    (44) expresionBool -> . valorBool
    (35) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (36) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (37) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (30) expresion -> . valor operadorMat expresion
    (31) expresion -> . valor
    (32) expresion -> . expresionString
    (33) expresion -> . expresionInt
    (34) expresion -> . expresionDouble
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE
    (38) valorBool -> . BOOL
    (39) valorBool -> . VARIABLE
    (26) valor -> . ENTERO
    (27) valor -> . VARIABLE
    (28) valor -> . DOUBLE
    (29) valor -> . STRING

    INT             shift and go to state 11
    DOUBLER         shift and go to state 13
    NUM             shift and go to state 14
    STRINGR         shift and go to state 15
    BOOLR           shift and go to state 16
    DYNAMIC         shift and go to state 17
    VAR             shift and go to state 18
    VARIABLE        shift and go to state 12
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    ENTERO          shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 29

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    expresion                      shift and go to state 10
    valorInt                       shift and go to state 19
    valorDouble                    shift and go to state 20
    valorString                    shift and go to state 21
    valorBool                      shift and go to state 22
    valor                          shift and go to state 25

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 30


state 3

    (2) final -> asignacion . PUNTOYCOMA
    (10) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 31


state 4

    (3) final -> expresionInt . PUNTOYCOMA
    (11) algoritmo -> expresionInt . PUNTOYCOMA
    (33) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 32

  ! PUNTOYCOMA      [ reduce using rule 33 (expresion -> expresionInt .) ]


state 5

    (4) final -> expresionDouble . PUNTOYCOMA
    (12) algoritmo -> expresionDouble . PUNTOYCOMA
    (34) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 33

  ! PUNTOYCOMA      [ reduce using rule 34 (expresion -> expresionDouble .) ]


state 6

    (5) final -> expresionString . PUNTOYCOMA
    (13) algoritmo -> expresionString . PUNTOYCOMA
    (32) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 34

  ! PUNTOYCOMA      [ reduce using rule 32 (expresion -> expresionString .) ]


state 7

    (6) final -> expresionBool . PUNTOYCOMA
    (14) algoritmo -> expresionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 35


state 8

    (7) final -> sentenciaWhile .
    (8) final -> sentenciaWhile . PUNTOYCOMA
    (16) algoritmo -> sentenciaWhile .
    (17) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 7 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 36

  ! PUNTOYCOMA      [ reduce using rule 16 (algoritmo -> sentenciaWhile .) ]


state 9

    (9) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 37


state 10

    (15) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 15 (algoritmo -> expresion .)
    LDER            reduce using rule 15 (algoritmo -> expresion .)
    $end            reduce using rule 15 (algoritmo -> expresion .)


state 11

    (19) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 38


state 12

    (41) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (42) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (50) valorInt -> VARIABLE .
    (46) valorString -> VARIABLE .
    (39) valorBool -> VARIABLE .
    (27) valor -> VARIABLE .
    (63) comparadorMat -> . DIGUAL
    (64) comparadorMat -> . NOIGUAL
    (65) comparadorMat -> . MAYOR
    (66) comparadorMat -> . MENOR
    (67) comparadorMat -> . MAYIGUAL
    (68) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 46 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 39 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 27 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    SUMA            reduce using rule 27 (valor -> VARIABLE .)
    RESTA           reduce using rule 27 (valor -> VARIABLE .)
    MULTI           reduce using rule 27 (valor -> VARIABLE .)
    DIV             reduce using rule 27 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 27 (valor -> VARIABLE .)
    MOD             reduce using rule 27 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    LDER            reduce using rule 27 (valor -> VARIABLE .)
    $end            reduce using rule 27 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 40
    NOIGUAL         shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYIGUAL        shift and go to state 44
    MENIGUAL        shift and go to state 45

  ! SUMA            [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 39 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 39

state 13

    (20) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 46


state 14

    (21) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 47


state 15

    (22) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 48


state 16

    (23) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 49


state 17

    (24) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 50


state 18

    (25) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 51


state 19

    (51) expresionInt -> valorInt . operadorMat expresionInt
    (52) expresionInt -> valorInt .
    (54) valorDouble -> valorInt .
    (57) operadorMat -> . SUMA
    (58) operadorMat -> . RESTA
    (59) operadorMat -> . MULTI
    (60) operadorMat -> . DIV
    (61) operadorMat -> . DIVENTERO
    (62) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 52 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 52 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 52 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 52 (expresionInt -> valorInt .)
    LDER            reduce using rule 52 (expresionInt -> valorInt .)
    $end            reduce using rule 52 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 54 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 54 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 54 (valorDouble -> valorInt .)
    MENOR           reduce using rule 54 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 54 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 54 (valorDouble -> valorInt .)
    SUMA            shift and go to state 53
    RESTA           shift and go to state 54
    MULTI           shift and go to state 55
    DIV             shift and go to state 56
    DIVENTERO       shift and go to state 57
    MOD             shift and go to state 58

  ! SUMA            [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 54 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 54 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 52

state 20

    (55) expresionDouble -> valorDouble . operadorMat expresionDouble
    (56) expresionDouble -> valorDouble .
    (40) expresionBool -> valorDouble . comparadorMat expresionDouble
    (43) expresionBool -> valorDouble . comparadorMat VARIABLE
    (57) operadorMat -> . SUMA
    (58) operadorMat -> . RESTA
    (59) operadorMat -> . MULTI
    (60) operadorMat -> . DIV
    (61) operadorMat -> . DIVENTERO
    (62) operadorMat -> . MOD
    (63) comparadorMat -> . DIGUAL
    (64) comparadorMat -> . NOIGUAL
    (65) comparadorMat -> . MAYOR
    (66) comparadorMat -> . MENOR
    (67) comparadorMat -> . MAYIGUAL
    (68) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 56 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 56 (expresionDouble -> valorDouble .)
    $end            reduce using rule 56 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 53
    RESTA           shift and go to state 54
    MULTI           shift and go to state 55
    DIV             shift and go to state 56
    DIVENTERO       shift and go to state 57
    MOD             shift and go to state 58
    DIGUAL          shift and go to state 40
    NOIGUAL         shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYIGUAL        shift and go to state 44
    MENIGUAL        shift and go to state 45

    operadorMat                    shift and go to state 59
    comparadorMat                  shift and go to state 60

state 21

    (47) expresionString -> valorString . operadorMat expresionString
    (48) expresionString -> valorString .
    (57) operadorMat -> . SUMA
    (58) operadorMat -> . RESTA
    (59) operadorMat -> . MULTI
    (60) operadorMat -> . DIV
    (61) operadorMat -> . DIVENTERO
    (62) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 48 (expresionString -> valorString .)
    LDER            reduce using rule 48 (expresionString -> valorString .)
    $end            reduce using rule 48 (expresionString -> valorString .)
    SUMA            shift and go to state 53
    RESTA           shift and go to state 54
    MULTI           shift and go to state 55
    DIV             shift and go to state 56
    DIVENTERO       shift and go to state 57
    MOD             shift and go to state 58

    operadorMat                    shift and go to state 61

state 22

    (44) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 44 (expresionBool -> valorBool .)
    PDER            reduce using rule 44 (expresionBool -> valorBool .)


state 23

    (35) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (36) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 62


state 24

    (37) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 63


state 25

    (30) expresion -> valor . operadorMat expresion
    (31) expresion -> valor .
    (57) operadorMat -> . SUMA
    (58) operadorMat -> . RESTA
    (59) operadorMat -> . MULTI
    (60) operadorMat -> . DIV
    (61) operadorMat -> . DIVENTERO
    (62) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 31 (expresion -> valor .)
    LDER            reduce using rule 31 (expresion -> valor .)
    $end            reduce using rule 31 (expresion -> valor .)
    SUMA            shift and go to state 53
    RESTA           shift and go to state 54
    MULTI           shift and go to state 55
    DIV             shift and go to state 56
    DIVENTERO       shift and go to state 57
    MOD             shift and go to state 58

    operadorMat                    shift and go to state 64

state 26

    (49) valorInt -> ENTERO .
    (26) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 26 (valor -> ENTERO .)
    DIGUAL          reduce using rule 49 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 49 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 49 (valorInt -> ENTERO .)
    MENOR           reduce using rule 49 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 49 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 49 (valorInt -> ENTERO .)
    SUMA            reduce using rule 26 (valor -> ENTERO .)
    RESTA           reduce using rule 26 (valor -> ENTERO .)
    MULTI           reduce using rule 26 (valor -> ENTERO .)
    DIV             reduce using rule 26 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 26 (valor -> ENTERO .)
    MOD             reduce using rule 26 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 26 (valor -> ENTERO .)
    LDER            reduce using rule 26 (valor -> ENTERO .)
    $end            reduce using rule 26 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 49 (valorInt -> ENTERO .) ]


state 27

    (53) valorDouble -> DOUBLE .
    (28) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 28 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 53 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 53 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 53 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 53 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 53 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 53 (valorDouble -> DOUBLE .)
    SUMA            reduce using rule 28 (valor -> DOUBLE .)
    RESTA           reduce using rule 28 (valor -> DOUBLE .)
    MULTI           reduce using rule 28 (valor -> DOUBLE .)
    DIV             reduce using rule 28 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 28 (valor -> DOUBLE .)
    MOD             reduce using rule 28 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 28 (valor -> DOUBLE .)
    LDER            reduce using rule 28 (valor -> DOUBLE .)
    $end            reduce using rule 28 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 53 (valorDouble -> DOUBLE .) ]


state 28

    (45) valorString -> STRING .
    (29) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 29 (valor -> STRING .)
    SUMA            reduce using rule 29 (valor -> STRING .)
    RESTA           reduce using rule 29 (valor -> STRING .)
    MULTI           reduce using rule 29 (valor -> STRING .)
    DIV             reduce using rule 29 (valor -> STRING .)
    DIVENTERO       reduce using rule 29 (valor -> STRING .)
    MOD             reduce using rule 29 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 29 (valor -> STRING .)
    LDER            reduce using rule 29 (valor -> STRING .)
    $end            reduce using rule 29 (valor -> STRING .)

  ! SUMA            [ reduce using rule 45 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 45 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 45 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 45 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 45 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 45 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 45 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 45 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 45 (valorString -> STRING .) ]


state 29

    (38) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 38 (valorBool -> BOOL .)
    PDER            reduce using rule 38 (valorBool -> BOOL .)


state 30

    (1) final -> algoritmo PUNTOYCOMA .

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)


state 31

    (2) final -> asignacion PUNTOYCOMA .
    (10) algoritmo -> asignacion PUNTOYCOMA .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 10 (algoritmo -> asignacion PUNTOYCOMA .)


state 32

    (3) final -> expresionInt PUNTOYCOMA .
    (11) algoritmo -> expresionInt PUNTOYCOMA .

    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (algoritmo -> expresionInt PUNTOYCOMA .)


state 33

    (4) final -> expresionDouble PUNTOYCOMA .
    (12) algoritmo -> expresionDouble PUNTOYCOMA .

    $end            reduce using rule 4 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 12 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 34

    (5) final -> expresionString PUNTOYCOMA .
    (13) algoritmo -> expresionString PUNTOYCOMA .

    $end            reduce using rule 5 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 13 (algoritmo -> expresionString PUNTOYCOMA .)


state 35

    (6) final -> expresionBool PUNTOYCOMA .
    (14) algoritmo -> expresionBool PUNTOYCOMA .

    $end            reduce using rule 6 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 14 (algoritmo -> expresionBool PUNTOYCOMA .)


state 36

    (8) final -> sentenciaWhile PUNTOYCOMA .
    (17) algoritmo -> sentenciaWhile PUNTOYCOMA .

    $end            reduce using rule 8 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 37

    (9) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    $end            reduce using rule 9 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 18 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 38

    (19) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 65


state 39

    (41) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (42) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 66
    DOUBLE          shift and go to state 69
    ENTERO          shift and go to state 71

    expresionDouble                shift and go to state 67
    valorDouble                    shift and go to state 68
    valorInt                       shift and go to state 70

state 40

    (63) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 63 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 63 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 63 (comparadorMat -> DIGUAL .)


state 41

    (64) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 64 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 64 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 64 (comparadorMat -> NOIGUAL .)


state 42

    (65) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 65 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 65 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 65 (comparadorMat -> MAYOR .)


state 43

    (66) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 66 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 66 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 66 (comparadorMat -> MENOR .)


state 44

    (67) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 67 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 67 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 67 (comparadorMat -> MAYIGUAL .)


state 45

    (68) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 68 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 68 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 68 (comparadorMat -> MENIGUAL .)


state 46

    (20) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 72


state 47

    (21) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 73


state 48

    (22) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 74


state 49

    (23) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 75


state 50

    (24) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 76


state 51

    (25) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 77


state 52

    (51) expresionInt -> valorInt operadorMat . expresionInt
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    ENTERO          shift and go to state 71
    VARIABLE        shift and go to state 80

    valorInt                       shift and go to state 78
    expresionInt                   shift and go to state 79

state 53

    (57) operadorMat -> SUMA .

    ENTERO          reduce using rule 57 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 57 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 57 (operadorMat -> SUMA .)
    STRING          reduce using rule 57 (operadorMat -> SUMA .)


state 54

    (58) operadorMat -> RESTA .

    ENTERO          reduce using rule 58 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 58 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 58 (operadorMat -> RESTA .)
    STRING          reduce using rule 58 (operadorMat -> RESTA .)


state 55

    (59) operadorMat -> MULTI .

    ENTERO          reduce using rule 59 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 59 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 59 (operadorMat -> MULTI .)
    STRING          reduce using rule 59 (operadorMat -> MULTI .)


state 56

    (60) operadorMat -> DIV .

    ENTERO          reduce using rule 60 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 60 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 60 (operadorMat -> DIV .)
    STRING          reduce using rule 60 (operadorMat -> DIV .)


state 57

    (61) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 61 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 61 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 61 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 61 (operadorMat -> DIVENTERO .)


state 58

    (62) operadorMat -> MOD .

    ENTERO          reduce using rule 62 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 62 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 62 (operadorMat -> MOD .)
    STRING          reduce using rule 62 (operadorMat -> MOD .)


state 59

    (55) expresionDouble -> valorDouble operadorMat . expresionDouble
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 69
    ENTERO          shift and go to state 71
    VARIABLE        shift and go to state 80

    valorDouble                    shift and go to state 68
    expresionDouble                shift and go to state 81
    valorInt                       shift and go to state 70

state 60

    (40) expresionBool -> valorDouble comparadorMat . expresionDouble
    (43) expresionBool -> valorDouble comparadorMat . VARIABLE
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 83
    DOUBLE          shift and go to state 69
    ENTERO          shift and go to state 71

    valorDouble                    shift and go to state 68
    expresionDouble                shift and go to state 82
    valorInt                       shift and go to state 70

state 61

    (47) expresionString -> valorString operadorMat . expresionString
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE

    STRING          shift and go to state 85
    VARIABLE        shift and go to state 86

    valorString                    shift and go to state 21
    expresionString                shift and go to state 84

state 62

    (35) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (36) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (40) expresionBool -> . valorDouble comparadorMat expresionDouble
    (41) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (42) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (43) expresionBool -> . valorDouble comparadorMat VARIABLE
    (44) expresionBool -> . valorBool
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (38) valorBool -> . BOOL
    (39) valorBool -> . VARIABLE
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 89
    DOUBLE          shift and go to state 69
    BOOL            shift and go to state 29
    ENTERO          shift and go to state 71

    expresionBool                  shift and go to state 87
    valorDouble                    shift and go to state 88
    valorBool                      shift and go to state 22
    valorInt                       shift and go to state 70

state 63

    (37) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresionInt PUNTOYCOMA
    (12) algoritmo -> . expresionDouble PUNTOYCOMA
    (13) algoritmo -> . expresionString PUNTOYCOMA
    (14) algoritmo -> . expresionBool PUNTOYCOMA
    (15) algoritmo -> . expresion
    (16) algoritmo -> . sentenciaWhile
    (17) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (18) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (19) asignacion -> . INT VARIABLE IGUAL expresionInt
    (20) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (21) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (22) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (23) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (24) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (25) asignacion -> . VAR VARIABLE IGUAL expresion
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (40) expresionBool -> . valorDouble comparadorMat expresionDouble
    (41) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (42) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (43) expresionBool -> . valorDouble comparadorMat VARIABLE
    (44) expresionBool -> . valorBool
    (30) expresion -> . valor operadorMat expresion
    (31) expresion -> . valor
    (32) expresion -> . expresionString
    (33) expresion -> . expresionInt
    (34) expresion -> . expresionDouble
    (35) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (36) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (37) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE
    (38) valorBool -> . BOOL
    (39) valorBool -> . VARIABLE
    (26) valor -> . ENTERO
    (27) valor -> . VARIABLE
    (28) valor -> . DOUBLE
    (29) valor -> . STRING

    INT             shift and go to state 11
    DOUBLER         shift and go to state 13
    NUM             shift and go to state 14
    STRINGR         shift and go to state 15
    BOOLR           shift and go to state 16
    DYNAMIC         shift and go to state 17
    VAR             shift and go to state 18
    VARIABLE        shift and go to state 12
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    ENTERO          shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 29

    algoritmo                      shift and go to state 90
    expresionBool                  shift and go to state 91
    asignacion                     shift and go to state 92
    expresionInt                   shift and go to state 93
    expresionDouble                shift and go to state 94
    expresionString                shift and go to state 95
    expresion                      shift and go to state 10
    sentenciaWhile                 shift and go to state 96
    sentenciaDoWhile               shift and go to state 97
    valorInt                       shift and go to state 19
    valorDouble                    shift and go to state 20
    valorString                    shift and go to state 21
    valorBool                      shift and go to state 22
    valor                          shift and go to state 25

state 64

    (30) expresion -> valor operadorMat . expresion
    (30) expresion -> . valor operadorMat expresion
    (31) expresion -> . valor
    (32) expresion -> . expresionString
    (33) expresion -> . expresionInt
    (34) expresion -> . expresionDouble
    (26) valor -> . ENTERO
    (27) valor -> . VARIABLE
    (28) valor -> . DOUBLE
    (29) valor -> . STRING
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt

    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 104
    STRING          shift and go to state 105

    valor                          shift and go to state 25
    expresion                      shift and go to state 98
    expresionString                shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    valorString                    shift and go to state 21
    valorInt                       shift and go to state 19
    valorDouble                    shift and go to state 68

state 65

    (19) asignacion -> INT VARIABLE IGUAL . expresionInt
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    ENTERO          shift and go to state 71
    VARIABLE        shift and go to state 80

    expresionInt                   shift and go to state 106
    valorInt                       shift and go to state 78

state 66

    (42) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (50) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 42 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 42 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 42 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 42 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 50 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 50 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 50 (valorInt -> VARIABLE .)
    DIV             reduce using rule 50 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 50 (valorInt -> VARIABLE .)
    MOD             reduce using rule 50 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 50 (valorInt -> VARIABLE .) ]


state 67

    (41) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 41 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 41 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 68

    (55) expresionDouble -> valorDouble . operadorMat expresionDouble
    (56) expresionDouble -> valorDouble .
    (57) operadorMat -> . SUMA
    (58) operadorMat -> . RESTA
    (59) operadorMat -> . MULTI
    (60) operadorMat -> . DIV
    (61) operadorMat -> . DIVENTERO
    (62) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 56 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 56 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 56 (expresionDouble -> valorDouble .)
    $end            reduce using rule 56 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 53
    RESTA           shift and go to state 54
    MULTI           shift and go to state 55
    DIV             shift and go to state 56
    DIVENTERO       shift and go to state 57
    MOD             shift and go to state 58

    operadorMat                    shift and go to state 59

state 69

    (53) valorDouble -> DOUBLE .

    SUMA            reduce using rule 53 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 53 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 53 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 53 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 53 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 53 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 53 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 53 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 53 (valorDouble -> DOUBLE .)
    $end            reduce using rule 53 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 53 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 53 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 53 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 53 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 53 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 53 (valorDouble -> DOUBLE .)


state 70

    (54) valorDouble -> valorInt .

    SUMA            reduce using rule 54 (valorDouble -> valorInt .)
    RESTA           reduce using rule 54 (valorDouble -> valorInt .)
    MULTI           reduce using rule 54 (valorDouble -> valorInt .)
    DIV             reduce using rule 54 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 54 (valorDouble -> valorInt .)
    MOD             reduce using rule 54 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 54 (valorDouble -> valorInt .)
    PDER            reduce using rule 54 (valorDouble -> valorInt .)
    LDER            reduce using rule 54 (valorDouble -> valorInt .)
    $end            reduce using rule 54 (valorDouble -> valorInt .)
    DIGUAL          reduce using rule 54 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 54 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 54 (valorDouble -> valorInt .)
    MENOR           reduce using rule 54 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 54 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 54 (valorDouble -> valorInt .)


state 71

    (49) valorInt -> ENTERO .

    SUMA            reduce using rule 49 (valorInt -> ENTERO .)
    RESTA           reduce using rule 49 (valorInt -> ENTERO .)
    MULTI           reduce using rule 49 (valorInt -> ENTERO .)
    DIV             reduce using rule 49 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 49 (valorInt -> ENTERO .)
    MOD             reduce using rule 49 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 49 (valorInt -> ENTERO .)
    PDER            reduce using rule 49 (valorInt -> ENTERO .)
    LDER            reduce using rule 49 (valorInt -> ENTERO .)
    $end            reduce using rule 49 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 49 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 49 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 49 (valorInt -> ENTERO .)
    MENOR           reduce using rule 49 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 49 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 49 (valorInt -> ENTERO .)


state 72

    (20) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 69
    ENTERO          shift and go to state 71
    VARIABLE        shift and go to state 80

    expresionDouble                shift and go to state 107
    valorDouble                    shift and go to state 68
    valorInt                       shift and go to state 70

state 73

    (21) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 69
    ENTERO          shift and go to state 71
    VARIABLE        shift and go to state 80

    expresionDouble                shift and go to state 108
    valorDouble                    shift and go to state 68
    valorInt                       shift and go to state 70

state 74

    (22) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE

    STRING          shift and go to state 85
    VARIABLE        shift and go to state 86

    expresionString                shift and go to state 109
    valorString                    shift and go to state 21

state 75

    (23) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (40) expresionBool -> . valorDouble comparadorMat expresionDouble
    (41) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (42) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (43) expresionBool -> . valorDouble comparadorMat VARIABLE
    (44) expresionBool -> . valorBool
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (38) valorBool -> . BOOL
    (39) valorBool -> . VARIABLE
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 89
    DOUBLE          shift and go to state 69
    BOOL            shift and go to state 29
    ENTERO          shift and go to state 71

    expresionBool                  shift and go to state 110
    valorDouble                    shift and go to state 88
    valorBool                      shift and go to state 22
    valorInt                       shift and go to state 70

state 76

    (24) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (30) expresion -> . valor operadorMat expresion
    (31) expresion -> . valor
    (32) expresion -> . expresionString
    (33) expresion -> . expresionInt
    (34) expresion -> . expresionDouble
    (26) valor -> . ENTERO
    (27) valor -> . VARIABLE
    (28) valor -> . DOUBLE
    (29) valor -> . STRING
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt

    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 104
    STRING          shift and go to state 105

    expresion                      shift and go to state 111
    valor                          shift and go to state 25
    expresionString                shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    valorString                    shift and go to state 21
    valorInt                       shift and go to state 19
    valorDouble                    shift and go to state 68

state 77

    (25) asignacion -> VAR VARIABLE IGUAL . expresion
    (30) expresion -> . valor operadorMat expresion
    (31) expresion -> . valor
    (32) expresion -> . expresionString
    (33) expresion -> . expresionInt
    (34) expresion -> . expresionDouble
    (26) valor -> . ENTERO
    (27) valor -> . VARIABLE
    (28) valor -> . DOUBLE
    (29) valor -> . STRING
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt

    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 103
    DOUBLE          shift and go to state 104
    STRING          shift and go to state 105

    expresion                      shift and go to state 112
    valor                          shift and go to state 25
    expresionString                shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    valorString                    shift and go to state 21
    valorInt                       shift and go to state 19
    valorDouble                    shift and go to state 68

state 78

    (51) expresionInt -> valorInt . operadorMat expresionInt
    (52) expresionInt -> valorInt .
    (57) operadorMat -> . SUMA
    (58) operadorMat -> . RESTA
    (59) operadorMat -> . MULTI
    (60) operadorMat -> . DIV
    (61) operadorMat -> . DIVENTERO
    (62) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 52 (expresionInt -> valorInt .)
    LDER            reduce using rule 52 (expresionInt -> valorInt .)
    $end            reduce using rule 52 (expresionInt -> valorInt .)
    SUMA            shift and go to state 53
    RESTA           shift and go to state 54
    MULTI           shift and go to state 55
    DIV             shift and go to state 56
    DIVENTERO       shift and go to state 57
    MOD             shift and go to state 58

    operadorMat                    shift and go to state 52

state 79

    (51) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 51 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 51 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 51 (expresionInt -> valorInt operadorMat expresionInt .)


state 80

    (50) valorInt -> VARIABLE .

    SUMA            reduce using rule 50 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 50 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 50 (valorInt -> VARIABLE .)
    DIV             reduce using rule 50 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 50 (valorInt -> VARIABLE .)
    MOD             reduce using rule 50 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 50 (valorInt -> VARIABLE .)
    LDER            reduce using rule 50 (valorInt -> VARIABLE .)
    $end            reduce using rule 50 (valorInt -> VARIABLE .)
    PDER            reduce using rule 50 (valorInt -> VARIABLE .)


state 81

    (55) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 55 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 55 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 55 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 55 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 82

    (40) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 40 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 40 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 83

    (43) expresionBool -> valorDouble comparadorMat VARIABLE .
    (50) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 43 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 43 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 43 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 43 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 50 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 50 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 50 (valorInt -> VARIABLE .)
    DIV             reduce using rule 50 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 50 (valorInt -> VARIABLE .)
    MOD             reduce using rule 50 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 50 (valorInt -> VARIABLE .) ]


state 84

    (47) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 47 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 47 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 47 (expresionString -> valorString operadorMat expresionString .)


state 85

    (45) valorString -> STRING .

    SUMA            reduce using rule 45 (valorString -> STRING .)
    RESTA           reduce using rule 45 (valorString -> STRING .)
    MULTI           reduce using rule 45 (valorString -> STRING .)
    DIV             reduce using rule 45 (valorString -> STRING .)
    DIVENTERO       reduce using rule 45 (valorString -> STRING .)
    MOD             reduce using rule 45 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 45 (valorString -> STRING .)
    LDER            reduce using rule 45 (valorString -> STRING .)
    $end            reduce using rule 45 (valorString -> STRING .)


state 86

    (46) valorString -> VARIABLE .

    SUMA            reduce using rule 46 (valorString -> VARIABLE .)
    RESTA           reduce using rule 46 (valorString -> VARIABLE .)
    MULTI           reduce using rule 46 (valorString -> VARIABLE .)
    DIV             reduce using rule 46 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 46 (valorString -> VARIABLE .)
    MOD             reduce using rule 46 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 46 (valorString -> VARIABLE .)
    LDER            reduce using rule 46 (valorString -> VARIABLE .)
    $end            reduce using rule 46 (valorString -> VARIABLE .)


state 87

    (35) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (36) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo

    PDER            shift and go to state 113


state 88

    (40) expresionBool -> valorDouble . comparadorMat expresionDouble
    (43) expresionBool -> valorDouble . comparadorMat VARIABLE
    (63) comparadorMat -> . DIGUAL
    (64) comparadorMat -> . NOIGUAL
    (65) comparadorMat -> . MAYOR
    (66) comparadorMat -> . MENOR
    (67) comparadorMat -> . MAYIGUAL
    (68) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 40
    NOIGUAL         shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYIGUAL        shift and go to state 44
    MENIGUAL        shift and go to state 45

    comparadorMat                  shift and go to state 60

state 89

    (41) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (42) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (39) valorBool -> VARIABLE .
    (50) valorInt -> VARIABLE .
    (63) comparadorMat -> . DIGUAL
    (64) comparadorMat -> . NOIGUAL
    (65) comparadorMat -> . MAYOR
    (66) comparadorMat -> . MENOR
    (67) comparadorMat -> . MAYIGUAL
    (68) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PDER            reduce using rule 39 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 39 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 40
    NOIGUAL         shift and go to state 41
    MAYOR           shift and go to state 42
    MENOR           shift and go to state 43
    MAYIGUAL        shift and go to state 44
    MENIGUAL        shift and go to state 45

  ! DIGUAL          [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 50 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 39

state 90

    (37) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 114


state 91

    (14) algoritmo -> expresionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 115


state 92

    (10) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 116


state 93

    (11) algoritmo -> expresionInt . PUNTOYCOMA
    (33) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 117
    LDER            reduce using rule 33 (expresion -> expresionInt .)
    $end            reduce using rule 33 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 33 (expresion -> expresionInt .) ]


state 94

    (12) algoritmo -> expresionDouble . PUNTOYCOMA
    (34) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 118
    LDER            reduce using rule 34 (expresion -> expresionDouble .)
    $end            reduce using rule 34 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 34 (expresion -> expresionDouble .) ]


state 95

    (13) algoritmo -> expresionString . PUNTOYCOMA
    (32) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 119
    LDER            reduce using rule 32 (expresion -> expresionString .)
    $end            reduce using rule 32 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 32 (expresion -> expresionString .) ]


state 96

    (16) algoritmo -> sentenciaWhile .
    (17) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    LDER            reduce using rule 16 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 16 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 120

  ! PUNTOYCOMA      [ reduce using rule 16 (algoritmo -> sentenciaWhile .) ]


state 97

    (18) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 121


state 98

    (30) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 30 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 30 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 30 (expresion -> valor operadorMat expresion .)


state 99

    (32) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 32 (expresion -> expresionString .)
    LDER            reduce using rule 32 (expresion -> expresionString .)
    $end            reduce using rule 32 (expresion -> expresionString .)


state 100

    (33) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 33 (expresion -> expresionInt .)
    LDER            reduce using rule 33 (expresion -> expresionInt .)
    $end            reduce using rule 33 (expresion -> expresionInt .)


state 101

    (34) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 34 (expresion -> expresionDouble .)
    LDER            reduce using rule 34 (expresion -> expresionDouble .)
    $end            reduce using rule 34 (expresion -> expresionDouble .)


state 102

    (26) valor -> ENTERO .
    (49) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 26 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 26 (valor -> ENTERO .)
    SUMA            reduce using rule 26 (valor -> ENTERO .)
    RESTA           reduce using rule 26 (valor -> ENTERO .)
    MULTI           reduce using rule 26 (valor -> ENTERO .)
    DIV             reduce using rule 26 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 26 (valor -> ENTERO .)
    MOD             reduce using rule 26 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 26 (valor -> ENTERO .)
    LDER            reduce using rule 26 (valor -> ENTERO .)
    $end            reduce using rule 26 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 49 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 49 (valorInt -> ENTERO .) ]


state 103

    (27) valor -> VARIABLE .
    (46) valorString -> VARIABLE .
    (50) valorInt -> VARIABLE .

  ! reduce/reduce conflict for SUMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 27 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 27 (valor -> VARIABLE .)
    SUMA            reduce using rule 27 (valor -> VARIABLE .)
    RESTA           reduce using rule 27 (valor -> VARIABLE .)
    MULTI           reduce using rule 27 (valor -> VARIABLE .)
    DIV             reduce using rule 27 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 27 (valor -> VARIABLE .)
    MOD             reduce using rule 27 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 27 (valor -> VARIABLE .)
    LDER            reduce using rule 27 (valor -> VARIABLE .)
    $end            reduce using rule 27 (valor -> VARIABLE .)

  ! SUMA            [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 46 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 50 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 50 (valorInt -> VARIABLE .) ]


state 104

    (28) valor -> DOUBLE .
    (53) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 28 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 28 (valor -> DOUBLE .)
    SUMA            reduce using rule 28 (valor -> DOUBLE .)
    RESTA           reduce using rule 28 (valor -> DOUBLE .)
    MULTI           reduce using rule 28 (valor -> DOUBLE .)
    DIV             reduce using rule 28 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 28 (valor -> DOUBLE .)
    MOD             reduce using rule 28 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 28 (valor -> DOUBLE .)
    LDER            reduce using rule 28 (valor -> DOUBLE .)
    $end            reduce using rule 28 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 53 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 53 (valorDouble -> DOUBLE .) ]


state 105

    (29) valor -> STRING .
    (45) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 29 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 29 (valor -> STRING .)
    SUMA            reduce using rule 29 (valor -> STRING .)
    RESTA           reduce using rule 29 (valor -> STRING .)
    MULTI           reduce using rule 29 (valor -> STRING .)
    DIV             reduce using rule 29 (valor -> STRING .)
    DIVENTERO       reduce using rule 29 (valor -> STRING .)
    MOD             reduce using rule 29 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 29 (valor -> STRING .)
    LDER            reduce using rule 29 (valor -> STRING .)
    $end            reduce using rule 29 (valor -> STRING .)

  ! SUMA            [ reduce using rule 45 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 45 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 45 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 45 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 45 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 45 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 45 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 45 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 45 (valorString -> STRING .) ]


state 106

    (19) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 19 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 107

    (20) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 20 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 108

    (21) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 21 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 109

    (22) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 22 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 110

    (23) asignacion -> BOOLR VARIABLE IGUAL expresionBool .

    PUNTOYCOMA      reduce using rule 23 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)


state 111

    (24) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 24 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 112

    (25) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 113

    (35) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (36) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresionInt PUNTOYCOMA
    (12) algoritmo -> . expresionDouble PUNTOYCOMA
    (13) algoritmo -> . expresionString PUNTOYCOMA
    (14) algoritmo -> . expresionBool PUNTOYCOMA
    (15) algoritmo -> . expresion
    (16) algoritmo -> . sentenciaWhile
    (17) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (18) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (19) asignacion -> . INT VARIABLE IGUAL expresionInt
    (20) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (21) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (22) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (23) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (24) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (25) asignacion -> . VAR VARIABLE IGUAL expresion
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (40) expresionBool -> . valorDouble comparadorMat expresionDouble
    (41) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (42) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (43) expresionBool -> . valorDouble comparadorMat VARIABLE
    (44) expresionBool -> . valorBool
    (30) expresion -> . valor operadorMat expresion
    (31) expresion -> . valor
    (32) expresion -> . expresionString
    (33) expresion -> . expresionInt
    (34) expresion -> . expresionDouble
    (35) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (36) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (37) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE
    (38) valorBool -> . BOOL
    (39) valorBool -> . VARIABLE
    (26) valor -> . ENTERO
    (27) valor -> . VARIABLE
    (28) valor -> . DOUBLE
    (29) valor -> . STRING

    LIZQ            shift and go to state 122
    INT             shift and go to state 11
    DOUBLER         shift and go to state 13
    NUM             shift and go to state 14
    STRINGR         shift and go to state 15
    BOOLR           shift and go to state 16
    DYNAMIC         shift and go to state 17
    VAR             shift and go to state 18
    VARIABLE        shift and go to state 12
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    ENTERO          shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 29

    expresionBool                  shift and go to state 91
    algoritmo                      shift and go to state 123
    asignacion                     shift and go to state 92
    expresionInt                   shift and go to state 93
    expresionDouble                shift and go to state 94
    expresionString                shift and go to state 95
    expresion                      shift and go to state 10
    sentenciaWhile                 shift and go to state 96
    sentenciaDoWhile               shift and go to state 97
    valorInt                       shift and go to state 19
    valorDouble                    shift and go to state 20
    valorString                    shift and go to state 21
    valorBool                      shift and go to state 22
    valor                          shift and go to state 25

state 114

    (37) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 124


state 115

    (14) algoritmo -> expresionBool PUNTOYCOMA .

    LDER            reduce using rule 14 (algoritmo -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 14 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 14 (algoritmo -> expresionBool PUNTOYCOMA .)


state 116

    (10) algoritmo -> asignacion PUNTOYCOMA .

    LDER            reduce using rule 10 (algoritmo -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 10 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 10 (algoritmo -> asignacion PUNTOYCOMA .)


state 117

    (11) algoritmo -> expresionInt PUNTOYCOMA .

    LDER            reduce using rule 11 (algoritmo -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 11 (algoritmo -> expresionInt PUNTOYCOMA .)


state 118

    (12) algoritmo -> expresionDouble PUNTOYCOMA .

    LDER            reduce using rule 12 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 12 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 12 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 119

    (13) algoritmo -> expresionString PUNTOYCOMA .

    LDER            reduce using rule 13 (algoritmo -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 13 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 13 (algoritmo -> expresionString PUNTOYCOMA .)


state 120

    (17) algoritmo -> sentenciaWhile PUNTOYCOMA .

    LDER            reduce using rule 17 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 17 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 121

    (18) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    LDER            reduce using rule 18 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 18 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 18 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 122

    (35) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresionInt PUNTOYCOMA
    (12) algoritmo -> . expresionDouble PUNTOYCOMA
    (13) algoritmo -> . expresionString PUNTOYCOMA
    (14) algoritmo -> . expresionBool PUNTOYCOMA
    (15) algoritmo -> . expresion
    (16) algoritmo -> . sentenciaWhile
    (17) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (18) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (19) asignacion -> . INT VARIABLE IGUAL expresionInt
    (20) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (21) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (22) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (23) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (24) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (25) asignacion -> . VAR VARIABLE IGUAL expresion
    (51) expresionInt -> . valorInt operadorMat expresionInt
    (52) expresionInt -> . valorInt
    (55) expresionDouble -> . valorDouble operadorMat expresionDouble
    (56) expresionDouble -> . valorDouble
    (47) expresionString -> . valorString operadorMat expresionString
    (48) expresionString -> . valorString
    (40) expresionBool -> . valorDouble comparadorMat expresionDouble
    (41) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (42) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (43) expresionBool -> . valorDouble comparadorMat VARIABLE
    (44) expresionBool -> . valorBool
    (30) expresion -> . valor operadorMat expresion
    (31) expresion -> . valor
    (32) expresion -> . expresionString
    (33) expresion -> . expresionInt
    (34) expresion -> . expresionDouble
    (35) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (36) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (37) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (45) valorString -> . STRING
    (46) valorString -> . VARIABLE
    (38) valorBool -> . BOOL
    (39) valorBool -> . VARIABLE
    (26) valor -> . ENTERO
    (27) valor -> . VARIABLE
    (28) valor -> . DOUBLE
    (29) valor -> . STRING

    INT             shift and go to state 11
    DOUBLER         shift and go to state 13
    NUM             shift and go to state 14
    STRINGR         shift and go to state 15
    BOOLR           shift and go to state 16
    DYNAMIC         shift and go to state 17
    VAR             shift and go to state 18
    VARIABLE        shift and go to state 12
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    ENTERO          shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    BOOL            shift and go to state 29

    expresionBool                  shift and go to state 91
    algoritmo                      shift and go to state 125
    asignacion                     shift and go to state 92
    expresionInt                   shift and go to state 93
    expresionDouble                shift and go to state 94
    expresionString                shift and go to state 95
    expresion                      shift and go to state 10
    sentenciaWhile                 shift and go to state 96
    sentenciaDoWhile               shift and go to state 97
    valorInt                       shift and go to state 19
    valorDouble                    shift and go to state 20
    valorString                    shift and go to state 21
    valorBool                      shift and go to state 22
    valor                          shift and go to state 25

state 123

    (36) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 36 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 36 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 36 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 124

    (37) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 126


state 125

    (35) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 127


state 126

    (37) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (40) expresionBool -> . valorDouble comparadorMat expresionDouble
    (41) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (42) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (43) expresionBool -> . valorDouble comparadorMat VARIABLE
    (44) expresionBool -> . valorBool
    (53) valorDouble -> . DOUBLE
    (54) valorDouble -> . valorInt
    (38) valorBool -> . BOOL
    (39) valorBool -> . VARIABLE
    (49) valorInt -> . ENTERO
    (50) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 89
    DOUBLE          shift and go to state 69
    BOOL            shift and go to state 29
    ENTERO          shift and go to state 71

    expresionBool                  shift and go to state 128
    valorDouble                    shift and go to state 88
    valorBool                      shift and go to state 22
    valorInt                       shift and go to state 70

state 127

    (35) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 35 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 35 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 35 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 128

    (37) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER

    PDER            shift and go to state 129


state 129

    (37) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 37 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 12 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 12 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 19 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 19 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 19 resolved as shift
WARNING: shift/reduce conflict for DIV in state 19 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 19 resolved as shift
WARNING: shift/reduce conflict for MOD in state 19 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 89 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 93 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 94 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 95 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 96 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 12
WARNING: reduce/reduce conflict in state 19 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 19
WARNING: reduce/reduce conflict in state 26 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 27
WARNING: reduce/reduce conflict in state 28 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 28
WARNING: reduce/reduce conflict in state 66 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 66
WARNING: reduce/reduce conflict in state 83 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 83
WARNING: reduce/reduce conflict in state 102 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 103
WARNING: reduce/reduce conflict in state 103 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 103
WARNING: reduce/reduce conflict in state 104 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 104
WARNING: reduce/reduce conflict in state 105 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 105
