
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS BOOL BOOLR BREAK CASE CDER CIZQ COMA COMILLAD COMILLAS DIGUAL DIV DIVENTERO DO DOSPUNTOS DOUBLE DOUBLER DRESTA DSUMA DYNAMIC ELSE ELSEIF ENTERO FLECHA FOR FUNCIONARR FUNCIONRANGE FUNCIONSTDIN FUNCIONSTDOUT FUNCIONSTRING FUNCIONTAKE IF IGUAL INT IS ISNEGADO LDER LIST LIZQ MAP MAYIGUAL MAYOR MENIGUAL MENOR MOD MULTI NOIGUAL NOT NUM OR PDER PIZQ PRINT PUNTOYCOMA RESTA RETURN SET STRING STRINGR SUMA SWITCH VAR VARIABLE WHILEfinal : algoritmo PUNTOYCOMA\n             | algoritmo PUNTOYCOMA final\n             | asignacion PUNTOYCOMA\n             | asignacion PUNTOYCOMA final\n             | expresionInt PUNTOYCOMA\n             | expresionInt PUNTOYCOMA final\n             | expresionDouble PUNTOYCOMA\n             | expresionDouble PUNTOYCOMA final\n             | expresionString PUNTOYCOMA\n             | expresionString PUNTOYCOMA final\n             | expresionBool PUNTOYCOMA\n             | expresionBool PUNTOYCOMA final\n             | sentenciaWhile\n             | sentenciaWhile final\n             | sentenciaWhile PUNTOYCOMA\n             | sentenciaWhile PUNTOYCOMA final\n             | sentenciaDoWhile PUNTOYCOMA\n             | sentenciaDoWhile PUNTOYCOMA final\n             | sentenciaIf PUNTOYCOMA\n             | sentenciaIf PUNTOYCOMA final\n             | sentenciaIf\n             | sentenciaIf final\n             | sentenciaElse PUNTOYCOMA\n             | sentenciaElse PUNTOYCOMA final\n             | sentenciaElse\n             | sentenciaElse final\n             | imprimir PUNTOYCOMA\n             | imprimir PUNTOYCOMA final\n             | negacionBool PUNTOYCOMA\n             | negacionBool PUNTOYCOMA final\n             | comparacionBool final\n             | comparacionBool PUNTOYCOMA\n    algoritmo : asignacion PUNTOYCOMA\n                 | expresionInt PUNTOYCOMA\n                 | expresionDouble PUNTOYCOMA\n                 | expresionString PUNTOYCOMA\n                 | expresionBool PUNTOYCOMA\n                 | expresion\n                 | sentenciaWhile\n                 | sentenciaWhile PUNTOYCOMA\n                 | sentenciaDoWhile PUNTOYCOMA\n                 | sentenciaIf PUNTOYCOMA\n                 | sentenciaIf\n                 | sentenciaElse PUNTOYCOMA\n                 | sentenciaElse\n                 | imprimir PUNTOYCOMA\n                 | negacionBool PUNTOYCOMA\n                 | comparacionBool PUNTOYCOMA\n    asignacion : INT VARIABLE IGUAL expresionInt\n                  | DOUBLER VARIABLE IGUAL expresionDouble\n                  | NUM VARIABLE IGUAL expresionDouble\n                  | STRINGR VARIABLE IGUAL expresionString\n                  | BOOLR VARIABLE IGUAL expresionBool\n                  | DYNAMIC VARIABLE IGUAL expresion\n                  | VAR VARIABLE IGUAL expresion\n                  | asignacionSimple\n\n    asignacionSimple : VARIABLE IGUAL expresionimprimir : PRINT PIZQ expresion PDER\n                | PRINT PIZQ asignacionSimple PDERsentenciaIf : IF PIZQ expresionBool PDER algoritmo\n                   | IF PIZQ expresionBool PDER LIZQ algoritmo LDER\n    sentenciaElse : ELSE algoritmo\n                     | ELSE LIZQ algoritmo LDER\n    valor : ENTERO\n             | VARIABLE\n             | DOUBLE\n             | STRING\n    expresion : valor operadorMat expresion\n                 | valor\n                 | expresionString\n                 | expresionInt\n                 | expresionDouble\n                 | expresionBool\n    sentenciaWhile : WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER\n                      | WHILE PIZQ expresionBool PDER algoritmo\n    sentenciaDoWhile : DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDERvalorBool : BOOL\n                 | VARIABLE\n    expresionBool : valorDouble comparadorMat expresionDouble\n                       | VARIABLE comparadorMat expresionDouble\n                       | VARIABLE comparadorMat VARIABLE\n                       | valorDouble comparadorMat VARIABLE\n                       | valorBool\n                       | negacionBool\n                       | comparacionBool\n    negacionBool : NOT PIZQ expresionBool PDERcomparacionBool : expresionBool operadorLogico expresionBool\n                       | expresionBool operadorLogico comparacionBool\n    valorString : STRING\n                   | VARIABLE\n    expresionString : valorString operadorMat expresionString\n                       | valorString\n    valorInt : ENTERO\n                | VARIABLE\n    expresionInt : valorInt operadorMat expresionInt\n                    | valorInt\n    valorDouble : DOUBLE\n                   | valorInt\n    expresionDouble : valorDouble operadorMat expresionDouble\n                       | valorDouble\n    operadorMat : SUMA\n                   | RESTA\n                   | MULTI\n                   | DIV\n                   | DIVENTERO\n                   | MOD\n    comparadorMat : DIGUAL\n                     | NOIGUAL\n                     | MAYOR\n                     | MENOR\n                     | MAYIGUAL\n                     | MENIGUAL\n    operadorLogico : AND\n                      | OR\n    '
    
_lr_action_items = {'INT':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[16,16,16,16,16,-38,-65,-96,-100,-92,-83,16,-69,-64,-66,-67,-77,16,16,16,16,16,16,16,16,16,16,16,16,16,-62,16,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,16,16,-63,-86,16,-75,-60,16,-74,-61,]),'DOUBLER':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[18,18,18,18,18,-38,-65,-96,-100,-92,-83,18,-69,-64,-66,-67,-77,18,18,18,18,18,18,18,18,18,18,18,18,18,-62,18,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,18,18,-63,-86,18,-75,-60,18,-74,-61,]),'NUM':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[19,19,19,19,19,-38,-65,-96,-100,-92,-83,19,-69,-64,-66,-67,-77,19,19,19,19,19,19,19,19,19,19,19,19,19,-62,19,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,19,19,-63,-86,19,-75,-60,19,-74,-61,]),'STRINGR':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[20,20,20,20,20,-38,-65,-96,-100,-92,-83,20,-69,-64,-66,-67,-77,20,20,20,20,20,20,20,20,20,20,20,20,20,-62,20,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,20,20,-63,-86,20,-75,-60,20,-74,-61,]),'BOOLR':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[21,21,21,21,21,-38,-65,-96,-100,-92,-83,21,-69,-64,-66,-67,-77,21,21,21,21,21,21,21,21,21,21,21,21,21,-62,21,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,21,21,-63,-86,21,-75,-60,21,-74,-61,]),'DYNAMIC':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[22,22,22,22,22,-38,-65,-96,-100,-92,-83,22,-69,-64,-66,-67,-77,22,22,22,22,22,22,22,22,22,22,22,22,22,-62,22,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,22,22,-63,-86,22,-75,-60,22,-74,-61,]),'VAR':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[23,23,23,23,23,-38,-65,-96,-100,-92,-83,23,-69,-64,-66,-67,-77,23,23,23,23,23,23,23,23,23,23,23,23,23,-62,23,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,23,23,-63,-86,23,-75,-60,23,-74,-61,]),'VARIABLE':([0,8,10,11,14,15,16,17,18,19,20,21,22,23,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,56,57,61,62,63,64,65,66,67,68,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,97,98,100,101,102,103,104,111,112,114,115,116,117,118,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,195,197,199,],[17,17,17,17,17,-38,60,-65,69,70,71,72,73,74,-96,-100,-92,-83,17,-69,-64,-66,-67,-77,17,17,17,17,17,17,114,-113,-114,17,17,17,17,17,17,126,129,-107,-108,-109,-110,-111,-112,147,-101,-102,-103,-104,-105,-106,147,150,153,114,17,114,-62,17,-71,-72,-70,-73,-39,-43,-45,-84,-85,172,114,129,-87,-85,-78,-84,-97,-98,-93,147,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,147,147,153,114,129,129,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,17,17,-63,-86,17,-75,-60,17,114,-74,-61,]),'WHILE':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,183,184,185,188,189,190,192,193,197,199,],[29,29,29,29,29,-38,-65,-96,-100,-92,-83,29,-69,-64,-66,-67,-77,29,29,29,29,29,29,29,29,29,29,29,29,29,-62,29,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,29,191,29,-63,-86,29,-75,-60,29,-74,-61,]),'DO':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[30,30,30,30,30,-38,-65,-96,-100,-92,-83,30,-69,-64,-66,-67,-77,30,30,30,30,30,30,30,30,30,30,30,30,30,-62,30,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,30,30,-63,-86,30,-75,-60,30,-74,-61,]),'IF':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[31,31,31,31,31,-38,-65,-96,-100,-92,-83,31,-69,-64,-66,-67,-77,31,31,31,31,31,31,31,31,31,31,31,31,31,-62,31,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,31,31,-63,-86,31,-75,-60,31,-74,-61,]),'ELSE':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[32,32,32,32,32,-38,-65,-96,-100,-92,-83,32,-69,-64,-66,-67,-77,32,32,32,32,32,32,32,32,32,32,32,32,32,-62,32,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,32,32,-63,-86,32,-75,-60,32,-74,-61,]),'PRINT':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,86,88,89,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[33,33,33,33,33,-38,-65,-96,-100,-92,-83,33,-69,-64,-66,-67,-77,33,33,33,33,33,33,33,33,33,33,33,33,33,-62,33,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,33,33,-63,-86,33,-75,-60,33,-74,-61,]),'NOT':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,56,57,62,76,77,78,79,80,81,85,86,87,88,89,91,92,93,94,95,97,98,100,101,102,103,104,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,142,143,144,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,195,197,199,],[34,34,34,34,34,-38,-65,-96,-100,-92,-83,34,-69,-64,-66,-67,-77,34,34,34,34,34,34,34,-113,-114,34,34,34,34,34,34,34,-101,-102,-103,-104,-105,-106,34,34,34,-62,34,-71,-72,-70,-73,-39,-43,-45,-84,-85,34,34,34,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,34,34,34,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,34,34,-63,-86,34,-75,-60,34,34,-74,-61,]),'ENTERO':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,56,57,61,62,63,64,65,66,67,68,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,93,94,95,97,98,100,101,102,103,104,111,112,114,115,116,117,118,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,195,197,199,],[36,36,36,36,36,-38,-65,-96,-100,-92,-83,36,-69,-64,-66,-67,-77,36,36,36,36,36,36,118,-113,-114,36,36,36,36,36,36,118,135,-107,-108,-109,-110,-111,-112,118,-101,-102,-103,-104,-105,-106,118,118,118,36,118,-62,36,-71,-72,-70,-73,-39,-43,-45,-84,-85,135,118,135,-87,-85,-78,-84,-97,-98,-93,118,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,118,118,118,135,135,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,36,36,-63,-86,36,-75,-60,36,118,-74,-61,]),'DOUBLE':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,56,57,61,62,63,64,65,66,67,68,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,93,94,95,97,98,100,101,102,103,104,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,195,197,199,],[37,37,37,37,37,-38,-65,-96,-100,-92,-83,37,-69,-64,-66,-67,-77,37,37,37,37,37,37,116,-113,-114,37,37,37,37,37,37,116,136,-107,-108,-109,-110,-111,-112,-101,-102,-103,-104,-105,-106,116,116,116,37,116,-62,37,-71,-72,-70,-73,-39,-43,-45,-84,-85,136,116,136,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,116,116,116,136,136,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,37,37,-63,-86,37,-75,-60,37,116,-74,-61,]),'STRING':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,50,51,52,54,56,57,62,76,77,78,79,80,81,84,86,88,89,91,92,93,94,95,97,98,100,101,102,104,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,141,143,144,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,197,199,],[38,38,38,38,38,-38,-65,-96,-100,-92,-83,38,-69,-64,-66,-67,-77,38,38,38,38,38,38,38,38,38,38,38,38,137,-101,-102,-103,-104,-105,-106,152,38,-62,38,-71,-72,-70,-73,-39,-43,-45,-84,-85,137,137,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,152,137,137,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,38,38,-63,-86,38,-75,-60,38,-74,-61,]),'BOOL':([0,8,10,11,14,15,17,25,26,27,28,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,56,57,62,76,77,78,79,80,81,85,86,87,88,89,91,92,93,94,95,97,98,100,101,102,103,104,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,142,143,144,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,182,184,185,188,189,190,192,193,195,197,199,],[39,39,39,39,39,-38,-65,-96,-100,-92,-83,39,-69,-64,-66,-67,-77,39,39,39,39,39,39,39,-113,-114,39,39,39,39,39,39,39,-101,-102,-103,-104,-105,-106,39,39,39,-62,39,-71,-72,-70,-73,-39,-43,-45,-84,-85,39,39,39,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,39,39,39,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,39,39,-63,-86,39,-75,-60,39,39,-74,-61,]),'$end':([1,8,10,11,15,17,25,26,27,28,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,58,59,88,91,92,93,94,95,97,98,100,101,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,185,188,190,192,197,199,],[0,-13,-21,-25,-38,-65,-96,-100,-92,-83,-69,-64,-66,-67,-77,-1,-3,-5,-7,-9,-11,-14,-15,-17,-19,-22,-23,-26,-27,-29,-31,-32,-62,-71,-72,-70,-73,-39,-43,-45,-84,-85,-2,-4,-6,-8,-10,-12,-87,-85,-78,-84,-97,-98,-93,-16,-18,-20,-24,-28,-30,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,-63,-86,-75,-60,-74,-61,]),'PUNTOYCOMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,24,25,26,27,28,35,36,37,38,39,41,42,43,44,45,50,51,52,54,56,57,59,88,90,91,92,93,94,95,96,97,98,99,100,101,111,112,114,115,116,117,118,126,127,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,158,159,160,161,162,163,164,165,166,167,168,169,174,175,176,177,178,179,180,181,185,186,187,188,190,192,197,199,200,],[40,41,42,43,44,45,50,51,52,54,56,57,59,-38,-65,-56,-96,-100,-92,-83,-69,-64,-66,-67,-77,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-62,158,159,160,161,162,163,164,165,166,167,168,169,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-57,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,-49,-50,-51,-52,-53,-54,-55,-63,-58,-59,-86,-75,-60,-74,-61,-76,]),'AND':([7,13,14,17,28,39,94,100,101,111,112,114,115,116,117,118,126,127,128,129,134,138,147,148,149,150,154,156,172,173,179,188,198,],[47,-84,-85,-78,-83,-77,47,-84,-85,47,-85,-78,-84,-97,-98,-93,-81,-80,-100,-78,47,-85,-94,-99,-79,-82,47,47,-78,47,47,-86,47,]),'OR':([7,13,14,17,28,39,94,100,101,111,112,114,115,116,117,118,126,127,128,129,134,138,147,148,149,150,154,156,172,173,179,188,198,],[48,-84,-85,-78,-83,-77,48,-84,-85,48,-85,-78,-84,-97,-98,-93,-81,-80,-100,-78,48,-85,-94,-99,-79,-82,48,48,-78,48,48,-86,48,]),'LDER':([15,17,25,26,27,28,35,36,37,38,39,88,91,92,93,94,95,97,98,100,101,111,112,114,115,116,117,118,126,127,128,129,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,155,157,158,159,160,161,162,163,164,165,166,167,168,169,174,185,188,190,192,194,196,197,199,],[-38,-65,-96,-100,-92,-83,-69,-64,-66,-67,-77,-62,-71,-72,-70,-73,-39,-43,-45,-84,-85,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,183,185,-33,-34,-35,-36,-37,-40,-41,-42,-44,-46,-47,-48,-68,-63,-86,-75,-60,197,199,-74,-61,]),'IGUAL':([17,60,69,70,71,72,73,74,172,],[62,125,139,140,141,142,143,144,62,]),'SUMA':([17,25,26,27,35,36,37,38,116,117,118,126,128,129,135,136,137,145,147,150,152,153,172,],[-65,76,76,76,76,-64,-66,-67,-97,-98,-93,-94,76,-65,-64,-66,-67,76,-94,-94,-89,-90,-65,]),'RESTA':([17,25,26,27,35,36,37,38,116,117,118,126,128,129,135,136,137,145,147,150,152,153,172,],[-65,77,77,77,77,-64,-66,-67,-97,-98,-93,-94,77,-65,-64,-66,-67,77,-94,-94,-89,-90,-65,]),'MULTI':([17,25,26,27,35,36,37,38,116,117,118,126,128,129,135,136,137,145,147,150,152,153,172,],[-65,78,78,78,78,-64,-66,-67,-97,-98,-93,-94,78,-65,-64,-66,-67,78,-94,-94,-89,-90,-65,]),'DIV':([17,25,26,27,35,36,37,38,116,117,118,126,128,129,135,136,137,145,147,150,152,153,172,],[-65,79,79,79,79,-64,-66,-67,-97,-98,-93,-94,79,-65,-64,-66,-67,79,-94,-94,-89,-90,-65,]),'DIVENTERO':([17,25,26,27,35,36,37,38,116,117,118,126,128,129,135,136,137,145,147,150,152,153,172,],[-65,80,80,80,80,-64,-66,-67,-97,-98,-93,-94,80,-65,-64,-66,-67,80,-94,-94,-89,-90,-65,]),'MOD':([17,25,26,27,35,36,37,38,116,117,118,126,128,129,135,136,137,145,147,150,152,153,172,],[-65,81,81,81,81,-64,-66,-67,-97,-98,-93,-94,81,-65,-64,-66,-67,81,-94,-94,-89,-90,-65,]),'DIGUAL':([17,25,26,36,37,113,114,116,117,118,129,135,136,172,],[63,-98,63,-93,-97,63,63,-97,-98,-93,63,-93,-97,63,]),'NOIGUAL':([17,25,26,36,37,113,114,116,117,118,129,135,136,172,],[64,-98,64,-93,-97,64,64,-97,-98,-93,64,-93,-97,64,]),'MAYOR':([17,25,26,36,37,113,114,116,117,118,129,135,136,172,],[65,-98,65,-93,-97,65,65,-97,-98,-93,65,-93,-97,65,]),'MENOR':([17,25,26,36,37,113,114,116,117,118,129,135,136,172,],[66,-98,66,-93,-97,66,66,-97,-98,-93,66,-93,-97,66,]),'MAYIGUAL':([17,25,26,36,37,113,114,116,117,118,129,135,136,172,],[67,-98,67,-93,-97,67,67,-97,-98,-93,67,-93,-97,67,]),'MENIGUAL':([17,25,26,36,37,113,114,116,117,118,129,135,136,172,],[68,-98,68,-93,-97,68,68,-97,-98,-93,68,-93,-97,68,]),'PDER':([25,26,27,28,35,39,111,112,114,115,116,117,118,126,127,128,129,130,131,132,133,134,135,136,137,138,145,146,147,148,149,150,151,152,153,154,156,170,171,172,173,174,188,198,],[-96,-100,-92,-83,-69,-77,-87,-85,-78,-84,-97,-98,-93,-81,-80,-100,-65,-57,-70,-71,-72,-73,-64,-66,-67,-85,-96,-95,-94,-99,-79,-82,-91,-89,-90,182,184,186,187,-65,188,-68,-86,200,]),'PIZQ':([29,31,33,34,191,],[85,87,102,103,195,]),'LIZQ':([30,32,182,184,],[86,89,189,193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'final':([0,8,10,11,14,40,41,42,43,44,45,50,51,52,54,56,57,],[1,49,53,55,58,105,106,107,108,109,110,119,120,121,122,123,124,]),'algoritmo':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,182,184,189,193,],[2,2,2,2,2,88,2,2,2,2,2,2,2,2,2,2,2,2,155,157,190,192,194,196,]),'asignacion':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,182,184,189,193,],[3,3,3,3,3,90,3,3,3,3,3,3,3,3,3,3,3,3,90,90,90,90,90,90,]),'expresionInt':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,62,75,86,89,102,104,125,143,144,182,184,189,193,],[4,4,4,4,4,91,4,4,4,4,4,4,4,4,4,4,4,4,132,146,91,91,132,132,175,132,132,91,91,91,91,]),'expresionDouble':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,61,62,82,83,86,89,102,104,139,140,143,144,182,184,189,193,],[5,5,5,5,5,92,5,5,5,5,5,5,5,5,5,5,5,5,127,133,148,149,92,92,133,133,176,177,133,133,92,92,92,92,]),'expresionString':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,62,84,86,89,102,104,141,143,144,182,184,189,193,],[6,6,6,6,6,93,6,6,6,6,6,6,6,6,6,6,6,6,131,151,93,93,131,131,178,131,131,93,93,93,93,]),'expresionBool':([0,8,10,11,14,32,40,41,42,43,44,45,46,50,51,52,54,56,57,62,85,86,87,89,102,103,104,142,143,144,182,184,189,193,195,],[7,7,7,7,7,94,7,7,7,7,7,7,111,7,7,7,7,7,7,134,154,94,156,94,134,173,134,179,134,134,94,94,94,94,198,]),'sentenciaWhile':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,182,184,189,193,],[8,8,8,8,8,95,8,8,8,8,8,8,8,8,8,8,8,8,95,95,95,95,95,95,]),'sentenciaDoWhile':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,182,184,189,193,],[9,9,9,9,9,96,9,9,9,9,9,9,9,9,9,9,9,9,96,96,96,96,96,96,]),'sentenciaIf':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,182,184,189,193,],[10,10,10,10,10,97,10,10,10,10,10,10,10,10,10,10,10,10,97,97,97,97,97,97,]),'sentenciaElse':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,182,184,189,193,],[11,11,11,11,11,98,11,11,11,11,11,11,11,11,11,11,11,11,98,98,98,98,98,98,]),'imprimir':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,182,184,189,193,],[12,12,12,12,12,99,12,12,12,12,12,12,12,12,12,12,12,12,99,99,99,99,99,99,]),'negacionBool':([0,8,10,11,14,32,40,41,42,43,44,45,46,50,51,52,54,56,57,62,85,86,87,89,102,103,104,142,143,144,182,184,189,193,195,],[13,13,13,13,13,100,13,13,13,13,13,13,115,13,13,13,13,13,13,115,115,100,115,100,115,115,115,115,115,115,100,100,100,100,115,]),'comparacionBool':([0,8,10,11,14,32,40,41,42,43,44,45,46,50,51,52,54,56,57,62,85,86,87,89,102,103,104,142,143,144,182,184,189,193,195,],[14,14,14,14,14,101,14,14,14,14,14,14,112,14,14,14,14,14,14,138,138,101,138,101,138,138,138,138,138,138,101,101,101,101,138,]),'expresion':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,62,86,89,102,104,143,144,182,184,189,193,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,130,15,15,170,174,180,181,15,15,15,15,]),'asignacionSimple':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,86,89,102,182,184,189,193,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,171,24,24,24,24,]),'valorInt':([0,8,10,11,14,32,40,41,42,43,44,45,46,50,51,52,54,56,57,61,62,75,82,83,85,86,87,89,102,103,104,125,139,140,142,143,144,182,184,189,193,195,],[25,25,25,25,25,25,25,25,25,25,25,25,117,25,25,25,25,25,25,117,25,145,117,117,117,25,117,25,25,117,25,145,117,117,117,25,25,25,25,25,25,117,]),'valorDouble':([0,8,10,11,14,32,40,41,42,43,44,45,46,50,51,52,54,56,57,61,62,82,83,85,86,87,89,102,103,104,139,140,142,143,144,182,184,189,193,195,],[26,26,26,26,26,26,26,26,26,26,26,26,113,26,26,26,26,26,26,128,26,128,128,113,26,113,26,26,113,26,128,128,113,26,26,26,26,26,26,113,]),'valorString':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,62,84,86,89,102,104,141,143,144,182,184,189,193,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'valorBool':([0,8,10,11,14,32,40,41,42,43,44,45,46,50,51,52,54,56,57,62,85,86,87,89,102,103,104,142,143,144,182,184,189,193,195,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'valor':([0,8,10,11,14,32,40,41,42,43,44,45,50,51,52,54,56,57,62,86,89,102,104,143,144,182,184,189,193,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'operadorLogico':([7,94,111,134,154,156,173,179,198,],[46,46,46,46,46,46,46,46,46,]),'comparadorMat':([17,26,113,114,129,172,],[61,83,83,61,61,61,]),'operadorMat':([25,26,27,35,128,145,],[75,82,84,104,82,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> final","S'",1,None,None,None),
  ('final -> algoritmo PUNTOYCOMA','final',2,'p_final','sintaxisP.py',8),
  ('final -> algoritmo PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',9),
  ('final -> asignacion PUNTOYCOMA','final',2,'p_final','sintaxisP.py',10),
  ('final -> asignacion PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',11),
  ('final -> expresionInt PUNTOYCOMA','final',2,'p_final','sintaxisP.py',12),
  ('final -> expresionInt PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',13),
  ('final -> expresionDouble PUNTOYCOMA','final',2,'p_final','sintaxisP.py',14),
  ('final -> expresionDouble PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',15),
  ('final -> expresionString PUNTOYCOMA','final',2,'p_final','sintaxisP.py',16),
  ('final -> expresionString PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',17),
  ('final -> expresionBool PUNTOYCOMA','final',2,'p_final','sintaxisP.py',18),
  ('final -> expresionBool PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',19),
  ('final -> sentenciaWhile','final',1,'p_final','sintaxisP.py',20),
  ('final -> sentenciaWhile final','final',2,'p_final','sintaxisP.py',21),
  ('final -> sentenciaWhile PUNTOYCOMA','final',2,'p_final','sintaxisP.py',22),
  ('final -> sentenciaWhile PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',23),
  ('final -> sentenciaDoWhile PUNTOYCOMA','final',2,'p_final','sintaxisP.py',24),
  ('final -> sentenciaDoWhile PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',25),
  ('final -> sentenciaIf PUNTOYCOMA','final',2,'p_final','sintaxisP.py',26),
  ('final -> sentenciaIf PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',27),
  ('final -> sentenciaIf','final',1,'p_final','sintaxisP.py',28),
  ('final -> sentenciaIf final','final',2,'p_final','sintaxisP.py',29),
  ('final -> sentenciaElse PUNTOYCOMA','final',2,'p_final','sintaxisP.py',30),
  ('final -> sentenciaElse PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',31),
  ('final -> sentenciaElse','final',1,'p_final','sintaxisP.py',32),
  ('final -> sentenciaElse final','final',2,'p_final','sintaxisP.py',33),
  ('final -> imprimir PUNTOYCOMA','final',2,'p_final','sintaxisP.py',34),
  ('final -> imprimir PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',35),
  ('final -> negacionBool PUNTOYCOMA','final',2,'p_final','sintaxisP.py',36),
  ('final -> negacionBool PUNTOYCOMA final','final',3,'p_final','sintaxisP.py',37),
  ('final -> comparacionBool final','final',2,'p_final','sintaxisP.py',38),
  ('final -> comparacionBool PUNTOYCOMA','final',2,'p_final','sintaxisP.py',39),
  ('algoritmo -> asignacion PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',43),
  ('algoritmo -> expresionInt PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',44),
  ('algoritmo -> expresionDouble PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',45),
  ('algoritmo -> expresionString PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',46),
  ('algoritmo -> expresionBool PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',47),
  ('algoritmo -> expresion','algoritmo',1,'p_algoritmo','sintaxisP.py',48),
  ('algoritmo -> sentenciaWhile','algoritmo',1,'p_algoritmo','sintaxisP.py',49),
  ('algoritmo -> sentenciaWhile PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',50),
  ('algoritmo -> sentenciaDoWhile PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',51),
  ('algoritmo -> sentenciaIf PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',52),
  ('algoritmo -> sentenciaIf','algoritmo',1,'p_algoritmo','sintaxisP.py',53),
  ('algoritmo -> sentenciaElse PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',54),
  ('algoritmo -> sentenciaElse','algoritmo',1,'p_algoritmo','sintaxisP.py',55),
  ('algoritmo -> imprimir PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',56),
  ('algoritmo -> negacionBool PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',57),
  ('algoritmo -> comparacionBool PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',58),
  ('asignacion -> INT VARIABLE IGUAL expresionInt','asignacion',4,'p_asignacion','sintaxisP.py',62),
  ('asignacion -> DOUBLER VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxisP.py',63),
  ('asignacion -> NUM VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxisP.py',64),
  ('asignacion -> STRINGR VARIABLE IGUAL expresionString','asignacion',4,'p_asignacion','sintaxisP.py',65),
  ('asignacion -> BOOLR VARIABLE IGUAL expresionBool','asignacion',4,'p_asignacion','sintaxisP.py',66),
  ('asignacion -> DYNAMIC VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxisP.py',67),
  ('asignacion -> VAR VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxisP.py',68),
  ('asignacion -> asignacionSimple','asignacion',1,'p_asignacion','sintaxisP.py',69),
  ('asignacionSimple -> VARIABLE IGUAL expresion','asignacionSimple',3,'p_asignacionSimple','sintaxisP.py',74),
  ('imprimir -> PRINT PIZQ expresion PDER','imprimir',4,'p_imprimir','sintaxisP.py',84),
  ('imprimir -> PRINT PIZQ asignacionSimple PDER','imprimir',4,'p_imprimir','sintaxisP.py',85),
  ('sentenciaIf -> IF PIZQ expresionBool PDER algoritmo','sentenciaIf',5,'p_sentenciaIf','sintaxisP.py',95),
  ('sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER','sentenciaIf',7,'p_sentenciaIf','sintaxisP.py',96),
  ('sentenciaElse -> ELSE algoritmo','sentenciaElse',2,'p_sentenciaElse','sintaxisP.py',101),
  ('sentenciaElse -> ELSE LIZQ algoritmo LDER','sentenciaElse',4,'p_sentenciaElse','sintaxisP.py',102),
  ('valor -> ENTERO','valor',1,'p_valor','sintaxisP.py',111),
  ('valor -> VARIABLE','valor',1,'p_valor','sintaxisP.py',112),
  ('valor -> DOUBLE','valor',1,'p_valor','sintaxisP.py',113),
  ('valor -> STRING','valor',1,'p_valor','sintaxisP.py',114),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion','sintaxisP.py',118),
  ('expresion -> valor','expresion',1,'p_expresion','sintaxisP.py',119),
  ('expresion -> expresionString','expresion',1,'p_expresion','sintaxisP.py',120),
  ('expresion -> expresionInt','expresion',1,'p_expresion','sintaxisP.py',121),
  ('expresion -> expresionDouble','expresion',1,'p_expresion','sintaxisP.py',122),
  ('expresion -> expresionBool','expresion',1,'p_expresion','sintaxisP.py',123),
  ('sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER','sentenciaWhile',7,'p_sentenciaWhile','sintaxisP.py',133),
  ('sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo','sentenciaWhile',5,'p_sentenciaWhile','sintaxisP.py',134),
  ('sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER','sentenciaDoWhile',8,'p_sentenciaDoWhile','sintaxisP.py',138),
  ('valorBool -> BOOL','valorBool',1,'p_valorBool','sintaxisP.py',146),
  ('valorBool -> VARIABLE','valorBool',1,'p_valorBool','sintaxisP.py',147),
  ('expresionBool -> valorDouble comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxisP.py',151),
  ('expresionBool -> VARIABLE comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxisP.py',152),
  ('expresionBool -> VARIABLE comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxisP.py',153),
  ('expresionBool -> valorDouble comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxisP.py',154),
  ('expresionBool -> valorBool','expresionBool',1,'p_expresionBool','sintaxisP.py',155),
  ('expresionBool -> negacionBool','expresionBool',1,'p_expresionBool','sintaxisP.py',156),
  ('expresionBool -> comparacionBool','expresionBool',1,'p_expresionBool','sintaxisP.py',157),
  ('negacionBool -> NOT PIZQ expresionBool PDER','negacionBool',4,'p_negacionBool','sintaxisP.py',161),
  ('comparacionBool -> expresionBool operadorLogico expresionBool','comparacionBool',3,'p_comparacionBool','sintaxisP.py',164),
  ('comparacionBool -> expresionBool operadorLogico comparacionBool','comparacionBool',3,'p_comparacionBool','sintaxisP.py',165),
  ('valorString -> STRING','valorString',1,'p_valorString','sintaxisP.py',181),
  ('valorString -> VARIABLE','valorString',1,'p_valorString','sintaxisP.py',182),
  ('expresionString -> valorString operadorMat expresionString','expresionString',3,'p_expresion_aritmetica_String','sintaxisP.py',186),
  ('expresionString -> valorString','expresionString',1,'p_expresion_aritmetica_String','sintaxisP.py',187),
  ('valorInt -> ENTERO','valorInt',1,'p_valorInt','sintaxisP.py',197),
  ('valorInt -> VARIABLE','valorInt',1,'p_valorInt','sintaxisP.py',198),
  ('expresionInt -> valorInt operadorMat expresionInt','expresionInt',3,'p_expresion_aritmetica_Int','sintaxisP.py',202),
  ('expresionInt -> valorInt','expresionInt',1,'p_expresion_aritmetica_Int','sintaxisP.py',203),
  ('valorDouble -> DOUBLE','valorDouble',1,'p_valorDouble','sintaxisP.py',212),
  ('valorDouble -> valorInt','valorDouble',1,'p_valorDouble','sintaxisP.py',213),
  ('expresionDouble -> valorDouble operadorMat expresionDouble','expresionDouble',3,'p_expresion_aritmetica_Double','sintaxisP.py',217),
  ('expresionDouble -> valorDouble','expresionDouble',1,'p_expresion_aritmetica_Double','sintaxisP.py',218),
  ('operadorMat -> SUMA','operadorMat',1,'p_operadorMat','sintaxisP.py',228),
  ('operadorMat -> RESTA','operadorMat',1,'p_operadorMat','sintaxisP.py',229),
  ('operadorMat -> MULTI','operadorMat',1,'p_operadorMat','sintaxisP.py',230),
  ('operadorMat -> DIV','operadorMat',1,'p_operadorMat','sintaxisP.py',231),
  ('operadorMat -> DIVENTERO','operadorMat',1,'p_operadorMat','sintaxisP.py',232),
  ('operadorMat -> MOD','operadorMat',1,'p_operadorMat','sintaxisP.py',233),
  ('comparadorMat -> DIGUAL','comparadorMat',1,'p_comparadorMat','sintaxisP.py',237),
  ('comparadorMat -> NOIGUAL','comparadorMat',1,'p_comparadorMat','sintaxisP.py',238),
  ('comparadorMat -> MAYOR','comparadorMat',1,'p_comparadorMat','sintaxisP.py',239),
  ('comparadorMat -> MENOR','comparadorMat',1,'p_comparadorMat','sintaxisP.py',240),
  ('comparadorMat -> MAYIGUAL','comparadorMat',1,'p_comparadorMat','sintaxisP.py',241),
  ('comparadorMat -> MENIGUAL','comparadorMat',1,'p_comparadorMat','sintaxisP.py',242),
  ('operadorLogico -> AND','operadorLogico',1,'p_operadorLogico','sintaxisP.py',246),
  ('operadorLogico -> OR','operadorLogico',1,'p_operadorLogico','sintaxisP.py',247),
]
