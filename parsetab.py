
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS BOOL BOOLR BREAK CASE CDER CIZQ COMA COMILLAD COMILLAS DIGUAL DIV DIVENTERO DO DOSPUNTOS DOUBLE DOUBLER DRESTA DSUMA DYNAMIC ELSE ELSEIF ENTERO FLECHA FOR FUNCIONARR FUNCIONRANGE FUNCIONSTDIN FUNCIONSTDOUT FUNCIONSTRING FUNCIONTAKE IF IGUAL INT IS ISNEGADO LDER LIST LIZQ MAP MAYIGUAL MAYOR MENIGUAL MENOR MOD MULTI NOIGUAL NOT NUM OR PDER PIZQ PRINT PUNTOYCOMA RESTA RETURN SET STRING STRINGR SUMA SWITCH VAR VARIABLE WHILEfinal : algoritmo PUNTOYCOMA\n             | asignacion PUNTOYCOMA\n             | expresionInt PUNTOYCOMA\n             | expresionDouble PUNTOYCOMA\n             | expresionString PUNTOYCOMA\n             | expresionBool PUNTOYCOMA\n    algoritmo : asignacion PUNTOYCOMA\n                 | expresionInt PUNTOYCOMA\n                 | expresionDouble PUNTOYCOMA\n                 | expresionString PUNTOYCOMA\n                 | expresionBool PUNTOYCOMA\n                 | expresion\n    asignacion : INT VARIABLE IGUAL expresionInt\n                  | DOUBLER VARIABLE IGUAL expresionDouble\n                  | NUM VARIABLE IGUAL expresionDouble\n                  | STRINGR VARIABLE IGUAL expresionString\n                  | BOOLR VARIABLE IGUAL expresionBool\n                  | DYNAMIC VARIABLE IGUAL expresion\n                  | VAR VARIABLE IGUAL expresion\n\n    valor : ENTERO\n             | VARIABLE\n             | DOUBLE\n             | STRING\n    expresion : valor operadorMat expresion\n                 | valor\n                 | expresionString\n                 | expresionInt\n                 | expresionDouble\n    valorBool : BOOL\n                   | VARIABLE\n    expresionBool : valorDouble comparadorMat expresionDouble\n                       | VARIABLE comparadorMat expresionDouble\n                       | VARIABLE comparadorMat VARIABLE\n                       | valorDouble comparadorMat VARIABLE\n                       | valorBool\n    valorString : STRING\n                   | VARIABLE\n    expresionString : valorString operadorMat expresionString\n                       | valorString\n    valorInt : ENTERO\n                | VARIABLE\n    expresionInt : valorInt operadorMat expresionInt\n                    | valorInt\n    valorDouble : DOUBLE\n                   | valorInt\n    expresionDouble : valorDouble operadorMat expresionDouble\n                       | valorDouble\n    operadorMat : SUMA\n                   | RESTA\n                   | MULTI\n                   | DIV\n                   | DIVENTERO\n                   | MOD\n    comparadorMat : DIGUAL\n                   | NOIGUAL\n                   | MAYOR\n                   | MENOR\n                   | MAYIGUAL\n                   | MENIGUAL\n    '
    
_lr_action_items = {'INT':([0,],[9,]),'DOUBLER':([0,],[11,]),'NUM':([0,],[12,]),'STRINGR':([0,],[13,]),'BOOLR':([0,],[14,]),'DYNAMIC':([0,],[15,]),'VAR':([0,],[16,]),'VARIABLE':([0,9,11,12,13,14,15,16,33,34,35,36,37,38,39,46,47,48,49,50,51,52,53,54,55,56,57,64,65,66,67,68,69,],[10,32,40,41,42,43,44,45,58,-54,-55,-56,-57,-58,-59,72,-48,-49,-50,-51,-52,-53,72,75,78,84,72,72,72,78,91,84,84,]),'ENTERO':([0,33,34,35,36,37,38,39,46,47,48,49,50,51,52,53,54,56,57,64,65,67,68,69,],[22,63,-54,-55,-56,-57,-58,-59,63,-48,-49,-50,-51,-52,-53,63,63,83,63,63,63,63,83,83,]),'DOUBLE':([0,33,34,35,36,37,38,39,47,48,49,50,51,52,53,54,56,64,65,67,68,69,],[23,61,-54,-55,-56,-57,-58,-59,-48,-49,-50,-51,-52,-53,61,61,85,61,61,61,85,85,]),'STRING':([0,47,48,49,50,51,52,55,56,66,68,69,],[24,-48,-49,-50,-51,-52,-53,77,86,77,86,86,]),'BOOL':([0,67,],[25,25,]),'$end':([1,26,27,28,29,30,31,],[0,-1,-2,-3,-4,-5,-6,]),'PUNTOYCOMA':([2,3,4,5,6,7,8,10,17,18,19,20,21,22,23,24,25,27,28,29,30,31,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,],[26,27,28,29,30,31,-12,-21,-43,-47,-39,-35,-25,-20,-22,-23,-29,-7,-8,-9,-10,-11,-33,-32,-47,-44,-45,-40,-43,-42,-41,-46,-31,-34,-38,-36,-37,-24,-26,-27,-28,-20,-21,-22,-23,-13,-14,-15,-16,-30,-17,-18,-19,]),'SUMA':([10,17,18,19,21,22,23,24,58,60,61,62,63,70,72,75,77,78,83,84,85,86,],[-21,47,47,47,47,-20,-22,-23,-41,47,-44,-45,-40,47,-41,-41,-36,-37,-20,-21,-22,-23,]),'RESTA':([10,17,18,19,21,22,23,24,58,60,61,62,63,70,72,75,77,78,83,84,85,86,],[-21,48,48,48,48,-20,-22,-23,-41,48,-44,-45,-40,48,-41,-41,-36,-37,-20,-21,-22,-23,]),'MULTI':([10,17,18,19,21,22,23,24,58,60,61,62,63,70,72,75,77,78,83,84,85,86,],[-21,49,49,49,49,-20,-22,-23,-41,49,-44,-45,-40,49,-41,-41,-36,-37,-20,-21,-22,-23,]),'DIV':([10,17,18,19,21,22,23,24,58,60,61,62,63,70,72,75,77,78,83,84,85,86,],[-21,50,50,50,50,-20,-22,-23,-41,50,-44,-45,-40,50,-41,-41,-36,-37,-20,-21,-22,-23,]),'DIVENTERO':([10,17,18,19,21,22,23,24,58,60,61,62,63,70,72,75,77,78,83,84,85,86,],[-21,51,51,51,51,-20,-22,-23,-41,51,-44,-45,-40,51,-41,-41,-36,-37,-20,-21,-22,-23,]),'MOD':([10,17,18,19,21,22,23,24,58,60,61,62,63,70,72,75,77,78,83,84,85,86,],[-21,52,52,52,52,-20,-22,-23,-41,52,-44,-45,-40,52,-41,-41,-36,-37,-20,-21,-22,-23,]),'DIGUAL':([10,17,18,22,23,61,62,63,91,93,],[34,-45,34,-40,-44,-44,-45,-40,34,34,]),'NOIGUAL':([10,17,18,22,23,61,62,63,91,93,],[35,-45,35,-40,-44,-44,-45,-40,35,35,]),'MAYOR':([10,17,18,22,23,61,62,63,91,93,],[36,-45,36,-40,-44,-44,-45,-40,36,36,]),'MENOR':([10,17,18,22,23,61,62,63,91,93,],[37,-45,37,-40,-44,-44,-45,-40,37,37,]),'MAYIGUAL':([10,17,18,22,23,61,62,63,91,93,],[38,-45,38,-40,-44,-44,-45,-40,38,38,]),'MENIGUAL':([10,17,18,22,23,61,62,63,91,93,],[39,-45,39,-40,-44,-44,-45,-40,39,39,]),'IGUAL':([32,40,41,42,43,44,45,],[57,64,65,66,67,68,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'final':([0,],[1,]),'algoritmo':([0,],[2,]),'asignacion':([0,],[3,]),'expresionInt':([0,46,56,57,68,69,],[4,71,81,87,81,81,]),'expresionDouble':([0,33,53,54,56,64,65,68,69,],[5,59,73,74,82,88,89,82,82,]),'expresionString':([0,55,56,66,68,69,],[6,76,80,90,80,80,]),'expresionBool':([0,67,],[7,92,]),'expresion':([0,56,68,69,],[8,79,94,95,]),'valorInt':([0,33,46,53,54,56,57,64,65,67,68,69,],[17,62,70,62,62,17,70,62,62,62,17,17,]),'valorDouble':([0,33,53,54,56,64,65,67,68,69,],[18,60,60,60,60,60,60,93,60,60,]),'valorString':([0,55,56,66,68,69,],[19,19,19,19,19,19,]),'valorBool':([0,67,],[20,20,]),'valor':([0,56,68,69,],[21,21,21,21,]),'comparadorMat':([10,18,91,93,],[33,54,33,54,]),'operadorMat':([17,18,19,21,60,70,],[46,53,55,56,53,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> final","S'",1,None,None,None),
  ('final -> algoritmo PUNTOYCOMA','final',2,'p_final','sintaxisP.py',8),
  ('final -> asignacion PUNTOYCOMA','final',2,'p_final','sintaxisP.py',9),
  ('final -> expresionInt PUNTOYCOMA','final',2,'p_final','sintaxisP.py',10),
  ('final -> expresionDouble PUNTOYCOMA','final',2,'p_final','sintaxisP.py',11),
  ('final -> expresionString PUNTOYCOMA','final',2,'p_final','sintaxisP.py',12),
  ('final -> expresionBool PUNTOYCOMA','final',2,'p_final','sintaxisP.py',13),
  ('algoritmo -> asignacion PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',17),
  ('algoritmo -> expresionInt PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',18),
  ('algoritmo -> expresionDouble PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',19),
  ('algoritmo -> expresionString PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',20),
  ('algoritmo -> expresionBool PUNTOYCOMA','algoritmo',2,'p_algoritmo','sintaxisP.py',21),
  ('algoritmo -> expresion','algoritmo',1,'p_algoritmo','sintaxisP.py',22),
  ('asignacion -> INT VARIABLE IGUAL expresionInt','asignacion',4,'p_asignacion','sintaxisP.py',26),
  ('asignacion -> DOUBLER VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxisP.py',27),
  ('asignacion -> NUM VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxisP.py',28),
  ('asignacion -> STRINGR VARIABLE IGUAL expresionString','asignacion',4,'p_asignacion','sintaxisP.py',29),
  ('asignacion -> BOOLR VARIABLE IGUAL expresionBool','asignacion',4,'p_asignacion','sintaxisP.py',30),
  ('asignacion -> DYNAMIC VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxisP.py',31),
  ('asignacion -> VAR VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxisP.py',32),
  ('valor -> ENTERO','valor',1,'p_valor','sintaxisP.py',41),
  ('valor -> VARIABLE','valor',1,'p_valor','sintaxisP.py',42),
  ('valor -> DOUBLE','valor',1,'p_valor','sintaxisP.py',43),
  ('valor -> STRING','valor',1,'p_valor','sintaxisP.py',44),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion','sintaxisP.py',48),
  ('expresion -> valor','expresion',1,'p_expresion','sintaxisP.py',49),
  ('expresion -> expresionString','expresion',1,'p_expresion','sintaxisP.py',50),
  ('expresion -> expresionInt','expresion',1,'p_expresion','sintaxisP.py',51),
  ('expresion -> expresionDouble','expresion',1,'p_expresion','sintaxisP.py',52),
  ('valorBool -> BOOL','valorBool',1,'p_valorBool','sintaxisP.py',60),
  ('valorBool -> VARIABLE','valorBool',1,'p_valorBool','sintaxisP.py',61),
  ('expresionBool -> valorDouble comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxisP.py',65),
  ('expresionBool -> VARIABLE comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxisP.py',66),
  ('expresionBool -> VARIABLE comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxisP.py',67),
  ('expresionBool -> valorDouble comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxisP.py',68),
  ('expresionBool -> valorBool','expresionBool',1,'p_expresionBool','sintaxisP.py',69),
  ('valorString -> STRING','valorString',1,'p_valorString','sintaxisP.py',79),
  ('valorString -> VARIABLE','valorString',1,'p_valorString','sintaxisP.py',80),
  ('expresionString -> valorString operadorMat expresionString','expresionString',3,'p_expresion_aritmetica_String','sintaxisP.py',84),
  ('expresionString -> valorString','expresionString',1,'p_expresion_aritmetica_String','sintaxisP.py',85),
  ('valorInt -> ENTERO','valorInt',1,'p_valorInt','sintaxisP.py',95),
  ('valorInt -> VARIABLE','valorInt',1,'p_valorInt','sintaxisP.py',96),
  ('expresionInt -> valorInt operadorMat expresionInt','expresionInt',3,'p_expresion_aritmetica_Int','sintaxisP.py',100),
  ('expresionInt -> valorInt','expresionInt',1,'p_expresion_aritmetica_Int','sintaxisP.py',101),
  ('valorDouble -> DOUBLE','valorDouble',1,'p_valorDouble','sintaxisP.py',109),
  ('valorDouble -> valorInt','valorDouble',1,'p_valorDouble','sintaxisP.py',110),
  ('expresionDouble -> valorDouble operadorMat expresionDouble','expresionDouble',3,'p_expresion_aritmetica_Double','sintaxisP.py',114),
  ('expresionDouble -> valorDouble','expresionDouble',1,'p_expresion_aritmetica_Double','sintaxisP.py',115),
  ('operadorMat -> SUMA','operadorMat',1,'p_operadorMat','sintaxisP.py',125),
  ('operadorMat -> RESTA','operadorMat',1,'p_operadorMat','sintaxisP.py',126),
  ('operadorMat -> MULTI','operadorMat',1,'p_operadorMat','sintaxisP.py',127),
  ('operadorMat -> DIV','operadorMat',1,'p_operadorMat','sintaxisP.py',128),
  ('operadorMat -> DIVENTERO','operadorMat',1,'p_operadorMat','sintaxisP.py',129),
  ('operadorMat -> MOD','operadorMat',1,'p_operadorMat','sintaxisP.py',130),
  ('comparadorMat -> DIGUAL','comparadorMat',1,'p_comparaedorMat','sintaxisP.py',134),
  ('comparadorMat -> NOIGUAL','comparadorMat',1,'p_comparaedorMat','sintaxisP.py',135),
  ('comparadorMat -> MAYOR','comparadorMat',1,'p_comparaedorMat','sintaxisP.py',136),
  ('comparadorMat -> MENOR','comparadorMat',1,'p_comparaedorMat','sintaxisP.py',137),
  ('comparadorMat -> MAYIGUAL','comparadorMat',1,'p_comparaedorMat','sintaxisP.py',138),
  ('comparadorMat -> MENIGUAL','comparadorMat',1,'p_comparaedorMat','sintaxisP.py',139),
]
