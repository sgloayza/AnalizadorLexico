
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS BOOL BOOLR BREAK CASE CDER CIZQ COMA COMILLAD COMILLAS DIGUAL DIV DIVENTERO DO DOSPUNTOS DOUBLE DOUBLER DRESTA DSUMA DYNAMIC ELSE ELSEIF ENTERO FLECHA FOR FUNCIONARR FUNCIONRANGE FUNCIONSTDIN FUNCIONSTDOUT FUNCIONSUBSTRING FUNCIONTAKE IF IGUAL INT IS ISNEGADO LDER LIST LIZQ MAP MAYIGUAL MAYOR MENIGUAL MENOR MOD MULTI NEWLIST NOIGUAL NOT NUM OR PDER PIZQ PRINT PUNTOYCOMA RESTA RETURN SET SETFROM STRING STRINGR SUMA SWITCH VAR VARIABLE WHILEfinal : asignacion PUNTOYCOMA\n             | asignacion PUNTOYCOMA final\n\n             | expresionInt PUNTOYCOMA\n             | expresionInt PUNTOYCOMA final\n\n             | expresionDouble PUNTOYCOMA\n             | expresionDouble PUNTOYCOMA final\n\n             | expresionString PUNTOYCOMA\n             | expresionString PUNTOYCOMA final\n\n             | expresionBool PUNTOYCOMA\n             | expresionBool PUNTOYCOMA final\n\n             | expresionBoolFor PUNTOYCOMA\n             | expresionBoolFor PUNTOYCOMA final\n\n             | sentenciaWhile\n             | sentenciaWhile final\n             | sentenciaWhile PUNTOYCOMA\n             | sentenciaWhile PUNTOYCOMA final\n\n             | sentenciaDoWhile PUNTOYCOMA\n             | sentenciaDoWhile PUNTOYCOMA final\n\n             | sentenciaIf PUNTOYCOMA\n             | sentenciaIf PUNTOYCOMA final\n             | sentenciaIf\n             | sentenciaIf final\n\n             | sentenciaElse PUNTOYCOMA\n             | sentenciaElse PUNTOYCOMA final\n             | sentenciaElse\n             | sentenciaElse final\n\n             | imprimir PUNTOYCOMA\n             | imprimir PUNTOYCOMA final\n             | funcionStdin PUNTOYCOMA\n             | funcionStdin PUNTOYCOMA final\n             | funcionStdout PUNTOYCOMA\n             | funcionStdout PUNTOYCOMA final\n\n             | negacionBool PUNTOYCOMA\n             | negacionBool PUNTOYCOMA final\n\n             | comparacionBool PUNTOYCOMA final\n             | comparacionBool PUNTOYCOMA\n\n             | sentenciaElseIf PUNTOYCOMA final\n             | sentenciaElseIf final\n             | sentenciaElseIf PUNTOYCOMA\n             | sentenciaElseIf\n\n             | sentenciaFor PUNTOYCOMA final\n             | sentenciaFor PUNTOYCOMA\n             | sentenciaFor final\n             | sentenciaFor\n\n             | sentenciaSubstring PUNTOYCOMA final\n             | sentenciaSubstring PUNTOYCOMA\n\n             | VARIABLE DSUMA PUNTOYCOMA final\n             | VARIABLE DSUMA PUNTOYCOMA\n             | VARIABLE DRESTA PUNTOYCOMA final\n             | VARIABLE DRESTA PUNTOYCOMA\n\n             | expresionLista PUNTOYCOMA\n             | expresionLista PUNTOYCOMA final\n             | expresionNewList PUNTOYCOMA\n             | expresionNewList PUNTOYCOMA final\n\n             | expresionSet PUNTOYCOMA\n             | expresionSet PUNTOYCOMA final\n    expresionSet : SET VARIABLE\n                    | SETFROM PIZQ CIZQ CDER PDER\n                    | SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER\n                    | SETFROM PIZQ CIZQ expListDynamic CDER PDER\n                    | SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER\n    expresionNewList : NEWLIST PIZQ PDER\n                        | NEWLIST PIZQ ENTERO PDER\n                        | CIZQ CDER\n    expresionLista : LIST MENOR STRINGR MAYOR VARIABLE\n                      | LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER\n                      | LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListString CDER\n\n                      | LIST MENOR INT MAYOR VARIABLE\n                      | LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER\n                      | LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListInt CDER\n\n                      | LIST MENOR DOUBLER MAYOR VARIABLE\n                      | LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER\n                      | LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListNum CDER\n\n                      | LIST MENOR NUM MAYOR VARIABLE\n                      | LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER\n                      | LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList\n\n                      | LIST MENOR BOOLR MAYOR VARIABLE\n                      | LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER\n                      | LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListBool CDER\n\n                      | LIST MENOR DYNAMIC MAYOR VARIABLE\n                      | LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER\n                      | LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListDynamic CDER\n\n                      | LIST MENOR SET MAYOR VARIABLE\n                      | LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER\n                      | LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListSet CDER\n\n    expListString : STRING\n                     | STRING COMA expListString\n                     | VARIABLE\n                     | VARIABLE COMA expListString\n    expListInt : ENTERO\n                  | ENTERO COMA expListInt\n                  | VARIABLE\n                  | VARIABLE COMA expListInt\n    expListNum : ENTERO\n                  | DOUBLE\n                  | ENTERO COMA expListNum\n                  | DOUBLE COMA expListNum\n                  | VARIABLE\n                  | VARIABLE COMA expListNum\n    expListBool : BOOL\n                   | BOOL COMA expListBool\n                   | VARIABLE\n                   | VARIABLE COMA expListBool\n    expListDynamic : STRING\n                      | ENTERO\n                      | DOUBLE\n                      | BOOL\n                      | STRING COMA expListDynamic\n                      | ENTERO COMA expListDynamic\n                      | DOUBLE COMA expListDynamic\n                      | BOOL COMA expListDynamic\n                      | VARIABLE\n                      | VARIABLE COMA expListDynamic\n    expListSet : SETFROM PIZQ CIZQ CDER PDER\n                  | SETFROM PIZQ CIZQ expListDynamic CDER PDER\n                  | SETFROM PIZQ CIZQ CDER PDER COMA expListSet\n                  | SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet\n                  | VARIABLE\n                  | VARIABLE COMA expListSet\n    asignacion : INT VARIABLE IGUAL expresionInt\n                  | DOUBLER VARIABLE IGUAL expresionDouble\n                  | NUM VARIABLE IGUAL expresionDouble\n                  | STRINGR VARIABLE IGUAL expresionString\n                  | BOOLR VARIABLE IGUAL expresionBool\n                  | DYNAMIC VARIABLE IGUAL expresion\n                  | VAR VARIABLE IGUAL expresion\n                  | asignacionSimple\n    asignacionSimple : VARIABLE IGUAL expresionimprimir : PRINT PIZQ expresion PDER\n                | PRINT PIZQ asignacionSimple PDERfuncionStdin : FUNCIONSTDINfuncionStdout : FUNCIONSTDOUT PIZQ expresion PDER\n                     | FUNCIONSTDOUT PIZQ asignacionSimple PDERsentenciaIf : IF PIZQ expresionBool PDER final\n                   | IF PIZQ expresionBool PDER LIZQ final LDER\n    sentenciaElse : ELSE final\n                     | ELSE LIZQ final LDER\n    sentenciaElseIf : ELSEIF PIZQ expresionBool PDER final\n                       | ELSEIF PIZQ expresionBool PDER LIZQ final LDER\n    valor : ENTERO\n             | VARIABLE\n             | DOUBLE\n             | STRING\n    expresion : valor operadorMat expresion\n                 | valor\n                 | expresionString\n                 | expresionInt\n                 | expresionDouble\n                 | expresionBool\n    asignacionFor : INT VARIABLE IGUAL expresionInt\n                    | DOUBLER VARIABLE IGUAL expresionDouble\n                    | NUM VARIABLE IGUAL expresionDouble\n                    | DYNAMIC VARIABLE IGUAL expresionInt\n                    | DYNAMIC VARIABLE IGUAL expresionDouble\n                    | VAR VARIABLE IGUAL expresionInt\n                    | VAR VARIABLE IGUAL expresionDouble\n                    | VARIABLE IGUAL expresionInt\n                    | VARIABLE IGUAL expresionDouble\n                    expresionBoolFor : valorDouble comparadorMat expresionDouble\n                        | VARIABLE comparadorMat expresionDouble\n                        | VARIABLE comparadorMat VARIABLE\n                        | valorDouble comparadorMat VARIABLE\n                        | valorBool\n                        | negacionBool\n                        | comparacionBool\n    sentenciaFor : FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER\n                    | FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final\n                    | FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER\n                    | FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final\n    sentenciaWhile : WHILE PIZQ expresionBool PDER LIZQ final LDER\n                      | WHILE PIZQ expresionBool PDER final\n    sentenciaDoWhile : DO LIZQ final LDER WHILE PIZQ expresionBool PDERvalorBool : BOOL\n                 | VARIABLE\n    expresionBool : valorDouble comparadorMat expresionDouble\n                     | VARIABLE comparadorMat expresionDouble\n                     | VARIABLE comparadorMat VARIABLE\n                     | valorDouble comparadorMat VARIABLE\n                     | valorBool\n                     | negacionBool\n                     | comparacionBool\n                     | valor IS objeto\n                     | valor ISNEGADO objeto\n    negacionBool : NOT PIZQ expresionBool PDERcomparacionBool : expresionBool operadorLogico expresionBool\n                       | expresionBool operadorLogico comparacionBool\n    valorString : STRING\n                   | VARIABLE\n                   | FUNCIONSTDIN\n                   | expresionIndexString\n                   | sentenciaSubstring\n    expresionString : valorString SUMA expresionString\n                       | valorString\n    expresionIndexString : valorString CIZQ ENTERO CDERsentenciaSubstring : VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER\n                         | VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER\n    valorInt : ENTERO\n                | VARIABLE\n    expresionInt : valorInt operadorMat expresionInt\n                    | valorInt\n    valorDouble : DOUBLE\n                   | valorInt\n    expresionDouble : valorDouble operadorMat expresionDouble\n                       | valorDouble\n    operadorMat : SUMA\n                   | RESTA\n                   | MULTI\n                   | DIV\n                   | DIVENTERO\n                   | MOD\n    comparadorMat : DIGUAL\n                     | NOIGUAL\n                     | MAYOR\n                     | MENOR\n                     | MAYIGUAL\n                     | MENIGUAL\n    operadorLogico : AND\n                      | OR\n    objeto : STRINGR\n              | INT\n              | DOUBLER\n              | NUM\n              | VAR\n              | DYNAMIC\n              | LIST\n              | BOOL\n              | MAP\n              | SET\n    '
    
_lr_action_items = {'VARIABLE':([0,8,10,11,17,18,24,25,26,27,28,29,30,40,49,50,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,113,117,118,119,120,121,122,123,124,125,126,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,195,196,197,198,199,200,201,237,238,239,240,241,255,256,257,258,259,264,265,266,267,268,270,279,281,282,288,289,290,296,297,298,299,300,301,302,327,340,341,343,344,345,346,356,357,358,359,360,368,369,370,371,372,373,374,375,376,382,385,388,389,390,407,410,412,413,419,421,423,425,427,429,431,433,458,461,462,463,465,466,468,469,471,472,474,476,478,482,483,484,485,488,489,],[20,20,20,20,20,20,97,98,99,100,101,102,103,20,136,141,20,20,20,20,20,152,-223,-224,20,-14,20,20,20,-22,20,-26,20,20,20,20,20,20,-38,20,-43,20,173,179,-217,-218,-219,-220,-221,-222,20,20,20,204,-211,-212,-213,-214,-215,-216,204,207,210,152,20,152,-142,20,230,230,152,152,236,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,20,20,-52,-54,-56,204,204,204,210,152,179,179,291,292,293,294,295,305,136,318,323,326,332,334,335,-47,-49,179,20,20,-143,20,348,204,361,362,363,364,365,366,367,332,20,-177,-140,20,-144,20,204,204,204,204,204,305,332,332,332,318,332,323,323,326,332,152,414,415,418,332,-176,-141,-145,440,443,446,446,451,332,455,455,455,20,20,440,440,443,443,446,446,446,451,451,455,20,-173,20,-175,-172,-174,]),'INT':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,126,127,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[24,24,24,24,24,24,24,24,24,24,24,24,24,-14,24,24,24,-22,24,-26,24,24,24,24,24,24,-38,24,-43,24,24,24,24,214,214,24,-142,24,237,243,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,24,24,-52,-54,-56,-47,-49,24,24,-143,24,24,-177,-140,24,-144,24,-176,-141,-145,24,24,24,-173,24,-175,-172,-174,]),'DOUBLER':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,126,127,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[25,25,25,25,25,25,25,25,25,25,25,25,25,-14,25,25,25,-22,25,-26,25,25,25,25,25,25,-38,25,-43,25,25,25,25,215,215,25,-142,25,238,244,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,25,25,-52,-54,-56,-47,-49,25,25,-143,25,25,-177,-140,25,-144,25,-176,-141,-145,25,25,25,-173,25,-175,-172,-174,]),'NUM':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,126,127,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[26,26,26,26,26,26,26,26,26,26,26,26,26,-14,26,26,26,-22,26,-26,26,26,26,26,26,26,-38,26,-43,26,26,26,26,216,216,26,-142,26,239,245,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,26,26,-52,-54,-56,-47,-49,26,26,-143,26,26,-177,-140,26,-144,26,-176,-141,-145,26,26,26,-173,26,-175,-172,-174,]),'STRINGR':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,127,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[27,27,27,27,27,27,27,27,27,27,27,27,27,-14,27,27,27,-22,27,-26,27,27,27,27,27,27,-38,27,-43,27,27,27,27,213,213,27,-142,27,242,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,27,27,-52,-54,-56,-47,-49,27,27,-143,27,27,-177,-140,27,-144,27,-176,-141,-145,27,27,27,-173,27,-175,-172,-174,]),'BOOLR':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,127,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[28,28,28,28,28,28,28,28,28,28,28,28,28,-14,28,28,28,-22,28,-26,28,28,28,28,28,28,-38,28,-43,28,28,28,28,28,-142,28,246,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,28,28,-52,-54,-56,-47,-49,28,28,-143,28,28,-177,-140,28,-144,28,-176,-141,-145,28,28,28,-173,28,-175,-172,-174,]),'DYNAMIC':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,126,127,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[29,29,29,29,29,29,29,29,29,29,29,29,29,-14,29,29,29,-22,29,-26,29,29,29,29,29,29,-38,29,-43,29,29,29,29,218,218,29,-142,29,240,247,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,29,29,-52,-54,-56,-47,-49,29,29,-143,29,29,-177,-140,29,-144,29,-176,-141,-145,29,29,29,-173,29,-175,-172,-174,]),'VAR':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,126,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[30,30,30,30,30,30,30,30,30,30,30,30,30,-14,30,30,30,-22,30,-26,30,30,30,30,30,30,-38,30,-43,30,30,30,30,217,217,30,-142,30,241,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,30,30,-52,-54,-56,-47,-49,30,30,-143,30,30,-177,-140,30,-144,30,-176,-141,-145,30,30,30,-173,30,-175,-172,-174,]),'WHILE':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,280,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[37,37,37,37,37,37,37,37,37,37,37,37,37,-14,37,37,37,-22,37,-26,37,37,37,37,37,37,-38,37,-43,37,37,37,37,37,-142,37,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,37,37,-52,-54,-56,-47,-49,37,342,37,-143,37,37,-177,-140,37,-144,37,-176,-141,-145,37,37,37,-173,37,-175,-172,-174,]),'DO':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[38,38,38,38,38,38,38,38,38,38,38,38,38,-14,38,38,38,-22,38,-26,38,38,38,38,38,38,-38,38,-43,38,38,38,38,38,-142,38,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,38,38,-52,-54,-56,-47,-49,38,38,-143,38,38,-177,-140,38,-144,38,-176,-141,-145,38,38,38,-173,38,-175,-172,-174,]),'IF':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[39,39,39,39,39,39,39,39,39,39,39,39,39,-14,39,39,39,-22,39,-26,39,39,39,39,39,39,-38,39,-43,39,39,39,39,39,-142,39,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,39,39,-52,-54,-56,-47,-49,39,39,-143,39,39,-177,-140,39,-144,39,-176,-141,-145,39,39,39,-173,39,-175,-172,-174,]),'ELSE':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[40,40,40,40,40,40,40,40,40,40,40,40,40,-14,40,40,40,-22,40,-26,40,40,40,40,40,40,-38,40,-43,40,40,40,40,40,-142,40,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,40,40,-52,-54,-56,-47,-49,40,40,-143,40,40,-177,-140,40,-144,40,-176,-141,-145,40,40,40,-173,40,-175,-172,-174,]),'PRINT':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[41,41,41,41,41,41,41,41,41,41,41,41,41,-14,41,41,41,-22,41,-26,41,41,41,41,41,41,-38,41,-43,41,41,41,41,41,-142,41,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,41,41,-52,-54,-56,-47,-49,41,41,-143,41,41,-177,-140,41,-144,41,-176,-141,-145,41,41,41,-173,41,-175,-172,-174,]),'FUNCIONSTDIN':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,94,95,96,105,106,107,108,109,110,113,118,120,121,122,123,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,198,200,201,267,268,270,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[42,42,42,42,42,42,42,42,42,42,42,42,42,-14,42,42,42,-22,42,-26,42,42,42,42,42,42,-38,42,-43,42,190,42,42,42,-211,-212,-213,-214,-215,-216,190,42,-142,42,190,190,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,42,42,-52,-54,-56,190,190,190,-47,-49,190,42,42,-143,42,42,-177,-140,42,-144,42,-176,-141,-145,42,42,42,-173,42,-175,-172,-174,]),'FUNCIONSTDOUT':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[43,43,43,43,43,43,43,43,43,43,43,43,43,-14,43,43,43,-22,43,-26,43,43,43,43,43,43,-38,43,-43,43,43,43,43,43,-142,43,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,43,43,-52,-54,-56,-47,-49,43,43,-143,43,43,-177,-140,43,-144,43,-176,-141,-145,43,43,43,-173,43,-175,-172,-174,]),'NOT':([0,8,10,11,17,18,40,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,94,95,96,105,106,107,108,109,110,117,118,119,120,121,122,123,124,125,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,199,200,201,267,268,270,279,281,282,288,289,340,341,343,344,345,346,385,410,412,413,461,462,482,483,484,485,488,489,],[44,44,44,44,44,44,44,44,44,44,44,44,44,-223,-224,44,-14,44,44,44,-22,44,-26,44,44,44,44,44,44,-38,44,-43,44,44,44,44,44,-211,-212,-213,-214,-215,-216,44,44,44,-142,44,44,44,44,44,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,44,44,-52,-54,-56,44,44,44,-47,-49,44,44,44,-143,44,44,44,-177,-140,44,-144,44,44,-176,-141,-145,44,44,44,-173,44,-175,-172,-174,]),'ELSEIF':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[45,45,45,45,45,45,45,45,45,45,45,45,45,-14,45,45,45,-22,45,-26,45,45,45,45,45,45,-38,45,-43,45,45,45,45,45,-142,45,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,45,45,-52,-54,-56,-47,-49,45,45,-143,45,45,-177,-140,45,-144,45,-176,-141,-145,45,45,45,-173,45,-175,-172,-174,]),'FOR':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[46,46,46,46,46,46,46,46,46,46,46,46,46,-14,46,46,46,-22,46,-26,46,46,46,46,46,46,-38,46,-43,46,46,46,46,46,-142,46,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,46,46,-52,-54,-56,-47,-49,46,46,-143,46,46,-177,-140,46,-144,46,-176,-141,-145,46,46,46,-173,46,-175,-172,-174,]),'LIST':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[48,48,48,48,48,48,48,48,48,48,48,48,48,-14,48,48,48,-22,48,-26,48,48,48,48,48,48,-38,48,-43,48,48,48,48,219,219,48,-142,48,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,48,48,-52,-54,-56,-47,-49,48,48,-143,48,48,-177,-140,48,-144,48,-176,-141,-145,48,48,48,-173,48,-175,-172,-174,]),'CIZQ':([0,8,10,11,17,18,19,20,34,40,42,54,55,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,143,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,179,187,190,191,192,193,194,209,210,230,260,267,268,278,279,281,282,288,337,340,341,343,344,345,346,379,398,399,400,401,402,403,404,409,410,412,413,461,462,482,483,484,485,488,489,],[49,49,49,49,49,49,-197,-194,114,49,-195,-193,-196,49,49,49,49,49,49,-14,49,49,49,-22,49,-26,49,49,49,49,49,49,-38,49,-43,49,49,49,49,49,-142,49,264,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,49,49,-194,-193,-195,-197,-52,-54,-56,-193,-194,-194,327,-47,-49,-200,49,49,-143,49,-201,49,-177,-140,49,-144,49,407,419,421,423,425,427,429,431,-202,-176,-141,-145,49,49,49,-173,49,-175,-172,-174,]),'NEWLIST':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,398,399,400,401,402,403,404,410,412,413,461,462,482,483,484,485,488,489,],[51,51,51,51,51,51,51,51,51,51,51,51,51,-14,51,51,51,-22,51,-26,51,51,51,51,51,51,-38,51,-43,51,51,51,51,51,-142,51,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,51,51,-52,-54,-56,-47,-49,51,51,-143,51,51,-177,-140,51,-144,51,51,51,51,51,51,51,51,-176,-141,-145,51,51,51,-173,51,-175,-172,-174,]),'SET':([0,8,10,11,17,18,40,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,115,116,118,120,121,127,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,461,462,482,483,484,485,488,489,],[50,50,50,50,50,50,50,50,50,50,50,50,50,-14,50,50,50,-22,50,-26,50,50,50,50,50,50,-38,50,-43,50,50,50,50,222,222,50,-142,50,248,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,50,50,-52,-54,-56,-47,-49,50,50,-143,50,50,-177,-140,50,-144,50,-176,-141,-145,50,50,50,-173,50,-175,-172,-174,]),'SETFROM':([0,8,10,11,17,18,40,49,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,118,120,121,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,256,261,267,268,279,281,282,288,340,341,343,344,345,346,410,412,413,431,433,458,461,462,478,482,483,484,485,488,489,],[52,52,52,52,52,52,52,140,52,52,52,52,52,52,-14,52,52,52,-22,52,-26,52,52,52,52,52,52,-38,52,-43,52,52,52,52,52,-142,52,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,52,52,-52,-54,-56,140,328,-47,-49,52,52,-143,52,52,-177,-140,52,-144,52,-176,-141,-145,140,140,140,52,52,140,52,-173,52,-175,-172,-174,]),'ENTERO':([0,8,10,11,17,18,40,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,89,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,114,117,118,119,120,121,122,123,124,125,142,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,178,192,193,194,195,196,197,199,200,201,255,256,257,258,259,264,265,266,267,268,270,279,281,282,288,289,290,327,338,340,341,343,344,345,346,356,357,358,359,360,368,369,370,371,372,373,374,375,376,382,385,389,390,407,410,412,413,421,423,425,429,461,462,466,468,469,471,472,482,483,484,485,488,489,],[47,47,47,47,47,47,47,137,47,47,47,47,47,156,-223,-224,47,-14,47,47,47,-22,47,-26,47,47,47,47,47,47,-38,47,-43,47,177,156,-217,-218,-219,-220,-221,-222,47,47,47,177,-211,-212,-213,-214,-215,-216,177,177,211,156,47,156,-142,47,156,156,156,156,263,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,47,47,269,-52,-54,-56,177,177,177,156,156,156,306,137,137,322,306,306,177,177,-47,-49,156,47,47,-143,47,47,177,306,383,47,-177,-140,47,-144,47,177,177,177,177,177,306,306,306,306,137,306,322,322,306,306,156,177,177,306,-176,-141,-145,445,448,448,306,47,47,445,445,448,448,448,47,-173,47,-175,-172,-174,]),'DOUBLE':([0,8,10,11,17,18,40,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,89,90,91,92,93,94,95,96,105,106,107,108,109,110,111,112,117,118,119,120,121,122,123,124,125,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,196,197,199,200,201,255,256,257,258,259,264,265,266,267,268,270,279,281,282,288,289,290,327,340,341,343,344,345,346,357,358,359,360,368,369,370,371,372,373,374,375,376,382,385,389,390,407,410,412,413,423,425,429,461,462,469,471,472,482,483,484,485,488,489,],[53,53,53,53,53,53,53,138,53,53,53,53,53,53,-223,-224,53,-14,53,53,53,-22,53,-26,53,53,53,53,53,53,-38,53,-43,53,176,186,-217,-218,-219,-220,-221,-222,53,53,53,-211,-212,-213,-214,-215,-216,176,176,53,53,53,-142,53,186,186,53,53,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,53,53,-52,-54,-56,176,176,53,186,186,307,138,138,138,307,307,176,176,-47,-49,186,53,53,-143,53,53,176,307,53,-177,-140,53,-144,53,176,176,176,176,307,307,307,307,138,307,138,138,307,307,53,176,176,307,-176,-141,-145,449,449,307,53,53,449,449,449,53,-173,53,-175,-172,-174,]),'STRING':([0,8,10,11,17,18,40,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,94,95,96,105,106,107,108,109,110,113,117,118,119,120,121,122,123,124,125,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,198,199,200,201,255,256,257,258,259,264,267,268,270,279,281,282,288,289,327,340,341,343,344,345,346,368,369,370,371,372,373,374,375,376,382,385,407,410,412,413,419,429,461,462,463,465,482,483,484,485,488,489,],[54,54,54,54,54,54,54,135,54,54,54,54,54,157,-223,-224,54,-14,54,54,54,-22,54,-26,54,54,54,54,54,54,-38,54,-43,54,187,54,54,54,-211,-212,-213,-214,-215,-216,209,157,54,157,-142,54,187,187,157,157,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,54,54,-52,-54,-56,209,157,187,187,135,135,319,319,319,319,-47,-49,187,54,54,-143,54,157,319,54,-177,-140,54,-144,54,135,319,319,319,319,319,319,319,319,319,157,319,-176,-141,-145,442,319,54,54,442,442,54,-173,54,-175,-172,-174,]),'BOOL':([0,8,10,11,17,18,40,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,94,95,96,105,106,107,108,109,110,115,116,117,118,119,120,121,122,123,124,125,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,199,200,201,255,256,257,258,259,264,267,268,270,279,281,282,288,289,327,340,341,343,344,345,346,368,369,370,371,372,373,374,375,376,382,385,407,410,412,413,427,429,461,462,474,476,482,483,484,485,488,489,],[56,56,56,56,56,56,56,139,56,56,56,56,56,56,-223,-224,56,-14,56,56,56,-22,56,-26,56,56,56,56,56,56,-38,56,-43,56,56,56,56,56,-211,-212,-213,-214,-215,-216,220,220,56,56,56,-142,56,56,56,56,56,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,56,56,-52,-54,-56,56,56,56,308,139,308,308,139,308,-47,-49,56,56,56,-143,56,56,308,56,-177,-140,56,-144,56,308,308,308,308,308,308,308,308,139,308,56,308,-176,-141,-145,453,308,56,56,453,453,56,-173,56,-175,-172,-174,]),'$end':([1,8,10,11,17,18,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,120,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,267,268,282,341,343,345,410,412,413,483,485,488,489,],[0,-13,-21,-25,-40,-44,-1,-3,-5,-7,-9,-11,-14,-15,-17,-19,-22,-23,-26,-27,-29,-31,-33,-36,-39,-38,-42,-43,-46,-51,-53,-55,-142,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,-48,-50,-52,-54,-56,-47,-49,-143,-177,-140,-144,-176,-141,-145,-173,-175,-172,-174,]),'PUNTOYCOMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,42,47,53,54,55,56,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,94,95,96,120,129,141,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,235,249,250,251,252,253,254,262,267,268,271,272,273,274,275,276,277,278,282,283,284,285,286,287,329,333,334,335,336,337,339,341,343,345,347,348,350,351,352,354,355,361,362,363,364,365,366,367,380,391,392,393,394,395,396,397,408,409,410,412,413,415,416,417,418,420,422,424,426,428,430,432,437,459,464,467,470,473,475,477,479,481,483,485,488,489,],[57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,-180,94,95,96,-133,-206,-210,-199,-169,-137,-203,-207,-193,-196,-179,-1,-3,-5,-7,-9,-11,-14,-15,-17,-19,-22,-23,-26,-27,-29,-31,-33,-36,-39,-38,-42,-43,-46,171,172,-51,-53,-55,-142,-64,-57,-2,-4,-6,-8,-10,-191,-187,-180,-185,-186,-208,-146,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,-48,-50,-167,-166,-210,-207,-203,-147,-134,-151,-152,-153,-154,-155,-148,-149,-210,-187,-195,-197,-52,-54,-56,-206,-205,-204,-209,-165,-168,-198,-193,-194,-188,-225,-226,-227,-228,-229,-230,-231,-232,-233,-234,-189,289,-68,-72,-76,-83,-87,-91,-62,-47,-49,-126,-127,-128,-129,-130,-131,-132,-200,-143,-135,-136,-138,-139,-190,-63,-181,-184,-183,-182,-201,-150,-177,-140,-144,388,-180,-169,-170,-171,-163,-164,-65,-69,-73,-77,-80,-84,-88,-58,-156,-157,-158,-159,-160,-161,-162,-60,-202,-176,-141,-145,-167,-166,-165,-168,-67,-71,-75,-79,-82,-86,-90,-178,-59,-66,-70,-74,-78,-81,-85,-89,-61,-173,-175,-172,-174,]),'AND':([6,15,16,20,35,56,149,150,152,153,154,155,173,174,175,176,177,179,185,189,204,205,206,207,212,213,214,215,216,217,218,219,220,221,222,223,224,226,230,233,234,275,287,333,334,335,336,348,350,351,352,353,411,415,416,417,418,],[63,-186,-187,-180,-185,-179,63,-187,-180,-185,-186,-208,-183,-182,-210,-207,-203,-180,63,-187,-204,-209,-181,-184,-188,-225,-226,-227,-228,-229,-230,-231,-232,-233,-234,-189,63,63,-180,63,63,63,-190,-181,-184,-183,-182,-180,-185,-186,-187,63,63,-183,-182,-181,-184,]),'OR':([6,15,16,20,35,56,149,150,152,153,154,155,173,174,175,176,177,179,185,189,204,205,206,207,212,213,214,215,216,217,218,219,220,221,222,223,224,226,230,233,234,275,287,333,334,335,336,348,350,351,352,353,411,415,416,417,418,],[64,-186,-187,-180,-185,-179,64,-187,-180,-185,-186,-208,-183,-182,-210,-207,-203,-180,64,-187,-204,-209,-181,-184,-188,-225,-226,-227,-228,-229,-230,-231,-232,-233,-234,-189,64,64,-180,64,64,64,-190,-181,-184,-183,-182,-180,-185,-186,-187,64,64,-183,-182,-181,-184,]),'LDER':([8,10,11,17,18,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,96,120,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,192,193,194,225,227,267,268,282,341,343,345,384,386,387,410,412,413,483,485,486,487,488,489,],[-13,-21,-25,-40,-44,-1,-3,-5,-7,-9,-11,-14,-15,-17,-19,-22,-23,-26,-27,-29,-31,-33,-36,-39,-38,-42,-43,-46,-51,-53,-55,-142,-2,-4,-6,-8,-10,-12,-16,-18,-20,-24,-28,-30,-32,-34,-35,-37,-41,-45,-48,-50,-52,-54,-56,280,282,-47,-49,-143,-177,-140,-144,410,412,413,-176,-141,-145,-173,-175,488,489,-172,-174,]),'SUMA':([19,20,32,33,34,42,47,53,54,55,155,156,173,175,176,177,179,181,186,187,188,190,191,202,204,207,209,210,230,278,334,335,337,409,415,418,],[-197,-194,105,105,113,-195,-203,-207,-193,-196,-208,-146,-204,105,-207,-203,-147,105,-148,-149,105,-195,-197,105,-204,-204,-193,-194,-147,-200,-204,-204,-201,-202,-204,-204,]),'DSUMA':([20,414,],[83,438,]),'DRESTA':([20,414,],[84,439,]),'FUNCIONSUBSTRING':([20,179,210,230,],[86,86,86,86,]),'IGUAL':([20,97,98,99,100,101,102,103,141,230,236,291,292,293,294,295,361,362,363,364,365,366,367,],[87,195,196,197,198,199,200,201,261,87,290,356,357,358,359,360,398,399,400,401,402,403,404,]),'RESTA':([20,32,33,47,53,155,156,173,175,176,177,179,181,186,187,188,202,204,207,230,334,335,415,418,],[-204,106,106,-203,-207,-208,-146,-204,106,-207,-203,-147,106,-148,-149,106,106,-204,-204,-147,-204,-204,-204,-204,]),'MULTI':([20,32,33,47,53,155,156,173,175,176,177,179,181,186,187,188,202,204,207,230,334,335,415,418,],[-204,107,107,-203,-207,-208,-146,-204,107,-207,-203,-147,107,-148,-149,107,107,-204,-204,-147,-204,-204,-204,-204,]),'DIV':([20,32,33,47,53,155,156,173,175,176,177,179,181,186,187,188,202,204,207,230,334,335,415,418,],[-204,108,108,-203,-207,-208,-146,-204,108,-207,-203,-147,108,-148,-149,108,108,-204,-204,-147,-204,-204,-204,-204,]),'DIVENTERO':([20,32,33,47,53,155,156,173,175,176,177,179,181,186,187,188,202,204,207,230,334,335,415,418,],[-204,109,109,-203,-207,-208,-146,-204,109,-207,-203,-147,109,-148,-149,109,109,-204,-204,-147,-204,-204,-204,-204,]),'MOD':([20,32,33,47,53,155,156,173,175,176,177,179,181,186,187,188,202,204,207,230,334,335,415,418,],[-204,110,110,-203,-207,-208,-146,-204,110,-207,-203,-147,110,-148,-149,110,110,-204,-204,-147,-204,-204,-204,-204,]),'DIGUAL':([20,32,33,47,53,151,152,155,156,179,186,188,230,348,349,],[88,-208,88,-203,-207,88,88,-208,-203,88,-207,88,88,88,88,]),'NOIGUAL':([20,32,33,47,53,151,152,155,156,179,186,188,230,348,349,],[89,-208,89,-203,-207,89,89,-208,-203,89,-207,89,89,89,89,]),'MAYOR':([20,32,33,47,53,151,152,155,156,179,186,188,230,242,243,244,245,246,247,248,348,349,],[90,-208,90,-203,-207,90,90,-208,-203,90,-207,90,90,296,297,298,299,300,301,302,90,90,]),'MENOR':([20,32,33,47,48,53,151,152,155,156,179,186,188,230,348,349,],[91,-208,91,-203,127,-207,91,91,-208,-203,91,-207,91,91,91,91,]),'MAYIGUAL':([20,32,33,47,53,151,152,155,156,179,186,188,230,348,349,],[92,-208,92,-203,-207,92,92,-208,-203,92,-207,92,92,92,92,]),'MENIGUAL':([20,32,33,47,53,151,152,155,156,179,186,188,230,348,349,],[93,-208,93,-203,-207,93,93,-208,-203,93,-207,93,93,93,93,]),'IS':([20,36,47,53,54,152,156,157,179,181,186,187,230,348,],[-147,115,-146,-148,-149,-147,-146,-149,-147,115,-148,-149,-147,-147,]),'ISNEGADO':([20,36,47,53,54,152,156,157,179,181,186,187,230,348,],[-147,116,-146,-148,-149,-147,-146,-149,-147,116,-148,-149,-147,-147,]),'PDER':([32,34,55,56,142,149,150,152,153,154,155,156,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,202,203,204,205,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,226,228,229,230,231,232,233,234,263,269,278,287,330,333,334,335,336,337,339,377,381,383,406,409,411,435,438,439,460,],[-206,-199,-196,-179,262,-191,-187,-180,-185,-186,-208,-146,-210,-207,-203,-147,-134,-151,-152,-153,-154,-155,-148,-149,-210,-187,-195,-197,-206,-205,-204,-209,-198,-193,-194,-188,-225,-226,-227,-228,-229,-230,-231,-232,-233,-234,-189,279,281,283,284,-147,285,286,287,288,329,337,-200,-190,380,-181,-184,-183,-182,-201,-150,405,408,409,434,-202,437,459,461,462,481,]),'PIZQ':([37,39,41,43,44,45,46,51,52,86,140,328,342,],[117,119,122,123,124,125,126,142,143,178,260,379,385,]),'LIZQ':([38,40,279,281,288,461,462,],[118,121,340,344,346,482,484,]),'CDER':([49,128,130,131,132,133,134,135,136,137,138,139,211,264,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,331,332,378,405,407,419,421,423,425,427,429,431,434,436,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,480,],[129,249,250,251,252,253,254,-92,-94,-96,-101,-106,278,330,-93,-114,-94,-111,-112,-113,-95,-99,-105,-109,-119,-125,-97,-102,-115,-98,-110,-103,-116,-100,-104,-107,-117,-108,377,381,-118,406,-120,435,129,129,129,129,129,129,129,-121,460,-94,464,-92,-98,467,-96,-104,470,-100,-101,473,-108,475,-106,477,-124,479,-122,-123,]),'MAP':([115,116,],[221,221,]),'COMA':([135,136,137,138,139,269,305,306,307,308,318,319,322,323,326,332,405,434,440,442,443,445,446,448,449,451,453,455,],[255,256,257,258,259,338,368,369,370,371,372,373,374,375,376,382,433,458,463,465,466,468,469,471,472,474,476,478,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'final':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[1,66,70,72,79,81,120,144,145,146,147,148,158,159,160,161,162,163,164,165,166,167,168,169,170,192,193,194,225,227,267,268,341,343,345,384,386,387,483,485,486,487,]),'asignacion':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'expresionInt':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,104,118,121,122,123,171,172,195,200,201,270,279,281,288,290,340,344,346,356,359,360,461,462,482,484,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,183,3,3,3,203,3,3,183,183,3,3,271,183,183,183,3,3,3,354,3,3,3,391,394,396,3,3,3,3,]),'expresionDouble':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,85,87,94,95,96,111,112,118,121,122,123,171,172,196,197,200,201,265,266,270,279,281,288,290,340,344,346,357,358,359,360,389,390,461,462,482,484,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,174,184,4,4,4,205,206,4,4,184,184,4,4,272,273,184,184,333,336,184,4,4,4,355,4,4,4,392,393,395,397,416,417,4,4,4,4,]),'expresionString':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,113,118,121,122,123,171,172,198,200,201,270,279,281,288,340,344,346,461,462,482,484,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,182,5,5,5,208,5,5,182,182,5,5,274,182,182,182,5,5,5,5,5,5,5,5,5,5,]),'expresionBool':([0,8,10,11,17,18,40,57,58,59,60,61,62,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,117,118,119,121,122,123,124,125,171,172,199,200,201,270,279,281,288,289,340,344,346,385,461,462,482,484,],[6,6,6,6,6,6,6,6,6,6,6,6,149,6,6,6,6,6,6,6,6,6,6,6,6,6,185,6,6,6,224,6,226,6,185,185,233,234,6,6,275,185,185,185,6,6,6,353,6,6,6,411,6,6,6,6,]),'expresionBoolFor':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,289,340,344,346,461,462,482,484,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,347,7,7,7,7,7,7,7,]),'sentenciaWhile':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'sentenciaDoWhile':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'sentenciaIf':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'sentenciaElse':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'imprimir':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'funcionStdin':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'funcionStdout':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'negacionBool':([0,8,10,11,17,18,40,57,58,59,60,61,62,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,117,118,119,121,122,123,124,125,171,172,199,200,201,270,279,281,288,289,340,344,346,385,461,462,482,484,],[15,15,15,15,15,15,15,15,15,15,15,15,154,15,15,15,15,15,15,15,15,15,15,15,15,15,154,15,15,15,154,15,154,15,154,154,154,154,15,15,154,154,154,154,15,15,15,351,15,15,15,154,15,15,15,15,]),'comparacionBool':([0,8,10,11,17,18,40,57,58,59,60,61,62,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,117,118,119,121,122,123,124,125,171,172,199,200,201,270,279,281,288,289,340,344,346,385,461,462,482,484,],[16,16,16,16,16,16,16,16,16,16,16,16,150,16,16,16,16,16,16,16,16,16,16,16,16,16,189,16,16,16,189,16,189,16,189,189,189,189,16,16,189,189,189,189,16,16,16,352,16,16,16,189,16,16,16,16,]),'sentenciaElseIf':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'sentenciaFor':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'sentenciaSubstring':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,113,118,121,122,123,171,172,198,200,201,270,279,281,288,340,344,346,461,462,482,484,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,191,19,19,19,191,19,19,191,191,19,19,191,191,191,191,19,19,19,19,19,19,19,19,19,19,]),'expresionLista':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expresionNewList':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,398,399,400,401,402,403,404,461,462,482,484,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,420,422,424,426,428,430,432,22,22,22,22,]),'expresionSet':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,171,172,279,281,288,340,344,346,461,462,482,484,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionSimple':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,94,95,96,118,121,122,123,171,172,279,281,288,340,344,346,461,462,482,484,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,229,232,31,31,31,31,31,31,31,31,31,31,31,31,]),'valorInt':([0,8,10,11,17,18,40,57,58,59,60,61,62,65,67,68,69,71,73,74,75,76,77,78,80,82,85,87,94,95,96,104,111,112,117,118,119,121,122,123,124,125,171,172,195,196,197,199,200,201,265,266,270,279,281,288,289,290,340,344,346,356,357,358,359,360,385,389,390,461,462,482,484,],[32,32,32,32,32,32,32,32,32,32,32,32,155,32,32,32,32,32,32,32,32,32,32,32,32,32,155,32,32,32,32,202,155,155,155,32,155,32,32,32,155,155,32,32,202,155,155,155,32,32,155,155,32,32,32,32,155,32,32,32,32,202,155,155,32,32,155,155,155,32,32,32,32,]),'valorDouble':([0,8,10,11,17,18,40,57,58,59,60,61,62,65,67,68,69,71,73,74,75,76,77,78,80,82,85,87,94,95,96,111,112,117,118,119,121,122,123,124,125,171,172,196,197,199,200,201,265,266,270,279,281,288,289,290,340,344,346,357,358,359,360,385,389,390,461,462,482,484,],[33,33,33,33,33,33,33,33,33,33,33,33,151,33,33,33,33,33,33,33,33,33,33,33,33,33,175,188,33,33,33,175,175,151,33,151,33,188,188,151,151,33,33,175,175,151,188,188,175,175,188,33,33,33,349,175,33,33,33,175,175,175,175,151,175,175,33,33,33,33,]),'valorString':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,113,118,121,122,123,171,172,198,200,201,270,279,281,288,340,344,346,461,462,482,484,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'valorBool':([0,8,10,11,17,18,40,57,58,59,60,61,62,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,117,118,119,121,122,123,124,125,171,172,199,200,201,270,279,281,288,289,340,344,346,385,461,462,482,484,],[35,35,35,35,35,35,35,35,35,35,35,35,153,35,35,35,35,35,35,35,35,35,35,35,35,35,153,35,35,35,153,35,153,35,153,153,153,153,35,35,153,153,153,153,35,35,35,350,35,35,35,153,35,35,35,35,]),'valor':([0,8,10,11,17,18,40,57,58,59,60,61,62,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,117,118,119,121,122,123,124,125,171,172,199,200,201,270,279,281,288,289,340,344,346,385,461,462,482,484,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,181,36,36,36,36,36,36,36,181,181,36,36,36,36,36,181,181,181,36,36,36,36,36,36,36,36,36,36,36,36,]),'expresionIndexString':([0,8,10,11,17,18,40,57,58,59,60,61,65,67,68,69,71,73,74,75,76,77,78,80,82,87,94,95,96,113,118,121,122,123,171,172,198,200,201,270,279,281,288,340,344,346,461,462,482,484,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'operadorLogico':([6,149,185,224,226,233,234,275,353,411,],[62,62,62,62,62,62,62,62,62,62,]),'comparadorMat':([20,33,151,152,179,188,230,348,349,],[85,112,265,266,266,265,266,389,390,]),'operadorMat':([32,33,175,181,188,202,],[104,111,111,270,111,104,]),'expListString':([49,255,256,368,419,463,465,],[128,303,309,309,441,309,303,]),'expListInt':([49,256,257,372,421,466,468,],[130,310,315,310,444,310,315,]),'expListNum':([49,256,257,258,372,374,375,423,425,469,471,472,],[131,311,316,320,311,316,311,447,450,311,316,320,]),'expListBool':([49,256,259,376,427,474,476,],[132,312,324,312,452,312,324,]),'expListDynamic':([49,255,256,257,258,259,264,327,368,369,370,371,372,373,374,375,376,382,407,429,],[133,304,313,317,321,325,331,378,313,317,321,325,313,304,317,313,313,313,436,454,]),'expListSet':([49,256,431,433,458,478,],[134,314,456,457,480,314,]),'expresion':([87,122,123,200,201,270,],[180,228,231,276,277,339,]),'objeto':([115,116,],[212,223,]),'asignacionFor':([126,],[235,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> final","S'",1,None,None,None),
  ('final -> asignacion PUNTOYCOMA','final',2,'p_final','sintaxis.py',8),
  ('final -> asignacion PUNTOYCOMA final','final',3,'p_final','sintaxis.py',9),
  ('final -> expresionInt PUNTOYCOMA','final',2,'p_final','sintaxis.py',11),
  ('final -> expresionInt PUNTOYCOMA final','final',3,'p_final','sintaxis.py',12),
  ('final -> expresionDouble PUNTOYCOMA','final',2,'p_final','sintaxis.py',14),
  ('final -> expresionDouble PUNTOYCOMA final','final',3,'p_final','sintaxis.py',15),
  ('final -> expresionString PUNTOYCOMA','final',2,'p_final','sintaxis.py',17),
  ('final -> expresionString PUNTOYCOMA final','final',3,'p_final','sintaxis.py',18),
  ('final -> expresionBool PUNTOYCOMA','final',2,'p_final','sintaxis.py',20),
  ('final -> expresionBool PUNTOYCOMA final','final',3,'p_final','sintaxis.py',21),
  ('final -> expresionBoolFor PUNTOYCOMA','final',2,'p_final','sintaxis.py',23),
  ('final -> expresionBoolFor PUNTOYCOMA final','final',3,'p_final','sintaxis.py',24),
  ('final -> sentenciaWhile','final',1,'p_final','sintaxis.py',26),
  ('final -> sentenciaWhile final','final',2,'p_final','sintaxis.py',27),
  ('final -> sentenciaWhile PUNTOYCOMA','final',2,'p_final','sintaxis.py',28),
  ('final -> sentenciaWhile PUNTOYCOMA final','final',3,'p_final','sintaxis.py',29),
  ('final -> sentenciaDoWhile PUNTOYCOMA','final',2,'p_final','sintaxis.py',31),
  ('final -> sentenciaDoWhile PUNTOYCOMA final','final',3,'p_final','sintaxis.py',32),
  ('final -> sentenciaIf PUNTOYCOMA','final',2,'p_final','sintaxis.py',34),
  ('final -> sentenciaIf PUNTOYCOMA final','final',3,'p_final','sintaxis.py',35),
  ('final -> sentenciaIf','final',1,'p_final','sintaxis.py',36),
  ('final -> sentenciaIf final','final',2,'p_final','sintaxis.py',37),
  ('final -> sentenciaElse PUNTOYCOMA','final',2,'p_final','sintaxis.py',39),
  ('final -> sentenciaElse PUNTOYCOMA final','final',3,'p_final','sintaxis.py',40),
  ('final -> sentenciaElse','final',1,'p_final','sintaxis.py',41),
  ('final -> sentenciaElse final','final',2,'p_final','sintaxis.py',42),
  ('final -> imprimir PUNTOYCOMA','final',2,'p_final','sintaxis.py',44),
  ('final -> imprimir PUNTOYCOMA final','final',3,'p_final','sintaxis.py',45),
  ('final -> funcionStdin PUNTOYCOMA','final',2,'p_final','sintaxis.py',46),
  ('final -> funcionStdin PUNTOYCOMA final','final',3,'p_final','sintaxis.py',47),
  ('final -> funcionStdout PUNTOYCOMA','final',2,'p_final','sintaxis.py',48),
  ('final -> funcionStdout PUNTOYCOMA final','final',3,'p_final','sintaxis.py',49),
  ('final -> negacionBool PUNTOYCOMA','final',2,'p_final','sintaxis.py',51),
  ('final -> negacionBool PUNTOYCOMA final','final',3,'p_final','sintaxis.py',52),
  ('final -> comparacionBool PUNTOYCOMA final','final',3,'p_final','sintaxis.py',54),
  ('final -> comparacionBool PUNTOYCOMA','final',2,'p_final','sintaxis.py',55),
  ('final -> sentenciaElseIf PUNTOYCOMA final','final',3,'p_final','sintaxis.py',57),
  ('final -> sentenciaElseIf final','final',2,'p_final','sintaxis.py',58),
  ('final -> sentenciaElseIf PUNTOYCOMA','final',2,'p_final','sintaxis.py',59),
  ('final -> sentenciaElseIf','final',1,'p_final','sintaxis.py',60),
  ('final -> sentenciaFor PUNTOYCOMA final','final',3,'p_final','sintaxis.py',62),
  ('final -> sentenciaFor PUNTOYCOMA','final',2,'p_final','sintaxis.py',63),
  ('final -> sentenciaFor final','final',2,'p_final','sintaxis.py',64),
  ('final -> sentenciaFor','final',1,'p_final','sintaxis.py',65),
  ('final -> sentenciaSubstring PUNTOYCOMA final','final',3,'p_final','sintaxis.py',67),
  ('final -> sentenciaSubstring PUNTOYCOMA','final',2,'p_final','sintaxis.py',68),
  ('final -> VARIABLE DSUMA PUNTOYCOMA final','final',4,'p_final','sintaxis.py',70),
  ('final -> VARIABLE DSUMA PUNTOYCOMA','final',3,'p_final','sintaxis.py',71),
  ('final -> VARIABLE DRESTA PUNTOYCOMA final','final',4,'p_final','sintaxis.py',72),
  ('final -> VARIABLE DRESTA PUNTOYCOMA','final',3,'p_final','sintaxis.py',73),
  ('final -> expresionLista PUNTOYCOMA','final',2,'p_final','sintaxis.py',75),
  ('final -> expresionLista PUNTOYCOMA final','final',3,'p_final','sintaxis.py',76),
  ('final -> expresionNewList PUNTOYCOMA','final',2,'p_final','sintaxis.py',77),
  ('final -> expresionNewList PUNTOYCOMA final','final',3,'p_final','sintaxis.py',78),
  ('final -> expresionSet PUNTOYCOMA','final',2,'p_final','sintaxis.py',80),
  ('final -> expresionSet PUNTOYCOMA final','final',3,'p_final','sintaxis.py',81),
  ('expresionSet -> SET VARIABLE','expresionSet',2,'p_expresionSet','sintaxis.py',89),
  ('expresionSet -> SETFROM PIZQ CIZQ CDER PDER','expresionSet',5,'p_expresionSet','sintaxis.py',90),
  ('expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER','expresionSet',8,'p_expresionSet','sintaxis.py',91),
  ('expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER','expresionSet',6,'p_expresionSet','sintaxis.py',92),
  ('expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER','expresionSet',9,'p_expresionSet','sintaxis.py',93),
  ('expresionNewList -> NEWLIST PIZQ PDER','expresionNewList',3,'p_expresionNewList','sintaxis.py',103),
  ('expresionNewList -> NEWLIST PIZQ ENTERO PDER','expresionNewList',4,'p_expresionNewList','sintaxis.py',104),
  ('expresionNewList -> CIZQ CDER','expresionNewList',2,'p_expresionNewList','sintaxis.py',105),
  ('expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',108),
  ('expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER','expresionLista',9,'p_expresionLista','sintaxis.py',109),
  ('expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',110),
  ('expresionLista -> CIZQ expListString CDER','expresionLista',3,'p_expresionLista','sintaxis.py',111),
  ('expresionLista -> LIST MENOR INT MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',113),
  ('expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER','expresionLista',9,'p_expresionLista','sintaxis.py',114),
  ('expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',115),
  ('expresionLista -> CIZQ expListInt CDER','expresionLista',3,'p_expresionLista','sintaxis.py',116),
  ('expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',118),
  ('expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER','expresionLista',9,'p_expresionLista','sintaxis.py',119),
  ('expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',120),
  ('expresionLista -> CIZQ expListNum CDER','expresionLista',3,'p_expresionLista','sintaxis.py',121),
  ('expresionLista -> LIST MENOR NUM MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',123),
  ('expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER','expresionLista',9,'p_expresionLista','sintaxis.py',124),
  ('expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',125),
  ('expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',127),
  ('expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER','expresionLista',9,'p_expresionLista','sintaxis.py',128),
  ('expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',129),
  ('expresionLista -> CIZQ expListBool CDER','expresionLista',3,'p_expresionLista','sintaxis.py',130),
  ('expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',132),
  ('expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER','expresionLista',9,'p_expresionLista','sintaxis.py',133),
  ('expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',134),
  ('expresionLista -> CIZQ expListDynamic CDER','expresionLista',3,'p_expresionLista','sintaxis.py',135),
  ('expresionLista -> LIST MENOR SET MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',137),
  ('expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER','expresionLista',9,'p_expresionLista','sintaxis.py',138),
  ('expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',139),
  ('expresionLista -> CIZQ expListSet CDER','expresionLista',3,'p_expresionLista','sintaxis.py',140),
  ('expListString -> STRING','expListString',1,'p_expListString','sintaxis.py',145),
  ('expListString -> STRING COMA expListString','expListString',3,'p_expListString','sintaxis.py',146),
  ('expListString -> VARIABLE','expListString',1,'p_expListString','sintaxis.py',147),
  ('expListString -> VARIABLE COMA expListString','expListString',3,'p_expListString','sintaxis.py',148),
  ('expListInt -> ENTERO','expListInt',1,'p_expListInt','sintaxis.py',151),
  ('expListInt -> ENTERO COMA expListInt','expListInt',3,'p_expListInt','sintaxis.py',152),
  ('expListInt -> VARIABLE','expListInt',1,'p_expListInt','sintaxis.py',153),
  ('expListInt -> VARIABLE COMA expListInt','expListInt',3,'p_expListInt','sintaxis.py',154),
  ('expListNum -> ENTERO','expListNum',1,'p_expListNum','sintaxis.py',157),
  ('expListNum -> DOUBLE','expListNum',1,'p_expListNum','sintaxis.py',158),
  ('expListNum -> ENTERO COMA expListNum','expListNum',3,'p_expListNum','sintaxis.py',159),
  ('expListNum -> DOUBLE COMA expListNum','expListNum',3,'p_expListNum','sintaxis.py',160),
  ('expListNum -> VARIABLE','expListNum',1,'p_expListNum','sintaxis.py',161),
  ('expListNum -> VARIABLE COMA expListNum','expListNum',3,'p_expListNum','sintaxis.py',162),
  ('expListBool -> BOOL','expListBool',1,'p_expListBool','sintaxis.py',165),
  ('expListBool -> BOOL COMA expListBool','expListBool',3,'p_expListBool','sintaxis.py',166),
  ('expListBool -> VARIABLE','expListBool',1,'p_expListBool','sintaxis.py',167),
  ('expListBool -> VARIABLE COMA expListBool','expListBool',3,'p_expListBool','sintaxis.py',168),
  ('expListDynamic -> STRING','expListDynamic',1,'p_expListDynamic','sintaxis.py',171),
  ('expListDynamic -> ENTERO','expListDynamic',1,'p_expListDynamic','sintaxis.py',172),
  ('expListDynamic -> DOUBLE','expListDynamic',1,'p_expListDynamic','sintaxis.py',173),
  ('expListDynamic -> BOOL','expListDynamic',1,'p_expListDynamic','sintaxis.py',174),
  ('expListDynamic -> STRING COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',175),
  ('expListDynamic -> ENTERO COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',176),
  ('expListDynamic -> DOUBLE COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',177),
  ('expListDynamic -> BOOL COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',178),
  ('expListDynamic -> VARIABLE','expListDynamic',1,'p_expListDynamic','sintaxis.py',179),
  ('expListDynamic -> VARIABLE COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',180),
  ('expListSet -> SETFROM PIZQ CIZQ CDER PDER','expListSet',5,'p_expListSet','sintaxis.py',183),
  ('expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER','expListSet',6,'p_expListSet','sintaxis.py',184),
  ('expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet','expListSet',7,'p_expListSet','sintaxis.py',185),
  ('expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet','expListSet',8,'p_expListSet','sintaxis.py',186),
  ('expListSet -> VARIABLE','expListSet',1,'p_expListSet','sintaxis.py',187),
  ('expListSet -> VARIABLE COMA expListSet','expListSet',3,'p_expListSet','sintaxis.py',188),
  ('asignacion -> INT VARIABLE IGUAL expresionInt','asignacion',4,'p_asignacion','sintaxis.py',201),
  ('asignacion -> DOUBLER VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxis.py',202),
  ('asignacion -> NUM VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxis.py',203),
  ('asignacion -> STRINGR VARIABLE IGUAL expresionString','asignacion',4,'p_asignacion','sintaxis.py',204),
  ('asignacion -> BOOLR VARIABLE IGUAL expresionBool','asignacion',4,'p_asignacion','sintaxis.py',205),
  ('asignacion -> DYNAMIC VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxis.py',206),
  ('asignacion -> VAR VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxis.py',207),
  ('asignacion -> asignacionSimple','asignacion',1,'p_asignacion','sintaxis.py',208),
  ('asignacionSimple -> VARIABLE IGUAL expresion','asignacionSimple',3,'p_asignacionSimple','sintaxis.py',212),
  ('imprimir -> PRINT PIZQ expresion PDER','imprimir',4,'p_imprimir','sintaxis.py',222),
  ('imprimir -> PRINT PIZQ asignacionSimple PDER','imprimir',4,'p_imprimir','sintaxis.py',223),
  ('funcionStdin -> FUNCIONSTDIN','funcionStdin',1,'p_funcionStdin','sintaxis.py',232),
  ('funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER','funcionStdout',4,'p_funcionStdout','sintaxis.py',235),
  ('funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER','funcionStdout',4,'p_funcionStdout','sintaxis.py',236),
  ('sentenciaIf -> IF PIZQ expresionBool PDER final','sentenciaIf',5,'p_sentenciaIf','sintaxis.py',242),
  ('sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER','sentenciaIf',7,'p_sentenciaIf','sintaxis.py',243),
  ('sentenciaElse -> ELSE final','sentenciaElse',2,'p_sentenciaElse','sintaxis.py',248),
  ('sentenciaElse -> ELSE LIZQ final LDER','sentenciaElse',4,'p_sentenciaElse','sintaxis.py',249),
  ('sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final','sentenciaElseIf',5,'p_sentenciaElseIf','sintaxis.py',253),
  ('sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER','sentenciaElseIf',7,'p_sentenciaElseIf','sintaxis.py',254),
  ('valor -> ENTERO','valor',1,'p_valor','sintaxis.py',265),
  ('valor -> VARIABLE','valor',1,'p_valor','sintaxis.py',266),
  ('valor -> DOUBLE','valor',1,'p_valor','sintaxis.py',267),
  ('valor -> STRING','valor',1,'p_valor','sintaxis.py',268),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion','sintaxis.py',272),
  ('expresion -> valor','expresion',1,'p_expresion','sintaxis.py',273),
  ('expresion -> expresionString','expresion',1,'p_expresion','sintaxis.py',274),
  ('expresion -> expresionInt','expresion',1,'p_expresion','sintaxis.py',275),
  ('expresion -> expresionDouble','expresion',1,'p_expresion','sintaxis.py',276),
  ('expresion -> expresionBool','expresion',1,'p_expresion','sintaxis.py',277),
  ('asignacionFor -> INT VARIABLE IGUAL expresionInt','asignacionFor',4,'p_expresionFor','sintaxis.py',284),
  ('asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble','asignacionFor',4,'p_expresionFor','sintaxis.py',285),
  ('asignacionFor -> NUM VARIABLE IGUAL expresionDouble','asignacionFor',4,'p_expresionFor','sintaxis.py',286),
  ('asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt','asignacionFor',4,'p_expresionFor','sintaxis.py',287),
  ('asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble','asignacionFor',4,'p_expresionFor','sintaxis.py',288),
  ('asignacionFor -> VAR VARIABLE IGUAL expresionInt','asignacionFor',4,'p_expresionFor','sintaxis.py',289),
  ('asignacionFor -> VAR VARIABLE IGUAL expresionDouble','asignacionFor',4,'p_expresionFor','sintaxis.py',290),
  ('asignacionFor -> VARIABLE IGUAL expresionInt','asignacionFor',3,'p_expresionFor','sintaxis.py',291),
  ('asignacionFor -> VARIABLE IGUAL expresionDouble','asignacionFor',3,'p_expresionFor','sintaxis.py',292),
  ('expresionBoolFor -> valorDouble comparadorMat expresionDouble','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',296),
  ('expresionBoolFor -> VARIABLE comparadorMat expresionDouble','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',297),
  ('expresionBoolFor -> VARIABLE comparadorMat VARIABLE','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',298),
  ('expresionBoolFor -> valorDouble comparadorMat VARIABLE','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',299),
  ('expresionBoolFor -> valorBool','expresionBoolFor',1,'p_expresionBoolFor','sintaxis.py',300),
  ('expresionBoolFor -> negacionBool','expresionBoolFor',1,'p_expresionBoolFor','sintaxis.py',301),
  ('expresionBoolFor -> comparacionBool','expresionBoolFor',1,'p_expresionBoolFor','sintaxis.py',302),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER','sentenciaFor',12,'p_sentenciaFor','sintaxis.py',306),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final','sentenciaFor',10,'p_sentenciaFor','sintaxis.py',307),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER','sentenciaFor',12,'p_sentenciaFor','sintaxis.py',308),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final','sentenciaFor',10,'p_sentenciaFor','sintaxis.py',309),
  ('sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER','sentenciaWhile',7,'p_sentenciaWhile','sintaxis.py',319),
  ('sentenciaWhile -> WHILE PIZQ expresionBool PDER final','sentenciaWhile',5,'p_sentenciaWhile','sintaxis.py',320),
  ('sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER','sentenciaDoWhile',8,'p_sentenciaDoWhile','sintaxis.py',324),
  ('valorBool -> BOOL','valorBool',1,'p_valorBool','sintaxis.py',330),
  ('valorBool -> VARIABLE','valorBool',1,'p_valorBool','sintaxis.py',331),
  ('expresionBool -> valorDouble comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxis.py',335),
  ('expresionBool -> VARIABLE comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxis.py',336),
  ('expresionBool -> VARIABLE comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxis.py',337),
  ('expresionBool -> valorDouble comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxis.py',338),
  ('expresionBool -> valorBool','expresionBool',1,'p_expresionBool','sintaxis.py',339),
  ('expresionBool -> negacionBool','expresionBool',1,'p_expresionBool','sintaxis.py',340),
  ('expresionBool -> comparacionBool','expresionBool',1,'p_expresionBool','sintaxis.py',341),
  ('expresionBool -> valor IS objeto','expresionBool',3,'p_expresionBool','sintaxis.py',342),
  ('expresionBool -> valor ISNEGADO objeto','expresionBool',3,'p_expresionBool','sintaxis.py',343),
  ('negacionBool -> NOT PIZQ expresionBool PDER','negacionBool',4,'p_negacionBool','sintaxis.py',347),
  ('comparacionBool -> expresionBool operadorLogico expresionBool','comparacionBool',3,'p_comparacionBool','sintaxis.py',350),
  ('comparacionBool -> expresionBool operadorLogico comparacionBool','comparacionBool',3,'p_comparacionBool','sintaxis.py',351),
  ('valorString -> STRING','valorString',1,'p_valorString','sintaxis.py',366),
  ('valorString -> VARIABLE','valorString',1,'p_valorString','sintaxis.py',367),
  ('valorString -> FUNCIONSTDIN','valorString',1,'p_valorString','sintaxis.py',368),
  ('valorString -> expresionIndexString','valorString',1,'p_valorString','sintaxis.py',369),
  ('valorString -> sentenciaSubstring','valorString',1,'p_valorString','sintaxis.py',370),
  ('expresionString -> valorString SUMA expresionString','expresionString',3,'p_expresion_aritmetica_String','sintaxis.py',374),
  ('expresionString -> valorString','expresionString',1,'p_expresion_aritmetica_String','sintaxis.py',375),
  ('expresionIndexString -> valorString CIZQ ENTERO CDER','expresionIndexString',4,'p_expresion_index_String','sintaxis.py',379),
  ('sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER','sentenciaSubstring',5,'p_sentenciaSubstring','sintaxis.py',382),
  ('sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER','sentenciaSubstring',7,'p_sentenciaSubstring','sintaxis.py',383),
  ('valorInt -> ENTERO','valorInt',1,'p_valorInt','sintaxis.py',392),
  ('valorInt -> VARIABLE','valorInt',1,'p_valorInt','sintaxis.py',393),
  ('expresionInt -> valorInt operadorMat expresionInt','expresionInt',3,'p_expresion_aritmetica_Int','sintaxis.py',397),
  ('expresionInt -> valorInt','expresionInt',1,'p_expresion_aritmetica_Int','sintaxis.py',398),
  ('valorDouble -> DOUBLE','valorDouble',1,'p_valorDouble','sintaxis.py',407),
  ('valorDouble -> valorInt','valorDouble',1,'p_valorDouble','sintaxis.py',408),
  ('expresionDouble -> valorDouble operadorMat expresionDouble','expresionDouble',3,'p_expresion_aritmetica_Double','sintaxis.py',412),
  ('expresionDouble -> valorDouble','expresionDouble',1,'p_expresion_aritmetica_Double','sintaxis.py',413),
  ('operadorMat -> SUMA','operadorMat',1,'p_operadorMat','sintaxis.py',423),
  ('operadorMat -> RESTA','operadorMat',1,'p_operadorMat','sintaxis.py',424),
  ('operadorMat -> MULTI','operadorMat',1,'p_operadorMat','sintaxis.py',425),
  ('operadorMat -> DIV','operadorMat',1,'p_operadorMat','sintaxis.py',426),
  ('operadorMat -> DIVENTERO','operadorMat',1,'p_operadorMat','sintaxis.py',427),
  ('operadorMat -> MOD','operadorMat',1,'p_operadorMat','sintaxis.py',428),
  ('comparadorMat -> DIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',432),
  ('comparadorMat -> NOIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',433),
  ('comparadorMat -> MAYOR','comparadorMat',1,'p_comparadorMat','sintaxis.py',434),
  ('comparadorMat -> MENOR','comparadorMat',1,'p_comparadorMat','sintaxis.py',435),
  ('comparadorMat -> MAYIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',436),
  ('comparadorMat -> MENIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',437),
  ('operadorLogico -> AND','operadorLogico',1,'p_operadorLogico','sintaxis.py',441),
  ('operadorLogico -> OR','operadorLogico',1,'p_operadorLogico','sintaxis.py',442),
  ('objeto -> STRINGR','objeto',1,'p_objeto','sintaxis.py',446),
  ('objeto -> INT','objeto',1,'p_objeto','sintaxis.py',447),
  ('objeto -> DOUBLER','objeto',1,'p_objeto','sintaxis.py',448),
  ('objeto -> NUM','objeto',1,'p_objeto','sintaxis.py',449),
  ('objeto -> VAR','objeto',1,'p_objeto','sintaxis.py',450),
  ('objeto -> DYNAMIC','objeto',1,'p_objeto','sintaxis.py',451),
  ('objeto -> LIST','objeto',1,'p_objeto','sintaxis.py',452),
  ('objeto -> BOOL','objeto',1,'p_objeto','sintaxis.py',453),
  ('objeto -> MAP','objeto',1,'p_objeto','sintaxis.py',454),
  ('objeto -> SET','objeto',1,'p_objeto','sintaxis.py',455),
]
