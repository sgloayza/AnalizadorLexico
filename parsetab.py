
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BOOLR BREAK CASE CDER CIZQ COMA COMILLAD COMILLAS DEFAULT DIGUAL DIV DIVENTERO DO DOSPUNTOS DOUBLE DOUBLER DRESTA DSUMA DYNAMIC ELSE ELSEIF ENTERO FLECHA FOR FUNCIONFIRSTWHERE FUNCIONRANGE FUNCIONSPLIT FUNCIONSTDIN FUNCIONSTDOUT FUNCIONSUBSTRING FUNCIONTAKE IF IGUAL IN INT IS ISNEGADO LDER LIST LIZQ MAP MAYIGUAL MAYOR MENIGUAL MENOR MOD MULTI NEWLIST NOIGUAL NOT NUM OR PDER PIZQ PRINT PUNTOYCOMA RESTA RETURN SET SETFROM STRING STRINGR SUMA SWITCH VAR VARIABLE VOID WHILEfinal : algoritmoUnico\n             | algoritmoUnico PUNTOYCOMA\n             | algoritmoUnico final\n             | algoritmoUnico PUNTOYCOMA final\n    algoritmoUnico : asignacion PUNTOYCOMA\n                      | expresion PUNTOYCOMA\n                      | expresionInt PUNTOYCOMA\n                      | expresionDouble PUNTOYCOMA\n                      | expresionString PUNTOYCOMA\n                      | expresionBool PUNTOYCOMA\n                      | expresionBoolFor PUNTOYCOMA\n                      | sentenciaDoWhile PUNTOYCOMA\n                      | imprimir PUNTOYCOMA\n                      | funcionStdin PUNTOYCOMA\n                      | funcionStdout PUNTOYCOMA\n                      | negacionBool PUNTOYCOMA\n                      | comparacionBool PUNTOYCOMA\n                      | sentenciaSubstring PUNTOYCOMA\n                      | VARIABLE DSUMA PUNTOYCOMA\n                      | VARIABLE DRESTA PUNTOYCOMA\n                      | expresionLista PUNTOYCOMA\n                      | expresionNewList PUNTOYCOMA\n                      | expresionSet PUNTOYCOMA\n                      | expresionMap PUNTOYCOMA\n                      | declaracionSimple PUNTOYCOMA\n                      | funcionFirstWhere PUNTOYCOMA\n                      | sentenciaIf\n                      | sentenciaFor\n                      | sentenciaForEach\n                      | sentenciaWhile\n                      | expresionSwitch\n                      | funcionSimple\n                      | funcion\n                      | funcionReturn\n    funcionFirstWhere : VARIABLE FUNCIONFIRSTWHERE PIZQ PIZQ VARIABLE PDER FLECHA expresionBool PDER\n    expresionSwitch : SWITCH PIZQ VARIABLE PDER LIZQ cases LDER\n                       | SWITCH PIZQ VARIABLE PDER LIZQ cases DEFAULT DOSPUNTOS algoritmoUnico LDER\n    cases : caseString\n             | caseInt\n             | caseBool\n    caseString : CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA\n                  | CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString\n    caseInt : CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA\n               | CASE SUMA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA\n               | CASE RESTA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA\n               | CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt\n               | CASE SUMA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt\n               | CASE RESTA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt\n    caseBool : CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA\n                | CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool\n    expresionMap : MAP VARIABLE\n                    | MAP VARIABLE IGUAL LIZQ LDER\n                    | LIZQ LDER\n                    | MAP VARIABLE IGUAL LIZQ expMap LDER\n                    | LIZQ expMap LDER\n                    | VARIABLE\n\n    expMap : claveValor DOSPUNTOS claveValor\n              | claveValor DOSPUNTOS claveValor COMA expMap\n    claveValor : VARIABLE\n                  | STRING\n                  | ENTERO\n                  | RESTA ENTERO\n                  | SUMA ENTERO\n                  | DOUBLE\n                  | BOOL\n\n                  | CIZQ expListDynamic CDER\n                  | CIZQ expListSet CDER\n                  | expresionNewList\n\n                  | SETFROM PIZQ CIZQ CDER PDER\n                  | SETFROM PIZQ CIZQ expListDynamic CDER PDER\n\n                  | LIZQ LDER\n                  | LIZQ expMap LDER\n    expresionSet : SET VARIABLE\n                    | SETFROM PIZQ CIZQ CDER PDER\n                    | SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER\n                    | SETFROM PIZQ CIZQ expListDynamic CDER PDER\n                    | SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER\n                    | VARIABLE FUNCIONTAKE PIZQ ENTERO PDER\n                    | VARIABLE\n    expresionNewList : NEWLIST PIZQ PDER\n                        | NEWLIST PIZQ ENTERO PDER\n                        | CIZQ CDER\n    expresionLista : LIST MENOR STRINGR MAYOR VARIABLE\n                      | funcionSplit\n                      | LIST MENOR STRINGR MAYOR VARIABLE IGUAL funcionSplit\n                      | LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER\n                      | LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListString CDER\n\n                      | LIST MENOR INT MAYOR VARIABLE\n                      | LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER\n                      | LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListInt CDER\n\n                      | LIST MENOR DOUBLER MAYOR VARIABLE\n                      | LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER\n                      | LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListNum CDER\n\n                      | LIST MENOR NUM MAYOR VARIABLE\n                      | LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER\n                      | LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList\n\n                      | LIST MENOR BOOLR MAYOR VARIABLE\n                      | LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER\n                      | LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListBool CDER\n\n                      | LIST MENOR DYNAMIC MAYOR VARIABLE\n                      | LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER\n                      | LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListDynamic CDER\n\n                      | LIST MENOR SET MAYOR VARIABLE\n                      | LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER\n                      | LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListSet CDER\n\n                      | LIST MENOR MAP MAYOR VARIABLE\n                      | LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER\n                      | LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList\n                      | CIZQ expListMap CDER\n\n                      | VARIABLE CIZQ ENTERO CDER\n                      | VARIABLE FUNCIONTAKE PIZQ ENTERO PDER\n                      | VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER\n\n                      | VARIABLE\n    expListString : STRING\n                     | STRING COMA expListString\n                     | VARIABLE\n                     | VARIABLE COMA expListString\n    funcionSplit : STRING FUNCIONSPLIT PIZQ STRING PDERexpListInt : ENTERO\n                  | RESTA ENTERO\n                  | SUMA ENTERO\n                  | RESTA ENTERO COMA expListInt\n                  | SUMA ENTERO COMA expListInt\n                  | ENTERO COMA expListInt\n                  | VARIABLE\n                  | RESTA VARIABLE\n                  | SUMA VARIABLE\n                  | VARIABLE COMA expListInt\n                  | RESTA VARIABLE COMA expListInt\n                  | SUMA VARIABLE COMA expListInt\n    expListNum : ENTERO\n                  | RESTA ENTERO\n                  | SUMA ENTERO\n                  | DOUBLE\n                  | RESTA DOUBLE\n                  | SUMA DOUBLE\n                  | ENTERO COMA expListNum\n                  | RESTA ENTERO COMA expListNum\n                  | SUMA ENTERO COMA expListNum\n                  | DOUBLE COMA expListNum\n                  | RESTA DOUBLE COMA expListNum\n                  | SUMA DOUBLE COMA expListNum\n                  | VARIABLE\n                  | RESTA VARIABLE\n                  | SUMA VARIABLE\n                  | VARIABLE COMA expListNum\n                  | RESTA VARIABLE COMA expListNum\n                  | SUMA VARIABLE COMA expListNum\n    expListBool : BOOL\n                   | BOOL COMA expListBool\n                   | VARIABLE\n                   | VARIABLE COMA expListBool\n    expListDynamic : STRING\n                      | ENTERO\n                      | RESTA ENTERO\n                      | SUMA ENTERO\n                      | DOUBLE\n                      | BOOL\n                      | STRING COMA expListDynamic\n                      | ENTERO COMA expListDynamic\n                      | RESTA ENTERO COMA expListDynamic\n                      | SUMA ENTERO COMA expListDynamic\n                      | DOUBLE COMA expListDynamic\n                      | RESTA DOUBLE COMA expListDynamic\n                      | SUMA DOUBLE COMA expListDynamic\n                      | BOOL COMA expListDynamic\n                      | VARIABLE\n                      | VARIABLE COMA expListDynamic\n    expListSet : SETFROM PIZQ CIZQ CDER PDER\n                  | SETFROM PIZQ CIZQ expListDynamic CDER PDER\n                  | SETFROM PIZQ CIZQ CDER PDER COMA expListSet\n                  | SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet\n                  | VARIABLE\n                  | VARIABLE COMA expListSet\n    expListMap : LIZQ LDER\n                  | LIZQ expMap LDER\n                  | LIZQ LDER COMA expListMap\n                  | LIZQ expMap LDER COMA expListMap\n                  | VARIABLE\n                  | VARIABLE COMA expListMap\n    asignacion : INT VARIABLE IGUAL expresionInt\n                  | DOUBLER VARIABLE IGUAL expresionDouble\n                  | NUM VARIABLE IGUAL expresionDouble\n                  | STRINGR VARIABLE IGUAL expresionString\n                  | BOOLR VARIABLE IGUAL expresionBool\n                  | DYNAMIC VARIABLE IGUAL expresion\n                  | VAR VARIABLE IGUAL expresion\n                  | asignacionSimple\n    asignacionSimple : VARIABLE IGUAL expresion\n                        | VARIABLE IGUAL expresionString\n    declaracionSimple : STRINGR VARIABLE\n                         | INT VARIABLE\n                         | DOUBLER VARIABLE\n                         | NUM VARIABLE\n                         | VAR VARIABLE\n                         | DYNAMIC VARIABLE\n                         | BOOLR VARIABLE\n    imprimir : PRINT PIZQ expresion PDER\n                | PRINT PIZQ expresionString PDER\n                | PRINT PIZQ asignacionSimple PDERfuncionStdin : FUNCIONSTDINfuncionStdout : FUNCIONSTDOUT PIZQ expresion PDER\n                     | FUNCIONSTDOUT PIZQ expresionString PDER\n                     | FUNCIONSTDOUT PIZQ asignacionSimple PDERfuncionParametros : objeto VARIABLE\n                         | objeto VARIABLE COMA funcionParametros\n    funcionSimple : VOID VARIABLE PIZQ objeto VARIABLE PDER FLECHA algoritmoUnico\n                     | VOID VARIABLE PIZQ PDER FLECHA algoritmoUnico\n    funcion : VOID VARIABLE PIZQ PDER LIZQ LDER\n               | VOID VARIABLE PIZQ PDER LIZQ final LDER\n\n               | VOID VARIABLE PIZQ objeto VARIABLE PDER LIZQ LDER\n               | VOID VARIABLE PIZQ objeto VARIABLE PDER LIZQ final LDER\n    funcionReturn : STRINGR VARIABLE PIZQ PDER LIZQ RETURN expresionString PUNTOYCOMA LDER\n                     | STRINGR VARIABLE PIZQ PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER\n                     | STRINGR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionString PUNTOYCOMA LDER\n                     | STRINGR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER\n\n                     | INT VARIABLE PIZQ PDER LIZQ RETURN expresionInt PUNTOYCOMA LDER\n                     | INT VARIABLE PIZQ PDER LIZQ final RETURN expresionInt PUNTOYCOMA LDER\n                     | INT VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionInt PUNTOYCOMA LDER\n                     | INT VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionInt PUNTOYCOMA LDER\n\n                     | DOUBLER VARIABLE PIZQ PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER\n                     | DOUBLER VARIABLE PIZQ PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER\n                     | DOUBLER VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER\n                     | DOUBLER VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER\n\n                     | NUM VARIABLE PIZQ PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER\n                     | NUM VARIABLE PIZQ PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER\n                     | NUM VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER\n                     | NUM VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER\n\n                     | VAR VARIABLE PIZQ PDER LIZQ RETURN expresion PUNTOYCOMA LDER\n                     | VAR VARIABLE PIZQ PDER LIZQ RETURN expresionString PUNTOYCOMA LDER\n                     | VAR VARIABLE PIZQ PDER LIZQ final RETURN expresion PUNTOYCOMA LDER\n                     | VAR VARIABLE PIZQ PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER\n                     | VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresion PUNTOYCOMA LDER\n                     | VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionString PUNTOYCOMA LDER\n                     | VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresion PUNTOYCOMA LDER\n                     | VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER\n\n                     | DYNAMIC VARIABLE PIZQ PDER LIZQ RETURN expresion PUNTOYCOMA LDER\n                     | DYNAMIC VARIABLE PIZQ PDER LIZQ RETURN expresionString PUNTOYCOMA LDER\n                     | DYNAMIC VARIABLE PIZQ PDER LIZQ final RETURN expresion PUNTOYCOMA LDER\n                     | DYNAMIC VARIABLE PIZQ PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER\n                     | DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresion PUNTOYCOMA LDER\n                     | DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionString PUNTOYCOMA LDER\n                     | DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresion PUNTOYCOMA LDER\n                     | DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER\n\n                     | BOOLR VARIABLE PIZQ PDER LIZQ RETURN expresionBool PUNTOYCOMA LDER\n                     | BOOLR VARIABLE PIZQ PDER LIZQ final RETURN expresionBool PUNTOYCOMA LDER\n                     | BOOLR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionBool PUNTOYCOMA LDER\n                     | BOOLR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionBool PUNTOYCOMA LDER\n\n                     | LIST VARIABLE PIZQ PDER LIZQ RETURN expresionLista PUNTOYCOMA LDER\n                     | LIST VARIABLE PIZQ PDER LIZQ final RETURN expresionLista PUNTOYCOMA LDER\n                     | LIST VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionLista PUNTOYCOMA LDER\n                     | LIST VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionLista PUNTOYCOMA LDER\n\n                     | MAP VARIABLE PIZQ PDER LIZQ RETURN expresionMap PUNTOYCOMA LDER\n                     | MAP VARIABLE PIZQ PDER LIZQ final RETURN expresionMap PUNTOYCOMA LDER\n                     | MAP VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionMap PUNTOYCOMA LDER\n                     | MAP VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionMap PUNTOYCOMA LDER\n\n                     | SET VARIABLE PIZQ PDER LIZQ RETURN expresionSet PUNTOYCOMA LDER\n                     | SET VARIABLE PIZQ PDER LIZQ final RETURN expresionSet PUNTOYCOMA LDER\n                     | SET VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionSet PUNTOYCOMA LDER\n                     | SET VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionSet PUNTOYCOMA LDER\n    sentenciaForEach : FOR PIZQ STRINGR VARIABLE IN VARIABLE PDER algoritmoUnico\n                        | FOR PIZQ INT VARIABLE IN VARIABLE PDER algoritmoUnico\n                        | FOR PIZQ DOUBLER VARIABLE IN VARIABLE PDER algoritmoUnico\n                        | FOR PIZQ NUM VARIABLE IN VARIABLE PDER algoritmoUnico\n                        | FOR PIZQ DYNAMIC VARIABLE IN VARIABLE PDER algoritmoUnico\n                        | FOR PIZQ BOOLR VARIABLE IN VARIABLE PDER algoritmoUnico\n                        | FOR PIZQ MAP VARIABLE IN VARIABLE PDER algoritmoUnico\n                        | FOR PIZQ SET VARIABLE IN VARIABLE PDER algoritmoUnico\n\n                        | FOR PIZQ STRINGR VARIABLE IN VARIABLE PDER LIZQ final LDER\n                        | FOR PIZQ INT VARIABLE IN VARIABLE PDER LIZQ final LDER\n                        | FOR PIZQ DOUBLER VARIABLE IN VARIABLE PDER LIZQ final LDER\n                        | FOR PIZQ NUM VARIABLE IN VARIABLE PDER LIZQ final LDER\n                        | FOR PIZQ DYNAMIC VARIABLE IN VARIABLE PDER LIZQ final LDER\n                        | FOR PIZQ BOOLR VARIABLE IN VARIABLE PDER LIZQ final LDER\n                        | FOR PIZQ MAP VARIABLE IN VARIABLE PDER LIZQ final LDER\n                        | FOR PIZQ SET VARIABLE IN VARIABLE PDER LIZQ final LDER\n    objetoForEach : STRINGR\n                     | INT\n                     | DOUBLER\n                     | NUM\n                     | DYNAMIC\n                     | BOOLR\n                     | MAP\n                     | SET\n    sentenciaIf : IF PIZQ expresionBool PDER algoritmoUnico\n                   | IF PIZQ expresionBool PDER algoritmoUnico sentenciasElseIf\n                   | IF PIZQ expresionBool PDER algoritmoUnico sentenciasElseIf sentenciaElse\n                   | IF PIZQ expresionBool PDER LIZQ final LDER\n                   | IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf\n                   | IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse\n    sentenciasElseIf : sentenciaElseIf\n                        | sentenciaElseIf sentenciasElseIf\n    sentenciaElseIf : ELSEIF PIZQ expresionBool PDER algoritmoUnico\n                       | ELSEIF PIZQ expresionBool PDER LIZQ final LDER\n    sentenciaElse : ELSE algoritmoUnico\n                     | ELSE LIZQ final LDER\n    valor : ENTERO\n             | VARIABLE\n             | DOUBLE\n    expresion : valor operadorMat expresion\n                 | SUMA valor operadorMat expresion\n                 | RESTA valor operadorMat expresion\n                 | valor\n                 | SUMA valor\n                 | RESTA valor\n                 | expresionInt\n                 | expresionDouble\n                 | SUMA expresionDouble\n                 | RESTA expresionDouble\n                 | expresionBool\n                 | funcionFirstWhere\n    asignacionFor : INT VARIABLE IGUAL expresionInt\n                    | DOUBLER VARIABLE IGUAL expresionDouble\n                    | NUM VARIABLE IGUAL expresionDouble\n                    | DYNAMIC VARIABLE IGUAL expresionInt\n                    | DYNAMIC VARIABLE IGUAL expresionDouble\n                    | VAR VARIABLE IGUAL expresion\n                    | VAR VARIABLE IGUAL expresionString\n                    | VARIABLE IGUAL expresionInt\n                    | VARIABLE IGUAL expresionDouble\n                    expresionBoolFor : valorDouble comparadorMat expresionDouble\n                        | VARIABLE comparadorMat expresionDouble\n                        | VARIABLE comparadorMat VARIABLE\n                        | valorDouble comparadorMat VARIABLE\n                        | valorBool\n                        | negacionBool\n                        | comparacionBool\n    sentenciaFor : FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER\n                    | FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER algoritmoUnico\n                    | FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER\n                    | FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER algoritmoUnico\n    sentenciaWhile : WHILE PIZQ expresionBool PDER LIZQ final LDER\n                      | WHILE PIZQ expresionBool PDER algoritmoUnico\n    sentenciaDoWhile : DO LIZQ final LDER WHILE PIZQ expresionBool PDERvalorBool : BOOL\n                 | VARIABLE\n    expresionBool : valorDouble comparadorMat expresionDouble\n                     | VARIABLE comparadorMat expresionDouble\n                     | VARIABLE comparadorMat VARIABLE\n                     | valorDouble comparadorMat VARIABLE\n                     | valorBool\n                     | negacionBool\n                     | comparacionBool\n                     | valor IS objeto\n                     | valor ISNEGADO objeto\n    negacionBool : NOT PIZQ expresionBool PDERcomparacionBool : expresionBool operadorLogico expresionBool\n                       | expresionBool operadorLogico comparacionBool\n    valorString : STRING\n                   | VARIABLE\n                   | FUNCIONSTDIN\n                   | expresionIndexString\n                   | sentenciaSubstring\n                   | STRING CIZQ ENTERO CDER\n    expresionString : valorString SUMA expresionString\n                       | valorString\n    expresionIndexString : valorString CIZQ ENTERO CDERsentenciaSubstring : VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER\n                         | VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER\n    valorInt : ENTERO\n                | VARIABLE\n    expresionInt : valorInt operadorMat expresionInt\n                    | SUMA valorInt operadorMat expresionInt\n                    | RESTA valorInt operadorMat expresionInt\n                    | valorInt\n                    | SUMA valorInt\n                    | RESTA valorInt\n    valorDouble : DOUBLE\n                   | valorInt\n    expresionDouble : valorDouble operadorMat expresionDouble\n                       | SUMA valorDouble operadorMat expresionDouble\n                       | RESTA valorDouble operadorMat expresionDouble\n                       | valorDouble\n                       | SUMA valorDouble\n                       | RESTA valorDouble\n    operadorMat : SUMA\n                   | RESTA\n                   | MULTI\n                   | MULTI SUMA\n                   | MULTI RESTA\n                   | DIV\n                   | DIV SUMA\n                   | DIV RESTA\n                   | DIVENTERO\n                   | DIVENTERO SUMA\n                   | DIVENTERO RESTA\n                   | MOD\n                   | MOD SUMA\n                   | MOD RESTA\n    comparadorMat : DIGUAL\n                     | NOIGUAL\n                     | MAYOR\n                     | MENOR\n                     | MAYIGUAL\n                     | MENIGUAL\n    operadorLogico : AND\n                      | OR\n    objeto : STRINGR\n              | INT\n              | DOUBLER\n              | NUM\n              | VAR\n              | DYNAMIC\n              | LIST\n              | BOOLR\n              | MAP\n              | SET\n    '
    
_lr_action_items = {'VARIABLE':([0,2,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,48,55,57,58,59,65,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,97,98,99,100,101,102,103,104,105,106,107,108,109,117,120,121,122,123,124,125,126,132,137,138,139,140,142,143,154,157,158,159,160,174,175,179,184,185,186,200,201,224,226,228,230,232,234,236,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,262,263,264,266,267,268,271,272,283,321,322,323,330,331,341,345,346,347,348,349,350,351,352,353,358,359,364,367,370,373,376,379,382,385,386,390,402,403,408,409,410,411,412,420,421,422,423,424,425,426,427,429,444,445,446,447,448,449,453,454,459,460,464,465,467,472,473,474,485,498,500,502,504,506,508,510,515,516,517,518,519,522,523,532,534,535,539,544,555,560,561,566,568,572,576,577,578,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,606,607,612,615,618,621,624,627,630,633,637,643,644,647,657,662,663,666,667,668,669,670,673,675,676,680,684,685,688,689,690,712,713,717,719,720,722,723,725,726,728,729,731,732,735,736,739,740,745,752,753,759,762,764,766,768,770,772,774,779,780,781,782,783,784,785,787,788,790,794,797,798,799,802,803,804,805,806,807,808,814,815,816,817,818,819,820,821,822,829,830,831,835,839,843,847,851,857,863,869,870,875,876,877,878,885,886,899,901,904,906,913,918,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,955,956,959,960,963,964,967,968,971,972,973,978,979,980,985,988,989,990,991,993,994,999,1001,1002,1004,1011,1013,1015,1019,1022,1023,1024,1028,1031,1032,1035,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1083,1084,1085,1088,1089,1092,1093,1094,1095,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1146,1147,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[17,17,-27,-28,-29,-30,-31,-32,-33,-34,110,111,112,113,114,115,116,131,131,147,162,172,180,181,187,17,-5,-6,-7,-8,-9,-10,194,-402,-403,-11,-12,-13,-14,-15,-16,-17,-18,202,212,-396,-397,-398,-399,-400,-401,-21,-22,-23,-24,-25,-26,239,-382,-383,-384,-387,-390,-393,261,261,261,261,275,277,17,147,294,194,300,300,194,325,328,147,194,344,354,-19,-20,261,261,261,277,194,239,239,-404,-405,-406,-407,-408,-409,-410,-411,-412,-413,-385,-386,-388,-389,-391,-392,-394,-395,239,261,261,239,261,261,261,261,147,432,172,443,455,458,471,475,476,477,478,479,480,481,482,483,490,491,497,499,501,503,505,507,509,511,261,261,471,471,471,471,294,471,17,524,525,526,527,528,529,530,531,533,443,540,455,443,540,455,557,559,471,565,569,147,573,17,580,261,605,17,17,17,17,17,17,17,147,471,471,471,471,639,-339,17,432,443,325,328,455,455,458,565,17,17,471,-291,639,261,261,691,692,261,694,261,696,261,698,261,701,702,703,212,17,17,261,261,261,277,194,212,212,194,147,131,131,756,777,540,540,789,455,789,455,789,565,471,795,800,-292,-297,809,810,813,-214,-215,194,261,17,261,17,261,17,277,17,194,17,212,17,212,17,-338,325,328,879,882,789,789,889,471,893,565,172,777,17,540,789,540,789,557,559,893,909,795,17,915,800,17,-293,17,-298,194,-294,17,17,17,17,17,17,17,17,-36,17,17,-216,261,261,261,277,194,212,212,986,987,995,996,756,471,1006,1008,777,789,789,893,795,800,-301,639,-295,-267,639,-268,639,-269,639,-270,639,-271,639,-272,639,-273,639,-274,639,17,17,17,17,-213,-217,-223,261,-227,261,-231,261,-219,277,-251,194,-243,-244,212,-235,-236,212,987,995,987,995,557,559,879,879,882,882,889,889,893,-255,777,789,789,-263,795,-259,800,17,-296,17,17,17,17,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,986,987,995,995,996,882,882,882,882,-256,-264,-260,-302,-299,639,639,-335,639,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,995,995,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'INT':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[32,32,-27,-28,-29,-30,-31,-32,-33,-34,32,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,242,242,32,306,346,-19,-20,242,242,242,242,242,242,242,242,242,242,242,32,32,32,32,32,32,32,32,32,32,-339,32,32,32,-291,32,32,32,-292,-297,-214,-215,32,32,32,32,32,32,32,-338,32,32,32,-293,32,-298,-294,32,32,32,32,32,32,32,32,-36,32,32,-216,-301,32,-295,-267,32,-268,32,-269,32,-270,32,-271,32,-272,32,-273,32,-274,32,32,32,32,32,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,32,-296,32,32,32,32,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,32,32,-335,32,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'DOUBLER':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[33,33,-27,-28,-29,-30,-31,-32,-33,-34,33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,243,243,33,307,347,-19,-20,243,243,243,243,243,243,243,243,243,243,243,33,33,33,33,33,33,33,33,33,33,-339,33,33,33,-291,33,33,33,-292,-297,-214,-215,33,33,33,33,33,33,33,-338,33,33,33,-293,33,-298,-294,33,33,33,33,33,33,33,33,-36,33,33,-216,-301,33,-295,-267,33,-268,33,-269,33,-270,33,-271,33,-272,33,-273,33,-274,33,33,33,33,33,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,33,-296,33,33,33,33,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,33,33,-335,33,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'NUM':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[34,34,-27,-28,-29,-30,-31,-32,-33,-34,34,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,244,244,34,308,348,-19,-20,244,244,244,244,244,244,244,244,244,244,244,34,34,34,34,34,34,34,34,34,34,-339,34,34,34,-291,34,34,34,-292,-297,-214,-215,34,34,34,34,34,34,34,-338,34,34,34,-293,34,-298,-294,34,34,34,34,34,34,34,34,-36,34,34,-216,-301,34,-295,-267,34,-268,34,-269,34,-270,34,-271,34,-272,34,-273,34,-274,34,34,34,34,34,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,34,-296,34,34,34,34,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,34,34,-335,34,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'STRINGR':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[35,35,-27,-28,-29,-30,-31,-32,-33,-34,35,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,241,241,35,305,345,-19,-20,241,241,241,241,241,241,241,241,241,241,241,35,35,35,35,35,35,35,35,35,35,-339,35,35,35,-291,35,35,35,-292,-297,-214,-215,35,35,35,35,35,35,35,-338,35,35,35,-293,35,-298,-294,35,35,35,35,35,35,35,35,-36,35,35,-216,-301,35,-295,-267,35,-268,35,-269,35,-270,35,-271,35,-272,35,-273,35,-274,35,35,35,35,35,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,35,-296,35,35,35,35,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,35,35,-335,35,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'BOOLR':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[36,36,-27,-28,-29,-30,-31,-32,-33,-34,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,248,248,36,309,350,-19,-20,248,248,248,248,248,248,248,248,248,248,248,36,36,36,36,36,36,36,36,36,36,-339,36,36,36,-291,36,36,36,-292,-297,-214,-215,36,36,36,36,36,36,36,-338,36,36,36,-293,36,-298,-294,36,36,36,36,36,36,36,36,-36,36,36,-216,-301,36,-295,-267,36,-268,36,-269,36,-270,36,-271,36,-272,36,-273,36,-274,36,36,36,36,36,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,36,-296,36,36,36,36,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,36,36,-335,36,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'DYNAMIC':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[37,37,-27,-28,-29,-30,-31,-32,-33,-34,37,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,246,246,37,310,349,-19,-20,246,246,246,246,246,246,246,246,246,246,246,37,37,37,37,37,37,37,37,37,37,-339,37,37,37,-291,37,37,37,-292,-297,-214,-215,37,37,37,37,37,37,37,-338,37,37,37,-293,37,-298,-294,37,37,37,37,37,37,37,37,-36,37,37,-216,-301,37,-295,-267,37,-268,37,-269,37,-270,37,-271,37,-272,37,-273,37,-274,37,37,37,37,37,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,37,-296,37,37,37,37,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,37,37,-335,37,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'VAR':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[38,38,-27,-28,-29,-30,-31,-32,-33,-34,38,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,245,245,38,353,-19,-20,245,245,245,245,245,245,245,245,245,245,245,38,38,38,38,38,38,38,38,38,38,-339,38,38,38,-291,38,38,38,-292,-297,-214,-215,38,38,38,38,38,38,38,-338,38,38,38,-293,38,-298,-294,38,38,38,38,38,38,38,38,-36,38,38,-216,-301,38,-295,-267,38,-268,38,-269,38,-270,38,-271,38,-272,38,-273,38,-274,38,38,38,38,38,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,38,-296,38,38,38,38,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,38,38,-335,38,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'SUMA':([0,2,16,17,24,25,26,27,28,29,30,31,40,41,42,43,44,45,48,51,54,57,66,67,68,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,91,97,98,99,100,101,102,103,104,105,106,107,108,109,117,120,121,122,123,124,125,127,129,130,131,133,135,136,137,138,139,142,143,154,158,159,179,199,200,201,202,204,205,206,212,219,221,222,223,224,226,228,234,236,239,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,275,277,283,300,321,322,323,330,331,341,358,359,386,390,394,395,396,402,403,408,409,410,411,412,444,445,446,447,448,449,459,465,472,474,487,490,491,493,498,500,502,504,506,508,510,515,516,517,518,519,522,523,532,534,535,555,560,561,568,572,576,577,578,593,595,597,599,603,606,607,612,615,618,627,630,637,639,641,642,643,644,645,647,662,663,666,667,668,669,670,675,684,685,689,690,710,712,713,715,719,720,722,723,725,726,729,732,735,736,739,740,745,746,747,762,764,766,770,779,781,782,783,784,785,798,803,804,805,806,808,810,813,814,815,816,817,818,819,820,821,822,829,830,831,835,839,843,857,863,869,870,875,876,877,878,901,904,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,955,956,959,960,963,964,968,972,973,978,979,980,985,988,989,990,991,1002,1004,1019,1023,1024,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1083,1084,1085,1088,1089,1092,1093,1094,1095,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1146,1147,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1182,],[41,41,-359,-304,-27,-28,-29,-30,-31,-32,-33,-34,120,126,126,120,120,140,151,-357,-303,175,-305,-355,-358,41,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,126,41,-396,-397,-398,-399,-400,-401,-21,-22,-23,-24,-25,-26,41,-382,-383,252,254,256,258,120,120,120,-304,120,120,120,271,126,126,41,151,291,41,41,151,-375,-19,-20,-367,120,-374,-366,-304,120,-355,-357,-359,271,126,126,41,41,-304,-385,-386,-388,-389,-391,-392,-394,-395,120,-367,41,271,126,120,41,271,126,120,-367,-356,151,-304,291,175,175,454,291,291,126,126,126,126,120,120,-363,291,291,291,291,291,291,41,175,544,454,175,544,454,291,151,41,589,-360,-367,-367,-364,41,41,41,41,41,41,41,151,291,291,291,291,644,-339,41,291,175,454,454,291,41,41,291,-291,644,271,126,126,589,41,41,41,271,126,126,41,41,151,-304,-355,-303,126,126,-305,753,544,544,788,454,788,454,788,291,-292,-297,126,126,826,-214,-215,-365,271,41,126,41,126,41,41,41,41,41,41,41,-338,-303,-303,886,788,788,291,175,41,544,788,544,788,41,41,-293,41,-298,-294,-367,-367,41,41,41,41,41,41,41,41,-36,41,41,-216,271,126,126,41,41,291,753,994,291,753,291,788,788,-301,644,-295,-267,644,-268,644,-269,644,-270,644,-271,644,-272,644,-273,644,-274,644,41,41,41,41,-213,-217,-223,271,-227,126,-231,126,-219,-251,-243,-244,41,-235,-236,41,753,994,753,994,886,886,-255,788,788,-263,-259,41,-296,41,41,41,41,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,291,753,994,994,291,886,886,886,886,-256,-264,-260,-302,-299,644,644,-335,644,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,994,994,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,826,]),'RESTA':([0,2,17,24,25,26,27,28,29,30,31,40,41,42,43,44,48,54,57,66,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,91,97,98,99,100,101,102,103,104,105,106,107,108,109,117,120,121,122,123,124,125,127,129,130,131,133,135,136,137,138,139,142,143,154,158,159,179,199,200,201,202,204,205,206,212,219,224,226,228,234,236,239,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,275,283,300,321,322,323,330,331,341,358,359,386,390,394,395,402,403,408,409,410,411,412,444,445,446,447,448,449,459,465,472,474,490,491,498,500,502,504,506,508,510,515,516,517,518,519,522,523,532,534,535,555,560,561,568,572,576,577,578,593,595,597,599,603,606,607,612,615,618,627,630,637,639,642,643,644,645,647,662,663,666,667,668,669,670,675,684,685,689,690,710,712,713,719,720,722,723,725,726,729,732,735,736,739,740,745,746,747,762,764,766,770,779,781,782,783,784,785,798,803,804,805,806,808,810,813,814,815,816,817,818,819,820,821,822,829,830,831,835,839,843,857,863,869,870,875,876,877,878,901,904,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,955,956,959,960,963,964,968,972,973,978,979,980,985,988,989,990,991,1002,1004,1019,1023,1024,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1083,1084,1085,1088,1089,1092,1093,1094,1095,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1146,1147,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1182,],[42,42,-304,-27,-28,-29,-30,-31,-32,-33,-34,121,132,132,121,121,150,-303,174,-305,42,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,132,42,-396,-397,-398,-399,-400,-401,-21,-22,-23,-24,-25,-26,42,-382,-383,253,255,257,259,121,121,121,-304,121,121,121,272,132,132,42,150,290,42,42,150,-375,-19,-20,-367,121,-374,-366,-304,121,272,132,132,42,42,-304,-385,-386,-388,-389,-391,-392,-394,-395,121,-367,42,272,132,121,42,272,132,121,-367,150,-304,290,174,174,453,290,290,132,132,132,132,121,121,290,290,290,290,290,290,42,174,539,453,174,539,453,290,150,42,590,-367,-367,42,42,42,42,42,42,42,150,290,290,290,290,643,-339,42,290,174,453,453,290,42,42,290,-291,643,272,132,132,590,42,42,42,272,132,132,42,42,150,-304,-303,132,132,-305,752,539,539,787,453,787,453,787,290,-292,-297,132,132,827,-214,-215,272,42,132,42,132,42,42,42,42,42,42,42,-338,-303,-303,885,787,787,290,174,42,539,787,539,787,42,42,-293,42,-298,-294,-367,-367,42,42,42,42,42,42,42,42,-36,42,42,-216,272,132,132,42,42,290,752,993,290,752,290,787,787,-301,643,-295,-267,643,-268,643,-269,643,-270,643,-271,643,-272,643,-273,643,-274,643,42,42,42,42,-213,-217,-223,272,-227,132,-231,132,-219,-251,-243,-244,42,-235,-236,42,752,993,752,993,885,885,-255,787,787,-263,-259,42,-296,42,42,42,42,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,290,752,993,993,290,885,885,885,885,-256,-264,-260,-302,-299,643,643,-335,643,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,993,993,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,827,]),'DO':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[47,47,-27,-28,-29,-30,-31,-32,-33,-34,47,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,47,-19,-20,47,47,47,47,47,47,47,47,47,47,-339,47,47,47,-291,47,47,47,-292,-297,-214,-215,47,47,47,47,47,47,47,-338,47,47,47,-293,47,-298,-294,47,47,47,47,47,47,47,47,-36,47,47,-216,-301,47,-295,-267,47,-268,47,-269,47,-270,47,-271,47,-272,47,-273,47,-274,47,47,47,47,47,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,47,-296,47,47,47,47,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,47,47,-335,47,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'PRINT':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[50,50,-27,-28,-29,-30,-31,-32,-33,-34,50,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,50,-19,-20,50,50,50,50,50,50,50,50,50,50,-339,50,50,50,-291,50,50,50,-292,-297,-214,-215,50,50,50,50,50,50,50,-338,50,50,50,-293,50,-298,-294,50,50,50,50,50,50,50,50,-36,50,50,-216,-301,50,-295,-267,50,-268,50,-269,50,-270,50,-271,50,-272,50,-273,50,-274,50,50,50,50,50,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,50,-296,50,50,50,50,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,50,50,-335,50,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'FUNCIONSTDIN':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,97,104,105,106,107,108,109,140,142,158,159,200,201,230,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,603,606,607,621,627,630,684,685,712,713,720,723,726,728,729,732,735,736,739,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,847,857,863,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,967,968,972,973,978,979,980,985,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[51,51,-27,-28,-29,-30,-31,-32,-33,-34,51,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,222,-21,-22,-23,-24,-25,-26,222,51,222,222,-19,-20,222,51,51,51,51,51,51,51,51,51,51,-339,51,51,51,-291,51,222,51,51,222,222,222,-292,-297,-214,-215,51,51,51,222,51,51,222,51,222,51,-338,51,51,51,-293,51,-298,-294,51,51,51,51,51,51,51,51,-36,51,51,-216,222,222,222,-301,51,-295,-267,51,-268,51,-269,51,-270,51,-271,51,-272,51,-273,51,-274,51,51,51,51,51,-213,-217,-223,-227,-231,-219,222,-251,-243,-244,222,-235,-236,222,-255,-263,-259,51,-296,51,51,51,51,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,51,51,-335,51,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'FUNCIONSTDOUT':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[52,52,-27,-28,-29,-30,-31,-32,-33,-34,52,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,52,-19,-20,52,52,52,52,52,52,52,52,52,52,-339,52,52,52,-291,52,52,52,-292,-297,-214,-215,52,52,52,52,52,52,52,-338,52,52,52,-293,52,-298,-294,52,52,52,52,52,52,52,52,-36,52,52,-216,-301,52,-295,-267,52,-268,52,-269,52,-270,52,-271,52,-272,52,-273,52,-274,52,52,52,52,52,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,52,-296,52,52,52,52,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,52,52,-335,52,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'NOT':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,97,104,105,106,107,108,109,117,120,121,122,123,124,125,142,157,158,159,160,184,200,201,232,234,236,252,253,254,255,256,257,258,259,262,266,412,472,473,498,500,502,504,506,508,510,522,523,532,568,572,577,578,603,606,607,624,627,630,633,684,685,712,713,717,720,723,726,729,731,732,735,736,739,740,745,781,798,803,804,805,806,807,808,814,815,816,817,818,819,820,821,822,829,830,831,851,857,863,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,971,972,973,978,979,980,985,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[53,53,-27,-28,-29,-30,-31,-32,-33,-34,53,-5,-6,-7,-8,-9,-10,53,-402,-403,-11,-12,-13,-14,-15,-16,-17,-18,53,-21,-22,-23,-24,-25,-26,53,-382,-383,-384,-387,-390,-393,53,53,53,53,53,53,-19,-20,53,53,53,-385,-386,-388,-389,-391,-392,-394,-395,53,53,53,53,53,53,53,53,53,53,53,53,53,-339,53,53,53,-291,53,53,53,53,53,53,53,53,-292,-297,-214,-215,53,53,53,53,53,53,53,53,53,53,53,-338,53,53,53,-293,53,-298,53,-294,53,53,53,53,53,53,53,53,-36,53,53,-216,53,53,53,-301,53,-295,-267,53,-268,53,-269,53,-270,53,-271,53,-272,53,-273,53,-274,53,53,53,53,53,-213,-217,-223,-227,-231,-219,-251,53,-243,-244,53,-235,-236,53,-255,-263,-259,53,-296,53,53,53,53,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,53,53,-335,53,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'LIST':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,657,684,685,712,713,720,723,726,729,732,736,740,745,780,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,899,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1022,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[55,55,-27,-28,-29,-30,-31,-32,-33,-34,55,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,247,247,55,-19,-20,247,247,247,247,247,247,247,247,247,247,247,55,55,55,55,55,55,55,55,55,55,-339,55,55,55,-291,55,55,55,776,-292,-297,-214,-215,55,55,55,55,55,55,55,-338,776,55,55,55,-293,55,-298,-294,55,55,55,55,55,55,55,55,-36,55,55,-216,776,-301,55,-295,-267,55,-268,55,-269,55,-270,55,-271,55,-272,55,-273,55,-274,55,55,55,55,55,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,776,-263,-259,55,-296,55,55,55,55,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,55,55,-335,55,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'CIZQ':([0,2,16,17,24,25,26,27,28,29,30,31,45,48,51,67,68,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,143,179,183,200,201,212,221,222,223,277,283,295,300,332,396,412,465,472,487,493,498,500,502,504,506,508,510,515,522,523,532,567,568,572,577,578,606,607,637,639,641,649,650,651,652,653,654,655,656,657,684,685,712,713,715,720,723,726,729,732,736,740,745,757,777,780,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,899,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1022,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[57,57,-359,93,-27,-28,-29,-30,-31,-32,-33,-34,141,154,-357,188,-358,57,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,57,154,154,341,-19,-20,-356,188,-357,-359,-356,154,411,-356,459,-363,57,154,57,-360,-364,57,57,57,57,57,57,57,154,647,-339,57,675,57,57,-291,647,57,57,154,93,188,759,762,764,766,768,770,772,774,779,-292,-297,-214,-215,-365,57,57,57,57,57,57,57,-338,878,93,779,57,57,57,-293,57,-298,-294,57,57,57,57,57,57,57,57,-36,57,57,-216,779,-301,647,-295,-267,647,-268,647,-269,647,-270,647,-271,647,-272,647,-273,647,-274,647,57,57,57,57,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,779,-263,-259,57,-296,57,57,57,57,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,647,647,-335,647,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'NEWLIST':([0,2,24,25,26,27,28,29,30,31,48,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,143,179,200,201,283,412,465,472,498,500,502,504,506,508,510,515,522,523,532,568,572,577,578,606,607,637,649,650,651,652,653,654,655,656,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[60,60,-27,-28,-29,-30,-31,-32,-33,-34,60,60,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,60,60,60,-19,-20,60,60,60,60,60,60,60,60,60,60,60,60,60,-339,60,60,60,-291,60,60,60,60,60,60,60,60,60,60,60,60,-292,-297,-214,-215,60,60,60,60,60,60,60,-338,60,60,60,-293,60,-298,-294,60,60,60,60,60,60,60,60,-36,60,60,-216,-301,60,-295,-267,60,-268,60,-269,60,-270,60,-271,60,-272,60,-273,60,-274,60,60,60,60,60,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,60,-296,60,60,60,60,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,60,60,-335,60,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'SET':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,676,684,685,712,713,720,723,726,729,732,736,740,745,781,797,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,913,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1031,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[58,58,-27,-28,-29,-30,-31,-32,-33,-34,58,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,250,250,58,311,352,-19,-20,250,250,250,250,250,250,250,250,250,250,250,58,58,58,58,58,58,58,58,58,58,-339,58,58,58,-291,58,58,58,794,-292,-297,-214,-215,58,58,58,58,58,58,58,-338,58,794,58,58,-293,58,-298,-294,58,58,58,58,58,58,58,58,-36,58,58,-216,794,-301,58,-295,-267,58,-268,58,-269,58,-270,58,-271,58,-272,58,-273,58,-274,58,58,58,58,58,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,794,-259,58,-296,58,58,58,58,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,58,58,-335,58,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'SETFROM':([0,2,24,25,26,27,28,29,30,31,48,57,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,143,154,179,200,201,283,322,335,410,412,465,472,498,500,502,504,506,508,510,515,522,523,532,568,572,577,578,606,607,637,647,676,684,685,712,713,720,723,726,729,732,736,740,745,772,779,781,790,797,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,877,906,913,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1015,1019,1028,1031,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[61,61,-27,-28,-29,-30,-31,-32,-33,-34,156,178,61,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,61,156,178,156,-19,-20,156,178,462,178,61,156,61,61,61,61,61,61,61,61,156,648,-339,61,61,61,-291,648,61,61,156,178,61,-292,-297,-214,-215,61,61,61,61,61,61,61,-338,178,178,61,178,61,61,61,-293,61,-298,-294,61,61,61,61,61,61,61,61,-36,61,61,-216,178,178,61,-301,648,-295,-267,648,-268,648,-269,648,-270,648,-271,648,-272,648,-273,648,-274,648,61,61,61,61,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,178,-255,-263,61,-259,61,-296,61,61,61,61,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,648,648,-335,648,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'MAP':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,118,119,142,161,185,200,201,225,227,229,231,233,235,237,313,336,338,355,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,680,684,685,712,713,720,723,726,729,732,736,740,745,781,798,802,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,918,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1035,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[59,59,-27,-28,-29,-30,-31,-32,-33,-34,59,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,249,249,59,312,351,-19,-20,249,249,249,249,249,249,249,249,249,249,249,59,59,59,59,59,59,59,59,59,59,-339,59,59,59,-291,59,59,59,799,-292,-297,-214,-215,59,59,59,59,59,59,59,-338,59,59,799,59,-293,59,-298,-294,59,59,59,59,59,59,59,59,-36,59,59,-216,799,-301,59,-295,-267,59,-268,59,-269,59,-270,59,-271,59,-272,59,-273,59,-274,59,59,59,59,59,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,799,59,-296,59,59,59,59,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,59,59,-335,59,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'LIZQ':([0,2,24,25,26,27,28,29,30,31,47,48,57,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,143,179,200,201,283,322,337,366,369,372,375,378,381,384,412,428,460,463,465,466,472,484,486,498,500,502,504,506,508,510,515,522,523,532,566,568,572,577,578,606,607,614,617,620,623,626,629,632,637,647,659,673,678,680,682,684,685,711,712,713,720,723,726,729,732,736,740,745,774,779,781,798,802,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,877,918,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1035,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[48,48,-27,-28,-29,-30,-31,-32,-33,-34,142,143,179,48,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,48,143,143,-19,-20,143,179,465,498,500,502,504,506,508,510,522,532,179,568,143,572,578,604,607,48,48,48,48,48,48,48,143,637,-339,48,179,48,48,-291,637,48,48,720,723,726,729,732,736,740,143,179,781,179,798,48,803,-292,-297,830,-214,-215,48,48,48,48,48,48,48,-338,179,179,48,48,48,48,-293,921,-298,-294,927,929,931,933,935,937,939,941,-36,48,48,-216,179,48,-301,637,-295,-267,637,-268,637,-269,637,-270,637,-271,637,-272,637,-273,637,-274,637,48,48,48,48,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,48,1109,-296,1110,1112,48,48,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,637,637,-335,637,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'IF':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[62,62,-27,-28,-29,-30,-31,-32,-33,-34,62,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,62,-19,-20,62,62,62,62,62,62,62,62,62,62,-339,62,62,62,-291,62,62,62,-292,-297,-214,-215,62,62,62,62,62,62,62,-338,62,62,62,-293,62,-298,-294,62,62,62,62,62,62,62,62,-36,62,62,-216,-301,62,-295,-267,62,-268,62,-269,62,-270,62,-271,62,-272,62,-273,62,-274,62,62,62,62,62,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,62,-296,62,62,62,62,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,62,62,-335,62,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'FOR':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[63,63,-27,-28,-29,-30,-31,-32,-33,-34,63,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,63,-19,-20,63,63,63,63,63,63,63,63,63,63,-339,63,63,63,-291,63,63,63,-292,-297,-214,-215,63,63,63,63,63,63,63,-338,63,63,63,-293,63,-298,-294,63,63,63,63,63,63,63,63,-36,63,63,-216,-301,63,-295,-267,63,-268,63,-269,63,-270,63,-271,63,-272,63,-273,63,-274,63,63,63,63,63,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,63,-296,63,63,63,63,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,63,63,-335,63,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'WHILE':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,397,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[49,49,-27,-28,-29,-30,-31,-32,-33,-34,49,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,49,-19,-20,514,49,49,49,49,49,49,49,49,49,49,-339,49,49,49,-291,49,49,49,-292,-297,-214,-215,49,49,49,49,49,49,49,-338,49,49,49,-293,49,-298,-294,49,49,49,49,49,49,49,49,-36,49,49,-216,-301,49,-295,-267,49,-268,49,-269,49,-270,49,-271,49,-272,49,-273,49,-274,49,49,49,49,49,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,49,-296,49,49,49,49,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,49,49,-335,49,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'SWITCH':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[64,64,-27,-28,-29,-30,-31,-32,-33,-34,64,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,64,-19,-20,64,64,64,64,64,64,64,64,64,64,-339,64,64,64,-291,64,64,64,-292,-297,-214,-215,64,64,64,64,64,64,64,-338,64,64,64,-293,64,-298,-294,64,64,64,64,64,64,64,64,-36,64,64,-216,-301,64,-295,-267,64,-268,64,-269,64,-270,64,-271,64,-272,64,-273,64,-274,64,64,64,64,64,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,64,-296,64,64,64,64,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,64,64,-335,64,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'VOID':([0,2,24,25,26,27,28,29,30,31,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,142,200,201,412,472,498,500,502,504,506,508,510,522,523,532,568,572,577,578,606,607,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[65,65,-27,-28,-29,-30,-31,-32,-33,-34,65,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,65,-19,-20,65,65,65,65,65,65,65,65,65,65,-339,65,65,65,-291,65,65,65,-292,-297,-214,-215,65,65,65,65,65,65,65,-338,65,65,65,-293,65,-298,-294,65,65,65,65,65,65,65,65,-36,65,65,-216,-301,65,-295,-267,65,-268,65,-269,65,-270,65,-271,65,-272,65,-273,65,-274,65,65,65,65,65,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,65,-296,65,65,65,65,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,65,65,-335,65,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'ENTERO':([0,2,24,25,26,27,28,29,30,31,41,42,48,57,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,97,98,99,100,101,102,103,104,105,106,107,108,109,117,120,121,122,123,124,125,126,132,137,138,139,141,142,143,150,151,154,157,158,159,160,174,175,179,182,184,188,200,201,207,209,210,224,226,228,232,234,236,252,253,254,255,256,257,258,259,262,263,264,266,267,268,271,272,283,290,291,321,322,323,330,331,341,358,359,386,390,402,403,408,409,410,411,412,444,445,446,447,448,449,453,454,459,465,472,473,474,494,496,498,500,502,504,506,508,510,515,516,517,518,519,522,523,532,534,535,539,544,555,560,561,568,572,576,577,578,589,590,593,595,597,599,603,606,607,612,615,618,624,627,630,633,637,643,644,647,662,663,666,667,668,669,670,675,684,685,689,690,710,712,713,717,719,720,722,723,725,726,729,731,732,735,736,739,740,745,752,753,762,764,766,770,779,781,782,783,784,785,787,788,798,803,804,805,806,807,808,814,815,816,817,818,819,820,821,822,826,827,829,830,831,835,839,843,851,857,863,869,870,875,876,877,878,885,886,901,904,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,955,956,959,960,963,964,968,971,972,973,978,979,980,985,988,989,990,991,993,994,1002,1004,1018,1019,1023,1024,1027,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1083,1084,1085,1088,1089,1092,1093,1094,1095,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1146,1147,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1182,],[54,54,-27,-28,-29,-30,-31,-32,-33,-34,54,54,149,173,54,-5,-6,-7,-8,-9,-10,54,-402,-403,-11,-12,-13,-14,-15,-16,-17,-18,206,208,54,-396,-397,-398,-399,-400,-401,-21,-22,-23,-24,-25,-26,54,-382,-383,-384,-387,-390,-393,206,206,206,206,206,278,54,149,284,285,289,54,54,54,54,324,327,149,340,54,356,-19,-20,360,362,363,206,206,206,54,54,54,-385,-386,-388,-389,-391,-392,-394,-395,54,206,206,54,206,206,206,206,149,404,406,289,173,173,452,289,289,206,206,206,206,289,289,289,289,289,289,54,173,543,452,173,543,452,556,558,289,149,54,586,206,609,610,54,54,54,54,54,54,54,149,289,289,289,289,642,-339,54,289,173,660,664,452,452,289,54,54,289,-291,642,206,206,206,206,206,206,54,54,54,206,206,206,54,54,54,54,149,746,747,751,543,543,786,452,786,452,786,289,-292,-297,206,206,825,-214,-215,54,206,54,206,54,206,54,54,54,54,54,54,54,54,-338,871,873,884,786,786,289,173,54,543,786,543,786,902,903,54,54,-293,54,-298,54,-294,54,54,54,54,54,54,54,54,-36,945,946,54,54,-216,206,206,206,54,54,54,289,751,992,289,751,289,1005,1007,786,786,-301,642,-295,-267,642,-268,642,-269,642,-270,642,-271,642,-272,642,-273,642,-274,642,54,54,54,54,-213,-217,-223,206,-227,206,-231,206,-219,-251,54,-243,-244,54,-235,-236,54,751,992,751,992,1086,1087,884,884,1096,-255,786,786,1100,-263,-259,54,-296,54,54,54,54,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,289,751,992,992,289,884,884,884,884,-256,-264,-260,-302,-299,642,642,-335,642,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,992,992,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,825,]),'DOUBLE':([0,2,24,25,26,27,28,29,30,31,41,42,48,57,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,97,98,99,100,101,102,103,104,105,106,107,108,109,117,120,121,122,123,124,125,126,132,138,139,142,143,154,157,158,159,160,174,175,179,184,200,201,226,228,232,234,236,252,253,254,255,256,257,258,259,262,264,266,268,283,290,291,321,322,323,330,331,341,358,359,386,390,402,403,408,409,410,411,412,444,445,446,447,448,449,453,454,459,465,472,473,474,498,500,502,504,506,508,510,515,516,517,518,519,522,523,532,534,535,539,544,555,560,561,568,572,576,577,578,589,590,595,597,599,603,606,607,615,618,624,627,630,633,637,643,644,647,662,663,666,667,668,669,670,675,684,685,689,690,712,713,717,720,722,723,725,726,729,731,732,735,736,739,740,745,752,753,764,766,770,779,781,782,783,784,785,787,788,798,803,804,805,806,807,808,814,815,816,817,818,819,820,821,822,829,830,831,839,843,851,857,863,869,870,875,876,877,878,901,904,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,959,960,963,964,968,971,972,973,978,979,980,985,988,989,990,991,993,994,1019,1023,1024,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1083,1084,1085,1088,1089,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1146,1147,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[66,66,-27,-28,-29,-30,-31,-32,-33,-34,66,66,152,176,66,-5,-6,-7,-8,-9,-10,198,-402,-403,-11,-12,-13,-14,-15,-16,-17,-18,205,66,-396,-397,-398,-399,-400,-401,-21,-22,-23,-24,-25,-26,66,-382,-383,-384,-387,-390,-393,205,205,205,205,66,152,292,198,66,66,198,326,329,152,198,-19,-20,205,205,198,66,66,-385,-386,-388,-389,-391,-392,-394,-395,66,205,66,205,152,405,407,292,176,176,176,292,292,205,205,205,205,292,292,292,292,292,292,66,176,545,176,176,545,176,326,329,292,152,66,198,205,66,66,66,66,66,66,66,152,292,292,292,292,645,-339,66,292,176,661,665,176,176,292,66,66,292,-291,645,205,205,205,205,205,66,66,66,205,205,198,66,66,198,152,66,66,754,545,545,545,176,545,176,545,292,-292,-297,205,205,-214,-215,198,66,205,66,205,66,66,198,66,66,66,66,66,-338,872,874,545,545,292,176,66,545,545,545,545,661,665,66,66,-293,66,-298,198,-294,66,66,66,66,66,66,66,66,-36,66,66,-216,205,205,198,66,66,292,754,754,292,754,292,545,545,-301,645,-295,-267,645,-268,645,-269,645,-270,645,-271,645,-272,645,-273,645,-274,645,66,66,66,66,-213,-217,-223,-227,205,-231,205,-219,-251,198,-243,-244,66,-235,-236,66,754,754,754,754,872,874,-255,545,545,-263,-259,66,-296,66,66,66,66,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,292,754,754,754,292,-256,-264,-260,-302,-299,645,645,-335,645,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,754,754,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'STRING':([0,2,24,25,26,27,28,29,30,31,48,57,70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,97,104,105,106,107,108,109,140,142,143,154,158,159,179,200,201,230,283,321,322,323,330,331,341,357,402,403,408,409,410,411,412,444,446,447,449,459,465,472,498,500,502,504,506,508,510,515,516,517,518,519,522,523,532,534,535,555,560,561,568,572,576,577,578,603,606,607,621,627,630,637,647,649,657,667,669,675,684,685,710,712,713,720,723,726,728,729,732,735,736,739,740,745,759,770,779,780,781,798,803,804,805,806,808,814,815,816,817,818,819,820,821,822,829,830,831,847,857,863,869,870,875,876,877,878,899,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,967,968,972,973,978,979,980,985,988,989,990,991,999,1001,1019,1022,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1083,1084,1085,1088,1089,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1146,1147,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,],[67,67,-27,-28,-29,-30,-31,-32,-33,-34,148,171,67,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,221,-21,-22,-23,-24,-25,-26,221,67,148,288,221,221,148,-19,-20,221,148,171,171,288,288,288,288,488,288,288,288,288,288,288,67,288,288,288,288,288,148,67,67,67,67,67,67,67,67,148,288,288,288,288,641,-339,67,171,288,288,288,288,67,67,288,-291,641,221,67,67,221,221,221,148,750,761,761,288,288,288,-292,-297,824,-214,-215,67,67,67,221,67,67,221,67,221,67,-338,881,288,171,761,67,67,67,-293,67,-298,-294,67,67,67,67,67,67,67,67,-36,67,67,-216,221,221,221,750,288,288,288,750,288,761,-301,641,-295,-267,641,-268,641,-269,641,-270,641,-271,641,-272,641,-273,641,-274,641,67,67,67,67,-213,-217,-223,-227,-231,-219,221,-251,-243,-244,221,-235,-236,221,288,288,288,288,881,881,-255,761,-263,-259,67,-296,67,67,67,67,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,750,288,288,288,288,-256,-264,-260,-302,-299,641,641,-335,641,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,288,288,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,824,]),'BOOL':([0,2,24,25,26,27,28,29,30,31,48,57,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,97,104,105,106,107,108,109,117,120,121,122,123,124,125,142,143,154,157,158,159,160,179,184,200,201,232,234,236,252,253,254,255,256,257,258,259,262,266,283,321,322,323,330,331,341,402,403,408,409,410,411,412,444,446,447,449,459,465,472,473,498,500,502,504,506,508,510,515,516,517,518,519,522,523,532,534,535,555,560,561,568,572,576,577,578,603,606,607,624,627,630,633,637,647,667,669,675,684,685,710,712,713,717,720,723,726,729,731,732,735,736,739,740,745,768,770,779,781,798,803,804,805,806,807,808,814,815,816,817,818,819,820,821,822,829,830,831,851,857,863,869,870,875,876,877,878,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,947,948,949,952,956,960,964,968,971,972,973,978,979,980,985,988,989,990,991,1011,1013,1019,1028,1032,1037,1038,1039,1040,1052,1053,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1083,1084,1085,1088,1089,1097,1101,1104,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1146,1147,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1186,],[69,69,-27,-28,-29,-30,-31,-32,-33,-34,153,177,69,-5,-6,-7,-8,-9,-10,69,-402,-403,-11,-12,-13,-14,-15,-16,-17,-18,69,-21,-22,-23,-24,-25,-26,69,-382,-383,-384,-387,-390,-393,69,153,293,69,69,69,69,153,69,-19,-20,69,69,69,-385,-386,-388,-389,-391,-392,-394,-395,69,69,153,293,177,293,293,177,293,293,293,293,293,293,293,69,293,293,293,293,293,153,69,69,69,69,69,69,69,69,69,153,293,293,293,293,646,-339,69,293,293,293,293,177,69,69,293,-291,646,69,69,69,69,69,69,69,153,755,293,293,293,-292,-297,828,-214,-215,69,69,69,69,69,69,69,69,69,69,69,-338,891,293,177,69,69,69,-293,69,-298,69,-294,69,69,69,69,69,69,69,69,-36,69,69,-216,69,69,69,293,293,293,755,755,293,-301,646,-295,-267,646,-268,646,-269,646,-270,646,-271,646,-272,646,-273,646,-274,646,69,69,69,69,-213,-217,-223,-227,-231,-219,-251,69,-243,-244,69,-235,-236,69,293,293,293,293,891,891,-255,-263,-259,69,-296,69,69,69,69,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,293,293,293,293,755,-256,-264,-260,-302,-299,646,646,-335,646,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,293,293,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,828,]),'$end':([1,2,24,25,26,27,28,29,30,31,70,71,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,190,200,201,523,577,684,685,712,713,745,804,806,808,822,831,920,923,926,928,930,932,934,936,938,940,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1038,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[0,-1,-27,-28,-29,-30,-31,-32,-33,-34,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,-4,-19,-20,-339,-291,-292,-297,-214,-215,-338,-293,-298,-294,-36,-216,-301,-295,-267,-268,-269,-270,-271,-272,-273,-274,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,-296,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,-335,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'LDER':([2,24,25,26,27,28,29,30,31,48,70,71,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,143,145,147,148,149,152,153,155,164,179,190,200,201,279,280,281,284,285,334,339,398,399,400,401,465,468,522,523,571,577,578,607,634,635,637,638,684,685,687,706,707,708,709,712,713,714,742,744,745,804,806,808,822,830,831,833,837,841,845,849,853,854,859,860,897,911,916,920,921,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,948,949,950,952,953,956,957,960,961,964,965,968,969,972,973,974,975,979,980,981,982,1019,1020,1028,1029,1032,1033,1036,1038,1041,1042,1043,1044,1045,1046,1047,1048,1049,1055,1056,1057,1059,1060,1062,1063,1065,1066,1068,1069,1071,1072,1073,1074,1077,1078,1079,1080,1097,1098,1101,1102,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1183,1184,1185,1187,1188,1189,],[-1,-27,-28,-29,-30,-31,-32,-33,-34,144,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,280,282,-59,-60,-61,-64,-65,-68,-82,333,-4,-19,-20,397,-71,398,-62,-63,461,-80,-72,-57,-66,-67,570,-81,144,-339,679,-291,144,713,-58,-69,743,745,-292,-297,808,822,-38,-39,-40,-214,-215,831,-70,866,-338,-293,-298,-294,-36,949,-216,952,956,960,964,968,972,973,979,980,1019,1028,1032,-301,144,-295,-267,144,-268,144,-269,144,-270,144,-271,144,-272,144,-273,144,-274,144,-213,-217,1055,-223,1056,-227,1059,-231,1062,-219,1065,-251,1068,-243,-244,1071,1072,-235,-236,1077,1078,-255,1097,-263,1101,-259,1104,1107,-296,1114,1115,1116,1117,1118,1119,1120,1121,1122,-218,-224,1128,-228,1130,-232,1132,-220,1134,-252,1136,-245,-246,1138,1139,-237,-238,1142,1143,-256,1150,-264,1153,-260,1155,-302,-299,144,144,-335,144,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,1165,-229,1166,-233,1167,-221,1168,-253,1169,-247,-248,1170,1171,-239,-240,1172,1173,-257,1174,-265,1175,-261,1176,1177,1178,1179,-41,-43,-49,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,-42,-46,-44,-45,-50,-47,-48,]),'RETURN':([2,24,25,26,27,28,29,30,31,70,71,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,190,200,201,498,500,502,504,506,508,510,523,532,568,572,577,613,616,619,622,625,628,631,658,677,681,684,685,712,713,720,723,726,729,732,736,740,745,781,798,803,804,806,808,822,831,836,840,844,848,852,858,864,900,914,919,920,923,926,928,930,932,934,936,938,940,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1038,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[-1,-27,-28,-29,-30,-31,-32,-33,-34,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,-4,-19,-20,612,615,618,621,624,627,630,-339,657,676,680,-291,719,722,725,728,731,735,739,780,797,802,-292,-297,-214,-215,835,839,843,847,851,857,863,-338,899,913,918,-293,-298,-294,-36,-216,955,959,963,967,971,978,985,1022,1031,1035,-301,-295,-267,-268,-269,-270,-271,-272,-273,-274,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,-296,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,-335,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'BREAK':([2,24,25,26,27,28,29,30,31,70,71,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,190,200,201,523,577,684,685,712,713,745,804,806,808,822,831,920,923,926,928,930,932,934,936,938,940,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1038,1050,1051,1054,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1125,1126,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[-1,-27,-28,-29,-30,-31,-32,-33,-34,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,-4,-19,-20,-339,-291,-292,-297,-214,-215,-338,-293,-298,-294,-36,-216,-301,-295,-267,-268,-269,-270,-271,-272,-273,-274,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,-296,1123,1124,1127,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,-335,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,1162,1163,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'PUNTOYCOMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,39,40,43,44,45,46,51,54,56,66,67,68,69,72,73,74,75,76,77,81,82,83,84,85,86,87,88,89,90,104,105,106,107,108,109,110,111,112,113,114,115,116,127,128,129,130,131,133,134,135,136,144,164,180,181,191,192,194,195,196,199,200,201,202,203,204,205,206,212,213,214,215,216,217,218,219,220,221,222,223,238,239,240,241,242,243,244,245,246,247,248,249,250,251,260,261,265,269,270,273,274,275,276,277,282,314,315,316,317,318,319,320,339,343,361,365,368,371,374,377,380,383,387,388,389,391,392,393,394,395,396,413,414,415,416,417,418,419,468,487,489,490,491,492,493,495,512,513,523,524,525,526,527,528,529,530,531,570,574,577,579,580,582,583,584,587,588,608,639,640,641,642,645,646,679,683,684,685,693,695,697,699,700,704,705,712,713,715,716,718,721,724,727,730,733,734,737,738,743,745,746,747,758,760,763,765,767,769,771,773,775,777,778,795,796,800,801,804,806,808,810,811,812,813,822,831,834,838,842,846,850,855,856,861,862,865,866,867,868,898,907,909,912,915,917,920,923,926,928,930,932,934,936,938,940,948,949,951,952,954,956,958,960,962,964,966,968,970,972,973,976,977,979,980,983,984,1000,1003,1009,1010,1012,1014,1016,1017,1019,1021,1026,1028,1030,1032,1034,1038,1055,1056,1058,1059,1061,1062,1064,1065,1067,1068,1070,1071,1072,1075,1076,1077,1078,1081,1082,1090,1097,1099,1101,1103,1104,1106,1107,1108,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1127,1128,1130,1132,1134,1136,1138,1139,1142,1143,1148,1149,1150,1152,1153,1155,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[70,72,73,74,75,76,77,81,82,83,84,85,86,87,88,-56,104,105,106,107,108,109,-27,-28,-29,-30,-31,-32,-33,-34,-194,-309,-371,-379,-362,-331,-207,-303,-84,-305,-355,-358,-341,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,200,201,-21,-22,-23,-24,-25,-26,-198,-199,-200,-197,-203,-202,-201,-310,-314,-372,-379,-304,-311,-315,-373,-379,-53,-82,-73,-51,-353,-349,-342,-347,-348,-375,-19,-20,-329,-328,-379,-374,-366,-304,-195,-196,-312,-313,-316,-317,-379,-349,-355,-357,-359,-306,-304,-350,-404,-405,-406,-407,-408,-409,-410,-411,-412,-413,-351,-380,-367,-381,-371,-368,-376,-327,-330,-361,-356,-55,-88,-92,-96,-103,-107,-111,-115,-80,473,-116,-187,-188,-189,-190,-191,-192,-193,-307,-369,-376,-308,-370,-376,-372,-373,-363,-204,-205,-206,-208,-209,-210,-352,-81,-360,-343,-346,-345,-344,-364,-78,-377,-378,-339,-83,-89,-93,-97,-100,-104,-108,-112,-52,-74,-291,688,-342,-331,-332,-333,-325,-326,-124,-56,105,-355,-303,-305,-341,-54,-76,-292,-297,-318,-319,-320,-321,-322,-323,-324,-214,-215,-365,-118,833,837,841,845,849,853,854,859,860,-53,-338,-303,-303,-85,-87,-91,-95,-99,-102,-106,-110,-114,-119,897,-79,911,-56,916,-293,-298,-294,-329,-328,-327,-330,-36,-216,953,957,961,965,969,974,975,981,982,-340,-55,-107,-111,1020,-75,-73,1029,-51,1033,-301,-295,-267,-268,-269,-270,-271,-272,-273,-274,-213,-217,-35,-223,1057,-227,1060,-231,1063,-219,1066,-251,1069,-243,-244,1073,1074,-235,-236,1079,1080,-86,-90,-94,-98,-101,-105,-109,-113,-255,1098,-77,-263,1102,-259,1105,-296,-218,-224,1129,-228,1131,-232,1133,-220,1135,-252,1137,-245,-246,1140,1141,-237,-238,1144,1145,-74,-256,1151,-264,1154,-260,1156,-302,-299,-335,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,1160,1161,1164,-225,-229,-233,-221,-253,-247,-248,-239,-240,-76,-117,-257,-78,-265,-261,1184,1185,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'AND':([8,14,15,17,46,69,191,192,194,195,196,199,202,203,204,205,206,212,217,220,239,240,241,242,243,244,245,246,247,248,249,250,251,260,261,265,273,274,275,296,300,304,342,377,419,489,490,491,492,512,513,580,582,583,584,585,639,646,730,741,810,811,812,813,832,850,922,970,1070,],[79,-348,-349,-342,-347,-341,79,-349,-342,-347,-348,-375,-345,-344,-379,-374,-366,-342,79,-349,-342,-350,-404,-405,-406,-407,-408,-409,-410,-411,-412,-413,-351,-380,-367,-381,-376,-343,-346,79,-342,79,79,79,-352,-343,-346,-345,-344,-377,-378,-342,-347,-348,-349,79,-342,-341,79,79,-345,-344,-343,-346,79,79,79,79,79,]),'OR':([8,14,15,17,46,69,191,192,194,195,196,199,202,203,204,205,206,212,217,220,239,240,241,242,243,244,245,246,247,248,249,250,251,260,261,265,273,274,275,296,300,304,342,377,419,489,490,491,492,512,513,580,582,583,584,585,639,646,730,741,810,811,812,813,832,850,922,970,1070,],[80,-348,-349,-342,-347,-341,80,-349,-342,-347,-348,-375,-345,-344,-379,-374,-366,-342,80,-349,-342,-350,-404,-405,-406,-407,-408,-409,-410,-411,-412,-413,-351,-380,-367,-381,-376,-343,-346,80,-342,80,80,80,-352,-343,-346,-345,-344,-377,-378,-342,-347,-348,-349,80,-342,-341,80,80,-345,-344,-343,-346,80,80,80,80,80,]),'DSUMA':([17,639,809,],[89,89,924,]),'DRESTA':([17,639,809,],[90,90,925,]),'FUNCIONSUBSTRING':([17,212,277,300,639,],[92,92,92,92,92,]),'FUNCIONTAKE':([17,639,777,795,],[94,94,896,910,]),'FUNCIONRANGE':([17,639,777,],[95,95,95,]),'FUNCIONFIRSTWHERE':([17,212,239,300,639,],[96,96,96,96,96,]),'IGUAL':([17,110,111,112,113,114,115,116,180,181,300,344,476,477,478,479,483,524,525,526,527,528,529,530,531,639,909,915,],[97,224,226,228,230,232,234,236,335,337,97,474,593,595,597,599,603,649,650,651,652,653,654,655,656,97,335,337,]),'IS':([17,40,54,66,194,197,198,212,239,300,580,586,639,642,645,],[-304,118,-303,-305,-304,118,-305,-304,-304,-304,-304,-303,-304,-303,-305,]),'ISNEGADO':([17,40,54,66,194,197,198,212,239,300,580,586,639,642,645,],[-304,119,-303,-305,-304,119,-305,-304,-304,-304,-304,-303,-304,-303,-305,]),'MULTI':([17,40,43,44,54,66,127,129,130,131,133,135,136,199,202,204,205,206,212,219,239,260,261,265,269,275,300,394,395,490,491,639,642,645,746,747,810,813,],[-304,122,122,122,-303,-305,122,122,122,-304,122,122,122,-375,-367,122,-374,-366,-304,122,-304,122,-367,122,122,-367,-304,122,122,-367,-367,-304,-303,-305,-303,-303,-367,-367,]),'DIV':([17,40,43,44,54,66,127,129,130,131,133,135,136,199,202,204,205,206,212,219,239,260,261,265,269,275,300,394,395,490,491,639,642,645,746,747,810,813,],[-304,123,123,123,-303,-305,123,123,123,-304,123,123,123,-375,-367,123,-374,-366,-304,123,-304,123,-367,123,123,-367,-304,123,123,-367,-367,-304,-303,-305,-303,-303,-367,-367,]),'DIVENTERO':([17,40,43,44,54,66,127,129,130,131,133,135,136,199,202,204,205,206,212,219,239,260,261,265,269,275,300,394,395,490,491,639,642,645,746,747,810,813,],[-304,124,124,124,-303,-305,124,124,124,-304,124,124,124,-375,-367,124,-374,-366,-304,124,-304,124,-367,124,124,-367,-304,124,124,-367,-367,-304,-303,-305,-303,-303,-367,-367,]),'MOD':([17,40,43,44,54,66,127,129,130,131,133,135,136,199,202,204,205,206,212,219,239,260,261,265,269,275,300,394,395,490,491,639,642,645,746,747,810,813,],[-304,125,125,125,-303,-305,125,125,125,-304,125,125,125,-375,-367,125,-374,-366,-304,125,-304,125,-367,125,125,-367,-304,125,125,-367,-367,-304,-303,-305,-303,-303,-367,-367,]),'DIGUAL':([17,43,44,54,66,193,194,198,199,212,219,239,300,580,581,586,639,642,645,],[98,-375,98,-366,-374,98,98,-374,-375,98,98,98,98,98,98,-366,98,-366,-374,]),'NOIGUAL':([17,43,44,54,66,193,194,198,199,212,219,239,300,580,581,586,639,642,645,],[99,-375,99,-366,-374,99,99,-374,-375,99,99,99,99,99,99,-366,99,-366,-374,]),'MAYOR':([17,43,44,54,66,193,194,198,199,212,219,239,300,305,306,307,308,309,310,311,312,580,581,586,639,642,645,],[100,-375,100,-366,-374,100,100,-374,-375,100,100,100,100,420,421,422,423,424,425,426,427,100,100,-366,100,-366,-374,]),'MENOR':([17,43,44,54,55,66,193,194,198,199,212,219,239,300,580,581,586,639,642,645,776,],[101,-375,101,-366,161,-374,101,101,-374,-375,101,101,101,101,101,101,-366,101,-366,-374,161,]),'MAYIGUAL':([17,43,44,54,66,193,194,198,199,212,219,239,300,580,581,586,639,642,645,],[102,-375,102,-366,-374,102,102,-374,-375,102,102,102,102,102,102,-366,102,-366,-374,]),'MENIGUAL':([17,43,44,54,66,193,194,198,199,212,219,239,300,580,581,586,639,642,645,],[103,-375,103,-366,-374,103,103,-374,-375,103,103,103,103,103,103,-366,103,-366,-374,]),'ELSEIF':([24,25,26,27,28,29,30,31,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,200,201,523,577,684,685,712,713,745,804,806,808,822,831,920,923,926,928,930,932,934,936,938,940,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1038,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[-27,-28,-29,-30,-31,-32,-33,-34,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,-19,-20,-339,686,-292,686,-214,-215,-338,-293,-298,686,-36,-216,-301,-295,-267,-268,-269,-270,-271,-272,-273,-274,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,-296,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,-335,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'ELSE':([24,25,26,27,28,29,30,31,72,73,74,75,76,77,81,82,83,84,85,86,87,88,104,105,106,107,108,109,200,201,523,577,684,685,712,713,745,804,806,808,822,831,920,923,926,928,930,932,934,936,938,940,948,949,952,956,960,964,968,972,973,979,980,1019,1028,1032,1038,1055,1056,1059,1062,1065,1068,1071,1072,1077,1078,1097,1101,1104,1107,1108,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1130,1132,1134,1136,1138,1139,1142,1143,1150,1153,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,],[-27,-28,-29,-30,-31,-32,-33,-34,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-22,-23,-24,-25,-26,-19,-20,-339,-291,805,-297,-214,-215,-338,-293,-298,-294,-36,-216,-301,805,-267,-268,-269,-270,-271,-272,-273,-274,-213,-217,-223,-227,-231,-219,-251,-243,-244,-235,-236,-255,-263,-259,-296,-218,-224,-228,-232,-220,-252,-245,-246,-237,-238,-256,-264,-260,-302,-299,-335,-337,-275,-276,-277,-278,-279,-280,-281,-282,-37,-225,-229,-233,-221,-253,-247,-248,-239,-240,-257,-265,-261,-226,-230,-234,-222,-254,-249,-250,-241,-242,-258,-266,-262,-300,-334,-336,]),'PDER':([40,43,45,54,66,68,69,127,128,129,130,131,133,134,135,136,182,191,192,194,195,196,199,204,205,206,212,213,214,215,216,217,218,219,220,221,222,223,225,227,229,231,233,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,260,261,265,269,270,273,276,277,296,297,298,299,300,301,302,303,304,313,336,338,340,342,354,355,360,362,387,388,389,391,392,393,394,395,396,419,469,487,488,489,490,491,492,493,497,499,501,503,505,507,509,511,512,513,520,533,562,569,573,575,605,609,610,636,672,691,692,694,696,698,701,702,703,715,741,792,832,908,922,924,925,951,997,1091,1096,1100,],[-309,-371,-362,-303,-305,-358,-341,-310,-314,-372,-379,-304,-311,-315,-373,-379,339,-353,-349,-342,-347,-348,-375,-379,-374,-366,-304,-195,-196,-312,-313,-316,-317,-379,-349,-355,-357,-359,366,369,372,375,378,381,384,-306,-304,-350,-404,-405,-406,-407,-408,-409,-410,-411,-412,-413,-351,-380,-367,-381,-371,-368,-376,-361,-356,412,413,414,415,-304,416,417,418,419,428,463,466,468,472,484,486,493,495,-307,-369,-376,-308,-370,-376,-372,-373,-363,-352,574,-360,608,-343,-346,-345,-344,-364,611,614,617,620,623,626,629,632,-377,-378,635,659,671,678,682,683,711,715,716,742,791,814,815,816,817,818,819,820,821,-365,865,907,951,1026,1037,1039,1040,-35,1090,1148,1149,1152,]),'PIZQ':([49,50,52,53,60,61,62,63,64,92,94,95,96,110,111,112,113,114,115,116,156,162,178,180,181,187,189,211,462,514,648,686,896,910,],[157,158,159,160,182,183,184,185,186,207,209,210,211,225,227,229,231,233,235,237,295,313,332,336,338,355,357,364,567,633,757,807,1018,1027,]),'CDER':([57,154,163,165,166,167,168,169,170,171,172,173,176,177,208,278,286,287,288,289,292,293,294,324,325,326,327,328,329,333,341,356,404,406,411,430,431,432,433,434,435,436,437,438,439,440,441,442,443,450,451,452,455,456,457,458,459,461,470,471,521,536,537,538,540,541,542,543,545,546,547,548,549,550,551,552,553,554,556,557,558,559,563,564,565,647,660,661,664,665,671,674,675,748,749,750,751,754,755,756,759,762,764,766,768,770,772,774,786,789,791,793,871,872,873,874,878,879,880,881,882,883,884,887,888,889,890,891,892,893,894,895,902,903,905,986,987,992,995,996,998,1005,1006,1007,1008,1025,1086,1087,],[164,164,314,315,316,317,318,319,320,-120,-122,-125,-140,-155,361,396,400,401,-159,-160,-163,-164,-173,-126,-132,-141,-127,-133,-142,-181,469,487,-161,-162,520,-121,-165,-122,-123,-134,-152,-158,-174,-180,-186,-130,-143,-166,-131,-146,-169,-137,-149,-156,-172,-157,562,-182,575,-173,636,-128,-144,-167,-131,-135,-153,-125,-140,-147,-170,-129,-145,-168,-136,-154,-148,-171,-138,-150,-139,-151,672,-183,-185,164,-126,-141,-127,-142,-175,-184,792,867,868,-120,-125,-140,-155,-122,164,164,164,164,164,164,164,164,-137,-149,-176,908,-126,-141,-127,-142,997,-122,1000,-120,-131,1003,-125,1009,1010,-157,1012,-155,1014,-179,1016,1017,-138,-139,-177,-122,-131,-137,-149,-157,1091,-126,-132,-127,-133,-178,-138,-139,]),'FUNCIONSPLIT':([67,641,761,],[189,189,189,]),'DOSPUNTOS':([146,147,148,149,152,153,155,164,280,284,285,339,398,400,401,468,635,639,640,641,642,645,646,742,743,746,747,823,824,825,828,866,867,868,945,946,1090,1148,],[283,-59,-60,-61,-64,-65,-68,-82,-71,-62,-63,-80,-72,-66,-67,-81,-69,-59,-68,-60,-61,-64,-65,-70,-71,-62,-63,942,943,944,947,-72,-66,-67,1052,1053,-69,-70,]),'COMA':([147,148,149,152,153,155,164,171,172,173,176,177,280,284,285,288,289,292,293,294,324,325,326,327,328,329,333,339,360,363,398,399,400,401,404,405,406,407,432,443,452,455,458,461,468,471,540,543,545,556,557,558,559,565,635,660,661,664,665,671,742,750,751,754,755,756,786,789,791,871,872,873,874,879,881,882,884,889,891,893,902,903,986,987,992,995,996,1005,1006,1007,1008,1086,1087,],[-59,-60,-61,-64,-65,-68,-82,321,322,323,330,331,-71,-62,-63,402,403,408,409,410,444,445,446,447,448,449,460,-80,494,496,-72,515,-66,-67,516,517,518,519,534,535,555,560,561,566,-81,576,662,663,666,667,668,669,670,673,-69,782,783,784,785,790,-70,869,870,875,876,877,901,904,906,988,989,990,991,999,1001,1002,1004,1011,1013,1015,1023,1024,1083,1084,1085,1088,1089,1092,1093,1094,1095,1146,1147,]),'IN':([475,476,477,478,479,480,481,482,],[591,592,594,596,598,600,601,602,]),'FLECHA':([486,611,711,],[606,717,829,]),'CASE':([604,1160,1161,1164,1184,1185,],[710,1180,1182,1186,1182,1182,]),'DEFAULT':([706,707,708,709,1160,1161,1164,1181,1183,1184,1185,1187,1188,1189,],[823,-38,-39,-40,-41,-43,-49,-42,-46,-44,-45,-50,-47,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'final':([0,2,70,142,498,500,502,504,506,508,510,522,532,568,572,578,607,720,723,726,729,732,736,740,781,798,803,830,921,927,929,931,933,935,937,939,941,943,944,947,1052,1053,1109,1110,1112,],[1,71,190,279,613,616,619,622,625,628,631,638,658,677,681,687,714,836,840,844,848,852,858,864,900,914,919,950,1036,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1054,1125,1126,1157,1158,1159,]),'algoritmoUnico':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[2,2,2,2,523,577,2,2,2,2,2,2,2,2,2,2,2,2,712,2,2,2,2,2,2,2,2,2,2,2,920,926,928,930,932,934,936,938,940,948,2,2,2,2,2,2,2,2,2,2,1049,2,2,2,1108,1111,1113,2,2,2,2,2,]),'asignacion':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expresion':([0,2,70,97,117,142,158,159,234,236,262,266,412,472,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,627,630,720,723,726,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[4,4,4,213,238,4,297,301,380,383,387,391,4,4,4,4,4,4,4,4,4,4,4,4,4,4,704,4,4,733,737,4,4,4,4,4,855,4,861,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,976,983,4,4,4,4,4,4,4,4,4,4,4,4,4,1075,1081,4,4,4,4,4,4,4,4,]),'expresionInt':([0,2,70,97,117,137,142,158,159,224,234,236,262,263,266,267,412,472,474,498,500,502,504,506,508,510,522,532,568,572,578,593,599,603,606,607,612,627,630,719,720,723,726,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,835,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,955,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[5,5,5,215,215,270,5,215,215,365,215,215,215,388,215,392,5,5,587,5,5,5,5,5,5,5,5,5,5,5,5,693,699,215,5,5,718,215,215,834,5,5,5,5,5,215,5,215,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,954,215,215,5,5,5,5,5,5,5,5,5,5,5,5,5,1058,215,215,5,5,5,5,5,5,5,5,]),'expresionDouble':([0,2,41,42,70,91,97,117,138,139,142,158,159,226,228,234,236,262,264,266,268,358,359,386,390,412,472,474,498,500,502,504,506,508,510,522,532,568,572,578,595,597,599,603,606,607,615,618,627,630,643,644,689,690,720,722,723,725,726,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,839,843,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,959,963,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[6,6,128,134,6,203,216,216,273,274,6,216,216,368,371,216,216,216,389,216,393,489,492,512,513,6,6,588,6,6,6,6,6,6,6,6,6,6,6,6,695,697,700,216,6,6,721,724,216,216,134,128,811,812,6,838,6,842,6,6,6,216,6,216,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,958,962,216,216,6,6,6,6,6,6,6,6,6,6,6,6,6,1061,1064,216,216,6,6,6,6,6,6,6,6,]),'expresionString':([0,2,70,97,140,142,158,159,230,412,472,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,621,627,630,720,723,726,728,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,847,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,967,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[7,7,7,214,276,7,298,302,374,7,7,7,7,7,7,7,7,7,7,7,7,7,7,705,7,7,727,734,738,7,7,7,846,7,7,856,7,862,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,966,977,984,7,7,7,7,7,7,7,7,7,7,7,7,7,1067,1076,1082,7,7,7,7,7,7,7,7,]),'expresionBool':([0,2,70,78,97,117,142,157,158,159,160,184,232,234,236,262,266,412,472,473,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,624,627,630,633,717,720,723,726,729,731,732,735,736,739,740,781,798,803,805,807,814,815,816,817,818,819,820,821,829,830,851,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,971,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[8,8,8,191,217,217,8,296,217,217,304,342,377,217,217,217,217,8,8,585,8,8,8,8,8,8,8,8,8,8,8,8,217,8,8,730,217,217,741,832,8,8,8,8,850,8,217,8,217,8,8,8,8,8,922,8,8,8,8,8,8,8,8,8,8,970,217,217,8,8,8,8,8,8,8,8,8,8,8,8,8,1070,217,217,8,8,8,8,8,8,8,8,]),'expresionBoolFor':([0,2,70,142,412,472,473,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[9,9,9,9,9,9,579,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'sentenciaDoWhile':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'imprimir':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'funcionStdin':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'funcionStdout':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'negacionBool':([0,2,70,78,97,117,142,157,158,159,160,184,232,234,236,262,266,412,472,473,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,624,627,630,633,717,720,723,726,729,731,732,735,736,739,740,781,798,803,805,807,814,815,816,817,818,819,820,821,829,830,851,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,971,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[14,14,14,196,196,196,14,196,196,196,196,196,196,196,196,196,196,14,14,583,14,14,14,14,14,14,14,14,14,14,14,14,196,14,14,196,196,196,196,196,14,14,14,14,196,14,196,14,196,14,14,14,14,14,196,14,14,14,14,14,14,14,14,14,14,196,196,196,14,14,14,14,14,14,14,14,14,14,14,14,14,196,196,196,14,14,14,14,14,14,14,14,]),'comparacionBool':([0,2,70,78,97,117,142,157,158,159,160,184,232,234,236,262,266,412,472,473,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,624,627,630,633,717,720,723,726,729,731,732,735,736,739,740,781,798,803,805,807,814,815,816,817,818,819,820,821,829,830,851,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,971,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[15,15,15,192,220,220,15,220,220,220,220,220,220,220,220,220,220,15,15,584,15,15,15,15,15,15,15,15,15,15,15,15,220,15,15,220,220,220,220,220,15,15,15,15,220,15,220,15,220,15,15,15,15,15,220,15,15,15,15,15,15,15,15,15,15,220,220,220,15,15,15,15,15,15,15,15,15,15,15,15,15,220,220,220,15,15,15,15,15,15,15,15,]),'sentenciaSubstring':([0,2,70,97,140,142,158,159,230,412,472,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,621,627,630,720,723,726,728,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,847,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,967,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[16,16,16,223,223,16,223,223,223,16,16,16,16,16,16,16,16,16,16,16,16,16,16,223,16,16,223,223,223,16,16,16,223,16,16,223,16,223,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,223,223,223,16,16,16,16,16,16,16,16,16,16,16,16,16,223,223,223,16,16,16,16,16,16,16,16,]),'expresionLista':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,657,720,723,726,729,732,736,740,780,781,798,803,805,814,815,816,817,818,819,820,821,829,830,899,921,927,929,931,933,935,937,939,941,942,943,944,947,1022,1037,1039,1040,1052,1053,1109,1110,1112,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,778,18,18,18,18,18,18,18,898,18,18,18,18,18,18,18,18,18,18,18,18,18,18,1021,18,18,18,18,18,18,18,18,18,18,18,18,18,1099,18,18,18,18,18,18,18,18,]),'expresionNewList':([0,2,48,70,142,143,179,283,412,465,472,498,500,502,504,506,508,510,515,522,532,568,572,578,606,607,637,649,650,651,652,653,654,655,656,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[19,19,155,19,19,155,155,155,19,155,19,19,19,19,19,19,19,19,155,640,19,19,19,640,19,19,155,760,763,765,767,769,771,773,775,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,640,640,640,640,640,640,640,640,640,19,19,19,19,19,19,19,19,19,640,640,640,]),'expresionSet':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,676,720,723,726,729,732,736,740,781,797,798,803,805,814,815,816,817,818,819,820,821,829,830,913,921,927,929,931,933,935,937,939,941,942,943,944,947,1031,1037,1039,1040,1052,1053,1109,1110,1112,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,796,20,20,20,20,20,20,20,20,912,20,20,20,20,20,20,20,20,20,20,20,20,20,1030,20,20,20,20,20,20,20,20,20,20,20,20,20,1103,20,20,20,20,20,20,20,20,]),'expresionMap':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,680,720,723,726,729,732,736,740,781,798,802,803,805,814,815,816,817,818,819,820,821,829,830,918,921,927,929,931,933,935,937,939,941,942,943,944,947,1035,1037,1039,1040,1052,1053,1109,1110,1112,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,801,21,21,21,21,21,21,21,21,21,917,21,21,21,21,21,21,21,21,21,21,21,21,1034,21,21,21,21,21,21,21,21,21,21,21,21,21,1106,21,21,21,21,21,21,21,21,]),'declaracionSimple':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'funcionFirstWhere':([0,2,70,97,117,142,158,159,234,236,262,266,412,472,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,627,630,720,723,726,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[23,23,23,218,218,23,218,218,218,218,218,218,23,23,23,23,23,23,23,23,23,23,23,23,23,23,218,23,23,218,218,23,23,23,23,23,218,23,218,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,218,218,23,23,23,23,23,23,23,23,23,23,23,23,23,218,218,23,23,23,23,23,23,23,23,]),'sentenciaIf':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'sentenciaFor':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'sentenciaForEach':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'sentenciaWhile':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expresionSwitch':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'funcionSimple':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'funcion':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'funcionReturn':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'asignacionSimple':([0,2,70,142,158,159,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,720,723,726,729,732,736,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,921,927,929,931,933,935,937,939,941,942,943,944,947,1037,1039,1040,1052,1053,1109,1110,1112,],[39,39,39,39,299,303,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'valor':([0,2,41,42,70,78,97,117,142,157,158,159,160,184,232,234,236,262,266,412,472,473,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,624,627,630,633,643,644,717,720,723,726,729,731,732,735,736,739,740,781,798,803,805,807,814,815,816,817,818,819,820,821,829,830,851,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,971,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[40,40,127,133,40,197,40,40,40,197,40,40,197,197,197,40,40,40,40,40,40,197,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,197,40,40,197,133,127,197,40,40,40,40,197,40,40,40,40,40,40,40,40,40,197,40,40,40,40,40,40,40,40,40,40,197,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,197,40,40,40,40,40,40,40,40,40,40,]),'valorInt':([0,2,41,42,70,78,91,97,117,126,132,137,138,139,142,157,158,159,160,184,224,226,228,232,234,236,262,263,264,266,267,268,271,272,358,359,386,390,412,472,473,474,498,500,502,504,506,508,510,522,532,568,572,578,589,590,593,595,597,599,603,606,607,612,615,618,624,627,630,633,643,644,689,690,717,719,720,722,723,725,726,729,731,732,735,736,739,740,781,798,803,805,807,814,815,816,817,818,819,820,821,829,830,835,839,843,851,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,955,959,963,971,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[43,43,129,135,43,199,199,43,43,199,199,269,199,199,43,199,43,43,199,199,269,199,199,199,43,43,43,269,199,43,269,199,394,395,199,199,199,199,43,43,199,43,43,43,43,43,43,43,43,43,43,43,43,43,129,135,269,199,199,43,43,43,43,269,199,199,199,43,43,199,135,129,199,199,199,269,43,199,43,199,43,43,199,43,43,43,43,43,43,43,43,43,199,43,43,43,43,43,43,43,43,43,43,269,199,199,199,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,269,199,199,199,43,43,43,43,43,43,43,43,43,43,]),'valorDouble':([0,2,41,42,70,78,91,97,117,126,132,138,139,142,157,158,159,160,184,226,228,232,234,236,262,264,266,268,358,359,386,390,412,472,473,474,498,500,502,504,506,508,510,522,532,568,572,578,589,590,595,597,599,603,606,607,615,618,624,627,630,633,643,644,689,690,717,720,722,723,725,726,729,731,732,735,736,739,740,781,798,803,805,807,814,815,816,817,818,819,820,821,829,830,839,843,851,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,959,963,971,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[44,44,130,136,44,193,204,219,219,260,265,204,204,44,193,219,219,193,193,204,204,193,219,219,219,204,219,204,204,204,204,204,44,44,581,204,44,44,44,44,44,44,44,44,44,44,44,44,260,265,204,204,204,219,44,44,204,204,193,219,219,193,136,130,204,204,193,44,204,44,204,44,44,193,44,219,44,219,44,44,44,44,44,193,44,44,44,44,44,44,44,44,44,44,204,204,193,219,219,44,44,44,44,44,44,44,44,44,44,44,44,44,204,204,193,219,219,44,44,44,44,44,44,44,44,]),'valorString':([0,2,70,97,140,142,158,159,230,412,472,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,621,627,630,720,723,726,728,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,847,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,967,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'valorBool':([0,2,70,78,97,117,142,157,158,159,160,184,232,234,236,262,266,412,472,473,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,624,627,630,633,717,720,723,726,729,731,732,735,736,739,740,781,798,803,805,807,814,815,816,817,818,819,820,821,829,830,851,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,971,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[46,46,46,195,195,195,46,195,195,195,195,195,195,195,195,195,195,46,46,582,46,46,46,46,46,46,46,46,46,46,46,46,195,46,46,195,195,195,195,195,46,46,46,46,195,46,195,46,195,46,46,46,46,46,195,46,46,46,46,46,46,46,46,46,46,195,195,195,46,46,46,46,46,46,46,46,46,46,46,46,46,195,195,195,46,46,46,46,46,46,46,46,]),'funcionSplit':([0,2,70,142,412,472,498,500,502,504,506,508,510,522,532,568,572,578,606,607,649,657,720,723,726,729,732,736,740,780,781,798,803,805,814,815,816,817,818,819,820,821,829,830,899,921,927,929,931,933,935,937,939,941,942,943,944,947,1022,1037,1039,1040,1052,1053,1109,1110,1112,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,758,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'expresionIndexString':([0,2,70,97,140,142,158,159,230,412,472,498,500,502,504,506,508,510,522,532,568,572,578,603,606,607,621,627,630,720,723,726,728,729,732,735,736,739,740,781,798,803,805,814,815,816,817,818,819,820,821,829,830,847,857,863,921,927,929,931,933,935,937,939,941,942,943,944,947,967,978,985,1037,1039,1040,1052,1053,1109,1110,1112,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'operadorLogico':([8,191,217,296,304,342,377,585,730,741,832,850,922,970,1070,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'comparadorMat':([17,44,193,194,212,219,239,300,580,581,639,],[91,139,358,359,359,358,359,359,689,690,91,]),'operadorMat':([40,43,44,127,129,130,133,135,136,204,219,260,265,269,394,395,],[117,137,138,262,263,264,266,267,268,138,138,386,390,137,263,267,]),'expMap':([48,143,179,465,515,522,578,637,921,927,929,931,933,935,937,939,941,1109,1110,1112,],[145,281,334,571,634,145,145,744,145,145,145,145,145,145,145,145,145,145,145,145,]),'claveValor':([48,143,179,283,465,515,522,578,637,921,927,929,931,933,935,937,939,941,1109,1110,1112,],[146,146,146,399,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'expListString':([57,321,322,534,647,759,779,869,877,999,1001,1083,],[163,430,433,433,163,880,163,430,433,433,430,433,]),'expListInt':([57,322,323,444,445,447,448,535,647,662,663,762,779,782,784,870,877,988,990,1002,1004,1084,1092,1093,1094,1095,],[165,434,440,536,541,548,551,434,165,434,440,883,165,536,548,440,434,536,548,434,440,434,536,541,548,551,]),'expListNum':([57,322,323,330,444,445,446,447,448,449,535,555,560,647,662,663,666,667,668,669,670,764,766,779,782,783,784,785,870,875,877,901,904,988,989,990,991,1023,1024,1084,1085,1088,1146,1147,],[166,435,441,450,537,542,546,549,552,553,435,441,435,166,435,441,450,537,542,549,552,887,888,166,537,546,549,553,441,450,435,441,435,537,546,549,553,537,549,435,441,435,537,549,]),'expListBool':([57,322,331,561,647,768,779,876,877,1011,1013,1089,],[167,436,456,436,167,890,167,456,436,436,456,436,]),'expListDynamic':([57,154,321,322,323,330,331,341,402,403,408,409,410,411,444,446,447,449,459,516,517,518,519,534,535,555,560,561,576,647,667,669,675,770,779,869,870,875,876,877,878,988,989,990,991,1083,1084,1085,1088,1089,1146,1147,],[168,286,431,437,442,451,457,470,431,442,451,457,437,521,538,547,550,554,563,538,547,550,554,437,437,442,437,437,437,748,538,550,793,892,168,431,442,451,457,437,998,538,547,550,554,437,437,442,437,437,538,550,]),'expListSet':([57,154,322,410,647,772,779,790,877,906,1015,],[169,287,438,438,749,894,169,905,438,1025,438,]),'expListMap':([57,322,460,566,647,673,774,779,877,],[170,439,564,674,170,439,895,170,439,]),'objeto':([118,119,225,227,229,231,233,235,237,313,336,338,355,],[240,251,367,370,373,376,379,382,385,429,464,467,485,]),'asignacionFor':([185,],[343,]),'sentenciasElseIf':([577,685,808,],[684,806,923,]),'sentenciaElseIf':([577,685,808,],[685,685,685,]),'cases':([604,],[706,]),'caseString':([604,1160,],[707,1181,]),'caseInt':([604,1161,1184,1185,],[708,1183,1188,1189,]),'caseBool':([604,1164,],[709,1187,]),'sentenciaElse':([684,923,],[804,1038,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> final","S'",1,None,None,None),
  ('final -> algoritmoUnico','final',1,'p_final','sintaxis.py',11),
  ('final -> algoritmoUnico PUNTOYCOMA','final',2,'p_final','sintaxis.py',12),
  ('final -> algoritmoUnico final','final',2,'p_final','sintaxis.py',13),
  ('final -> algoritmoUnico PUNTOYCOMA final','final',3,'p_final','sintaxis.py',14),
  ('algoritmoUnico -> asignacion PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',18),
  ('algoritmoUnico -> expresion PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',19),
  ('algoritmoUnico -> expresionInt PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',20),
  ('algoritmoUnico -> expresionDouble PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',21),
  ('algoritmoUnico -> expresionString PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',22),
  ('algoritmoUnico -> expresionBool PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',23),
  ('algoritmoUnico -> expresionBoolFor PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',24),
  ('algoritmoUnico -> sentenciaDoWhile PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',25),
  ('algoritmoUnico -> imprimir PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',26),
  ('algoritmoUnico -> funcionStdin PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',27),
  ('algoritmoUnico -> funcionStdout PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',28),
  ('algoritmoUnico -> negacionBool PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',29),
  ('algoritmoUnico -> comparacionBool PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',30),
  ('algoritmoUnico -> sentenciaSubstring PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',31),
  ('algoritmoUnico -> VARIABLE DSUMA PUNTOYCOMA','algoritmoUnico',3,'p_algoritmoUnico','sintaxis.py',32),
  ('algoritmoUnico -> VARIABLE DRESTA PUNTOYCOMA','algoritmoUnico',3,'p_algoritmoUnico','sintaxis.py',33),
  ('algoritmoUnico -> expresionLista PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',34),
  ('algoritmoUnico -> expresionNewList PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',35),
  ('algoritmoUnico -> expresionSet PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',36),
  ('algoritmoUnico -> expresionMap PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',37),
  ('algoritmoUnico -> declaracionSimple PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',38),
  ('algoritmoUnico -> funcionFirstWhere PUNTOYCOMA','algoritmoUnico',2,'p_algoritmoUnico','sintaxis.py',39),
  ('algoritmoUnico -> sentenciaIf','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',40),
  ('algoritmoUnico -> sentenciaFor','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',41),
  ('algoritmoUnico -> sentenciaForEach','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',42),
  ('algoritmoUnico -> sentenciaWhile','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',43),
  ('algoritmoUnico -> expresionSwitch','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',44),
  ('algoritmoUnico -> funcionSimple','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',45),
  ('algoritmoUnico -> funcion','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',46),
  ('algoritmoUnico -> funcionReturn','algoritmoUnico',1,'p_algoritmoUnico','sintaxis.py',47),
  ('funcionFirstWhere -> VARIABLE FUNCIONFIRSTWHERE PIZQ PIZQ VARIABLE PDER FLECHA expresionBool PDER','funcionFirstWhere',9,'p_funcionFirstWhere','sintaxis.py',59),
  ('expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER','expresionSwitch',7,'p_expresionSwitch','sintaxis.py',71),
  ('expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases DEFAULT DOSPUNTOS algoritmoUnico LDER','expresionSwitch',10,'p_expresionSwitch','sintaxis.py',72),
  ('cases -> caseString','cases',1,'p_cases','sintaxis.py',75),
  ('cases -> caseInt','cases',1,'p_cases','sintaxis.py',76),
  ('cases -> caseBool','cases',1,'p_cases','sintaxis.py',77),
  ('caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA','caseString',6,'p_caseString','sintaxis.py',80),
  ('caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString','caseString',7,'p_caseString','sintaxis.py',81),
  ('caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA','caseInt',6,'p_caseInt','sintaxis.py',84),
  ('caseInt -> CASE SUMA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA','caseInt',7,'p_caseInt','sintaxis.py',85),
  ('caseInt -> CASE RESTA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA','caseInt',7,'p_caseInt','sintaxis.py',86),
  ('caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt','caseInt',7,'p_caseInt','sintaxis.py',87),
  ('caseInt -> CASE SUMA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt','caseInt',8,'p_caseInt','sintaxis.py',88),
  ('caseInt -> CASE RESTA ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt','caseInt',8,'p_caseInt','sintaxis.py',89),
  ('caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA','caseBool',6,'p_caseBool','sintaxis.py',92),
  ('caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool','caseBool',7,'p_caseBool','sintaxis.py',93),
  ('expresionMap -> MAP VARIABLE','expresionMap',2,'p_expresionMap','sintaxis.py',104),
  ('expresionMap -> MAP VARIABLE IGUAL LIZQ LDER','expresionMap',5,'p_expresionMap','sintaxis.py',105),
  ('expresionMap -> LIZQ LDER','expresionMap',2,'p_expresionMap','sintaxis.py',106),
  ('expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER','expresionMap',6,'p_expresionMap','sintaxis.py',107),
  ('expresionMap -> LIZQ expMap LDER','expresionMap',3,'p_expresionMap','sintaxis.py',108),
  ('expresionMap -> VARIABLE','expresionMap',1,'p_expresionMap','sintaxis.py',109),
  ('expMap -> claveValor DOSPUNTOS claveValor','expMap',3,'p_expMap','sintaxis.py',113),
  ('expMap -> claveValor DOSPUNTOS claveValor COMA expMap','expMap',5,'p_expMap','sintaxis.py',114),
  ('claveValor -> VARIABLE','claveValor',1,'p_claveValor','sintaxis.py',117),
  ('claveValor -> STRING','claveValor',1,'p_claveValor','sintaxis.py',118),
  ('claveValor -> ENTERO','claveValor',1,'p_claveValor','sintaxis.py',119),
  ('claveValor -> RESTA ENTERO','claveValor',2,'p_claveValor','sintaxis.py',120),
  ('claveValor -> SUMA ENTERO','claveValor',2,'p_claveValor','sintaxis.py',121),
  ('claveValor -> DOUBLE','claveValor',1,'p_claveValor','sintaxis.py',122),
  ('claveValor -> BOOL','claveValor',1,'p_claveValor','sintaxis.py',123),
  ('claveValor -> CIZQ expListDynamic CDER','claveValor',3,'p_claveValor','sintaxis.py',125),
  ('claveValor -> CIZQ expListSet CDER','claveValor',3,'p_claveValor','sintaxis.py',126),
  ('claveValor -> expresionNewList','claveValor',1,'p_claveValor','sintaxis.py',127),
  ('claveValor -> SETFROM PIZQ CIZQ CDER PDER','claveValor',5,'p_claveValor','sintaxis.py',129),
  ('claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER','claveValor',6,'p_claveValor','sintaxis.py',130),
  ('claveValor -> LIZQ LDER','claveValor',2,'p_claveValor','sintaxis.py',132),
  ('claveValor -> LIZQ expMap LDER','claveValor',3,'p_claveValor','sintaxis.py',133),
  ('expresionSet -> SET VARIABLE','expresionSet',2,'p_expresionSet','sintaxis.py',143),
  ('expresionSet -> SETFROM PIZQ CIZQ CDER PDER','expresionSet',5,'p_expresionSet','sintaxis.py',144),
  ('expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER','expresionSet',8,'p_expresionSet','sintaxis.py',145),
  ('expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER','expresionSet',6,'p_expresionSet','sintaxis.py',146),
  ('expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER','expresionSet',9,'p_expresionSet','sintaxis.py',147),
  ('expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER','expresionSet',5,'p_expresionSet','sintaxis.py',148),
  ('expresionSet -> VARIABLE','expresionSet',1,'p_expresionSet','sintaxis.py',149),
  ('expresionNewList -> NEWLIST PIZQ PDER','expresionNewList',3,'p_expresionNewList','sintaxis.py',160),
  ('expresionNewList -> NEWLIST PIZQ ENTERO PDER','expresionNewList',4,'p_expresionNewList','sintaxis.py',161),
  ('expresionNewList -> CIZQ CDER','expresionNewList',2,'p_expresionNewList','sintaxis.py',162),
  ('expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',165),
  ('expresionLista -> funcionSplit','expresionLista',1,'p_expresionLista','sintaxis.py',166),
  ('expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL funcionSplit','expresionLista',7,'p_expresionLista','sintaxis.py',167),
  ('expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER','expresionLista',9,'p_expresionLista','sintaxis.py',168),
  ('expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',169),
  ('expresionLista -> CIZQ expListString CDER','expresionLista',3,'p_expresionLista','sintaxis.py',170),
  ('expresionLista -> LIST MENOR INT MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',172),
  ('expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER','expresionLista',9,'p_expresionLista','sintaxis.py',173),
  ('expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',174),
  ('expresionLista -> CIZQ expListInt CDER','expresionLista',3,'p_expresionLista','sintaxis.py',175),
  ('expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',177),
  ('expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER','expresionLista',9,'p_expresionLista','sintaxis.py',178),
  ('expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',179),
  ('expresionLista -> CIZQ expListNum CDER','expresionLista',3,'p_expresionLista','sintaxis.py',180),
  ('expresionLista -> LIST MENOR NUM MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',182),
  ('expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER','expresionLista',9,'p_expresionLista','sintaxis.py',183),
  ('expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',184),
  ('expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',186),
  ('expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER','expresionLista',9,'p_expresionLista','sintaxis.py',187),
  ('expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',188),
  ('expresionLista -> CIZQ expListBool CDER','expresionLista',3,'p_expresionLista','sintaxis.py',189),
  ('expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',191),
  ('expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER','expresionLista',9,'p_expresionLista','sintaxis.py',192),
  ('expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',193),
  ('expresionLista -> CIZQ expListDynamic CDER','expresionLista',3,'p_expresionLista','sintaxis.py',194),
  ('expresionLista -> LIST MENOR SET MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',196),
  ('expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER','expresionLista',9,'p_expresionLista','sintaxis.py',197),
  ('expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',198),
  ('expresionLista -> CIZQ expListSet CDER','expresionLista',3,'p_expresionLista','sintaxis.py',199),
  ('expresionLista -> LIST MENOR MAP MAYOR VARIABLE','expresionLista',5,'p_expresionLista','sintaxis.py',201),
  ('expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER','expresionLista',9,'p_expresionLista','sintaxis.py',202),
  ('expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList','expresionLista',7,'p_expresionLista','sintaxis.py',203),
  ('expresionLista -> CIZQ expListMap CDER','expresionLista',3,'p_expresionLista','sintaxis.py',204),
  ('expresionLista -> VARIABLE CIZQ ENTERO CDER','expresionLista',4,'p_expresionLista','sintaxis.py',206),
  ('expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER','expresionLista',5,'p_expresionLista','sintaxis.py',207),
  ('expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER','expresionLista',7,'p_expresionLista','sintaxis.py',208),
  ('expresionLista -> VARIABLE','expresionLista',1,'p_expresionLista','sintaxis.py',210),
  ('expListString -> STRING','expListString',1,'p_expListString','sintaxis.py',213),
  ('expListString -> STRING COMA expListString','expListString',3,'p_expListString','sintaxis.py',214),
  ('expListString -> VARIABLE','expListString',1,'p_expListString','sintaxis.py',215),
  ('expListString -> VARIABLE COMA expListString','expListString',3,'p_expListString','sintaxis.py',216),
  ('funcionSplit -> STRING FUNCIONSPLIT PIZQ STRING PDER','funcionSplit',5,'p_funcionSplit','sintaxis.py',219),
  ('expListInt -> ENTERO','expListInt',1,'p_expListInt','sintaxis.py',221),
  ('expListInt -> RESTA ENTERO','expListInt',2,'p_expListInt','sintaxis.py',222),
  ('expListInt -> SUMA ENTERO','expListInt',2,'p_expListInt','sintaxis.py',223),
  ('expListInt -> RESTA ENTERO COMA expListInt','expListInt',4,'p_expListInt','sintaxis.py',224),
  ('expListInt -> SUMA ENTERO COMA expListInt','expListInt',4,'p_expListInt','sintaxis.py',225),
  ('expListInt -> ENTERO COMA expListInt','expListInt',3,'p_expListInt','sintaxis.py',226),
  ('expListInt -> VARIABLE','expListInt',1,'p_expListInt','sintaxis.py',227),
  ('expListInt -> RESTA VARIABLE','expListInt',2,'p_expListInt','sintaxis.py',228),
  ('expListInt -> SUMA VARIABLE','expListInt',2,'p_expListInt','sintaxis.py',229),
  ('expListInt -> VARIABLE COMA expListInt','expListInt',3,'p_expListInt','sintaxis.py',230),
  ('expListInt -> RESTA VARIABLE COMA expListInt','expListInt',4,'p_expListInt','sintaxis.py',231),
  ('expListInt -> SUMA VARIABLE COMA expListInt','expListInt',4,'p_expListInt','sintaxis.py',232),
  ('expListNum -> ENTERO','expListNum',1,'p_expListNum','sintaxis.py',235),
  ('expListNum -> RESTA ENTERO','expListNum',2,'p_expListNum','sintaxis.py',236),
  ('expListNum -> SUMA ENTERO','expListNum',2,'p_expListNum','sintaxis.py',237),
  ('expListNum -> DOUBLE','expListNum',1,'p_expListNum','sintaxis.py',238),
  ('expListNum -> RESTA DOUBLE','expListNum',2,'p_expListNum','sintaxis.py',239),
  ('expListNum -> SUMA DOUBLE','expListNum',2,'p_expListNum','sintaxis.py',240),
  ('expListNum -> ENTERO COMA expListNum','expListNum',3,'p_expListNum','sintaxis.py',241),
  ('expListNum -> RESTA ENTERO COMA expListNum','expListNum',4,'p_expListNum','sintaxis.py',242),
  ('expListNum -> SUMA ENTERO COMA expListNum','expListNum',4,'p_expListNum','sintaxis.py',243),
  ('expListNum -> DOUBLE COMA expListNum','expListNum',3,'p_expListNum','sintaxis.py',244),
  ('expListNum -> RESTA DOUBLE COMA expListNum','expListNum',4,'p_expListNum','sintaxis.py',245),
  ('expListNum -> SUMA DOUBLE COMA expListNum','expListNum',4,'p_expListNum','sintaxis.py',246),
  ('expListNum -> VARIABLE','expListNum',1,'p_expListNum','sintaxis.py',247),
  ('expListNum -> RESTA VARIABLE','expListNum',2,'p_expListNum','sintaxis.py',248),
  ('expListNum -> SUMA VARIABLE','expListNum',2,'p_expListNum','sintaxis.py',249),
  ('expListNum -> VARIABLE COMA expListNum','expListNum',3,'p_expListNum','sintaxis.py',250),
  ('expListNum -> RESTA VARIABLE COMA expListNum','expListNum',4,'p_expListNum','sintaxis.py',251),
  ('expListNum -> SUMA VARIABLE COMA expListNum','expListNum',4,'p_expListNum','sintaxis.py',252),
  ('expListBool -> BOOL','expListBool',1,'p_expListBool','sintaxis.py',255),
  ('expListBool -> BOOL COMA expListBool','expListBool',3,'p_expListBool','sintaxis.py',256),
  ('expListBool -> VARIABLE','expListBool',1,'p_expListBool','sintaxis.py',257),
  ('expListBool -> VARIABLE COMA expListBool','expListBool',3,'p_expListBool','sintaxis.py',258),
  ('expListDynamic -> STRING','expListDynamic',1,'p_expListDynamic','sintaxis.py',261),
  ('expListDynamic -> ENTERO','expListDynamic',1,'p_expListDynamic','sintaxis.py',262),
  ('expListDynamic -> RESTA ENTERO','expListDynamic',2,'p_expListDynamic','sintaxis.py',263),
  ('expListDynamic -> SUMA ENTERO','expListDynamic',2,'p_expListDynamic','sintaxis.py',264),
  ('expListDynamic -> DOUBLE','expListDynamic',1,'p_expListDynamic','sintaxis.py',265),
  ('expListDynamic -> BOOL','expListDynamic',1,'p_expListDynamic','sintaxis.py',266),
  ('expListDynamic -> STRING COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',267),
  ('expListDynamic -> ENTERO COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',268),
  ('expListDynamic -> RESTA ENTERO COMA expListDynamic','expListDynamic',4,'p_expListDynamic','sintaxis.py',269),
  ('expListDynamic -> SUMA ENTERO COMA expListDynamic','expListDynamic',4,'p_expListDynamic','sintaxis.py',270),
  ('expListDynamic -> DOUBLE COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',271),
  ('expListDynamic -> RESTA DOUBLE COMA expListDynamic','expListDynamic',4,'p_expListDynamic','sintaxis.py',272),
  ('expListDynamic -> SUMA DOUBLE COMA expListDynamic','expListDynamic',4,'p_expListDynamic','sintaxis.py',273),
  ('expListDynamic -> BOOL COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',274),
  ('expListDynamic -> VARIABLE','expListDynamic',1,'p_expListDynamic','sintaxis.py',275),
  ('expListDynamic -> VARIABLE COMA expListDynamic','expListDynamic',3,'p_expListDynamic','sintaxis.py',276),
  ('expListSet -> SETFROM PIZQ CIZQ CDER PDER','expListSet',5,'p_expListSet','sintaxis.py',279),
  ('expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER','expListSet',6,'p_expListSet','sintaxis.py',280),
  ('expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet','expListSet',7,'p_expListSet','sintaxis.py',281),
  ('expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet','expListSet',8,'p_expListSet','sintaxis.py',282),
  ('expListSet -> VARIABLE','expListSet',1,'p_expListSet','sintaxis.py',283),
  ('expListSet -> VARIABLE COMA expListSet','expListSet',3,'p_expListSet','sintaxis.py',284),
  ('expListMap -> LIZQ LDER','expListMap',2,'p_expListMap','sintaxis.py',287),
  ('expListMap -> LIZQ expMap LDER','expListMap',3,'p_expListMap','sintaxis.py',288),
  ('expListMap -> LIZQ LDER COMA expListMap','expListMap',4,'p_expListMap','sintaxis.py',289),
  ('expListMap -> LIZQ expMap LDER COMA expListMap','expListMap',5,'p_expListMap','sintaxis.py',290),
  ('expListMap -> VARIABLE','expListMap',1,'p_expListMap','sintaxis.py',291),
  ('expListMap -> VARIABLE COMA expListMap','expListMap',3,'p_expListMap','sintaxis.py',292),
  ('asignacion -> INT VARIABLE IGUAL expresionInt','asignacion',4,'p_asignacion','sintaxis.py',304),
  ('asignacion -> DOUBLER VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxis.py',305),
  ('asignacion -> NUM VARIABLE IGUAL expresionDouble','asignacion',4,'p_asignacion','sintaxis.py',306),
  ('asignacion -> STRINGR VARIABLE IGUAL expresionString','asignacion',4,'p_asignacion','sintaxis.py',307),
  ('asignacion -> BOOLR VARIABLE IGUAL expresionBool','asignacion',4,'p_asignacion','sintaxis.py',308),
  ('asignacion -> DYNAMIC VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxis.py',309),
  ('asignacion -> VAR VARIABLE IGUAL expresion','asignacion',4,'p_asignacion','sintaxis.py',310),
  ('asignacion -> asignacionSimple','asignacion',1,'p_asignacion','sintaxis.py',311),
  ('asignacionSimple -> VARIABLE IGUAL expresion','asignacionSimple',3,'p_asignacionSimple','sintaxis.py',314),
  ('asignacionSimple -> VARIABLE IGUAL expresionString','asignacionSimple',3,'p_asignacionSimple','sintaxis.py',315),
  ('declaracionSimple -> STRINGR VARIABLE','declaracionSimple',2,'p_declaracionSimple','sintaxis.py',319),
  ('declaracionSimple -> INT VARIABLE','declaracionSimple',2,'p_declaracionSimple','sintaxis.py',320),
  ('declaracionSimple -> DOUBLER VARIABLE','declaracionSimple',2,'p_declaracionSimple','sintaxis.py',321),
  ('declaracionSimple -> NUM VARIABLE','declaracionSimple',2,'p_declaracionSimple','sintaxis.py',322),
  ('declaracionSimple -> VAR VARIABLE','declaracionSimple',2,'p_declaracionSimple','sintaxis.py',323),
  ('declaracionSimple -> DYNAMIC VARIABLE','declaracionSimple',2,'p_declaracionSimple','sintaxis.py',324),
  ('declaracionSimple -> BOOLR VARIABLE','declaracionSimple',2,'p_declaracionSimple','sintaxis.py',325),
  ('imprimir -> PRINT PIZQ expresion PDER','imprimir',4,'p_imprimir','sintaxis.py',334),
  ('imprimir -> PRINT PIZQ expresionString PDER','imprimir',4,'p_imprimir','sintaxis.py',335),
  ('imprimir -> PRINT PIZQ asignacionSimple PDER','imprimir',4,'p_imprimir','sintaxis.py',336),
  ('funcionStdin -> FUNCIONSTDIN','funcionStdin',1,'p_funcionStdin','sintaxis.py',348),
  ('funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER','funcionStdout',4,'p_funcionStdout','sintaxis.py',350),
  ('funcionStdout -> FUNCIONSTDOUT PIZQ expresionString PDER','funcionStdout',4,'p_funcionStdout','sintaxis.py',351),
  ('funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER','funcionStdout',4,'p_funcionStdout','sintaxis.py',352),
  ('funcionParametros -> objeto VARIABLE','funcionParametros',2,'p_funcionParametros','sintaxis.py',362),
  ('funcionParametros -> objeto VARIABLE COMA funcionParametros','funcionParametros',4,'p_funcionParametros','sintaxis.py',363),
  ('funcionSimple -> VOID VARIABLE PIZQ objeto VARIABLE PDER FLECHA algoritmoUnico','funcionSimple',8,'p_funcionSimple','sintaxis.py',366),
  ('funcionSimple -> VOID VARIABLE PIZQ PDER FLECHA algoritmoUnico','funcionSimple',6,'p_funcionSimple','sintaxis.py',367),
  ('funcion -> VOID VARIABLE PIZQ PDER LIZQ LDER','funcion',6,'p_funcion','sintaxis.py',370),
  ('funcion -> VOID VARIABLE PIZQ PDER LIZQ final LDER','funcion',7,'p_funcion','sintaxis.py',371),
  ('funcion -> VOID VARIABLE PIZQ objeto VARIABLE PDER LIZQ LDER','funcion',8,'p_funcion','sintaxis.py',373),
  ('funcion -> VOID VARIABLE PIZQ objeto VARIABLE PDER LIZQ final LDER','funcion',9,'p_funcion','sintaxis.py',374),
  ('funcionReturn -> STRINGR VARIABLE PIZQ PDER LIZQ RETURN expresionString PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',378),
  ('funcionReturn -> STRINGR VARIABLE PIZQ PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',379),
  ('funcionReturn -> STRINGR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionString PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',380),
  ('funcionReturn -> STRINGR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',381),
  ('funcionReturn -> INT VARIABLE PIZQ PDER LIZQ RETURN expresionInt PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',383),
  ('funcionReturn -> INT VARIABLE PIZQ PDER LIZQ final RETURN expresionInt PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',384),
  ('funcionReturn -> INT VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionInt PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',385),
  ('funcionReturn -> INT VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionInt PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',386),
  ('funcionReturn -> DOUBLER VARIABLE PIZQ PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',388),
  ('funcionReturn -> DOUBLER VARIABLE PIZQ PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',389),
  ('funcionReturn -> DOUBLER VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',390),
  ('funcionReturn -> DOUBLER VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',391),
  ('funcionReturn -> NUM VARIABLE PIZQ PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',393),
  ('funcionReturn -> NUM VARIABLE PIZQ PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',394),
  ('funcionReturn -> NUM VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',395),
  ('funcionReturn -> NUM VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionDouble PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',396),
  ('funcionReturn -> VAR VARIABLE PIZQ PDER LIZQ RETURN expresion PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',398),
  ('funcionReturn -> VAR VARIABLE PIZQ PDER LIZQ RETURN expresionString PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',399),
  ('funcionReturn -> VAR VARIABLE PIZQ PDER LIZQ final RETURN expresion PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',400),
  ('funcionReturn -> VAR VARIABLE PIZQ PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',401),
  ('funcionReturn -> VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresion PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',402),
  ('funcionReturn -> VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionString PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',403),
  ('funcionReturn -> VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresion PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',404),
  ('funcionReturn -> VAR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',405),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ PDER LIZQ RETURN expresion PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',407),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ PDER LIZQ RETURN expresionString PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',408),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ PDER LIZQ final RETURN expresion PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',409),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',410),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresion PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',411),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionString PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',412),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresion PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',413),
  ('funcionReturn -> DYNAMIC VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionString PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',414),
  ('funcionReturn -> BOOLR VARIABLE PIZQ PDER LIZQ RETURN expresionBool PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',416),
  ('funcionReturn -> BOOLR VARIABLE PIZQ PDER LIZQ final RETURN expresionBool PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',417),
  ('funcionReturn -> BOOLR VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionBool PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',418),
  ('funcionReturn -> BOOLR VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionBool PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',419),
  ('funcionReturn -> LIST VARIABLE PIZQ PDER LIZQ RETURN expresionLista PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',421),
  ('funcionReturn -> LIST VARIABLE PIZQ PDER LIZQ final RETURN expresionLista PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',422),
  ('funcionReturn -> LIST VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionLista PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',423),
  ('funcionReturn -> LIST VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionLista PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',424),
  ('funcionReturn -> MAP VARIABLE PIZQ PDER LIZQ RETURN expresionMap PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',426),
  ('funcionReturn -> MAP VARIABLE PIZQ PDER LIZQ final RETURN expresionMap PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',427),
  ('funcionReturn -> MAP VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionMap PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',428),
  ('funcionReturn -> MAP VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionMap PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',429),
  ('funcionReturn -> SET VARIABLE PIZQ PDER LIZQ RETURN expresionSet PUNTOYCOMA LDER','funcionReturn',9,'p_funcionReturn','sintaxis.py',431),
  ('funcionReturn -> SET VARIABLE PIZQ PDER LIZQ final RETURN expresionSet PUNTOYCOMA LDER','funcionReturn',10,'p_funcionReturn','sintaxis.py',432),
  ('funcionReturn -> SET VARIABLE PIZQ objeto VARIABLE PDER LIZQ RETURN expresionSet PUNTOYCOMA LDER','funcionReturn',11,'p_funcionReturn','sintaxis.py',433),
  ('funcionReturn -> SET VARIABLE PIZQ objeto VARIABLE PDER LIZQ final RETURN expresionSet PUNTOYCOMA LDER','funcionReturn',12,'p_funcionReturn','sintaxis.py',434),
  ('sentenciaForEach -> FOR PIZQ STRINGR VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',447),
  ('sentenciaForEach -> FOR PIZQ INT VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',448),
  ('sentenciaForEach -> FOR PIZQ DOUBLER VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',449),
  ('sentenciaForEach -> FOR PIZQ NUM VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',450),
  ('sentenciaForEach -> FOR PIZQ DYNAMIC VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',451),
  ('sentenciaForEach -> FOR PIZQ BOOLR VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',452),
  ('sentenciaForEach -> FOR PIZQ MAP VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',453),
  ('sentenciaForEach -> FOR PIZQ SET VARIABLE IN VARIABLE PDER algoritmoUnico','sentenciaForEach',8,'p_sentenciaForEach','sintaxis.py',454),
  ('sentenciaForEach -> FOR PIZQ STRINGR VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',456),
  ('sentenciaForEach -> FOR PIZQ INT VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',457),
  ('sentenciaForEach -> FOR PIZQ DOUBLER VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',458),
  ('sentenciaForEach -> FOR PIZQ NUM VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',459),
  ('sentenciaForEach -> FOR PIZQ DYNAMIC VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',460),
  ('sentenciaForEach -> FOR PIZQ BOOLR VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',461),
  ('sentenciaForEach -> FOR PIZQ MAP VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',462),
  ('sentenciaForEach -> FOR PIZQ SET VARIABLE IN VARIABLE PDER LIZQ final LDER','sentenciaForEach',10,'p_sentenciaForEach','sintaxis.py',463),
  ('objetoForEach -> STRINGR','objetoForEach',1,'p_objetoForEach','sintaxis.py',466),
  ('objetoForEach -> INT','objetoForEach',1,'p_objetoForEach','sintaxis.py',467),
  ('objetoForEach -> DOUBLER','objetoForEach',1,'p_objetoForEach','sintaxis.py',468),
  ('objetoForEach -> NUM','objetoForEach',1,'p_objetoForEach','sintaxis.py',469),
  ('objetoForEach -> DYNAMIC','objetoForEach',1,'p_objetoForEach','sintaxis.py',470),
  ('objetoForEach -> BOOLR','objetoForEach',1,'p_objetoForEach','sintaxis.py',471),
  ('objetoForEach -> MAP','objetoForEach',1,'p_objetoForEach','sintaxis.py',472),
  ('objetoForEach -> SET','objetoForEach',1,'p_objetoForEach','sintaxis.py',473),
  ('sentenciaIf -> IF PIZQ expresionBool PDER algoritmoUnico','sentenciaIf',5,'p_sentenciaIf','sintaxis.py',498),
  ('sentenciaIf -> IF PIZQ expresionBool PDER algoritmoUnico sentenciasElseIf','sentenciaIf',6,'p_sentenciaIf','sintaxis.py',499),
  ('sentenciaIf -> IF PIZQ expresionBool PDER algoritmoUnico sentenciasElseIf sentenciaElse','sentenciaIf',7,'p_sentenciaIf','sintaxis.py',500),
  ('sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER','sentenciaIf',7,'p_sentenciaIf','sintaxis.py',501),
  ('sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf','sentenciaIf',8,'p_sentenciaIf','sintaxis.py',502),
  ('sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER sentenciasElseIf sentenciaElse','sentenciaIf',9,'p_sentenciaIf','sintaxis.py',503),
  ('sentenciasElseIf -> sentenciaElseIf','sentenciasElseIf',1,'p_sentenciasElseIf','sintaxis.py',506),
  ('sentenciasElseIf -> sentenciaElseIf sentenciasElseIf','sentenciasElseIf',2,'p_sentenciasElseIf','sintaxis.py',507),
  ('sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmoUnico','sentenciaElseIf',5,'p_sentenciaElseIf','sintaxis.py',510),
  ('sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER','sentenciaElseIf',7,'p_sentenciaElseIf','sintaxis.py',511),
  ('sentenciaElse -> ELSE algoritmoUnico','sentenciaElse',2,'p_sentenciaElse','sintaxis.py',514),
  ('sentenciaElse -> ELSE LIZQ final LDER','sentenciaElse',4,'p_sentenciaElse','sintaxis.py',515),
  ('valor -> ENTERO','valor',1,'p_valor','sintaxis.py',527),
  ('valor -> VARIABLE','valor',1,'p_valor','sintaxis.py',528),
  ('valor -> DOUBLE','valor',1,'p_valor','sintaxis.py',529),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion','sintaxis.py',532),
  ('expresion -> SUMA valor operadorMat expresion','expresion',4,'p_expresion','sintaxis.py',533),
  ('expresion -> RESTA valor operadorMat expresion','expresion',4,'p_expresion','sintaxis.py',534),
  ('expresion -> valor','expresion',1,'p_expresion','sintaxis.py',535),
  ('expresion -> SUMA valor','expresion',2,'p_expresion','sintaxis.py',536),
  ('expresion -> RESTA valor','expresion',2,'p_expresion','sintaxis.py',537),
  ('expresion -> expresionInt','expresion',1,'p_expresion','sintaxis.py',538),
  ('expresion -> expresionDouble','expresion',1,'p_expresion','sintaxis.py',539),
  ('expresion -> SUMA expresionDouble','expresion',2,'p_expresion','sintaxis.py',540),
  ('expresion -> RESTA expresionDouble','expresion',2,'p_expresion','sintaxis.py',541),
  ('expresion -> expresionBool','expresion',1,'p_expresion','sintaxis.py',542),
  ('expresion -> funcionFirstWhere','expresion',1,'p_expresion','sintaxis.py',543),
  ('asignacionFor -> INT VARIABLE IGUAL expresionInt','asignacionFor',4,'p_expresionFor','sintaxis.py',555),
  ('asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble','asignacionFor',4,'p_expresionFor','sintaxis.py',556),
  ('asignacionFor -> NUM VARIABLE IGUAL expresionDouble','asignacionFor',4,'p_expresionFor','sintaxis.py',557),
  ('asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt','asignacionFor',4,'p_expresionFor','sintaxis.py',558),
  ('asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble','asignacionFor',4,'p_expresionFor','sintaxis.py',559),
  ('asignacionFor -> VAR VARIABLE IGUAL expresion','asignacionFor',4,'p_expresionFor','sintaxis.py',560),
  ('asignacionFor -> VAR VARIABLE IGUAL expresionString','asignacionFor',4,'p_expresionFor','sintaxis.py',561),
  ('asignacionFor -> VARIABLE IGUAL expresionInt','asignacionFor',3,'p_expresionFor','sintaxis.py',562),
  ('asignacionFor -> VARIABLE IGUAL expresionDouble','asignacionFor',3,'p_expresionFor','sintaxis.py',563),
  ('expresionBoolFor -> valorDouble comparadorMat expresionDouble','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',566),
  ('expresionBoolFor -> VARIABLE comparadorMat expresionDouble','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',567),
  ('expresionBoolFor -> VARIABLE comparadorMat VARIABLE','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',568),
  ('expresionBoolFor -> valorDouble comparadorMat VARIABLE','expresionBoolFor',3,'p_expresionBoolFor','sintaxis.py',569),
  ('expresionBoolFor -> valorBool','expresionBoolFor',1,'p_expresionBoolFor','sintaxis.py',570),
  ('expresionBoolFor -> negacionBool','expresionBoolFor',1,'p_expresionBoolFor','sintaxis.py',571),
  ('expresionBoolFor -> comparacionBool','expresionBoolFor',1,'p_expresionBoolFor','sintaxis.py',572),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER','sentenciaFor',12,'p_sentenciaFor','sintaxis.py',575),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER algoritmoUnico','sentenciaFor',10,'p_sentenciaFor','sintaxis.py',576),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER','sentenciaFor',12,'p_sentenciaFor','sintaxis.py',577),
  ('sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER algoritmoUnico','sentenciaFor',10,'p_sentenciaFor','sintaxis.py',578),
  ('sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER','sentenciaWhile',7,'p_sentenciaWhile','sintaxis.py',590),
  ('sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmoUnico','sentenciaWhile',5,'p_sentenciaWhile','sintaxis.py',591),
  ('sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER','sentenciaDoWhile',8,'p_sentenciaDoWhile','sintaxis.py',594),
  ('valorBool -> BOOL','valorBool',1,'p_valorBool','sintaxis.py',605),
  ('valorBool -> VARIABLE','valorBool',1,'p_valorBool','sintaxis.py',606),
  ('expresionBool -> valorDouble comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxis.py',609),
  ('expresionBool -> VARIABLE comparadorMat expresionDouble','expresionBool',3,'p_expresionBool','sintaxis.py',610),
  ('expresionBool -> VARIABLE comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxis.py',611),
  ('expresionBool -> valorDouble comparadorMat VARIABLE','expresionBool',3,'p_expresionBool','sintaxis.py',612),
  ('expresionBool -> valorBool','expresionBool',1,'p_expresionBool','sintaxis.py',613),
  ('expresionBool -> negacionBool','expresionBool',1,'p_expresionBool','sintaxis.py',614),
  ('expresionBool -> comparacionBool','expresionBool',1,'p_expresionBool','sintaxis.py',615),
  ('expresionBool -> valor IS objeto','expresionBool',3,'p_expresionBool','sintaxis.py',616),
  ('expresionBool -> valor ISNEGADO objeto','expresionBool',3,'p_expresionBool','sintaxis.py',617),
  ('negacionBool -> NOT PIZQ expresionBool PDER','negacionBool',4,'p_negacionBool','sintaxis.py',620),
  ('comparacionBool -> expresionBool operadorLogico expresionBool','comparacionBool',3,'p_comparacionBool','sintaxis.py',622),
  ('comparacionBool -> expresionBool operadorLogico comparacionBool','comparacionBool',3,'p_comparacionBool','sintaxis.py',623),
  ('valorString -> STRING','valorString',1,'p_valorString','sintaxis.py',638),
  ('valorString -> VARIABLE','valorString',1,'p_valorString','sintaxis.py',639),
  ('valorString -> FUNCIONSTDIN','valorString',1,'p_valorString','sintaxis.py',640),
  ('valorString -> expresionIndexString','valorString',1,'p_valorString','sintaxis.py',641),
  ('valorString -> sentenciaSubstring','valorString',1,'p_valorString','sintaxis.py',642),
  ('valorString -> STRING CIZQ ENTERO CDER','valorString',4,'p_valorString','sintaxis.py',643),
  ('expresionString -> valorString SUMA expresionString','expresionString',3,'p_expresion_aritmetica_String','sintaxis.py',646),
  ('expresionString -> valorString','expresionString',1,'p_expresion_aritmetica_String','sintaxis.py',647),
  ('expresionIndexString -> valorString CIZQ ENTERO CDER','expresionIndexString',4,'p_expresion_index_String','sintaxis.py',650),
  ('sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER','sentenciaSubstring',5,'p_sentenciaSubstring','sintaxis.py',652),
  ('sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER','sentenciaSubstring',7,'p_sentenciaSubstring','sintaxis.py',653),
  ('valorInt -> ENTERO','valorInt',1,'p_valorInt','sintaxis.py',664),
  ('valorInt -> VARIABLE','valorInt',1,'p_valorInt','sintaxis.py',665),
  ('expresionInt -> valorInt operadorMat expresionInt','expresionInt',3,'p_expresion_aritmetica_Int','sintaxis.py',668),
  ('expresionInt -> SUMA valorInt operadorMat expresionInt','expresionInt',4,'p_expresion_aritmetica_Int','sintaxis.py',669),
  ('expresionInt -> RESTA valorInt operadorMat expresionInt','expresionInt',4,'p_expresion_aritmetica_Int','sintaxis.py',670),
  ('expresionInt -> valorInt','expresionInt',1,'p_expresion_aritmetica_Int','sintaxis.py',671),
  ('expresionInt -> SUMA valorInt','expresionInt',2,'p_expresion_aritmetica_Int','sintaxis.py',672),
  ('expresionInt -> RESTA valorInt','expresionInt',2,'p_expresion_aritmetica_Int','sintaxis.py',673),
  ('valorDouble -> DOUBLE','valorDouble',1,'p_valorDouble','sintaxis.py',684),
  ('valorDouble -> valorInt','valorDouble',1,'p_valorDouble','sintaxis.py',685),
  ('expresionDouble -> valorDouble operadorMat expresionDouble','expresionDouble',3,'p_expresion_aritmetica_Double','sintaxis.py',688),
  ('expresionDouble -> SUMA valorDouble operadorMat expresionDouble','expresionDouble',4,'p_expresion_aritmetica_Double','sintaxis.py',689),
  ('expresionDouble -> RESTA valorDouble operadorMat expresionDouble','expresionDouble',4,'p_expresion_aritmetica_Double','sintaxis.py',690),
  ('expresionDouble -> valorDouble','expresionDouble',1,'p_expresion_aritmetica_Double','sintaxis.py',691),
  ('expresionDouble -> SUMA valorDouble','expresionDouble',2,'p_expresion_aritmetica_Double','sintaxis.py',692),
  ('expresionDouble -> RESTA valorDouble','expresionDouble',2,'p_expresion_aritmetica_Double','sintaxis.py',693),
  ('operadorMat -> SUMA','operadorMat',1,'p_operadorMat','sintaxis.py',704),
  ('operadorMat -> RESTA','operadorMat',1,'p_operadorMat','sintaxis.py',705),
  ('operadorMat -> MULTI','operadorMat',1,'p_operadorMat','sintaxis.py',706),
  ('operadorMat -> MULTI SUMA','operadorMat',2,'p_operadorMat','sintaxis.py',707),
  ('operadorMat -> MULTI RESTA','operadorMat',2,'p_operadorMat','sintaxis.py',708),
  ('operadorMat -> DIV','operadorMat',1,'p_operadorMat','sintaxis.py',709),
  ('operadorMat -> DIV SUMA','operadorMat',2,'p_operadorMat','sintaxis.py',710),
  ('operadorMat -> DIV RESTA','operadorMat',2,'p_operadorMat','sintaxis.py',711),
  ('operadorMat -> DIVENTERO','operadorMat',1,'p_operadorMat','sintaxis.py',712),
  ('operadorMat -> DIVENTERO SUMA','operadorMat',2,'p_operadorMat','sintaxis.py',713),
  ('operadorMat -> DIVENTERO RESTA','operadorMat',2,'p_operadorMat','sintaxis.py',714),
  ('operadorMat -> MOD','operadorMat',1,'p_operadorMat','sintaxis.py',715),
  ('operadorMat -> MOD SUMA','operadorMat',2,'p_operadorMat','sintaxis.py',716),
  ('operadorMat -> MOD RESTA','operadorMat',2,'p_operadorMat','sintaxis.py',717),
  ('comparadorMat -> DIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',720),
  ('comparadorMat -> NOIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',721),
  ('comparadorMat -> MAYOR','comparadorMat',1,'p_comparadorMat','sintaxis.py',722),
  ('comparadorMat -> MENOR','comparadorMat',1,'p_comparadorMat','sintaxis.py',723),
  ('comparadorMat -> MAYIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',724),
  ('comparadorMat -> MENIGUAL','comparadorMat',1,'p_comparadorMat','sintaxis.py',725),
  ('operadorLogico -> AND','operadorLogico',1,'p_operadorLogico','sintaxis.py',728),
  ('operadorLogico -> OR','operadorLogico',1,'p_operadorLogico','sintaxis.py',729),
  ('objeto -> STRINGR','objeto',1,'p_objeto','sintaxis.py',732),
  ('objeto -> INT','objeto',1,'p_objeto','sintaxis.py',733),
  ('objeto -> DOUBLER','objeto',1,'p_objeto','sintaxis.py',734),
  ('objeto -> NUM','objeto',1,'p_objeto','sintaxis.py',735),
  ('objeto -> VAR','objeto',1,'p_objeto','sintaxis.py',736),
  ('objeto -> DYNAMIC','objeto',1,'p_objeto','sintaxis.py',737),
  ('objeto -> LIST','objeto',1,'p_objeto','sintaxis.py',738),
  ('objeto -> BOOLR','objeto',1,'p_objeto','sintaxis.py',739),
  ('objeto -> MAP','objeto',1,'p_objeto','sintaxis.py',740),
  ('objeto -> SET','objeto',1,'p_objeto','sintaxis.py',741),
]
